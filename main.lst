                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14549 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___SMS__SDSC_signature
                                     12 	.globl ___SMS__SDSC_descr
                                     13 	.globl ___SMS__SDSC_name
                                     14 	.globl ___SMS__SDSC_author
                                     15 	.globl ___SMS__SEGA_signature
                                     16 	.globl _main
                                     17 	.globl _disableSprites
                                     18 	.globl _playMusic
                                     19 	.globl _dibujaPajaros
                                     20 	.globl _loadGrapVRAM
                                     21 	.globl _inicializaPajaros
                                     22 	.globl _moveAlex
                                     23 	.globl _drawAlex
                                     24 	.globl _moveAlexAire
                                     25 	.globl _moveAlexSuelo
                                     26 	.globl _canRight
                                     27 	.globl _canLeft
                                     28 	.globl _canDown
                                     29 	.globl _canUp
                                     30 	.globl _PSGSFXFrame
                                     31 	.globl _PSGFrame
                                     32 	.globl _PSGSFXPlay
                                     33 	.globl _PSGPlay
                                     34 	.globl _SMS_VRAMmemsetW
                                     35 	.globl _SMS_VRAMmemcpy
                                     36 	.globl _SMS_setFrameInterruptHandler
                                     37 	.globl _SMS_resetPauseRequest
                                     38 	.globl _SMS_queryPauseRequested
                                     39 	.globl _SMS_getKeysHeld
                                     40 	.globl _SMS_getKeysPressed
                                     41 	.globl _SMS_loadSpritePalette
                                     42 	.globl _SMS_loadBGPalette
                                     43 	.globl _SMS_setSpritePaletteColor
                                     44 	.globl _SMS_updateSpritePosition
                                     45 	.globl _SMS_addSprite_f
                                     46 	.globl _SMS_initSprites
                                     47 	.globl _SMS_waitForVBlank
                                     48 	.globl _SMS_setSpriteMode
                                     49 	.globl _SMS_setBGScrollY
                                     50 	.globl _SMS_setBGScrollX
                                     51 	.globl _SMS_VDPturnOnFeature
                                     52 	.globl _SMS_init
                                     53 	.globl _copySpritestoSAT
                                     54 	.globl _addHardwareSprite
                                     55 	.globl _generateSpriteNoRAM
                                     56 	.globl _printf
                                     57 	.globl _spritePuno
                                     58 	.globl _spritePajaro
                                     59 	.globl _spriteAlex
                                     60 	.globl _lastFrame
                                     61 	.globl _alex
                                     62 	.globl _maxSalto
                                     63 	.globl _nextVRAMsprites
                                     64 	.globl _numSprites
                                     65 	.globl _pajaros
                                     66 	.globl _SMS_SRAM
                                     67 	.globl _SRAM_bank_to_be_mapped_on_slot2
                                     68 	.globl _ROM_bank_to_be_mapped_on_slot0
                                     69 	.globl _ROM_bank_to_be_mapped_on_slot1
                                     70 	.globl _ROM_bank_to_be_mapped_on_slot2
                                     71 	.globl _SpriteNextFree2
                                     72 	.globl _SpriteTableXN2
                                     73 	.globl _SpriteTableY2
                                     74 	.globl _hardwareSprites
                                     75 	.globl _generateSprite
                                     76 	.globl _initSpritesVariables
                                     77 	.globl _draw_entidad
                                     78 ;--------------------------------------------------------
                                     79 ; special function registers
                                     80 ;--------------------------------------------------------
                           0000BF    81 _VDPControlPort	=	0x00bf
                           0000BF    82 _VDPStatusPort	=	0x00bf
                           0000BE    83 _VDPDataPort	=	0x00be
                           00007E    84 _VDPVCounterPort	=	0x007e
                           00007F    85 _VDPHCounterPort	=	0x007f
                                     86 ;--------------------------------------------------------
                                     87 ; ram data
                                     88 ;--------------------------------------------------------
                                     89 	.area _DATA
      000000                         90 _hardwareSprites::
      000000                         91 	.ds 768
      000300                         92 _SpriteTableY2::
      000300                         93 	.ds 2
      000302                         94 _SpriteTableXN2::
      000302                         95 	.ds 2
      000304                         96 _SpriteNextFree2::
      000304                         97 	.ds 2
                           00FFFF    98 _ROM_bank_to_be_mapped_on_slot2	=	0xffff
                           00FFFE    99 _ROM_bank_to_be_mapped_on_slot1	=	0xfffe
                           00FFFD   100 _ROM_bank_to_be_mapped_on_slot0	=	0xfffd
                           00FFFC   101 _SRAM_bank_to_be_mapped_on_slot2	=	0xfffc
                           008000   102 _SMS_SRAM	=	0x8000
      000306                        103 _pajaros::
      000306                        104 	.ds 190
      0003C4                        105 _numSprites::
      0003C4                        106 	.ds 2
                                    107 ;--------------------------------------------------------
                                    108 ; ram data
                                    109 ;--------------------------------------------------------
                                    110 	.area _INITIALIZED
      000000                        111 _nextVRAMsprites::
      000000                        112 	.ds 2
      000002                        113 _maxSalto::
      000002                        114 	.ds 1
      000003                        115 _alex::
      000003                        116 	.ds 10
      00000D                        117 _lastFrame::
      00000D                        118 	.ds 1
      00000E                        119 _spriteAlex::
      00000E                        120 	.ds 10
      000018                        121 _spritePajaro::
      000018                        122 	.ds 10
      000022                        123 _spritePuno::
      000022                        124 	.ds 10
                                    125 ;--------------------------------------------------------
                                    126 ; absolute external ram data
                                    127 ;--------------------------------------------------------
                                    128 	.area _DABS (ABS)
                                    129 ;--------------------------------------------------------
                                    130 ; global & static initialisations
                                    131 ;--------------------------------------------------------
                                    132 	.area _HOME
                                    133 	.area _GSINIT
                                    134 	.area _GSFINAL
                                    135 	.area _GSINIT
                                    136 ;--------------------------------------------------------
                                    137 ; Home
                                    138 ;--------------------------------------------------------
                                    139 	.area _HOME
                                    140 	.area _HOME
                                    141 ;--------------------------------------------------------
                                    142 ; code
                                    143 ;--------------------------------------------------------
                                    144 	.area _CODE
                                    145 ;./lib/./sprite.c:20: T_sprite generateSprite(unsigned char ancho, unsigned char alto, int tam,const unsigned char data[]) {
                                    146 ;	---------------------------------
                                    147 ; Function generateSprite
                                    148 ; ---------------------------------
      000000                        149 _generateSprite::
      000000 DD E5            [15]  150 	push	ix
      000002 DD 21 00 00      [14]  151 	ld	ix,#0
      000006 DD 39            [15]  152 	add	ix,sp
      000008 FD 21 F6 FF      [14]  153 	ld	iy, #-10
      00000C FD 39            [15]  154 	add	iy, sp
      00000E FD F9            [10]  155 	ld	sp, iy
      000010 5F               [ 4]  156 	ld	e, a
      000011 55               [ 4]  157 	ld	d, l
                                    158 ;./lib/./sprite.c:21: unsigned char tamano = alto*ancho*2;
      000012 D5               [11]  159 	push	de
      000013 62               [ 4]  160 	ld	h, d
                                    161 ;	spillPairReg hl
                                    162 ;	spillPairReg hl
      000014 2E 00            [ 7]  163 	ld	l, #0x00
      000016 55               [ 4]  164 	ld	d, l
      000017 06 08            [ 7]  165 	ld	b, #0x08
      000019                        166 00103$:
      000019 29               [11]  167 	add	hl, hl
      00001A 30 01            [12]  168 	jr	NC, 00104$
      00001C 19               [11]  169 	add	hl, de
      00001D                        170 00104$:
      00001D 10 FA            [13]  171 	djnz	00103$
      00001F D1               [10]  172 	pop	de
      000020 4D               [ 4]  173 	ld	c, l
      000021 CB 21            [ 8]  174 	sla	c
                                    175 ;./lib/./sprite.c:22: T_sprite sprite = {alto,ancho,tamano,tam/(tamano*32),nextVRAMsprites, 1,0};
      000023 DD 72 F6         [19]  176 	ld	-10 (ix), d
      000026 DD 73 F7         [19]  177 	ld	-9 (ix), e
      000029 DD 71 F8         [19]  178 	ld	-8 (ix), c
      00002C 69               [ 4]  179 	ld	l, c
                                    180 ;	spillPairReg hl
                                    181 ;	spillPairReg hl
      00002D 26 00            [ 7]  182 	ld	h, #0x00
                                    183 ;	spillPairReg hl
                                    184 ;	spillPairReg hl
      00002F 29               [11]  185 	add	hl, hl
      000030 29               [11]  186 	add	hl, hl
      000031 29               [11]  187 	add	hl, hl
      000032 29               [11]  188 	add	hl, hl
      000033 29               [11]  189 	add	hl, hl
      000034 C5               [11]  190 	push	bc
      000035 EB               [ 4]  191 	ex	de, hl
      000036 DD 6E 06         [19]  192 	ld	l, 6 (ix)
                                    193 ;	spillPairReg hl
                                    194 ;	spillPairReg hl
      000039 DD 66 07         [19]  195 	ld	h, 7 (ix)
                                    196 ;	spillPairReg hl
                                    197 ;	spillPairReg hl
      00003C CDr00r00         [17]  198 	call	__divsint
      00003F C1               [10]  199 	pop	bc
      000040 DD 73 F9         [19]  200 	ld	-7 (ix), e
      000043 3Ar00r00         [13]  201 	ld	a, (_nextVRAMsprites+0)
      000046 DD 77 FA         [19]  202 	ld	-6 (ix), a
      000049 3Ar01r00         [13]  203 	ld	a, (_nextVRAMsprites+1)
      00004C DD 77 FB         [19]  204 	ld	-5 (ix), a
      00004F DD 36 FC 01      [19]  205 	ld	-4 (ix), #0x01
      000053 AF               [ 4]  206 	xor	a, a
      000054 DD 77 FD         [19]  207 	ld	-3 (ix), a
      000057 DD 77 FE         [19]  208 	ld	-2 (ix), a
      00005A DD 36 FF 00      [19]  209 	ld	-1 (ix), #0x00
                                    210 ;./lib/./sprite.c:23: SMS_loadTiles(data,nextVRAMsprites,tam);
      00005E DD 5E 08         [19]  211 	ld	e, 8 (ix)
      000061 DD 56 09         [19]  212 	ld	d, 9 (ix)
      000064 2Ar00r00         [16]  213 	ld	hl, (_nextVRAMsprites)
      000067 29               [11]  214 	add	hl, hl
      000068 29               [11]  215 	add	hl, hl
      000069 29               [11]  216 	add	hl, hl
      00006A 29               [11]  217 	add	hl, hl
      00006B 29               [11]  218 	add	hl, hl
      00006C CB F4            [ 8]  219 	set	6, h
      00006E C5               [11]  220 	push	bc
      00006F E5               [11]  221 	push	hl
      000070 DD 6E 06         [19]  222 	ld	l, 6 (ix)
                                    223 ;	spillPairReg hl
                                    224 ;	spillPairReg hl
      000073 DD 66 07         [19]  225 	ld	h, 7 (ix)
                                    226 ;	spillPairReg hl
                                    227 ;	spillPairReg hl
      000076 E3               [19]  228 	ex	(sp), hl
      000077 CDr00r00         [17]  229 	call	_SMS_VRAMmemcpy
      00007A C1               [10]  230 	pop	bc
                                    231 ;./lib/./sprite.c:24: nextVRAMsprites = nextVRAMsprites + (tamano*sprite.numFrames);
      00007B DD 5E F9         [19]  232 	ld	e, -7 (ix)
      00007E 61               [ 4]  233 	ld	h, c
                                    234 ;	spillPairReg hl
                                    235 ;	spillPairReg hl
      00007F 2E 00            [ 7]  236 	ld	l, #0x00
      000081 55               [ 4]  237 	ld	d, l
      000082 06 08            [ 7]  238 	ld	b, #0x08
      000084                        239 00105$:
      000084 29               [11]  240 	add	hl, hl
      000085 30 01            [12]  241 	jr	NC, 00106$
      000087 19               [11]  242 	add	hl, de
      000088                        243 00106$:
      000088 10 FA            [13]  244 	djnz	00105$
      00008A EB               [ 4]  245 	ex	de, hl
      00008B 21r00r00         [10]  246 	ld	hl, #_nextVRAMsprites
      00008E 7E               [ 7]  247 	ld	a, (hl)
      00008F 83               [ 4]  248 	add	a, e
      000090 77               [ 7]  249 	ld	(hl), a
      000091 23               [ 6]  250 	inc	hl
      000092 7E               [ 7]  251 	ld	a, (hl)
      000093 8A               [ 4]  252 	adc	a, d
      000094 77               [ 7]  253 	ld	(hl), a
                                    254 ;./lib/./sprite.c:25: return sprite;
      000095 21 0E 00         [10]  255 	ld	hl, #14
      000098 39               [11]  256 	add	hl, sp
      000099 5E               [ 7]  257 	ld	e, (hl)
      00009A 23               [ 6]  258 	inc	hl
      00009B 56               [ 7]  259 	ld	d, (hl)
      00009C 21 00 00         [10]  260 	ld	hl, #0
      00009F 39               [11]  261 	add	hl, sp
      0000A0 01 0A 00         [10]  262 	ld	bc, #10
      0000A3 ED B0            [21]  263 	ldir
                                    264 ;./lib/./sprite.c:26: }
      0000A5 DD F9            [10]  265 	ld	sp, ix
      0000A7 DD E1            [14]  266 	pop	ix
      0000A9 C9               [10]  267 	ret
                                    268 ;./lib/./sprite.c:29: T_sprite generateSpriteNoRAM(unsigned char ancho, unsigned char alto, int tam,const unsigned char data[]) {
                                    269 ;	---------------------------------
                                    270 ; Function generateSpriteNoRAM
                                    271 ; ---------------------------------
      0000AA                        272 _generateSpriteNoRAM::
      0000AA DD E5            [15]  273 	push	ix
      0000AC DD 21 00 00      [14]  274 	ld	ix,#0
      0000B0 DD 39            [15]  275 	add	ix,sp
      0000B2 FD 21 F4 FF      [14]  276 	ld	iy, #-12
      0000B6 FD 39            [15]  277 	add	iy, sp
      0000B8 FD F9            [10]  278 	ld	sp, iy
      0000BA 5F               [ 4]  279 	ld	e, a
      0000BB 55               [ 4]  280 	ld	d, l
                                    281 ;./lib/./sprite.c:30: unsigned char tamano = alto*ancho*2;
      0000BC D5               [11]  282 	push	de
      0000BD 62               [ 4]  283 	ld	h, d
                                    284 ;	spillPairReg hl
                                    285 ;	spillPairReg hl
      0000BE 2E 00            [ 7]  286 	ld	l, #0x00
      0000C0 55               [ 4]  287 	ld	d, l
      0000C1 06 08            [ 7]  288 	ld	b, #0x08
      0000C3                        289 00103$:
      0000C3 29               [11]  290 	add	hl, hl
      0000C4 30 01            [12]  291 	jr	NC, 00104$
      0000C6 19               [11]  292 	add	hl, de
      0000C7                        293 00104$:
      0000C7 10 FA            [13]  294 	djnz	00103$
      0000C9 D1               [10]  295 	pop	de
      0000CA 4D               [ 4]  296 	ld	c, l
      0000CB CB 21            [ 8]  297 	sla	c
                                    298 ;./lib/./sprite.c:31: T_sprite sprite = {alto,ancho,tamano,tam/(tamano*32),nextVRAMsprites, 0,0};
      0000CD DD 72 F4         [19]  299 	ld	-12 (ix), d
      0000D0 DD 73 F5         [19]  300 	ld	-11 (ix), e
      0000D3 DD 71 F6         [19]  301 	ld	-10 (ix), c
                                    302 ;	spillPairReg hl
                                    303 ;	spillPairReg hl
      0000D6 DD 71 FE         [19]  304 	ld	-2 (ix), c
      0000D9 DD 36 FF 00      [19]  305 	ld	-1 (ix), #0x00
      0000DD 69               [ 4]  306 	ld	l, c
      0000DE 26 00            [ 7]  307 	ld	h, #0x00
                                    308 ;	spillPairReg hl
                                    309 ;	spillPairReg hl
      0000E0 29               [11]  310 	add	hl, hl
      0000E1 29               [11]  311 	add	hl, hl
      0000E2 29               [11]  312 	add	hl, hl
      0000E3 29               [11]  313 	add	hl, hl
      0000E4 29               [11]  314 	add	hl, hl
      0000E5 EB               [ 4]  315 	ex	de,hl
      0000E6 D5               [11]  316 	push	de
      0000E7 DD 6E 06         [19]  317 	ld	l, 6 (ix)
                                    318 ;	spillPairReg hl
                                    319 ;	spillPairReg hl
      0000EA DD 66 07         [19]  320 	ld	h, 7 (ix)
                                    321 ;	spillPairReg hl
                                    322 ;	spillPairReg hl
      0000ED CDr00r00         [17]  323 	call	__divsint
      0000F0 EB               [ 4]  324 	ex	de, hl
      0000F1 D1               [10]  325 	pop	de
      0000F2 DD 75 F7         [19]  326 	ld	-9 (ix), l
      0000F5 3Ar00r00         [13]  327 	ld	a, (_nextVRAMsprites+0)
      0000F8 DD 77 F8         [19]  328 	ld	-8 (ix), a
      0000FB 3Ar01r00         [13]  329 	ld	a, (_nextVRAMsprites+1)
      0000FE DD 77 F9         [19]  330 	ld	-7 (ix), a
      000101 DD 36 FA 00      [19]  331 	ld	-6 (ix), #0x00
      000105 AF               [ 4]  332 	xor	a, a
      000106 DD 77 FB         [19]  333 	ld	-5 (ix), a
      000109 DD 77 FC         [19]  334 	ld	-4 (ix), a
      00010C DD 36 FD 00      [19]  335 	ld	-3 (ix), #0x00
                                    336 ;./lib/./sprite.c:32: sprite.data = data;
      000110 DD 7E 08         [19]  337 	ld	a, 8 (ix)
      000113 DD 77 FB         [19]  338 	ld	-5 (ix), a
      000116 DD 7E 09         [19]  339 	ld	a, 9 (ix)
      000119 DD 77 FC         [19]  340 	ld	-4 (ix), a
                                    341 ;./lib/./sprite.c:33: sprite.frameInVRAM = 0;
      00011C DD 36 FD 00      [19]  342 	ld	-3 (ix), #0x00
                                    343 ;./lib/./sprite.c:34: SMS_loadTiles(data,nextVRAMsprites,tamano*32);
      000120 DD 4E 08         [19]  344 	ld	c, 8 (ix)
      000123 DD 46 09         [19]  345 	ld	b, 9 (ix)
      000126 2Ar00r00         [16]  346 	ld	hl, (_nextVRAMsprites)
      000129 29               [11]  347 	add	hl, hl
      00012A 29               [11]  348 	add	hl, hl
      00012B 29               [11]  349 	add	hl, hl
      00012C 29               [11]  350 	add	hl, hl
      00012D 29               [11]  351 	add	hl, hl
      00012E CB F4            [ 8]  352 	set	6, h
      000130 D5               [11]  353 	push	de
      000131 59               [ 4]  354 	ld	e, c
      000132 50               [ 4]  355 	ld	d, b
      000133 CDr00r00         [17]  356 	call	_SMS_VRAMmemcpy
                                    357 ;./lib/./sprite.c:35: nextVRAMsprites = nextVRAMsprites + (tamano);
      000136 21r00r00         [10]  358 	ld	hl, #_nextVRAMsprites
      000139 7E               [ 7]  359 	ld	a, (hl)
      00013A DD 86 FE         [19]  360 	add	a, -2 (ix)
      00013D 77               [ 7]  361 	ld	(hl), a
      00013E 23               [ 6]  362 	inc	hl
      00013F 7E               [ 7]  363 	ld	a, (hl)
      000140 DD 8E FF         [19]  364 	adc	a, -1 (ix)
      000143 77               [ 7]  365 	ld	(hl), a
                                    366 ;./lib/./sprite.c:36: return sprite;
      000144 21 10 00         [10]  367 	ld	hl, #16
      000147 39               [11]  368 	add	hl, sp
      000148 5E               [ 7]  369 	ld	e, (hl)
      000149 23               [ 6]  370 	inc	hl
      00014A 56               [ 7]  371 	ld	d, (hl)
      00014B 21 00 00         [10]  372 	ld	hl, #0
      00014E 39               [11]  373 	add	hl, sp
      00014F 01 0A 00         [10]  374 	ld	bc, #10
      000152 ED B0            [21]  375 	ldir
                                    376 ;./lib/./sprite.c:37: }
      000154 DD F9            [10]  377 	ld	sp, ix
      000156 DD E1            [14]  378 	pop	ix
      000158 C9               [10]  379 	ret
                                    380 ;./lib/./sprite.c:48: unsigned int addHardwareSprite(unsigned int x,unsigned int y,unsigned int vx,unsigned int vy,unsigned int lx,
                                    381 ;	---------------------------------
                                    382 ; Function addHardwareSprite
                                    383 ; ---------------------------------
      000159                        384 _addHardwareSprite::
      000159 DD E5            [15]  385 	push	ix
      00015B DD 21 00 00      [14]  386 	ld	ix,#0
      00015F DD 39            [15]  387 	add	ix,sp
      000161 FD 21 EA FF      [14]  388 	ld	iy, #-22
      000165 FD 39            [15]  389 	add	iy, sp
      000167 FD F9            [10]  390 	ld	sp, iy
      000169 DD 75 F4         [19]  391 	ld	-12 (ix), l
      00016C DD 74 F5         [19]  392 	ld	-11 (ix), h
      00016F DD 73 F2         [19]  393 	ld	-14 (ix), e
      000172 DD 72 F3         [19]  394 	ld	-13 (ix), d
                                    395 ;./lib/./sprite.c:50: unsigned int i = MAX_HARDWARE_SPRITES;
      000175 21 40 00         [10]  396 	ld	hl, #0x0040
      000178 E3               [19]  397 	ex	(sp), hl
                                    398 ;./lib/./sprite.c:51: while (i) {
      000179 DD 36 FE 40      [19]  399 	ld	-2 (ix), #0x40
      00017D DD 36 FF 00      [19]  400 	ld	-1 (ix), #0
      000181                        401 00109$:
      000181 DD 7E FF         [19]  402 	ld	a, -1 (ix)
      000184 DD B6 FE         [19]  403 	or	a, -2 (ix)
      000187 CArD0r03         [10]  404 	jp	Z, 00111$
                                    405 ;./lib/./sprite.c:52: if (!hardwareSprites[i].len) {
      00018A DD 4E FE         [19]  406 	ld	c, -2 (ix)
      00018D DD 46 FF         [19]  407 	ld	b, -1 (ix)
      000190 69               [ 4]  408 	ld	l, c
      000191 60               [ 4]  409 	ld	h, b
      000192 29               [11]  410 	add	hl, hl
      000193 09               [11]  411 	add	hl, bc
      000194 29               [11]  412 	add	hl, hl
      000195 29               [11]  413 	add	hl, hl
      000196 DD 75 FC         [19]  414 	ld	-4 (ix), l
      000199 DD 74 FD         [19]  415 	ld	-3 (ix), h
      00019C 3Er00            [ 7]  416 	ld	a, #<(_hardwareSprites)
      00019E DD 86 FC         [19]  417 	add	a, -4 (ix)
      0001A1 DD 77 FA         [19]  418 	ld	-6 (ix), a
      0001A4 3Es00            [ 7]  419 	ld	a, #>(_hardwareSprites)
      0001A6 DD 8E FD         [19]  420 	adc	a, -3 (ix)
      0001A9 DD 77 FB         [19]  421 	ld	-5 (ix), a
      0001AC DD 7E FA         [19]  422 	ld	a, -6 (ix)
      0001AF DD 77 FC         [19]  423 	ld	-4 (ix), a
      0001B2 DD 7E FB         [19]  424 	ld	a, -5 (ix)
      0001B5 DD 77 FD         [19]  425 	ld	-3 (ix), a
      0001B8 DD 6E FC         [19]  426 	ld	l, -4 (ix)
      0001BB DD 66 FD         [19]  427 	ld	h, -3 (ix)
      0001BE 11 0A 00         [10]  428 	ld	de, #0x000a
      0001C1 19               [11]  429 	add	hl, de
      0001C2 7E               [ 7]  430 	ld	a, (hl)
      0001C3 DD 77 FC         [19]  431 	ld	-4 (ix), a
      0001C6 23               [ 6]  432 	inc	hl
      0001C7 7E               [ 7]  433 	ld	a, (hl)
      0001C8 DD 77 FD         [19]  434 	ld	-3 (ix), a
      0001CB DD B6 FC         [19]  435 	or	a, -4 (ix)
      0001CE C2rB4r03         [10]  436 	jp	NZ, 00108$
                                    437 ;./lib/./sprite.c:53: T_HardwareSprite *p = &hardwareSprites[i]; 
      0001D1 DD 7E FA         [19]  438 	ld	a, -6 (ix)
      0001D4 DD 77 FE         [19]  439 	ld	-2 (ix), a
      0001D7 DD 7E FB         [19]  440 	ld	a, -5 (ix)
      0001DA DD 77 FF         [19]  441 	ld	-1 (ix), a
      0001DD DD 7E FE         [19]  442 	ld	a, -2 (ix)
      0001E0 DD 77 EC         [19]  443 	ld	-20 (ix), a
      0001E3 DD 7E FF         [19]  444 	ld	a, -1 (ix)
      0001E6 DD 77 ED         [19]  445 	ld	-19 (ix), a
                                    446 ;./lib/./sprite.c:54: p->x = x;
      0001E9 DD 7E EC         [19]  447 	ld	a, -20 (ix)
      0001EC C6 04            [ 7]  448 	add	a, #0x04
      0001EE DD 77 FE         [19]  449 	ld	-2 (ix), a
      0001F1 DD 7E ED         [19]  450 	ld	a, -19 (ix)
      0001F4 CE 00            [ 7]  451 	adc	a, #0x00
      0001F6 DD 77 FF         [19]  452 	ld	-1 (ix), a
      0001F9 DD 6E FE         [19]  453 	ld	l, -2 (ix)
      0001FC DD 66 FF         [19]  454 	ld	h, -1 (ix)
      0001FF DD 7E F4         [19]  455 	ld	a, -12 (ix)
      000202 77               [ 7]  456 	ld	(hl), a
      000203 23               [ 6]  457 	inc	hl
      000204 DD 7E F5         [19]  458 	ld	a, -11 (ix)
      000207 77               [ 7]  459 	ld	(hl), a
                                    460 ;./lib/./sprite.c:55: p->y = y;
      000208 D1               [10]  461 	pop	de
      000209 E1               [10]  462 	pop	hl
      00020A E5               [11]  463 	push	hl
      00020B D5               [11]  464 	push	de
      00020C 11 06 00         [10]  465 	ld	de, #0x0006
      00020F 19               [11]  466 	add	hl, de
      000210 DD 7E F2         [19]  467 	ld	a, -14 (ix)
      000213 77               [ 7]  468 	ld	(hl), a
      000214 23               [ 6]  469 	inc	hl
      000215 DD 7E F3         [19]  470 	ld	a, -13 (ix)
      000218 77               [ 7]  471 	ld	(hl), a
                                    472 ;./lib/./sprite.c:56: p->vx = vx;
      000219 C1               [10]  473 	pop	bc
      00021A E1               [10]  474 	pop	hl
      00021B E5               [11]  475 	push	hl
      00021C C5               [11]  476 	push	bc
      00021D DD 7E 04         [19]  477 	ld	a, 4 (ix)
      000220 77               [ 7]  478 	ld	(hl), a
      000221 23               [ 6]  479 	inc	hl
      000222 DD 7E 05         [19]  480 	ld	a, 5 (ix)
      000225 77               [ 7]  481 	ld	(hl), a
                                    482 ;./lib/./sprite.c:57: p->vy = vy;
      000226 E1               [10]  483 	pop	hl
      000227 C1               [10]  484 	pop	bc
      000228 C5               [11]  485 	push	bc
      000229 E5               [11]  486 	push	hl
      00022A 03               [ 6]  487 	inc	bc
      00022B 03               [ 6]  488 	inc	bc
      00022C DD 7E 06         [19]  489 	ld	a, 6 (ix)
      00022F 02               [ 7]  490 	ld	(bc), a
      000230 03               [ 6]  491 	inc	bc
      000231 DD 7E 07         [19]  492 	ld	a, 7 (ix)
      000234 02               [ 7]  493 	ld	(bc), a
                                    494 ;./lib/./sprite.c:58: unsigned int iTile = 0;
      000235 AF               [ 4]  495 	xor	a, a
      000236 DD 77 FE         [19]  496 	ld	-2 (ix), a
      000239 DD 77 FF         [19]  497 	ld	-1 (ix), a
                                    498 ;./lib/./sprite.c:59: for (int iy=0;iy<ly;iy++) {
      00023C DD 7E F2         [19]  499 	ld	a, -14 (ix)
      00023F DD 77 F6         [19]  500 	ld	-10 (ix), a
      000242 DD 7E F3         [19]  501 	ld	a, -13 (ix)
      000245 DD 77 F7         [19]  502 	ld	-9 (ix), a
      000248 AF               [ 4]  503 	xor	a, a
      000249 DD 77 F8         [19]  504 	ld	-8 (ix), a
      00024C DD 77 F9         [19]  505 	ld	-7 (ix), a
      00024F                        506 00116$:
      00024F DD 7E F8         [19]  507 	ld	a, -8 (ix)
      000252 DD 77 FC         [19]  508 	ld	-4 (ix), a
      000255 DD 7E F9         [19]  509 	ld	a, -7 (ix)
      000258 DD 77 FD         [19]  510 	ld	-3 (ix), a
                                    511 ;./lib/./sprite.c:62: p->initSprite = SMS_addSprite(x,y, tiles[iTile]);
      00025B DD 7E EC         [19]  512 	ld	a, -20 (ix)
      00025E C6 08            [ 7]  513 	add	a, #0x08
      000260 DD 77 EE         [19]  514 	ld	-18 (ix), a
      000263 DD 7E ED         [19]  515 	ld	a, -19 (ix)
      000266 CE 00            [ 7]  516 	adc	a, #0x00
      000268 DD 77 EF         [19]  517 	ld	-17 (ix), a
                                    518 ;./lib/./sprite.c:59: for (int iy=0;iy<ly;iy++) {
      00026B DD 7E FC         [19]  519 	ld	a, -4 (ix)
      00026E DD 96 0A         [19]  520 	sub	a, 10 (ix)
      000271 DD 7E FD         [19]  521 	ld	a, -3 (ix)
      000274 DD 9E 0B         [19]  522 	sbc	a, 11 (ix)
      000277 D2r5Br03         [10]  523 	jp	NC, 00106$
                                    524 ;./lib/./sprite.c:60: for (int ix=0;ix<lx;ix++){
      00027A DD 7E FE         [19]  525 	ld	a, -2 (ix)
      00027D DD 77 FA         [19]  526 	ld	-6 (ix), a
      000280 DD 7E FF         [19]  527 	ld	a, -1 (ix)
      000283 DD 77 FB         [19]  528 	ld	-5 (ix), a
      000286 DD 7E F4         [19]  529 	ld	a, -12 (ix)
      000289 DD 77 FC         [19]  530 	ld	-4 (ix), a
      00028C DD 7E F5         [19]  531 	ld	a, -11 (ix)
      00028F DD 77 FD         [19]  532 	ld	-3 (ix), a
      000292 AF               [ 4]  533 	xor	a, a
      000293 DD 77 FE         [19]  534 	ld	-2 (ix), a
      000296 DD 77 FF         [19]  535 	ld	-1 (ix), a
      000299                        536 00113$:
      000299 DD 7E FE         [19]  537 	ld	a, -2 (ix)
      00029C DD 77 F0         [19]  538 	ld	-16 (ix), a
      00029F DD 7E FF         [19]  539 	ld	a, -1 (ix)
      0002A2 DD 77 F1         [19]  540 	ld	-15 (ix), a
      0002A5 DD 7E F0         [19]  541 	ld	a, -16 (ix)
      0002A8 DD 96 08         [19]  542 	sub	a, 8 (ix)
      0002AB DD 7E F1         [19]  543 	ld	a, -15 (ix)
      0002AE DD 9E 09         [19]  544 	sbc	a, 9 (ix)
      0002B1 30 77            [12]  545 	jr	NC, 00129$
                                    546 ;./lib/./sprite.c:62: p->initSprite = SMS_addSprite(x,y, tiles[iTile]);
      0002B3 DD 46 FC         [19]  547 	ld	b, -4 (ix)
      0002B6 DD 6E FA         [19]  548 	ld	l, -6 (ix)
                                    549 ;	spillPairReg hl
                                    550 ;	spillPairReg hl
      0002B9 DD 66 FB         [19]  551 	ld	h, -5 (ix)
                                    552 ;	spillPairReg hl
                                    553 ;	spillPairReg hl
      0002BC 29               [11]  554 	add	hl, hl
      0002BD EB               [ 4]  555 	ex	de,hl
      0002BE DD 6E 0C         [19]  556 	ld	l, 12 (ix)
                                    557 ;	spillPairReg hl
                                    558 ;	spillPairReg hl
      0002C1 DD 66 0D         [19]  559 	ld	h, 13 (ix)
                                    560 ;	spillPairReg hl
                                    561 ;	spillPairReg hl
      0002C4 19               [11]  562 	add	hl, de
      0002C5 5E               [ 7]  563 	ld	e, (hl)
      0002C6 DD 73 F0         [19]  564 	ld	-16 (ix), e
      0002C9 DD 70 F1         [19]  565 	ld	-15 (ix), b
                                    566 ;./lib/./sprite.c:61: if(ix==0 && iy == 0) {
      0002CC DD 7E FF         [19]  567 	ld	a, -1 (ix)
      0002CF DD B6 FE         [19]  568 	or	a, -2 (ix)
      0002D2 20 26            [12]  569 	jr	NZ, 00102$
      0002D4 DD 7E F9         [19]  570 	ld	a, -7 (ix)
      0002D7 DD B6 F8         [19]  571 	or	a, -8 (ix)
      0002DA 20 1E            [12]  572 	jr	NZ, 00102$
                                    573 ;./lib/./sprite.c:62: p->initSprite = SMS_addSprite(x,y, tiles[iTile]);
      0002DC DD 5E F0         [19]  574 	ld	e, -16 (ix)
      0002DF DD 56 F1         [19]  575 	ld	d, -15 (ix)
      0002E2 DD 6E F6         [19]  576 	ld	l, -10 (ix)
                                    577 ;	spillPairReg hl
                                    578 ;	spillPairReg hl
      0002E5 DD 66 F7         [19]  579 	ld	h, -9 (ix)
                                    580 ;	spillPairReg hl
                                    581 ;	spillPairReg hl
      0002E8 CDr00r00         [17]  582 	call	_SMS_addSprite_f
      0002EB 4F               [ 4]  583 	ld	c, a
      0002EC 07               [ 4]  584 	rlca
      0002ED 9F               [ 4]  585 	sbc	a, a
      0002EE 47               [ 4]  586 	ld	b, a
      0002EF DD 6E EE         [19]  587 	ld	l, -18 (ix)
      0002F2 DD 66 EF         [19]  588 	ld	h, -17 (ix)
      0002F5 71               [ 7]  589 	ld	(hl), c
      0002F6 23               [ 6]  590 	inc	hl
      0002F7 70               [ 7]  591 	ld	(hl), b
      0002F8 18 0F            [12]  592 	jr	00103$
      0002FA                        593 00102$:
                                    594 ;./lib/./sprite.c:65: SMS_addSprite(x,y, tiles[iTile]);
      0002FA DD 5E F0         [19]  595 	ld	e, -16 (ix)
      0002FD DD 56 F1         [19]  596 	ld	d, -15 (ix)
      000300 DD 6E F6         [19]  597 	ld	l, -10 (ix)
                                    598 ;	spillPairReg hl
                                    599 ;	spillPairReg hl
      000303 DD 66 F7         [19]  600 	ld	h, -9 (ix)
                                    601 ;	spillPairReg hl
                                    602 ;	spillPairReg hl
      000306 CDr00r00         [17]  603 	call	_SMS_addSprite_f
      000309                        604 00103$:
                                    605 ;./lib/./sprite.c:67: iTile++;
      000309 DD 34 FA         [23]  606 	inc	-6 (ix)
      00030C 20 03            [12]  607 	jr	NZ, 00185$
      00030E DD 34 FB         [23]  608 	inc	-5 (ix)
      000311                        609 00185$:
                                    610 ;./lib/./sprite.c:68: x += 8;
      000311 DD 7E FC         [19]  611 	ld	a, -4 (ix)
      000314 C6 08            [ 7]  612 	add	a, #0x08
      000316 DD 77 FC         [19]  613 	ld	-4 (ix), a
      000319 30 03            [12]  614 	jr	NC, 00186$
      00031B DD 34 FD         [23]  615 	inc	-3 (ix)
      00031E                        616 00186$:
                                    617 ;./lib/./sprite.c:60: for (int ix=0;ix<lx;ix++){
      00031E DD 34 FE         [23]  618 	inc	-2 (ix)
      000321 C2r99r02         [10]  619 	jp	NZ,00113$
      000324 DD 34 FF         [23]  620 	inc	-1 (ix)
      000327 C3r99r02         [10]  621 	jp	00113$
      00032A                        622 00129$:
      00032A DD 7E FA         [19]  623 	ld	a, -6 (ix)
      00032D DD 77 FE         [19]  624 	ld	-2 (ix), a
      000330 DD 7E FB         [19]  625 	ld	a, -5 (ix)
      000333 DD 77 FF         [19]  626 	ld	-1 (ix), a
      000336 DD 7E FC         [19]  627 	ld	a, -4 (ix)
      000339 DD 77 F4         [19]  628 	ld	-12 (ix), a
      00033C DD 7E FD         [19]  629 	ld	a, -3 (ix)
      00033F DD 77 F5         [19]  630 	ld	-11 (ix), a
                                    631 ;./lib/./sprite.c:70: y += 16;
      000342 DD 7E F6         [19]  632 	ld	a, -10 (ix)
      000345 C6 10            [ 7]  633 	add	a, #0x10
      000347 DD 77 F6         [19]  634 	ld	-10 (ix), a
      00034A 30 03            [12]  635 	jr	NC, 00188$
      00034C DD 34 F7         [23]  636 	inc	-9 (ix)
      00034F                        637 00188$:
                                    638 ;./lib/./sprite.c:59: for (int iy=0;iy<ly;iy++) {
      00034F DD 34 F8         [23]  639 	inc	-8 (ix)
      000352 C2r4Fr02         [10]  640 	jp	NZ,00116$
      000355 DD 34 F9         [23]  641 	inc	-7 (ix)
      000358 C3r4Fr02         [10]  642 	jp	00116$
      00035B                        643 00106$:
                                    644 ;./lib/./sprite.c:72: p->len = p->initSprite + lx*ly;
      00035B DD 7E EC         [19]  645 	ld	a, -20 (ix)
      00035E C6 0A            [ 7]  646 	add	a, #0x0a
      000360 DD 77 FE         [19]  647 	ld	-2 (ix), a
      000363 DD 7E ED         [19]  648 	ld	a, -19 (ix)
      000366 CE 00            [ 7]  649 	adc	a, #0x00
      000368 DD 77 FF         [19]  650 	ld	-1 (ix), a
      00036B DD 6E EE         [19]  651 	ld	l, -18 (ix)
      00036E DD 66 EF         [19]  652 	ld	h, -17 (ix)
      000371 7E               [ 7]  653 	ld	a, (hl)
      000372 DD 77 FC         [19]  654 	ld	-4 (ix), a
      000375 23               [ 6]  655 	inc	hl
      000376 7E               [ 7]  656 	ld	a, (hl)
      000377 DD 77 FD         [19]  657 	ld	-3 (ix), a
      00037A DD 5E 0A         [19]  658 	ld	e, 10 (ix)
      00037D DD 56 0B         [19]  659 	ld	d, 11 (ix)
      000380 DD 6E 08         [19]  660 	ld	l, 8 (ix)
                                    661 ;	spillPairReg hl
                                    662 ;	spillPairReg hl
      000383 DD 66 09         [19]  663 	ld	h, 9 (ix)
                                    664 ;	spillPairReg hl
                                    665 ;	spillPairReg hl
      000386 CDr00r00         [17]  666 	call	__mulint
      000389 DD 73 F8         [19]  667 	ld	-8 (ix), e
      00038C DD 72 F9         [19]  668 	ld	-7 (ix), d
      00038F DD 7E F8         [19]  669 	ld	a, -8 (ix)
      000392 DD 86 FC         [19]  670 	add	a, -4 (ix)
      000395 DD 77 FA         [19]  671 	ld	-6 (ix), a
      000398 DD 7E F9         [19]  672 	ld	a, -7 (ix)
      00039B DD 8E FD         [19]  673 	adc	a, -3 (ix)
      00039E DD 77 FB         [19]  674 	ld	-5 (ix), a
      0003A1 DD 6E FE         [19]  675 	ld	l, -2 (ix)
      0003A4 DD 66 FF         [19]  676 	ld	h, -1 (ix)
      0003A7 DD 7E FA         [19]  677 	ld	a, -6 (ix)
      0003AA 77               [ 7]  678 	ld	(hl), a
      0003AB 23               [ 6]  679 	inc	hl
      0003AC DD 7E FB         [19]  680 	ld	a, -5 (ix)
      0003AF 77               [ 7]  681 	ld	(hl), a
                                    682 ;./lib/./sprite.c:73: return i;
      0003B0 D1               [10]  683 	pop	de
      0003B1 D5               [11]  684 	push	de
      0003B2 18 1E            [12]  685 	jr	00118$
      0003B4                        686 00108$:
                                    687 ;./lib/./sprite.c:75: i--;
      0003B4 DD 6E FE         [19]  688 	ld	l, -2 (ix)
      0003B7 DD 66 FF         [19]  689 	ld	h, -1 (ix)
      0003BA 2B               [ 6]  690 	dec	hl
      0003BB DD 75 FE         [19]  691 	ld	-2 (ix), l
      0003BE DD 74 FF         [19]  692 	ld	-1 (ix), h
      0003C1 DD 7E FE         [19]  693 	ld	a, -2 (ix)
      0003C4 DD 77 EA         [19]  694 	ld	-22 (ix), a
      0003C7 DD 7E FF         [19]  695 	ld	a, -1 (ix)
      0003CA DD 77 EB         [19]  696 	ld	-21 (ix), a
      0003CD C3r81r01         [10]  697 	jp	00109$
      0003D0                        698 00111$:
                                    699 ;./lib/./sprite.c:77: return i;
      0003D0 D1               [10]  700 	pop	de
      0003D1 D5               [11]  701 	push	de
      0003D2                        702 00118$:
                                    703 ;./lib/./sprite.c:78: }
      0003D2 DD F9            [10]  704 	ld	sp, ix
      0003D4 DD E1            [14]  705 	pop	ix
      0003D6 E1               [10]  706 	pop	hl
      0003D7 F1               [10]  707 	pop	af
      0003D8 F1               [10]  708 	pop	af
      0003D9 F1               [10]  709 	pop	af
      0003DA F1               [10]  710 	pop	af
      0003DB F1               [10]  711 	pop	af
      0003DC E9               [ 4]  712 	jp	(hl)
                                    713 ;./lib/./sprite.c:90: void initSpritesVariables (void) {
                                    714 ;	---------------------------------
                                    715 ; Function initSpritesVariables
                                    716 ; ---------------------------------
      0003DD                        717 _initSpritesVariables::
                                    718 ;./lib/./sprite.c:92: while (i) {
      0003DD 01 40 00         [10]  719 	ld	bc, #0x0040
      0003E0                        720 00101$:
      0003E0 78               [ 4]  721 	ld	a, b
      0003E1 B1               [ 4]  722 	or	a, c
      0003E2 28 15            [12]  723 	jr	Z, 00103$
                                    724 ;./lib/./sprite.c:93: hardwareSprites[i].len = 0;
      0003E4 69               [ 4]  725 	ld	l, c
      0003E5 60               [ 4]  726 	ld	h, b
      0003E6 29               [11]  727 	add	hl, hl
      0003E7 09               [11]  728 	add	hl, bc
      0003E8 29               [11]  729 	add	hl, hl
      0003E9 29               [11]  730 	add	hl, hl
      0003EA 11r00r00         [10]  731 	ld	de, #_hardwareSprites
      0003ED 19               [11]  732 	add	hl, de
      0003EE 11 0A 00         [10]  733 	ld	de, #0x000a
      0003F1 19               [11]  734 	add	hl, de
      0003F2 AF               [ 4]  735 	xor	a, a
      0003F3 77               [ 7]  736 	ld	(hl), a
      0003F4 23               [ 6]  737 	inc	hl
      0003F5 77               [ 7]  738 	ld	(hl), a
                                    739 ;./lib/./sprite.c:94: i--;
      0003F6 0B               [ 6]  740 	dec	bc
      0003F7 18 E7            [12]  741 	jr	00101$
      0003F9                        742 00103$:
                                    743 ;./lib/./sprite.c:107: __endasm;
      0003F9 21r00r00         [10]  744 	ld	hl, #_SpriteNextFree
      0003FC 22r04r03         [16]  745 	ld	(#_SpriteNextFree2), hl
      0003FF 21r00r00         [10]  746 	ld	hl, #_SpriteTableY
      000402 22r00r03         [16]  747 	ld	(#_SpriteTableY2), hl
      000405 21r00r00         [10]  748 	ld	hl, #_SpriteTableXN
      000408 22r02r03         [16]  749 	ld	(#_SpriteTableXN2), hl
                                    750 ;./lib/./sprite.c:110: }
      00040B C9               [10]  751 	ret
                                    752 ;./lib/./sprite.c:127: void copySpritestoSAT (void) {
                                    753 ;	---------------------------------
                                    754 ; Function copySpritestoSAT
                                    755 ; ---------------------------------
      00040C                        756 _copySpritestoSAT::
                                    757 ;./lib/./sprite.c:128: SMS_setAddr(SMS_SATAddress);
      00040C 21 00 7F         [10]  758 	ld	hl, #0x7f00
      00040F CF               [11]  759 	rst	#0x08
                                    760 ;./lib/./sprite.c:144: __endasm;
      000410 3Ar00r00         [13]  761 	ld	a,(#_SpriteNextFree)
      000413 B7               [ 4]  762 	or	a
      000414 28 25            [12]  763 	jr	z,_no_sprites
      000416 47               [ 4]  764 	ld	b,a
      000417 0E BE            [ 7]  765 	ld	c,#_VDPDataPort
      000419 21r00r00         [10]  766 	ld	hl,#_SpriteTableY
      00041C                        767 _next_spriteY:
      00041C ED A3            [16]  768 	outi	; 16 cycles
      00041E 20 FC            [12]  769 	jr	nz,_next_spriteY ; 12 cycles = 28 (VRAM safe on GG too)
      000420 FE 40            [ 7]  770 	cp	#64 ; 7 cycles
      000422 28 04            [12]  771 	jr	z,_no_sprite_term ; 7 cycles
      000424 3E D0            [ 7]  772 	ld	a,#0xD0 ; 7 cycles => VRAM safe
      000426 ED 79            [12]  773 	out	(c),a
      000428                        774 _no_sprite_term:
                                    775 ;./lib/./sprite.c:145: SMS_setAddr(SMS_SATAddress+128);
      000428 21 80 7F         [10]  776 	ld	hl, #0x7f80
      00042B CF               [11]  777 	rst	#0x08
                                    778 ;./lib/./sprite.c:160: __endasm;
      00042C 0E BE            [ 7]  779 	ld	c,#_VDPDataPort
      00042E 3Ar00r00         [13]  780 	ld	a,(#_SpriteNextFree)
      000431 87               [ 4]  781 	add	a,a
      000432 47               [ 4]  782 	ld	b,a
      000433 21r00r00         [10]  783 	ld	hl,#_SpriteTableXN
      000436                        784 _next_spriteXN:
      000436 ED A3            [16]  785 	outi	; 16 cycles
      000438 20 FC            [12]  786 	jr	nz,_next_spriteXN ; 12 cycles = 28 (VRAM safe on GG too)
      00043A C9               [10]  787 	ret
      00043B                        788 _no_sprites:
      00043B 3E D0            [ 7]  789 	ld	a,#0xD0
      00043D D3 BE            [11]  790 	out	(#_VDPDataPort),a
                                    791 ;./lib/./sprite.c:161: }
      00043F C9               [10]  792 	ret
                                    793 ;./lib/entities.c:12: void draw_entidad(T_entidad *entidad, T_sprite *sprite){
                                    794 ;	---------------------------------
                                    795 ; Function draw_entidad
                                    796 ; ---------------------------------
      000440                        797 _draw_entidad::
      000440 DD E5            [15]  798 	push	ix
      000442 DD 21 00 00      [14]  799 	ld	ix,#0
      000446 DD 39            [15]  800 	add	ix,sp
      000448 FD 21 E3 FF      [14]  801 	ld	iy, #-29
      00044C FD 39            [15]  802 	add	iy, sp
      00044E FD F9            [10]  803 	ld	sp, iy
      000450 DD 75 FC         [19]  804 	ld	-4 (ix), l
      000453 DD 74 FD         [19]  805 	ld	-3 (ix), h
                                    806 ;./lib/entities.c:14: if (sprite->allInRAM == 1){
      000456 DD 73 FA         [19]  807 	ld	-6 (ix), e
      000459 DD 72 FB         [19]  808 	ld	-5 (ix), d
      00045C 4B               [ 4]  809 	ld	c, e
      00045D 42               [ 4]  810 	ld	b, d
      00045E 21 06 00         [10]  811 	ld	hl, #6
      000461 09               [11]  812 	add	hl, bc
      000462 4E               [ 7]  813 	ld	c, (hl)
                                    814 ;./lib/entities.c:15: if (entidad->initSprite == 255) {
      000463 DD 7E FC         [19]  815 	ld	a, -4 (ix)
      000466 C6 06            [ 7]  816 	add	a, #0x06
      000468 DD 77 F2         [19]  817 	ld	-14 (ix), a
      00046B DD 7E FD         [19]  818 	ld	a, -3 (ix)
      00046E CE 00            [ 7]  819 	adc	a, #0x00
      000470 DD 77 F3         [19]  820 	ld	-13 (ix), a
      000473 DD 6E F2         [19]  821 	ld	l, -14 (ix)
      000476 DD 66 F3         [19]  822 	ld	h, -13 (ix)
      000479 46               [ 7]  823 	ld	b, (hl)
                                    824 ;./lib/entities.c:16: int frame = sprite->tamano*entidad->frame + sprite->beginVRAM;
      00047A DD 7E FC         [19]  825 	ld	a, -4 (ix)
      00047D C6 02            [ 7]  826 	add	a, #0x02
      00047F DD 77 F4         [19]  827 	ld	-12 (ix), a
      000482 DD 7E FD         [19]  828 	ld	a, -3 (ix)
      000485 CE 00            [ 7]  829 	adc	a, #0x00
      000487 DD 77 F5         [19]  830 	ld	-11 (ix), a
                                    831 ;./lib/entities.c:17: for(j=0;j<sprite->alto;j++) {
      00048A DD 7E FC         [19]  832 	ld	a, -4 (ix)
      00048D C6 01            [ 7]  833 	add	a, #0x01
      00048F DD 77 F8         [19]  834 	ld	-8 (ix), a
      000492 DD 7E FD         [19]  835 	ld	a, -3 (ix)
      000495 CE 00            [ 7]  836 	adc	a, #0x00
      000497 DD 77 F9         [19]  837 	ld	-7 (ix), a
      00049A DD 7E FA         [19]  838 	ld	a, -6 (ix)
      00049D C6 01            [ 7]  839 	add	a, #0x01
      00049F DD 77 FE         [19]  840 	ld	-2 (ix), a
      0004A2 DD 7E FB         [19]  841 	ld	a, -5 (ix)
      0004A5 CE 00            [ 7]  842 	adc	a, #0x00
      0004A7 DD 77 FF         [19]  843 	ld	-1 (ix), a
                                    844 ;./lib/entities.c:27: entidad->len = (sprite->alto * sprite->ancho + entidad->initSprite)*2;
      0004AA DD 7E FC         [19]  845 	ld	a, -4 (ix)
      0004AD C6 07            [ 7]  846 	add	a, #0x07
      0004AF DD 77 E3         [19]  847 	ld	-29 (ix), a
      0004B2 DD 7E FD         [19]  848 	ld	a, -3 (ix)
      0004B5 CE 00            [ 7]  849 	adc	a, #0x00
      0004B7 DD 77 E4         [19]  850 	ld	-28 (ix), a
                                    851 ;./lib/entities.c:15: if (entidad->initSprite == 255) {
      0004BA 04               [ 4]  852 	inc	b
      0004BB 3E 01            [ 7]  853 	ld	a, #0x01
      0004BD 28 01            [12]  854 	jr	Z, 00253$
      0004BF AF               [ 4]  855 	xor	a, a
      0004C0                        856 00253$:
      0004C0 DD 77 F7         [19]  857 	ld	-9 (ix), a
                                    858 ;./lib/entities.c:14: if (sprite->allInRAM == 1){
      0004C3 0D               [ 4]  859 	dec	c
      0004C4 C2rD7r06         [10]  860 	jp	NZ,00120$
                                    861 ;./lib/entities.c:15: if (entidad->initSprite == 255) {
      0004C7 DD 7E F2         [19]  862 	ld	a, -14 (ix)
      0004CA DD 77 E5         [19]  863 	ld	-27 (ix), a
      0004CD DD 7E F3         [19]  864 	ld	a, -13 (ix)
      0004D0 DD 77 E6         [19]  865 	ld	-26 (ix), a
      0004D3 DD 7E F7         [19]  866 	ld	a, -9 (ix)
      0004D6 B7               [ 4]  867 	or	a, a
      0004D7 CAr61r08         [10]  868 	jp	Z, 00134$
                                    869 ;./lib/entities.c:16: int frame = sprite->tamano*entidad->frame + sprite->beginVRAM;
      0004DA DD 7E FA         [19]  870 	ld	a, -6 (ix)
      0004DD DD 77 F2         [19]  871 	ld	-14 (ix), a
      0004E0 DD 7E FB         [19]  872 	ld	a, -5 (ix)
      0004E3 DD 77 F3         [19]  873 	ld	-13 (ix), a
      0004E6 DD 6E F2         [19]  874 	ld	l, -14 (ix)
      0004E9 DD 66 F3         [19]  875 	ld	h, -13 (ix)
      0004EC 23               [ 6]  876 	inc	hl
      0004ED 23               [ 6]  877 	inc	hl
      0004EE 7E               [ 7]  878 	ld	a, (hl)
      0004EF DD 77 F6         [19]  879 	ld	-10 (ix), a
      0004F2 DD 6E F4         [19]  880 	ld	l, -12 (ix)
      0004F5 DD 66 F5         [19]  881 	ld	h, -11 (ix)
      0004F8 7E               [ 7]  882 	ld	a, (hl)
      0004F9 DD 77 F7         [19]  883 	ld	-9 (ix), a
      0004FC DD 7E F6         [19]  884 	ld	a, -10 (ix)
      0004FF DD 77 F5         [19]  885 	ld	-11 (ix), a
      000502 DD 5E F7         [19]  886 	ld	e, -9 (ix)
      000505 DD 66 F5         [19]  887 	ld	h, -11 (ix)
                                    888 ;	spillPairReg hl
                                    889 ;	spillPairReg hl
      000508 2E 00            [ 7]  890 	ld	l, #0x00
      00050A 55               [ 4]  891 	ld	d, l
      00050B 06 08            [ 7]  892 	ld	b, #0x08
      00050D                        893 00256$:
      00050D 29               [11]  894 	add	hl, hl
      00050E 30 01            [12]  895 	jr	NC, 00257$
      000510 19               [11]  896 	add	hl, de
      000511                        897 00257$:
      000511 10 FA            [13]  898 	djnz	00256$
      000513 DD 75 F7         [19]  899 	ld	-9 (ix), l
      000516 DD 7E FA         [19]  900 	ld	a, -6 (ix)
      000519 DD 77 F5         [19]  901 	ld	-11 (ix), a
      00051C DD 7E FB         [19]  902 	ld	a, -5 (ix)
      00051F DD 77 F6         [19]  903 	ld	-10 (ix), a
      000522 DD 6E F5         [19]  904 	ld	l, -11 (ix)
      000525 DD 66 F6         [19]  905 	ld	h, -10 (ix)
      000528 11 04 00         [10]  906 	ld	de, #0x0004
      00052B 19               [11]  907 	add	hl, de
      00052C 7E               [ 7]  908 	ld	a, (hl)
      00052D DD 77 F6         [19]  909 	ld	-10 (ix), a
      000530 DD 86 F7         [19]  910 	add	a, -9 (ix)
      000533 DD 77 E7         [19]  911 	ld	-25 (ix), a
                                    912 ;./lib/entities.c:17: for(j=0;j<sprite->alto;j++) {
      000536 DD 7E F8         [19]  913 	ld	a, -8 (ix)
      000539 DD 77 E8         [19]  914 	ld	-24 (ix), a
      00053C DD 7E F9         [19]  915 	ld	a, -7 (ix)
      00053F DD 77 E9         [19]  916 	ld	-23 (ix), a
      000542 DD 7E FE         [19]  917 	ld	a, -2 (ix)
      000545 DD 77 EA         [19]  918 	ld	-22 (ix), a
      000548 DD 7E FF         [19]  919 	ld	a, -1 (ix)
      00054B DD 77 EB         [19]  920 	ld	-21 (ix), a
      00054E DD 36 FE 00      [19]  921 	ld	-2 (ix), #0x00
      000552                        922 00126$:
      000552 DD 6E FA         [19]  923 	ld	l, -6 (ix)
      000555 DD 66 FB         [19]  924 	ld	h, -5 (ix)
      000558 7E               [ 7]  925 	ld	a, (hl)
      000559 DD 77 FF         [19]  926 	ld	-1 (ix), a
      00055C DD 7E FE         [19]  927 	ld	a, -2 (ix)
      00055F DD 96 FF         [19]  928 	sub	a, -1 (ix)
      000562 D2r9Br06         [10]  929 	jp	NC, 00106$
                                    930 ;./lib/entities.c:18: unsigned char desplazado = (j<<2);
      000565 DD 7E FE         [19]  931 	ld	a, -2 (ix)
      000568 DD 77 FF         [19]  932 	ld	-1 (ix), a
      00056B DD CB FF 26      [23]  933 	sla	-1 (ix)
      00056F DD CB FF 26      [23]  934 	sla	-1 (ix)
                                    935 ;./lib/entities.c:19: unsigned char jCalculated = desplazado + frame, y = entidad->y+(desplazado<<2);
      000573 DD 7E FF         [19]  936 	ld	a, -1 (ix)
      000576 DD 77 F9         [19]  937 	ld	-7 (ix), a
      000579 DD 86 E7         [19]  938 	add	a, -25 (ix)
      00057C DD 77 FF         [19]  939 	ld	-1 (ix), a
      00057F DD 77 EC         [19]  940 	ld	-20 (ix), a
      000582 DD 6E E8         [19]  941 	ld	l, -24 (ix)
      000585 DD 66 E9         [19]  942 	ld	h, -23 (ix)
      000588 7E               [ 7]  943 	ld	a, (hl)
      000589 DD 77 FF         [19]  944 	ld	-1 (ix), a
      00058C DD CB F9 26      [23]  945 	sla	-7 (ix)
      000590 DD CB F9 26      [23]  946 	sla	-7 (ix)
      000594 DD 7E FF         [19]  947 	ld	a, -1 (ix)
      000597 DD 86 F9         [19]  948 	add	a, -7 (ix)
      00059A DD 77 FF         [19]  949 	ld	-1 (ix), a
      00059D DD 77 ED         [19]  950 	ld	-19 (ix), a
                                    951 ;./lib/entities.c:20: for(i=0;i<sprite->ancho;i++) {
      0005A0 DD 36 FF 00      [19]  952 	ld	-1 (ix), #0x00
      0005A4                        953 00123$:
      0005A4 DD 6E EA         [19]  954 	ld	l, -22 (ix)
      0005A7 DD 66 EB         [19]  955 	ld	h, -21 (ix)
      0005AA DD 7E FF         [19]  956 	ld	a,-1 (ix)
      0005AD 96               [ 7]  957 	sub	a,(hl)
      0005AE D2r95r06         [10]  958 	jp	NC, 00127$
                                    959 ;./lib/entities.c:22: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      0005B1 DD 6E FC         [19]  960 	ld	l, -4 (ix)
      0005B4 DD 66 FD         [19]  961 	ld	h, -3 (ix)
      0005B7 7E               [ 7]  962 	ld	a, (hl)
      0005B8 DD 77 F7         [19]  963 	ld	-9 (ix), a
      0005BB DD 7E FF         [19]  964 	ld	a, -1 (ix)
      0005BE DD 77 F8         [19]  965 	ld	-8 (ix), a
      0005C1 DD 36 F9 00      [19]  966 	ld	-7 (ix), #0x00
      0005C5 DD 7E EC         [19]  967 	ld	a, -20 (ix)
      0005C8 DD 77 EE         [19]  968 	ld	-18 (ix), a
      0005CB DD 36 EF 00      [19]  969 	ld	-17 (ix), #0x00
      0005CF DD 7E ED         [19]  970 	ld	a, -19 (ix)
      0005D2 DD 77 F0         [19]  971 	ld	-16 (ix), a
      0005D5 DD 36 F1 00      [19]  972 	ld	-15 (ix), #0x00
      0005D9 DD 7E F7         [19]  973 	ld	a, -9 (ix)
      0005DC DD 77 F2         [19]  974 	ld	-14 (ix), a
      0005DF DD 36 F3 00      [19]  975 	ld	-13 (ix), #0x00
      0005E3 DD 7E F8         [19]  976 	ld	a, -8 (ix)
      0005E6 DD 77 F4         [19]  977 	ld	-12 (ix), a
      0005E9 DD 7E F9         [19]  978 	ld	a, -7 (ix)
      0005EC DD 77 F5         [19]  979 	ld	-11 (ix), a
      0005EF 06 03            [ 7]  980 	ld	b, #0x03
      0005F1                        981 00258$:
      0005F1 DD CB F4 26      [23]  982 	sla	-12 (ix)
      0005F5 DD CB F5 16      [23]  983 	rl	-11 (ix)
      0005F9 10 F6            [13]  984 	djnz	00258$
      0005FB DD 7E F8         [19]  985 	ld	a, -8 (ix)
      0005FE DD 77 F6         [19]  986 	ld	-10 (ix), a
      000601 DD 7E F9         [19]  987 	ld	a, -7 (ix)
      000604 DD 77 F7         [19]  988 	ld	-9 (ix), a
      000607 DD CB F6 26      [23]  989 	sla	-10 (ix)
      00060B DD CB F7 16      [23]  990 	rl	-9 (ix)
      00060F DD 7E F4         [19]  991 	ld	a, -12 (ix)
      000612 DD 86 F2         [19]  992 	add	a, -14 (ix)
      000615 DD 77 F8         [19]  993 	ld	-8 (ix), a
      000618 DD 7E F5         [19]  994 	ld	a, -11 (ix)
      00061B DD 8E F3         [19]  995 	adc	a, -13 (ix)
      00061E DD 77 F9         [19]  996 	ld	-7 (ix), a
      000621 DD 7E EE         [19]  997 	ld	a, -18 (ix)
      000624 DD 86 F6         [19]  998 	add	a, -10 (ix)
      000627 DD 77 F4         [19]  999 	ld	-12 (ix), a
      00062A 3E 00            [ 7] 1000 	ld	a, #0x00
      00062C DD 8E F7         [19] 1001 	adc	a, -9 (ix)
      00062F DD 77 F5         [19] 1002 	ld	-11 (ix), a
      000632 DD 7E F8         [19] 1003 	ld	a, -8 (ix)
      000635 DD 77 F6         [19] 1004 	ld	-10 (ix), a
      000638 DD 36 F7 00      [19] 1005 	ld	-9 (ix), #0x00
      00063C DD 7E F4         [19] 1006 	ld	a, -12 (ix)
      00063F DD 77 F8         [19] 1007 	ld	-8 (ix), a
      000642 DD 36 F9 00      [19] 1008 	ld	-7 (ix), #0x00
      000646 DD 7E F6         [19] 1009 	ld	a, -10 (ix)
      000649 DD 77 F7         [19] 1010 	ld	-9 (ix), a
      00064C DD 36 F6 00      [19] 1011 	ld	-10 (ix), #0x00
      000650 AF               [ 4] 1012 	xor	a, a
      000651 DD B6 F8         [19] 1013 	or	a, -8 (ix)
      000654 DD 77 F4         [19] 1014 	ld	-12 (ix), a
      000657 DD 7E F7         [19] 1015 	ld	a, -9 (ix)
      00065A DD B6 F9         [19] 1016 	or	a, -7 (ix)
      00065D DD 77 F5         [19] 1017 	ld	-11 (ix), a
                                   1018 ;./lib/entities.c:21: if(i==0 && j==0)
      000660 DD 7E FF         [19] 1019 	ld	a, -1 (ix)
      000663 B7               [ 4] 1020 	or	a, a
      000664 20 1B            [12] 1021 	jr	NZ, 00102$
      000666 DD 7E FE         [19] 1022 	ld	a, -2 (ix)
      000669 B7               [ 4] 1023 	or	a, a
      00066A 20 15            [12] 1024 	jr	NZ, 00102$
                                   1025 ;./lib/entities.c:22: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      00066C DD 5E F4         [19] 1026 	ld	e, -12 (ix)
      00066F DD 56 F5         [19] 1027 	ld	d, -11 (ix)
      000672 DD 6E F0         [19] 1028 	ld	l, -16 (ix)
                                   1029 ;	spillPairReg hl
                                   1030 ;	spillPairReg hl
      000675 26 00            [ 7] 1031 	ld	h, #0x00
                                   1032 ;	spillPairReg hl
                                   1033 ;	spillPairReg hl
      000677 CDr00r00         [17] 1034 	call	_SMS_addSprite_f
      00067A C1               [10] 1035 	pop	bc
      00067B E1               [10] 1036 	pop	hl
      00067C E5               [11] 1037 	push	hl
      00067D C5               [11] 1038 	push	bc
      00067E 77               [ 7] 1039 	ld	(hl), a
      00067F 18 0E            [12] 1040 	jr	00124$
      000681                       1041 00102$:
                                   1042 ;./lib/entities.c:24: SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      000681 DD 5E F4         [19] 1043 	ld	e, -12 (ix)
      000684 DD 56 F5         [19] 1044 	ld	d, -11 (ix)
      000687 DD 6E F0         [19] 1045 	ld	l, -16 (ix)
                                   1046 ;	spillPairReg hl
                                   1047 ;	spillPairReg hl
      00068A 26 00            [ 7] 1048 	ld	h, #0x00
                                   1049 ;	spillPairReg hl
                                   1050 ;	spillPairReg hl
      00068C CDr00r00         [17] 1051 	call	_SMS_addSprite_f
      00068F                       1052 00124$:
                                   1053 ;./lib/entities.c:20: for(i=0;i<sprite->ancho;i++) {
      00068F DD 34 FF         [23] 1054 	inc	-1 (ix)
      000692 C3rA4r05         [10] 1055 	jp	00123$
      000695                       1056 00127$:
                                   1057 ;./lib/entities.c:17: for(j=0;j<sprite->alto;j++) {
      000695 DD 34 FE         [23] 1058 	inc	-2 (ix)
      000698 C3r52r05         [10] 1059 	jp	00126$
      00069B                       1060 00106$:
                                   1061 ;./lib/entities.c:27: entidad->len = (sprite->alto * sprite->ancho + entidad->initSprite)*2;
      00069B DD 6E EA         [19] 1062 	ld	l, -22 (ix)
      00069E DD 66 EB         [19] 1063 	ld	h, -21 (ix)
      0006A1 7E               [ 7] 1064 	ld	a, (hl)
      0006A2 DD 77 FE         [19] 1065 	ld	-2 (ix), a
      0006A5 5F               [ 4] 1066 	ld	e, a
      0006A6 DD 66 FF         [19] 1067 	ld	h, -1 (ix)
                                   1068 ;	spillPairReg hl
                                   1069 ;	spillPairReg hl
      0006A9 2E 00            [ 7] 1070 	ld	l, #0x00
      0006AB 55               [ 4] 1071 	ld	d, l
      0006AC 06 08            [ 7] 1072 	ld	b, #0x08
      0006AE                       1073 00260$:
      0006AE 29               [11] 1074 	add	hl, hl
      0006AF 30 01            [12] 1075 	jr	NC, 00261$
      0006B1 19               [11] 1076 	add	hl, de
      0006B2                       1077 00261$:
      0006B2 10 FA            [13] 1078 	djnz	00260$
      0006B4 DD 75 FF         [19] 1079 	ld	-1 (ix), l
      0006B7 DD 6E E5         [19] 1080 	ld	l, -27 (ix)
      0006BA DD 66 E6         [19] 1081 	ld	h, -26 (ix)
      0006BD 7E               [ 7] 1082 	ld	a, (hl)
      0006BE DD 77 FE         [19] 1083 	ld	-2 (ix), a
      0006C1 DD 7E FF         [19] 1084 	ld	a, -1 (ix)
      0006C4 DD 86 FE         [19] 1085 	add	a, -2 (ix)
      0006C7 DD 77 FF         [19] 1086 	ld	-1 (ix), a
      0006CA DD CB FF 26      [23] 1087 	sla	-1 (ix)
      0006CE E1               [10] 1088 	pop	hl
      0006CF E5               [11] 1089 	push	hl
      0006D0 DD 7E FF         [19] 1090 	ld	a, -1 (ix)
      0006D3 77               [ 7] 1091 	ld	(hl), a
      0006D4 C3r61r08         [10] 1092 	jp	00134$
      0006D7                       1093 00120$:
                                   1094 ;./lib/entities.c:32: if (entidad->initSprite == 255) {
      0006D7 DD 7E F2         [19] 1095 	ld	a, -14 (ix)
      0006DA DD 77 EC         [19] 1096 	ld	-20 (ix), a
      0006DD DD 7E F3         [19] 1097 	ld	a, -13 (ix)
      0006E0 DD 77 ED         [19] 1098 	ld	-19 (ix), a
      0006E3 DD 7E F7         [19] 1099 	ld	a, -9 (ix)
      0006E6 B7               [ 4] 1100 	or	a, a
      0006E7 CAr61r08         [10] 1101 	jp	Z, 00134$
                                   1102 ;./lib/entities.c:33: if (entidad->frame != sprite->frameInVRAM){
      0006EA DD 6E F4         [19] 1103 	ld	l, -12 (ix)
      0006ED DD 66 F5         [19] 1104 	ld	h, -11 (ix)
      0006F0 7E               [ 7] 1105 	ld	a, (hl)
      0006F1 DD 77 F7         [19] 1106 	ld	-9 (ix), a
      0006F4 DD 7E FA         [19] 1107 	ld	a, -6 (ix)
      0006F7 C6 09            [ 7] 1108 	add	a, #0x09
      0006F9 DD 77 F5         [19] 1109 	ld	-11 (ix), a
      0006FC DD 7E FB         [19] 1110 	ld	a, -5 (ix)
      0006FF CE 00            [ 7] 1111 	adc	a, #0x00
      000701 DD 77 F6         [19] 1112 	ld	-10 (ix), a
      000704 DD 6E F5         [19] 1113 	ld	l, -11 (ix)
      000707 DD 66 F6         [19] 1114 	ld	h, -10 (ix)
      00070A DD 7E F7         [19] 1115 	ld	a,-9 (ix)
      00070D 96               [ 7] 1116 	sub	a,(hl)
      00070E 28 0A            [12] 1117 	jr	Z, 00151$
                                   1118 ;./lib/entities.c:35: sprite->frameInVRAM = entidad->frame;
      000710 DD 6E F5         [19] 1119 	ld	l, -11 (ix)
      000713 DD 66 F6         [19] 1120 	ld	h, -10 (ix)
      000716 DD 7E F7         [19] 1121 	ld	a, -9 (ix)
      000719 77               [ 7] 1122 	ld	(hl), a
                                   1123 ;./lib/entities.c:37: for(j=0;j<sprite->alto;j++) {
      00071A                       1124 00151$:
      00071A DD 7E F8         [19] 1125 	ld	a, -8 (ix)
      00071D DD 77 EE         [19] 1126 	ld	-18 (ix), a
      000720 DD 7E F9         [19] 1127 	ld	a, -7 (ix)
      000723 DD 77 EF         [19] 1128 	ld	-17 (ix), a
      000726 DD 7E F8         [19] 1129 	ld	a, -8 (ix)
      000729 DD 77 F0         [19] 1130 	ld	-16 (ix), a
      00072C DD 7E F9         [19] 1131 	ld	a, -7 (ix)
      00072F DD 77 F1         [19] 1132 	ld	-15 (ix), a
      000732 DD 7E FE         [19] 1133 	ld	a, -2 (ix)
      000735 DD 77 F2         [19] 1134 	ld	-14 (ix), a
      000738 DD 7E FF         [19] 1135 	ld	a, -1 (ix)
      00073B DD 77 F3         [19] 1136 	ld	-13 (ix), a
      00073E DD 36 FE 00      [19] 1137 	ld	-2 (ix), #0x00
      000742                       1138 00132$:
      000742 DD 6E FA         [19] 1139 	ld	l, -6 (ix)
      000745 DD 66 FB         [19] 1140 	ld	h, -5 (ix)
      000748 7E               [ 7] 1141 	ld	a, (hl)
      000749 DD 77 FF         [19] 1142 	ld	-1 (ix), a
      00074C DD 7E FE         [19] 1143 	ld	a, -2 (ix)
      00074F DD 96 FF         [19] 1144 	sub	a, -1 (ix)
      000752 D2r10r08         [10] 1145 	jp	NC, 00116$
                                   1146 ;./lib/entities.c:38: for(i=0;i<sprite->ancho;i++) {
      000755 DD 36 FF 00      [19] 1147 	ld	-1 (ix), #0x00
      000759                       1148 00129$:
      000759 DD 6E F2         [19] 1149 	ld	l, -14 (ix)
      00075C DD 66 F3         [19] 1150 	ld	h, -13 (ix)
      00075F DD 7E FF         [19] 1151 	ld	a,-1 (ix)
      000762 96               [ 7] 1152 	sub	a,(hl)
      000763 D2r0Ar08         [10] 1153 	jp	NC, 00133$
                                   1154 ;./lib/entities.c:22: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      000766 DD 6E FC         [19] 1155 	ld	l, -4 (ix)
      000769 DD 66 FD         [19] 1156 	ld	h, -3 (ix)
      00076C 7E               [ 7] 1157 	ld	a, (hl)
                                   1158 ;./lib/entities.c:40: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),entidad->y+(j<<4), (j<<2) + (i<<1) );  
      00076D DD 4E FF         [19] 1159 	ld	c, -1 (ix)
      000770 06 00            [ 7] 1160 	ld	b, #0x00
      000772 DD 5E FE         [19] 1161 	ld	e, -2 (ix)
      000775 16 00            [ 7] 1162 	ld	d, #0x00
                                   1163 ;./lib/entities.c:22: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      000777 DD 77 F4         [19] 1164 	ld	-12 (ix), a
      00077A DD 36 F5 00      [19] 1165 	ld	-11 (ix), #0x00
                                   1166 ;./lib/entities.c:40: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),entidad->y+(j<<4), (j<<2) + (i<<1) );  
      00077E DD 71 F6         [19] 1167 	ld	-10 (ix), c
      000781 DD 70 F7         [19] 1168 	ld	-9 (ix), b
      000784 3E 03            [ 7] 1169 	ld	a, #0x03
      000786                       1170 00263$:
      000786 DD CB F6 26      [23] 1171 	sla	-10 (ix)
      00078A DD CB F7 16      [23] 1172 	rl	-9 (ix)
      00078E 3D               [ 4] 1173 	dec	a
      00078F 20 F5            [12] 1174 	jr	NZ, 00263$
      000791 6B               [ 4] 1175 	ld	l, e
      000792 62               [ 4] 1176 	ld	h, d
      000793 29               [11] 1177 	add	hl, hl
      000794 29               [11] 1178 	add	hl, hl
      000795 CB 21            [ 8] 1179 	sla	c
      000797 CB 10            [ 8] 1180 	rl	b
      000799 EB               [ 4] 1181 	ex	de, hl
      00079A 29               [11] 1182 	add	hl, hl
      00079B 29               [11] 1183 	add	hl, hl
      00079C 29               [11] 1184 	add	hl, hl
      00079D 29               [11] 1185 	add	hl, hl
      00079E EB               [ 4] 1186 	ex	de, hl
      00079F DD 73 F8         [19] 1187 	ld	-8 (ix), e
      0007A2 DD 72 F9         [19] 1188 	ld	-7 (ix), d
      0007A5 DD 7E F4         [19] 1189 	ld	a, -12 (ix)
      0007A8 DD 86 F6         [19] 1190 	add	a, -10 (ix)
      0007AB 5F               [ 4] 1191 	ld	e, a
      0007AC 3E 00            [ 7] 1192 	ld	a, #0x00
      0007AE DD 8E F7         [19] 1193 	adc	a, -9 (ix)
      0007B1 09               [11] 1194 	add	hl, bc
                                   1195 ;	spillPairReg hl
                                   1196 ;	spillPairReg hl
      0007B2 AF               [ 4] 1197 	xor	a, a
      0007B3 67               [ 4] 1198 	ld	h,a
      0007B4 B5               [ 4] 1199 	or	a, l
      0007B5 DD 77 F6         [19] 1200 	ld	-10 (ix), a
      0007B8 7B               [ 4] 1201 	ld	a, e
      0007B9 B4               [ 4] 1202 	or	a, h
      0007BA DD 77 F7         [19] 1203 	ld	-9 (ix), a
                                   1204 ;./lib/entities.c:39: if(i==0 && j==0) {
      0007BD DD 7E FF         [19] 1205 	ld	a, -1 (ix)
      0007C0 B7               [ 4] 1206 	or	a, a
      0007C1 20 28            [12] 1207 	jr	NZ, 00112$
      0007C3 DD 7E FE         [19] 1208 	ld	a, -2 (ix)
      0007C6 B7               [ 4] 1209 	or	a, a
      0007C7 20 22            [12] 1210 	jr	NZ, 00112$
                                   1211 ;./lib/entities.c:40: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),entidad->y+(j<<4), (j<<2) + (i<<1) );  
      0007C9 DD 6E F0         [19] 1212 	ld	l, -16 (ix)
      0007CC DD 66 F1         [19] 1213 	ld	h, -15 (ix)
      0007CF 4E               [ 7] 1214 	ld	c, (hl)
      0007D0 06 00            [ 7] 1215 	ld	b, #0x00
      0007D2 DD 6E F8         [19] 1216 	ld	l, -8 (ix)
                                   1217 ;	spillPairReg hl
                                   1218 ;	spillPairReg hl
      0007D5 DD 66 F9         [19] 1219 	ld	h, -7 (ix)
                                   1220 ;	spillPairReg hl
                                   1221 ;	spillPairReg hl
      0007D8 09               [11] 1222 	add	hl, bc
      0007D9 DD 5E F6         [19] 1223 	ld	e, -10 (ix)
      0007DC DD 56 F7         [19] 1224 	ld	d, -9 (ix)
      0007DF CDr00r00         [17] 1225 	call	_SMS_addSprite_f
      0007E2 DD 6E EC         [19] 1226 	ld	l, -20 (ix)
      0007E5 DD 66 ED         [19] 1227 	ld	h, -19 (ix)
      0007E8 77               [ 7] 1228 	ld	(hl), a
      0007E9 18 19            [12] 1229 	jr	00130$
      0007EB                       1230 00112$:
                                   1231 ;./lib/entities.c:43: SMS_addSprite(entidad->x+(i<<3),entidad->y+(j<<4), (j<<2) + (i<<1) );
      0007EB DD 6E EE         [19] 1232 	ld	l, -18 (ix)
      0007EE DD 66 EF         [19] 1233 	ld	h, -17 (ix)
      0007F1 4E               [ 7] 1234 	ld	c, (hl)
      0007F2 06 00            [ 7] 1235 	ld	b, #0x00
      0007F4 DD 6E F8         [19] 1236 	ld	l, -8 (ix)
                                   1237 ;	spillPairReg hl
                                   1238 ;	spillPairReg hl
      0007F7 DD 66 F9         [19] 1239 	ld	h, -7 (ix)
                                   1240 ;	spillPairReg hl
                                   1241 ;	spillPairReg hl
      0007FA 09               [11] 1242 	add	hl, bc
      0007FB DD 5E F6         [19] 1243 	ld	e, -10 (ix)
      0007FE DD 56 F7         [19] 1244 	ld	d, -9 (ix)
      000801 CDr00r00         [17] 1245 	call	_SMS_addSprite_f
      000804                       1246 00130$:
                                   1247 ;./lib/entities.c:38: for(i=0;i<sprite->ancho;i++) {
      000804 DD 34 FF         [23] 1248 	inc	-1 (ix)
      000807 C3r59r07         [10] 1249 	jp	00129$
      00080A                       1250 00133$:
                                   1251 ;./lib/entities.c:37: for(j=0;j<sprite->alto;j++) {
      00080A DD 34 FE         [23] 1252 	inc	-2 (ix)
      00080D C3r42r07         [10] 1253 	jp	00132$
      000810                       1254 00116$:
                                   1255 ;./lib/entities.c:47: entidad->len = sprite->alto * sprite->ancho + entidad->initSprite;
      000810 DD 6E F2         [19] 1256 	ld	l, -14 (ix)
      000813 DD 66 F3         [19] 1257 	ld	h, -13 (ix)
      000816 7E               [ 7] 1258 	ld	a, (hl)
      000817 DD 77 FE         [19] 1259 	ld	-2 (ix), a
      00081A 5F               [ 4] 1260 	ld	e, a
      00081B DD 66 FF         [19] 1261 	ld	h, -1 (ix)
                                   1262 ;	spillPairReg hl
                                   1263 ;	spillPairReg hl
      00081E 2E 00            [ 7] 1264 	ld	l, #0x00
      000820 55               [ 4] 1265 	ld	d, l
      000821 06 08            [ 7] 1266 	ld	b, #0x08
      000823                       1267 00265$:
      000823 29               [11] 1268 	add	hl, hl
      000824 30 01            [12] 1269 	jr	NC, 00266$
      000826 19               [11] 1270 	add	hl, de
      000827                       1271 00266$:
      000827 10 FA            [13] 1272 	djnz	00265$
      000829 DD 75 FF         [19] 1273 	ld	-1 (ix), l
      00082C DD 6E EC         [19] 1274 	ld	l, -20 (ix)
      00082F DD 66 ED         [19] 1275 	ld	h, -19 (ix)
      000832 7E               [ 7] 1276 	ld	a, (hl)
      000833 DD 77 FE         [19] 1277 	ld	-2 (ix), a
      000836 DD 86 FF         [19] 1278 	add	a, -1 (ix)
      000839 DD 77 FF         [19] 1279 	ld	-1 (ix), a
      00083C E1               [10] 1280 	pop	hl
      00083D E5               [11] 1281 	push	hl
      00083E DD 7E FF         [19] 1282 	ld	a, -1 (ix)
      000841 77               [ 7] 1283 	ld	(hl), a
                                   1284 ;./lib/entities.c:48: entidad->sprite = sprite;
      000842 DD 7E FC         [19] 1285 	ld	a, -4 (ix)
      000845 C6 08            [ 7] 1286 	add	a, #0x08
      000847 DD 77 FE         [19] 1287 	ld	-2 (ix), a
      00084A DD 7E FD         [19] 1288 	ld	a, -3 (ix)
      00084D CE 00            [ 7] 1289 	adc	a, #0x00
      00084F DD 77 FF         [19] 1290 	ld	-1 (ix), a
      000852 DD 6E FE         [19] 1291 	ld	l, -2 (ix)
      000855 DD 66 FF         [19] 1292 	ld	h, -1 (ix)
      000858 DD 7E FA         [19] 1293 	ld	a, -6 (ix)
      00085B 77               [ 7] 1294 	ld	(hl), a
      00085C 23               [ 6] 1295 	inc	hl
      00085D DD 7E FB         [19] 1296 	ld	a, -5 (ix)
      000860 77               [ 7] 1297 	ld	(hl), a
      000861                       1298 00134$:
                                   1299 ;./lib/entities.c:51: }
      000861 DD F9            [10] 1300 	ld	sp, ix
      000863 DD E1            [14] 1301 	pop	ix
      000865 C9               [10] 1302 	ret
                                   1303 ;./alex.c:20: unsigned char canUp(){
                                   1304 ;	---------------------------------
                                   1305 ; Function canUp
                                   1306 ; ---------------------------------
      000866                       1307 _canUp::
                                   1308 ;./alex.c:21: if (alex.x < 2)
      000866 3Ar03r00         [13] 1309 	ld	a, (#_alex + 0)
      000869 D6 02            [ 7] 1310 	sub	a, #0x02
      00086B 30 02            [12] 1311 	jr	NC, 00102$
                                   1312 ;./alex.c:22: return 0;
      00086D AF               [ 4] 1313 	xor	a, a
      00086E C9               [10] 1314 	ret
      00086F                       1315 00102$:
                                   1316 ;./alex.c:23: return 1;
      00086F 3E 01            [ 7] 1317 	ld	a, #0x01
                                   1318 ;./alex.c:24: }
      000871 C9               [10] 1319 	ret
                                   1320 ;./alex.c:26: unsigned char canDown() {
                                   1321 ;	---------------------------------
                                   1322 ; Function canDown
                                   1323 ; ---------------------------------
      000872                       1324 _canDown::
                                   1325 ;./alex.c:27: if (alex.y > 153)
      000872 21r04r00         [10] 1326 	ld	hl, #_alex+1
      000875 4E               [ 7] 1327 	ld	c, (hl)
      000876 3E 99            [ 7] 1328 	ld	a, #0x99
      000878 91               [ 4] 1329 	sub	a, c
      000879 30 02            [12] 1330 	jr	NC, 00102$
                                   1331 ;./alex.c:28: return 0;
      00087B AF               [ 4] 1332 	xor	a, a
      00087C C9               [10] 1333 	ret
      00087D                       1334 00102$:
                                   1335 ;./alex.c:29: return 1;
      00087D 3E 01            [ 7] 1336 	ld	a, #0x01
                                   1337 ;./alex.c:30: }
      00087F C9               [10] 1338 	ret
                                   1339 ;./alex.c:32: unsigned char canLeft() {
                                   1340 ;	---------------------------------
                                   1341 ; Function canLeft
                                   1342 ; ---------------------------------
      000880                       1343 _canLeft::
                                   1344 ;./alex.c:33: if (alex.x < 9)
      000880 3Ar03r00         [13] 1345 	ld	a, (#_alex + 0)
      000883 D6 09            [ 7] 1346 	sub	a, #0x09
      000885 30 02            [12] 1347 	jr	NC, 00102$
                                   1348 ;./alex.c:34: return 0;
      000887 AF               [ 4] 1349 	xor	a, a
      000888 C9               [10] 1350 	ret
      000889                       1351 00102$:
                                   1352 ;./alex.c:35: return 1;
      000889 3E 01            [ 7] 1353 	ld	a, #0x01
                                   1354 ;./alex.c:36: }
      00088B C9               [10] 1355 	ret
                                   1356 ;./alex.c:38: unsigned char canRight() {
                                   1357 ;	---------------------------------
                                   1358 ; Function canRight
                                   1359 ; ---------------------------------
      00088C                       1360 _canRight::
                                   1361 ;./alex.c:39: if (alex.x > 238)
      00088C 21r03r00         [10] 1362 	ld	hl, #_alex+0
      00088F 4E               [ 7] 1363 	ld	c, (hl)
      000890 3E EE            [ 7] 1364 	ld	a, #0xee
      000892 91               [ 4] 1365 	sub	a, c
      000893 30 02            [12] 1366 	jr	NC, 00102$
                                   1367 ;./alex.c:40: return 0;
      000895 AF               [ 4] 1368 	xor	a, a
      000896 C9               [10] 1369 	ret
      000897                       1370 00102$:
                                   1371 ;./alex.c:41: return 1;
      000897 3E 01            [ 7] 1372 	ld	a, #0x01
                                   1373 ;./alex.c:42: }
      000899 C9               [10] 1374 	ret
                                   1375 ;./alex.c:44: void moveAlexSuelo(int keys) {
                                   1376 ;	---------------------------------
                                   1377 ; Function moveAlexSuelo
                                   1378 ; ---------------------------------
      00089A                       1379 _moveAlexSuelo::
      00089A DD E5            [15] 1380 	push	ix
      00089C DD 21 00 00      [14] 1381 	ld	ix,#0
      0008A0 DD 39            [15] 1382 	add	ix,sp
      0008A2 F5               [11] 1383 	push	af
      0008A3 F5               [11] 1384 	push	af
      0008A4 F5               [11] 1385 	push	af
      0008A5 DD 75 FE         [19] 1386 	ld	-2 (ix), l
      0008A8 DD 74 FF         [19] 1387 	ld	-1 (ix), h
                                   1388 ;./alex.c:46: if (keys & PORT_A_KEY_LEFT)
      0008AB DD 7E FE         [19] 1389 	ld	a, -2 (ix)
      0008AE E6 04            [ 7] 1390 	and	a, #0x04
      0008B0 DD 77 FA         [19] 1391 	ld	-6 (ix), a
      0008B3 DD 36 FB 00      [19] 1392 	ld	-5 (ix), #0x00
                                   1393 ;./alex.c:48: if (keys & PORT_A_KEY_RIGHT)
      0008B7 DD 7E FE         [19] 1394 	ld	a, -2 (ix)
      0008BA E6 08            [ 7] 1395 	and	a, #0x08
      0008BC DD 77 FC         [19] 1396 	ld	-4 (ix), a
      0008BF DD 36 FD 00      [19] 1397 	ld	-3 (ix), #0x00
                                   1398 ;./alex.c:45: if ((keys & PORT_A_KEY_DOWN)){
      0008C3 DD CB FE 4E      [20] 1399 	bit	1, -2 (ix)
      0008C7 28 33            [12] 1400 	jr	Z, 00109$
                                   1401 ;./alex.c:46: if (keys & PORT_A_KEY_LEFT)
      0008C9 AF               [ 4] 1402 	xor	a, a
      0008CA DD B6 FA         [19] 1403 	or	a, -6 (ix)
      0008CD 28 05            [12] 1404 	jr	Z, 00102$
                                   1405 ;./alex.c:47: alex.oriented = 1;
      0008CF 21r07r00         [10] 1406 	ld	hl, #_alex+4
      0008D2 36 01            [10] 1407 	ld	(hl), #0x01
      0008D4                       1408 00102$:
                                   1409 ;./alex.c:48: if (keys & PORT_A_KEY_RIGHT)
      0008D4 AF               [ 4] 1410 	xor	a, a
      0008D5 DD B6 FC         [19] 1411 	or	a, -4 (ix)
      0008D8 28 05            [12] 1412 	jr	Z, 00104$
                                   1413 ;./alex.c:49: alex.oriented = 0;
      0008DA 21r07r00         [10] 1414 	ld	hl, #_alex+4
      0008DD 36 00            [10] 1415 	ld	(hl), #0x00
      0008DF                       1416 00104$:
                                   1417 ;./alex.c:50: if (!alex.oriented)
      0008DF 3Ar07r00         [13] 1418 	ld	a,(#_alex + 4)
                                   1419 ;./alex.c:51: alex.frame = 7;
                                   1420 ;./alex.c:50: if (!alex.oriented)
      0008E2 DD 77 FD         [19] 1421 	ld	-3 (ix), a
      0008E5 B7               [ 4] 1422 	or	a, a
      0008E6 20 07            [12] 1423 	jr	NZ, 00106$
                                   1424 ;./alex.c:51: alex.frame = 7;
      0008E8 21r05r00         [10] 1425 	ld	hl, #(_alex + 2)
      0008EB 36 07            [10] 1426 	ld	(hl), #0x07
      0008ED 18 05            [12] 1427 	jr	00107$
      0008EF                       1428 00106$:
                                   1429 ;./alex.c:53: alex.frame = 15;
      0008EF 21r05r00         [10] 1430 	ld	hl, #(_alex + 2)
      0008F2 36 0F            [10] 1431 	ld	(hl), #0x0f
      0008F4                       1432 00107$:
                                   1433 ;./alex.c:54: alex.lastChangeFrame = 15;
      0008F4 21r06r00         [10] 1434 	ld	hl, #_alex + 3
      0008F7 36 0F            [10] 1435 	ld	(hl), #0x0f
                                   1436 ;./alex.c:55: return; // not move
      0008F9 C3r5Dr0A         [10] 1437 	jp	00146$
      0008FC                       1438 00109$:
                                   1439 ;./alex.c:58: if (keys & PORT_A_KEY_2) {
      0008FC DD CB FE 6E      [20] 1440 	bit	5, -2 (ix)
      000900 28 2A            [12] 1441 	jr	Z, 00116$
                                   1442 ;./alex.c:59: if (alex.y > 100)
      000902 01r04r00         [10] 1443 	ld	bc, #_alex+1
      000905 0A               [ 7] 1444 	ld	a, (bc)
      000906 5F               [ 4] 1445 	ld	e, a
      000907 3E 64            [ 7] 1446 	ld	a, #0x64
      000909 93               [ 4] 1447 	sub	a, e
      00090A 30 09            [12] 1448 	jr	NC, 00111$
                                   1449 ;./alex.c:60: maxSalto = alex.y - 100;
      00090C 7B               [ 4] 1450 	ld	a, e
      00090D 21r02r00         [10] 1451 	ld	hl, #_maxSalto
      000910 C6 9C            [ 7] 1452 	add	a, #0x9c
      000912 77               [ 7] 1453 	ld	(hl), a
      000913 18 05            [12] 1454 	jr	00112$
      000915                       1455 00111$:
                                   1456 ;./alex.c:62: maxSalto = 0;
      000915 21r02r00         [10] 1457 	ld	hl, #_maxSalto
      000918 36 00            [10] 1458 	ld	(hl), #0x00
      00091A                       1459 00112$:
                                   1460 ;./alex.c:63: alex.y--;
      00091A 0A               [ 7] 1461 	ld	a, (bc)
      00091B 3D               [ 4] 1462 	dec	a
      00091C 02               [ 7] 1463 	ld	(bc), a
                                   1464 ;./alex.c:64: alex.y--;
      00091D 3D               [ 4] 1465 	dec	a
      00091E 02               [ 7] 1466 	ld	(bc), a
                                   1467 ;./alex.c:65: PSGSFXPlay(salto_psg, SFX_CHANNEL1);
      00091F 3E 08            [ 7] 1468 	ld	a, #0x08
      000921 F5               [11] 1469 	push	af
      000922 33               [ 6] 1470 	inc	sp
      000923 21r00r00         [10] 1471 	ld	hl, #_salto_psg
      000926 CDr00r00         [17] 1472 	call	_PSGSFXPlay
                                   1473 ;./alex.c:66: return;
      000929 C3r5Dr0A         [10] 1474 	jp	00146$
      00092C                       1475 00116$:
                                   1476 ;./alex.c:68: else if (keys & PORT_A_KEY_1) {
      00092C DD CB FE 66      [20] 1477 	bit	4, -2 (ix)
      000930 28 0A            [12] 1478 	jr	Z, 00117$
                                   1479 ;./alex.c:69: alex.state = PUÑETAZO_SUELO;
      000932 21r08r00         [10] 1480 	ld	hl, #_alex + 5
      000935 36 20            [10] 1481 	ld	(hl), #0x20
                                   1482 ;./alex.c:70: alex.lastChangeFrame = 15;
      000937 21r06r00         [10] 1483 	ld	hl, #_alex + 3
      00093A 36 0F            [10] 1484 	ld	(hl), #0x0f
      00093C                       1485 00117$:
                                   1486 ;./alex.c:72: if(alex.state != PUÑETAZO_SUELO) {
      00093C 21r08r00         [10] 1487 	ld	hl, #(_alex + 5)
      00093F 5E               [ 7] 1488 	ld	e, (hl)
                                   1489 ;./alex.c:77: alex.oriented = 1;
                                   1490 ;./alex.c:78: alex.lastChangeFrame++;
      000940 01r06r00         [10] 1491 	ld	bc, #_alex + 3
                                   1492 ;./alex.c:81: alex.frame++;
                                   1493 ;./alex.c:72: if(alex.state != PUÑETAZO_SUELO) {
      000943 7B               [ 4] 1494 	ld	a, e
      000944 D6 20            [ 7] 1495 	sub	a, #0x20
      000946 CArDDr09         [10] 1496 	jp	Z,00144$
                                   1497 ;./alex.c:73: SpriteTableY2[4] = 234;
      000949 2Ar00r03         [16] 1498 	ld	hl, (_SpriteTableY2)
      00094C 11 04 00         [10] 1499 	ld	de, #0x0004
      00094F 19               [11] 1500 	add	hl, de
      000950 36 EA            [10] 1501 	ld	(hl), #0xea
                                   1502 ;./alex.c:74: if ((keys & PORT_A_KEY_LEFT) && alex.x > 8 )
      000952 AF               [ 4] 1503 	xor	a, a
      000953 DD B6 FA         [19] 1504 	or	a, -6 (ix)
      000956 28 3A            [12] 1505 	jr	Z, 00135$
      000958 21r03r00         [10] 1506 	ld	hl, #_alex
      00095B 5E               [ 7] 1507 	ld	e, (hl)
      00095C 3E 08            [ 7] 1508 	ld	a, #0x08
      00095E 93               [ 4] 1509 	sub	a, e
      00095F 30 31            [12] 1510 	jr	NC, 00135$
                                   1511 ;./alex.c:76: alex.x -= 1;
      000961 1D               [ 4] 1512 	dec	e
      000962 21r03r00         [10] 1513 	ld	hl, #_alex
      000965 73               [ 7] 1514 	ld	(hl), e
                                   1515 ;./alex.c:77: alex.oriented = 1;
      000966 21r07r00         [10] 1516 	ld	hl, #(_alex + 4)
      000969 36 01            [10] 1517 	ld	(hl), #0x01
                                   1518 ;./alex.c:78: alex.lastChangeFrame++;
      00096B 0A               [ 7] 1519 	ld	a, (bc)
      00096C 3C               [ 4] 1520 	inc	a
      00096D 02               [ 7] 1521 	ld	(bc), a
                                   1522 ;./alex.c:79: if (alex.lastChangeFrame == 11) {
      00096E D6 0B            [ 7] 1523 	sub	a, #0x0b
      000970 20 09            [12] 1524 	jr	NZ, 00119$
                                   1525 ;./alex.c:80: alex.lastChangeFrame = 0;
      000972 AF               [ 4] 1526 	xor	a, a
      000973 02               [ 7] 1527 	ld	(bc), a
                                   1528 ;./alex.c:81: alex.frame++;
      000974 3Ar05r00         [13] 1529 	ld	a, (#(_alex + 2) + 0)
      000977 3C               [ 4] 1530 	inc	a
      000978 32r05r00         [13] 1531 	ld	(#(_alex + 2)),a
      00097B                       1532 00119$:
                                   1533 ;./alex.c:83: if (alex.frame > 11 || alex.frame < 8)
      00097B 21r05r00         [10] 1534 	ld	hl, #(_alex + 2)
      00097E 4E               [ 7] 1535 	ld	c, (hl)
      00097F 3E 0B            [ 7] 1536 	ld	a, #0x0b
      000981 91               [ 4] 1537 	sub	a, c
      000982 38 06            [12] 1538 	jr	C, 00120$
      000984 79               [ 4] 1539 	ld	a, c
      000985 D6 08            [ 7] 1540 	sub	a, #0x08
      000987 D2r5Dr0A         [10] 1541 	jp	NC, 00146$
      00098A                       1542 00120$:
                                   1543 ;./alex.c:84: alex.frame = 8;
      00098A 21r05r00         [10] 1544 	ld	hl, #(_alex + 2)
      00098D 36 08            [10] 1545 	ld	(hl), #0x08
      00098F C3r5Dr0A         [10] 1546 	jp	00146$
      000992                       1547 00135$:
                                   1548 ;./alex.c:86: else if ((keys & PORT_A_KEY_RIGHT) && alex.x <240)
      000992 AF               [ 4] 1549 	xor	a, a
      000993 DD B6 FC         [19] 1550 	or	a, -4 (ix)
      000996 28 32            [12] 1551 	jr	Z, 00131$
      000998 3Ar03r00         [13] 1552 	ld	a, (#_alex + 0)
      00099B FE F0            [ 7] 1553 	cp	a, #0xf0
      00099D 30 2B            [12] 1554 	jr	NC, 00131$
                                   1555 ;./alex.c:88: alex.x += 1;
      00099F 3C               [ 4] 1556 	inc	a
      0009A0 32r03r00         [13] 1557 	ld	(#_alex),a
                                   1558 ;./alex.c:89: alex.oriented = 0;
      0009A3 21r07r00         [10] 1559 	ld	hl, #(_alex + 4)
      0009A6 36 00            [10] 1560 	ld	(hl), #0x00
                                   1561 ;./alex.c:90: alex.lastChangeFrame++;
      0009A8 0A               [ 7] 1562 	ld	a, (bc)
      0009A9 3C               [ 4] 1563 	inc	a
      0009AA 02               [ 7] 1564 	ld	(bc), a
                                   1565 ;./alex.c:91: if (alex.lastChangeFrame == 11) {
      0009AB D6 0B            [ 7] 1566 	sub	a, #0x0b
      0009AD 20 09            [12] 1567 	jr	NZ, 00124$
                                   1568 ;./alex.c:92: alex.lastChangeFrame = 0;
      0009AF AF               [ 4] 1569 	xor	a, a
      0009B0 02               [ 7] 1570 	ld	(bc), a
                                   1571 ;./alex.c:93: alex.frame++;
      0009B1 3Ar05r00         [13] 1572 	ld	a, (#(_alex + 2) + 0)
      0009B4 3C               [ 4] 1573 	inc	a
      0009B5 32r05r00         [13] 1574 	ld	(#(_alex + 2)),a
      0009B8                       1575 00124$:
                                   1576 ;./alex.c:95: if (alex.frame > 3 || alex.frame < 0)
      0009B8 21r05r00         [10] 1577 	ld	hl, #(_alex + 2)
      0009BB 4E               [ 7] 1578 	ld	c, (hl)
      0009BC 3E 03            [ 7] 1579 	ld	a, #0x03
      0009BE 91               [ 4] 1580 	sub	a, c
      0009BF D2r5Dr0A         [10] 1581 	jp	NC, 00146$
                                   1582 ;./alex.c:96: alex.frame = 0;
      0009C2 21r05r00         [10] 1583 	ld	hl, #(_alex + 2)
      0009C5 36 00            [10] 1584 	ld	(hl), #0x00
      0009C7 C3r5Dr0A         [10] 1585 	jp	00146$
      0009CA                       1586 00131$:
                                   1587 ;./alex.c:100: alex.frame = 4;
      0009CA 21r05r00         [10] 1588 	ld	hl, #(_alex + 2)
      0009CD 36 04            [10] 1589 	ld	(hl), #0x04
                                   1590 ;./alex.c:101: if (alex.oriented)
      0009CF 3Ar07r00         [13] 1591 	ld	a, (#(_alex + 4) + 0)
      0009D2 B7               [ 4] 1592 	or	a, a
      0009D3 28 02            [12] 1593 	jr	Z, 00129$
                                   1594 ;./alex.c:102: alex.frame = 12;
      0009D5 36 0C            [10] 1595 	ld	(hl), #0x0c
      0009D7                       1596 00129$:
                                   1597 ;./alex.c:103: alex.lastChangeFrame = 10;
      0009D7 3E 0A            [ 7] 1598 	ld	a, #0x0a
      0009D9 02               [ 7] 1599 	ld	(bc), a
      0009DA C3r5Dr0A         [10] 1600 	jp	00146$
      0009DD                       1601 00144$:
                                   1602 ;./alex.c:107: if (!alex.oriented) {
                                   1603 ;./alex.c:112: SpriteTableY2[4] = alex.y + 9;
                                   1604 ;./alex.c:107: if (!alex.oriented) {
      0009DD 3Ar07r00         [13] 1605 	ld	a, (#(_alex + 4) + 0)
      0009E0 B7               [ 4] 1606 	or	a, a
      0009E1 20 34            [12] 1607 	jr	NZ, 00139$
                                   1608 ;./alex.c:108: alex.frame = 5;
      0009E3 21r05r00         [10] 1609 	ld	hl, #(_alex + 2)
      0009E6 36 05            [10] 1610 	ld	(hl), #0x05
                                   1611 ;./alex.c:110: SpriteTableXN2[8] = alex.x + 16;
      0009E8 3Ar02r03         [13] 1612 	ld	a, (_SpriteTableXN2+0)
      0009EB C6 08            [ 7] 1613 	add	a, #0x08
      0009ED 5F               [ 4] 1614 	ld	e, a
      0009EE 3Ar03r03         [13] 1615 	ld	a, (_SpriteTableXN2+1)
      0009F1 CE 00            [ 7] 1616 	adc	a, #0x00
      0009F3 57               [ 4] 1617 	ld	d, a
      0009F4 3Ar03r00         [13] 1618 	ld	a, (#_alex + 0)
      0009F7 C6 10            [ 7] 1619 	add	a, #0x10
      0009F9 12               [ 7] 1620 	ld	(de), a
                                   1621 ;./alex.c:111: SpriteTableXN2[9] = 9;
      0009FA 2Ar02r03         [16] 1622 	ld	hl, (_SpriteTableXN2)
      0009FD 11 09 00         [10] 1623 	ld	de, #0x0009
      000A00 19               [11] 1624 	add	hl, de
      000A01 36 09            [10] 1625 	ld	(hl), #0x09
                                   1626 ;./alex.c:112: SpriteTableY2[4] = alex.y + 9;
      000A03 3Ar00r03         [13] 1627 	ld	a, (_SpriteTableY2+0)
      000A06 C6 04            [ 7] 1628 	add	a, #0x04
      000A08 5F               [ 4] 1629 	ld	e, a
      000A09 3Ar01r03         [13] 1630 	ld	a, (_SpriteTableY2+1)
      000A0C CE 00            [ 7] 1631 	adc	a, #0x00
      000A0E 57               [ 4] 1632 	ld	d, a
      000A0F 3Ar04r00         [13] 1633 	ld	a, (#(_alex + 1) + 0)
      000A12 C6 09            [ 7] 1634 	add	a, #0x09
      000A14 12               [ 7] 1635 	ld	(de), a
      000A15 18 32            [12] 1636 	jr	00140$
      000A17                       1637 00139$:
                                   1638 ;./alex.c:115: alex.frame = 13;
      000A17 21r05r00         [10] 1639 	ld	hl, #(_alex + 2)
      000A1A 36 0D            [10] 1640 	ld	(hl), #0x0d
                                   1641 ;./alex.c:117: SpriteTableXN2[8] = alex.x - 8;
      000A1C 3Ar02r03         [13] 1642 	ld	a, (_SpriteTableXN2+0)
      000A1F C6 08            [ 7] 1643 	add	a, #0x08
      000A21 5F               [ 4] 1644 	ld	e, a
      000A22 3Ar03r03         [13] 1645 	ld	a, (_SpriteTableXN2+1)
      000A25 CE 00            [ 7] 1646 	adc	a, #0x00
      000A27 57               [ 4] 1647 	ld	d, a
      000A28 3Ar03r00         [13] 1648 	ld	a, (#_alex + 0)
      000A2B C6 F8            [ 7] 1649 	add	a, #0xf8
      000A2D 12               [ 7] 1650 	ld	(de), a
                                   1651 ;./alex.c:118: SpriteTableXN2[9] = 11;
      000A2E 2Ar02r03         [16] 1652 	ld	hl, (_SpriteTableXN2)
      000A31 11 09 00         [10] 1653 	ld	de, #0x0009
      000A34 19               [11] 1654 	add	hl, de
      000A35 36 0B            [10] 1655 	ld	(hl), #0x0b
                                   1656 ;./alex.c:119: SpriteTableY2[4] = alex.y + 9;
      000A37 3Ar00r03         [13] 1657 	ld	a, (_SpriteTableY2+0)
      000A3A C6 04            [ 7] 1658 	add	a, #0x04
      000A3C 5F               [ 4] 1659 	ld	e, a
      000A3D 3Ar01r03         [13] 1660 	ld	a, (_SpriteTableY2+1)
      000A40 CE 00            [ 7] 1661 	adc	a, #0x00
      000A42 57               [ 4] 1662 	ld	d, a
      000A43 3Ar04r00         [13] 1663 	ld	a, (#(_alex + 1) + 0)
      000A46 C6 09            [ 7] 1664 	add	a, #0x09
      000A48 12               [ 7] 1665 	ld	(de), a
      000A49                       1666 00140$:
                                   1667 ;./alex.c:121: alex.lastChangeFrame--;
      000A49 0A               [ 7] 1668 	ld	a, (bc)
      000A4A 3D               [ 4] 1669 	dec	a
      000A4B 02               [ 7] 1670 	ld	(bc), a
                                   1671 ;./alex.c:122: if(!alex.lastChangeFrame) {
      000A4C B7               [ 4] 1672 	or	a, a
      000A4D 20 0E            [12] 1673 	jr	NZ, 00146$
                                   1674 ;./alex.c:123: alex.state = 0;
      000A4F 21r08r00         [10] 1675 	ld	hl, #(_alex + 5)
      000A52 36 00            [10] 1676 	ld	(hl), #0x00
                                   1677 ;./alex.c:124: SpriteTableY2[4] = 234;
      000A54 2Ar00r03         [16] 1678 	ld	hl, (_SpriteTableY2)
      000A57 11 04 00         [10] 1679 	ld	de, #0x0004
      000A5A 19               [11] 1680 	add	hl, de
      000A5B 36 EA            [10] 1681 	ld	(hl), #0xea
      000A5D                       1682 00146$:
                                   1683 ;./alex.c:127: }
      000A5D DD F9            [10] 1684 	ld	sp, ix
      000A5F DD E1            [14] 1685 	pop	ix
      000A61 C9               [10] 1686 	ret
                                   1687 ;./alex.c:129: void moveAlexAire(int keys, unsigned char puedeSubir, unsigned char puedeDerecha, unsigned char puedeIzquieda) {
                                   1688 ;	---------------------------------
                                   1689 ; Function moveAlexAire
                                   1690 ; ---------------------------------
      000A62                       1691 _moveAlexAire::
      000A62 DD E5            [15] 1692 	push	ix
      000A64 DD 21 00 00      [14] 1693 	ld	ix,#0
      000A68 DD 39            [15] 1694 	add	ix,sp
      000A6A F5               [11] 1695 	push	af
      000A6B 3B               [ 6] 1696 	dec	sp
      000A6C DD 75 FE         [19] 1697 	ld	-2 (ix), l
      000A6F DD 74 FF         [19] 1698 	ld	-1 (ix), h
                                   1699 ;./alex.c:130: if (alex.y > maxSalto) {
      000A72 21r04r00         [10] 1700 	ld	hl, #(_alex + 1)
      000A75 46               [ 7] 1701 	ld	b, (hl)
                                   1702 ;./alex.c:131: alex.y -= 2;
      000A76 48               [ 4] 1703 	ld	c, b
                                   1704 ;./alex.c:130: if (alex.y > maxSalto) {
      000A77 3Ar02r00         [13] 1705 	ld	a, (_maxSalto+0)
      000A7A 90               [ 4] 1706 	sub	a, b
      000A7B 30 08            [12] 1707 	jr	NC, 00102$
                                   1708 ;./alex.c:131: alex.y -= 2;
      000A7D 0D               [ 4] 1709 	dec	c
      000A7E 0D               [ 4] 1710 	dec	c
      000A7F 21r04r00         [10] 1711 	ld	hl, #(_alex + 1)
      000A82 71               [ 7] 1712 	ld	(hl), c
      000A83 18 0E            [12] 1713 	jr	00103$
      000A85                       1714 00102$:
                                   1715 ;./alex.c:134: alex.y += 2; // bajando
      000A85 0C               [ 4] 1716 	inc	c
      000A86 0C               [ 4] 1717 	inc	c
      000A87 21r04r00         [10] 1718 	ld	hl, #(_alex + 1)
      000A8A 71               [ 7] 1719 	ld	(hl), c
                                   1720 ;./alex.c:135: maxSalto = 255;
      000A8B FD 21r02r00      [14] 1721 	ld	iy, #_maxSalto
      000A8F FD 36 00 FF      [19] 1722 	ld	0 (iy), #0xff
      000A93                       1723 00103$:
                                   1724 ;./alex.c:138: if (alex.state != PUÑETAZO_SALTANDO)
                                   1725 ;./alex.c:139: alex.oriented = 1;
                                   1726 ;./alex.c:137: if (keys & PORT_A_KEY_LEFT) {
      000A93 DD CB FE 56      [20] 1727 	bit	2, -2 (ix)
      000A97 28 1A            [12] 1728 	jr	Z, 00109$
                                   1729 ;./alex.c:138: if (alex.state != PUÑETAZO_SALTANDO)
      000A99 3Ar08r00         [13] 1730 	ld	a, (#(_alex + 5) + 0)
      000A9C D6 10            [ 7] 1731 	sub	a, #0x10
      000A9E 28 05            [12] 1732 	jr	Z, 00105$
                                   1733 ;./alex.c:139: alex.oriented = 1;
      000AA0 21r07r00         [10] 1734 	ld	hl, #(_alex + 4)
      000AA3 36 01            [10] 1735 	ld	(hl), #0x01
      000AA5                       1736 00105$:
                                   1737 ;./alex.c:140: if (puedeIzquieda)
      000AA5 DD 7E 06         [19] 1738 	ld	a, 6 (ix)
      000AA8 B7               [ 4] 1739 	or	a, a
      000AA9 28 08            [12] 1740 	jr	Z, 00109$
                                   1741 ;./alex.c:141: alex.x -= 2;
      000AAB 3Ar03r00         [13] 1742 	ld	a, (#_alex + 0)
      000AAE 3D               [ 4] 1743 	dec	a
      000AAF 3D               [ 4] 1744 	dec	a
      000AB0 32r03r00         [13] 1745 	ld	(#_alex),a
      000AB3                       1746 00109$:
                                   1747 ;./alex.c:143: if (keys & PORT_A_KEY_RIGHT) {
      000AB3 DD CB FE 5E      [20] 1748 	bit	3, -2 (ix)
      000AB7 28 1A            [12] 1749 	jr	Z, 00115$
                                   1750 ;./alex.c:144: if (alex.state != PUÑETAZO_SALTANDO)
      000AB9 3Ar08r00         [13] 1751 	ld	a, (#(_alex + 5) + 0)
      000ABC D6 10            [ 7] 1752 	sub	a, #0x10
      000ABE 28 05            [12] 1753 	jr	Z, 00111$
                                   1754 ;./alex.c:145: alex.oriented = 0;
      000AC0 21r07r00         [10] 1755 	ld	hl, #(_alex + 4)
      000AC3 36 00            [10] 1756 	ld	(hl), #0x00
      000AC5                       1757 00111$:
                                   1758 ;./alex.c:146: if (puedeDerecha)
      000AC5 DD 7E 05         [19] 1759 	ld	a, 5 (ix)
      000AC8 B7               [ 4] 1760 	or	a, a
      000AC9 28 08            [12] 1761 	jr	Z, 00115$
                                   1762 ;./alex.c:147: alex.x += 2;
      000ACB 3Ar03r00         [13] 1763 	ld	a, (#_alex + 0)
      000ACE C6 02            [ 7] 1764 	add	a, #0x02
      000AD0 32r03r00         [13] 1765 	ld	(#_alex),a
      000AD3                       1766 00115$:
                                   1767 ;./alex.c:149: if (alex.state == PUÑETAZO_SALTANDO) {
      000AD3 21r08r00         [10] 1768 	ld	hl, #(_alex + 5)
      000AD6 4E               [ 7] 1769 	ld	c, (hl)
                                   1770 ;./alex.c:150: alex.lastChangeFrame--;
                                   1771 ;./alex.c:156: alex.frame = 5;
                                   1772 ;./alex.c:149: if (alex.state == PUÑETAZO_SALTANDO) {
      000AD7 79               [ 4] 1773 	ld	a, c
      000AD8 D6 10            [ 7] 1774 	sub	a, #0x10
      000ADA C2r66r0B         [10] 1775 	jp	NZ,00127$
                                   1776 ;./alex.c:150: alex.lastChangeFrame--;
      000ADD 21r06r00         [10] 1777 	ld	hl, #(_alex + 3)
      000AE0 4E               [ 7] 1778 	ld	c, (hl)
      000AE1 0D               [ 4] 1779 	dec	c
      000AE2 21r06r00         [10] 1780 	ld	hl, #(_alex + 3)
                                   1781 ;./alex.c:151: if  (!alex.lastChangeFrame) {
      000AE5 79               [ 4] 1782 	ld	a,c
      000AE6 77               [ 7] 1783 	ld	(hl),a
      000AE7 B7               [ 4] 1784 	or	a, a
      000AE8 20 0E            [12] 1785 	jr	NZ, 00117$
                                   1786 ;./alex.c:152: alex.state = 0;
      000AEA 21r08r00         [10] 1787 	ld	hl, #(_alex + 5)
      000AED 36 00            [10] 1788 	ld	(hl), #0x00
                                   1789 ;./alex.c:153: SpriteTableY2[4] = 234;
      000AEF 2Ar00r03         [16] 1790 	ld	hl, (_SpriteTableY2)
      000AF2 11 04 00         [10] 1791 	ld	de, #0x0004
      000AF5 19               [11] 1792 	add	hl, de
      000AF6 36 EA            [10] 1793 	ld	(hl), #0xea
      000AF8                       1794 00117$:
                                   1795 ;./alex.c:155: if (!alex.oriented) {
      000AF8 3Ar07r00         [13] 1796 	ld	a, (#(_alex + 4) + 0)
      000AFB B7               [ 4] 1797 	or	a, a
      000AFC 20 34            [12] 1798 	jr	NZ, 00119$
                                   1799 ;./alex.c:156: alex.frame = 5;
      000AFE 21r05r00         [10] 1800 	ld	hl, #(_alex + 2)
      000B01 36 05            [10] 1801 	ld	(hl), #0x05
                                   1802 ;./alex.c:158: SpriteTableXN2[8] = alex.x + 16;
      000B03 3Ar02r03         [13] 1803 	ld	a, (_SpriteTableXN2+0)
      000B06 C6 08            [ 7] 1804 	add	a, #0x08
      000B08 4F               [ 4] 1805 	ld	c, a
      000B09 3Ar03r03         [13] 1806 	ld	a, (_SpriteTableXN2+1)
      000B0C CE 00            [ 7] 1807 	adc	a, #0x00
      000B0E 47               [ 4] 1808 	ld	b, a
      000B0F 3Ar03r00         [13] 1809 	ld	a, (#_alex + 0)
      000B12 C6 10            [ 7] 1810 	add	a, #0x10
      000B14 02               [ 7] 1811 	ld	(bc), a
                                   1812 ;./alex.c:159: SpriteTableXN2[9] = 9;
      000B15 2Ar02r03         [16] 1813 	ld	hl, (_SpriteTableXN2)
      000B18 11 09 00         [10] 1814 	ld	de, #0x0009
      000B1B 19               [11] 1815 	add	hl, de
      000B1C 36 09            [10] 1816 	ld	(hl), #0x09
                                   1817 ;./alex.c:160: SpriteTableY2[4] = alex.y + 9;
      000B1E 3Ar00r03         [13] 1818 	ld	a, (_SpriteTableY2+0)
      000B21 C6 04            [ 7] 1819 	add	a, #0x04
      000B23 4F               [ 4] 1820 	ld	c, a
      000B24 3Ar01r03         [13] 1821 	ld	a, (_SpriteTableY2+1)
      000B27 CE 00            [ 7] 1822 	adc	a, #0x00
      000B29 47               [ 4] 1823 	ld	b, a
      000B2A 3Ar04r00         [13] 1824 	ld	a, (#(_alex + 1) + 0)
      000B2D C6 09            [ 7] 1825 	add	a, #0x09
      000B2F 02               [ 7] 1826 	ld	(bc), a
      000B30 18 62            [12] 1827 	jr	00129$
      000B32                       1828 00119$:
                                   1829 ;./alex.c:163: alex.frame = 13;
      000B32 21r05r00         [10] 1830 	ld	hl, #(_alex + 2)
      000B35 36 0D            [10] 1831 	ld	(hl), #0x0d
                                   1832 ;./alex.c:165: SpriteTableXN2[8] = alex.x - 8;
      000B37 3Ar02r03         [13] 1833 	ld	a, (_SpriteTableXN2+0)
      000B3A C6 08            [ 7] 1834 	add	a, #0x08
      000B3C 4F               [ 4] 1835 	ld	c, a
      000B3D 3Ar03r03         [13] 1836 	ld	a, (_SpriteTableXN2+1)
      000B40 CE 00            [ 7] 1837 	adc	a, #0x00
      000B42 47               [ 4] 1838 	ld	b, a
      000B43 3Ar03r00         [13] 1839 	ld	a, (#_alex + 0)
      000B46 C6 F8            [ 7] 1840 	add	a, #0xf8
      000B48 02               [ 7] 1841 	ld	(bc), a
                                   1842 ;./alex.c:166: SpriteTableXN2[9] = 11;
      000B49 2Ar02r03         [16] 1843 	ld	hl, (_SpriteTableXN2)
      000B4C 11 09 00         [10] 1844 	ld	de, #0x0009
      000B4F 19               [11] 1845 	add	hl, de
      000B50 36 0B            [10] 1846 	ld	(hl), #0x0b
                                   1847 ;./alex.c:167: SpriteTableY2[4] = alex.y + 9;
      000B52 3Ar00r03         [13] 1848 	ld	a, (_SpriteTableY2+0)
      000B55 C6 04            [ 7] 1849 	add	a, #0x04
      000B57 4F               [ 4] 1850 	ld	c, a
      000B58 3Ar01r03         [13] 1851 	ld	a, (_SpriteTableY2+1)
      000B5B CE 00            [ 7] 1852 	adc	a, #0x00
      000B5D 47               [ 4] 1853 	ld	b, a
      000B5E 3Ar04r00         [13] 1854 	ld	a, (#(_alex + 1) + 0)
      000B61 C6 09            [ 7] 1855 	add	a, #0x09
      000B63 02               [ 7] 1856 	ld	(bc), a
      000B64 18 2E            [12] 1857 	jr	00129$
      000B66                       1858 00127$:
                                   1859 ;./alex.c:171: SpriteTableY2[4] = 234;
      000B66 2Ar00r03         [16] 1860 	ld	hl, (_SpriteTableY2)
      000B69 11 04 00         [10] 1861 	ld	de, #0x0004
      000B6C 19               [11] 1862 	add	hl, de
      000B6D 36 EA            [10] 1863 	ld	(hl), #0xea
                                   1864 ;./alex.c:172: if (!alex.oriented)
      000B6F 3Ar07r00         [13] 1865 	ld	a, (#(_alex + 4) + 0)
      000B72 DD 77 FD         [19] 1866 	ld	-3 (ix), a
      000B75 B7               [ 4] 1867 	or	a, a
      000B76 20 07            [12] 1868 	jr	NZ, 00122$
                                   1869 ;./alex.c:173: alex.frame = 6;
      000B78 21r05r00         [10] 1870 	ld	hl, #(_alex + 2)
      000B7B 36 06            [10] 1871 	ld	(hl), #0x06
      000B7D 18 05            [12] 1872 	jr	00123$
      000B7F                       1873 00122$:
                                   1874 ;./alex.c:175: alex.frame = 14;
      000B7F 21r05r00         [10] 1875 	ld	hl, #(_alex + 2)
      000B82 36 0E            [10] 1876 	ld	(hl), #0x0e
      000B84                       1877 00123$:
                                   1878 ;./alex.c:176: if (keys & PORT_A_KEY_1) {
      000B84 DD CB FE 66      [20] 1879 	bit	4, -2 (ix)
      000B88 28 0A            [12] 1880 	jr	Z, 00129$
                                   1881 ;./alex.c:177: alex.state = PUÑETAZO_SALTANDO;
      000B8A 21r08r00         [10] 1882 	ld	hl, #(_alex + 5)
      000B8D 36 10            [10] 1883 	ld	(hl), #0x10
                                   1884 ;./alex.c:178: alex.lastChangeFrame = 20;
      000B8F 21r06r00         [10] 1885 	ld	hl, #(_alex + 3)
      000B92 36 14            [10] 1886 	ld	(hl), #0x14
      000B94                       1887 00129$:
                                   1888 ;./alex.c:182: }
      000B94 DD F9            [10] 1889 	ld	sp, ix
      000B96 DD E1            [14] 1890 	pop	ix
      000B98 E1               [10] 1891 	pop	hl
      000B99 F1               [10] 1892 	pop	af
      000B9A 33               [ 6] 1893 	inc	sp
      000B9B E9               [ 4] 1894 	jp	(hl)
                                   1895 ;./alex.c:186: void drawAlex() {
                                   1896 ;	---------------------------------
                                   1897 ; Function drawAlex
                                   1898 ; ---------------------------------
      000B9C                       1899 _drawAlex::
                                   1900 ;./alex.c:187: SpriteTableXN2[0] = alex.x;
      000B9C ED 5Br02r03      [20] 1901 	ld	de, (_SpriteTableXN2)
      000BA0 01r03r00         [10] 1902 	ld	bc, #_alex+0
      000BA3 0A               [ 7] 1903 	ld	a, (bc)
      000BA4 12               [ 7] 1904 	ld	(de), a
                                   1905 ;./alex.c:188: SpriteTableXN2[2] = alex.x + 8;
      000BA5 2Ar02r03         [16] 1906 	ld	hl, (_SpriteTableXN2)
      000BA8 23               [ 6] 1907 	inc	hl
      000BA9 23               [ 6] 1908 	inc	hl
      000BAA 0A               [ 7] 1909 	ld	a, (bc)
      000BAB C6 08            [ 7] 1910 	add	a, #0x08
      000BAD 77               [ 7] 1911 	ld	(hl), a
                                   1912 ;./alex.c:189: SpriteTableXN2[4] = alex.x;
      000BAE 2Ar02r03         [16] 1913 	ld	hl, (_SpriteTableXN2)
      000BB1 11 04 00         [10] 1914 	ld	de, #0x0004
      000BB4 19               [11] 1915 	add	hl, de
      000BB5 0A               [ 7] 1916 	ld	a, (bc)
      000BB6 77               [ 7] 1917 	ld	(hl), a
                                   1918 ;./alex.c:190: SpriteTableXN2[6] = alex.x + 8;
      000BB7 2Ar02r03         [16] 1919 	ld	hl, (_SpriteTableXN2)
      000BBA 11 06 00         [10] 1920 	ld	de, #0x0006
      000BBD 19               [11] 1921 	add	hl, de
      000BBE 0A               [ 7] 1922 	ld	a, (bc)
      000BBF C6 08            [ 7] 1923 	add	a, #0x08
      000BC1 77               [ 7] 1924 	ld	(hl), a
                                   1925 ;./alex.c:191: SpriteTableY2[0] = alex.y;
      000BC2 ED 5Br00r03      [20] 1926 	ld	de, (_SpriteTableY2)
      000BC6 01r04r00         [10] 1927 	ld	bc, #_alex + 1
      000BC9 0A               [ 7] 1928 	ld	a, (bc)
      000BCA 12               [ 7] 1929 	ld	(de), a
                                   1930 ;./alex.c:192: SpriteTableY2[1] = alex.y;
      000BCB 2Ar00r03         [16] 1931 	ld	hl, (_SpriteTableY2)
      000BCE 23               [ 6] 1932 	inc	hl
      000BCF 0A               [ 7] 1933 	ld	a, (bc)
      000BD0 77               [ 7] 1934 	ld	(hl), a
                                   1935 ;./alex.c:193: SpriteTableY2[2] = alex.y + 16;
      000BD1 2Ar00r03         [16] 1936 	ld	hl, (_SpriteTableY2)
      000BD4 23               [ 6] 1937 	inc	hl
      000BD5 23               [ 6] 1938 	inc	hl
      000BD6 0A               [ 7] 1939 	ld	a, (bc)
      000BD7 C6 10            [ 7] 1940 	add	a, #0x10
      000BD9 77               [ 7] 1941 	ld	(hl), a
                                   1942 ;./alex.c:194: SpriteTableY2[3] = alex.y + 16;
      000BDA 2Ar00r03         [16] 1943 	ld	hl, (_SpriteTableY2)
      000BDD 23               [ 6] 1944 	inc	hl
      000BDE 23               [ 6] 1945 	inc	hl
      000BDF 23               [ 6] 1946 	inc	hl
      000BE0 0A               [ 7] 1947 	ld	a, (bc)
      000BE1 C6 10            [ 7] 1948 	add	a, #0x10
      000BE3 77               [ 7] 1949 	ld	(hl), a
                                   1950 ;./alex.c:195: if (alex.frame != lastFrame) {
      000BE4 21r05r00         [10] 1951 	ld	hl, #(_alex + 2)
      000BE7 5E               [ 7] 1952 	ld	e, (hl)
      000BE8 3Ar0Dr00         [13] 1953 	ld	a, (_lastFrame+0)
      000BEB 93               [ 4] 1954 	sub	a, e
      000BEC C8               [11] 1955 	ret	Z
                                   1956 ;./alex.c:196: SMS_loadTiles(alex.sprite->data + alex.frame *256, alex.sprite->beginVRAM, 255);
      000BED ED 4Br0Br00      [20] 1957 	ld	bc, (#_alex + 8)
      000BF1 C5               [11] 1958 	push	bc
      000BF2 FD E1            [14] 1959 	pop	iy
      000BF4 FD 6E 07         [19] 1960 	ld	l, 7 (iy)
                                   1961 ;	spillPairReg hl
      000BF7 FD 66 08         [19] 1962 	ld	h, 8 (iy)
                                   1963 ;	spillPairReg hl
      000BFA 53               [ 4] 1964 	ld	d, e
      000BFB 1E 00            [ 7] 1965 	ld	e, #0x00
      000BFD 19               [11] 1966 	add	hl, de
      000BFE EB               [ 4] 1967 	ex	de, hl
      000BFF 21 04 00         [10] 1968 	ld	hl, #4
      000C02 09               [11] 1969 	add	hl, bc
      000C03 7E               [ 7] 1970 	ld	a, (hl)
      000C04 23               [ 6] 1971 	inc	hl
      000C05 66               [ 7] 1972 	ld	h, (hl)
                                   1973 ;	spillPairReg hl
      000C06 6F               [ 4] 1974 	ld	l, a
                                   1975 ;	spillPairReg hl
                                   1976 ;	spillPairReg hl
      000C07 29               [11] 1977 	add	hl, hl
      000C08 29               [11] 1978 	add	hl, hl
      000C09 29               [11] 1979 	add	hl, hl
      000C0A 29               [11] 1980 	add	hl, hl
      000C0B 29               [11] 1981 	add	hl, hl
      000C0C CB F4            [ 8] 1982 	set	6, h
      000C0E 01 FF 00         [10] 1983 	ld	bc, #0x00ff
      000C11 C5               [11] 1984 	push	bc
      000C12 CDr00r00         [17] 1985 	call	_SMS_VRAMmemcpy
                                   1986 ;./alex.c:197: lastFrame = alex.frame;
      000C15 21r05r00         [10] 1987 	ld	hl, #(_alex + 2)
      000C18 7E               [ 7] 1988 	ld	a, (hl)
      000C19 32r0Dr00         [13] 1989 	ld	(_lastFrame+0), a
                                   1990 ;./alex.c:199: }
      000C1C C9               [10] 1991 	ret
                                   1992 ;./alex.c:202: void moveAlex(int keys) {
                                   1993 ;	---------------------------------
                                   1994 ; Function moveAlex
                                   1995 ; ---------------------------------
      000C1D                       1996 _moveAlex::
      000C1D DD E5            [15] 1997 	push	ix
      000C1F DD 21 00 00      [14] 1998 	ld	ix,#0
      000C23 DD 39            [15] 1999 	add	ix,sp
      000C25 3B               [ 6] 2000 	dec	sp
                                   2001 ;./alex.c:203: unsigned char puedeBajar = canDown();
      000C26 E5               [11] 2002 	push	hl
      000C27 CDr72r08         [17] 2003 	call	_canDown
      000C2A 4F               [ 4] 2004 	ld	c, a
      000C2B C5               [11] 2005 	push	bc
      000C2C CDr66r08         [17] 2006 	call	_canUp
      000C2F DD 77 FF         [19] 2007 	ld	-1 (ix), a
      000C32 CDr8Cr08         [17] 2008 	call	_canRight
      000C35 5F               [ 4] 2009 	ld	e, a
      000C36 D5               [11] 2010 	push	de
      000C37 CDr80r08         [17] 2011 	call	_canLeft
      000C3A D1               [10] 2012 	pop	de
      000C3B C1               [10] 2013 	pop	bc
      000C3C E1               [10] 2014 	pop	hl
                                   2015 ;./alex.c:207: if (puedeBajar)
      000C3D 0C               [ 4] 2016 	inc	c
      000C3E 0D               [ 4] 2017 	dec	c
      000C3F 28 0C            [12] 2018 	jr	Z, 00102$
                                   2019 ;./alex.c:208: moveAlexAire(keys, puedeSubir, puedeDerecha, puedeIzquierda);
      000C41 57               [ 4] 2020 	ld	d,a
      000C42 D5               [11] 2021 	push	de
      000C43 DD 7E FF         [19] 2022 	ld	a, -1 (ix)
      000C46 F5               [11] 2023 	push	af
      000C47 33               [ 6] 2024 	inc	sp
      000C48 CDr62r0A         [17] 2025 	call	_moveAlexAire
      000C4B 18 03            [12] 2026 	jr	00103$
      000C4D                       2027 00102$:
                                   2028 ;./alex.c:210: moveAlexSuelo(keys);
      000C4D CDr9Ar08         [17] 2029 	call	_moveAlexSuelo
      000C50                       2030 00103$:
                                   2031 ;./alex.c:211: drawAlex();
      000C50 CDr9Cr0B         [17] 2032 	call	_drawAlex
                                   2033 ;./alex.c:212: }
      000C53 33               [ 6] 2034 	inc	sp
      000C54 DD E1            [14] 2035 	pop	ix
      000C56 C9               [10] 2036 	ret
                                   2037 ;main.c:20: void inicializaPajaros()
                                   2038 ;	---------------------------------
                                   2039 ; Function inicializaPajaros
                                   2040 ; ---------------------------------
      000C57                       2041 _inicializaPajaros::
      000C57 DD E5            [15] 2042 	push	ix
      000C59 DD 21 00 00      [14] 2043 	ld	ix,#0
      000C5D DD 39            [15] 2044 	add	ix,sp
      000C5F 21 F9 FF         [10] 2045 	ld	hl, #-7
      000C62 39               [11] 2046 	add	hl, sp
      000C63 F9               [ 6] 2047 	ld	sp, hl
                                   2048 ;main.c:23: for (i = 0; i < NUM_PAJAROS; i++)
      000C64 DD 36 FF 00      [19] 2049 	ld	-1 (ix), #0x00
      000C68                       2050 00108$:
                                   2051 ;main.c:25: pajaros[i].x = 15 + 32 * i;
      000C68 DD 4E FF         [19] 2052 	ld	c, -1 (ix)
      000C6B 06 00            [ 7] 2053 	ld	b, #0x00
      000C6D 69               [ 4] 2054 	ld	l, c
      000C6E 60               [ 4] 2055 	ld	h, b
      000C6F 29               [11] 2056 	add	hl, hl
      000C70 29               [11] 2057 	add	hl, hl
      000C71 09               [11] 2058 	add	hl, bc
      000C72 29               [11] 2059 	add	hl, hl
      000C73 11r06r03         [10] 2060 	ld	de, #_pajaros
      000C76 19               [11] 2061 	add	hl, de
      000C77 E3               [19] 2062 	ex	(sp), hl
      000C78 DD 7E FF         [19] 2063 	ld	a, -1 (ix)
      000C7B 0F               [ 4] 2064 	rrca
      000C7C 0F               [ 4] 2065 	rrca
      000C7D 0F               [ 4] 2066 	rrca
      000C7E E6 E0            [ 7] 2067 	and	a, #0xe0
      000C80 C6 0F            [ 7] 2068 	add	a, #0x0f
      000C82 E1               [10] 2069 	pop	hl
      000C83 E5               [11] 2070 	push	hl
      000C84 77               [ 7] 2071 	ld	(hl), a
                                   2072 ;main.c:26: pajaros[i].y = 16 * (i / 2);
      000C85 DD 7E F9         [19] 2073 	ld	a, -7 (ix)
      000C88 C6 01            [ 7] 2074 	add	a, #0x01
      000C8A DD 77 FB         [19] 2075 	ld	-5 (ix), a
      000C8D DD 7E FA         [19] 2076 	ld	a, -6 (ix)
      000C90 CE 00            [ 7] 2077 	adc	a, #0x00
      000C92 DD 77 FC         [19] 2078 	ld	-4 (ix), a
      000C95 DD 4E FF         [19] 2079 	ld	c, -1 (ix)
      000C98 06 00            [ 7] 2080 	ld	b, #0x00
      000C9A DD 71 FD         [19] 2081 	ld	-3 (ix), c
      000C9D DD 70 FE         [19] 2082 	ld	-2 (ix), b
      000CA0 CB 78            [ 8] 2083 	bit	7, b
      000CA2 28 08            [12] 2084 	jr	Z, 00112$
      000CA4 DD 36 FD 01      [19] 2085 	ld	-3 (ix), #0x01
      000CA8 DD 36 FE 00      [19] 2086 	ld	-2 (ix), #0
      000CAC                       2087 00112$:
      000CAC DD 4E FD         [19] 2088 	ld	c, -3 (ix)
      000CAF 1E 00            [ 7] 2089 	ld	e, #0x00
      000CB1 CB 2B            [ 8] 2090 	sra	e
      000CB3 CB 19            [ 8] 2091 	rr	c
      000CB5 79               [ 4] 2092 	ld	a, c
      000CB6 87               [ 4] 2093 	add	a, a
      000CB7 87               [ 4] 2094 	add	a, a
      000CB8 87               [ 4] 2095 	add	a, a
      000CB9 87               [ 4] 2096 	add	a, a
      000CBA C1               [10] 2097 	pop	bc
      000CBB E1               [10] 2098 	pop	hl
      000CBC E5               [11] 2099 	push	hl
      000CBD C5               [11] 2100 	push	bc
      000CBE 77               [ 7] 2101 	ld	(hl), a
                                   2102 ;main.c:27: pajaros[i].lastChangeFrame = i * 3;
      000CBF C1               [10] 2103 	pop	bc
      000CC0 C5               [11] 2104 	push	bc
      000CC1 03               [ 6] 2105 	inc	bc
      000CC2 03               [ 6] 2106 	inc	bc
      000CC3 03               [ 6] 2107 	inc	bc
      000CC4 DD 7E FF         [19] 2108 	ld	a, -1 (ix)
      000CC7 5F               [ 4] 2109 	ld	e, a
      000CC8 87               [ 4] 2110 	add	a, a
      000CC9 83               [ 4] 2111 	add	a, e
      000CCA 02               [ 7] 2112 	ld	(bc), a
                                   2113 ;main.c:28: pajaros[i].initSprite = 255;
      000CCB DD 7E F9         [19] 2114 	ld	a, -7 (ix)
      000CCE C6 06            [ 7] 2115 	add	a, #0x06
      000CD0 5F               [ 4] 2116 	ld	e, a
      000CD1 DD 7E FA         [19] 2117 	ld	a, -6 (ix)
      000CD4 CE 00            [ 7] 2118 	adc	a, #0x00
      000CD6 57               [ 4] 2119 	ld	d, a
      000CD7 3E FF            [ 7] 2120 	ld	a, #0xff
      000CD9 12               [ 7] 2121 	ld	(de), a
                                   2122 ;main.c:30: pajaros[i].x++;
      000CDA E1               [10] 2123 	pop	hl
      000CDB E5               [11] 2124 	push	hl
      000CDC 7E               [ 7] 2125 	ld	a, (hl)
      000CDD 3C               [ 4] 2126 	inc	a
      000CDE E1               [10] 2127 	pop	hl
      000CDF E5               [11] 2128 	push	hl
      000CE0 77               [ 7] 2129 	ld	(hl), a
                                   2130 ;main.c:31: pajaros[i].lastChangeFrame++;
      000CE1 0A               [ 7] 2131 	ld	a, (bc)
      000CE2 3C               [ 4] 2132 	inc	a
      000CE3 02               [ 7] 2133 	ld	(bc), a
                                   2134 ;main.c:32: if (pajaros[i].lastChangeFrame == 20)
      000CE4 D6 14            [ 7] 2135 	sub	a, #0x14
      000CE6 20 15            [12] 2136 	jr	NZ, 00104$
                                   2137 ;main.c:34: pajaros[i].frame++;
      000CE8 E1               [10] 2138 	pop	hl
      000CE9 E5               [11] 2139 	push	hl
      000CEA 23               [ 6] 2140 	inc	hl
      000CEB 23               [ 6] 2141 	inc	hl
      000CEC 7E               [ 7] 2142 	ld	a, (hl)
      000CED 3C               [ 4] 2143 	inc	a
      000CEE DD 77 FE         [19] 2144 	ld	-2 (ix), a
      000CF1 77               [ 7] 2145 	ld	(hl), a
                                   2146 ;main.c:35: if (pajaros[i].frame > 1)
      000CF2 3E 01            [ 7] 2147 	ld	a, #0x01
      000CF4 DD 96 FE         [19] 2148 	sub	a, -2 (ix)
      000CF7 30 02            [12] 2149 	jr	NC, 00102$
                                   2150 ;main.c:36: pajaros[i].frame = 0;
      000CF9 36 00            [10] 2151 	ld	(hl), #0x00
      000CFB                       2152 00102$:
                                   2153 ;main.c:37: pajaros[i].lastChangeFrame = 0;
      000CFB AF               [ 4] 2154 	xor	a, a
      000CFC 02               [ 7] 2155 	ld	(bc), a
      000CFD                       2156 00104$:
                                   2157 ;main.c:39: if(pajaros[i].initSprite == 255) {
      000CFD 1A               [ 7] 2158 	ld	a, (de)
      000CFE 3C               [ 4] 2159 	inc	a
      000CFF 20 08            [12] 2160 	jr	NZ, 00109$
                                   2161 ;main.c:40: draw_entidad(&(pajaros[i]), &spritePajaro);
      000D01 11r18r00         [10] 2162 	ld	de, #_spritePajaro
      000D04 E1               [10] 2163 	pop	hl
      000D05 E5               [11] 2164 	push	hl
      000D06 CDr40r04         [17] 2165 	call	_draw_entidad
      000D09                       2166 00109$:
                                   2167 ;main.c:23: for (i = 0; i < NUM_PAJAROS; i++)
      000D09 DD 34 FF         [23] 2168 	inc	-1 (ix)
      000D0C DD 7E FF         [19] 2169 	ld	a, -1 (ix)
      000D0F D6 13            [ 7] 2170 	sub	a, #0x13
      000D11 DAr68r0C         [10] 2171 	jp	C, 00108$
                                   2172 ;main.c:43: }
      000D14 DD F9            [10] 2173 	ld	sp, ix
      000D16 DD E1            [14] 2174 	pop	ix
      000D18 C9               [10] 2175 	ret
                                   2176 ;main.c:45: void loadGrapVRAM()
                                   2177 ;	---------------------------------
                                   2178 ; Function loadGrapVRAM
                                   2179 ; ---------------------------------
      000D19                       2180 _loadGrapVRAM::
      000D19 DD E5            [15] 2181 	push	ix
      000D1B DD 21 00 00      [14] 2182 	ld	ix,#0
      000D1F DD 39            [15] 2183 	add	ix,sp
      000D21 21 E2 FF         [10] 2184 	ld	hl, #-30
      000D24 39               [11] 2185 	add	hl, sp
      000D25 F9               [ 6] 2186 	ld	sp, hl
                                   2187 ;main.c:47: SMS_init();
      000D26 CDr00r00         [17] 2188 	call	_SMS_init
                                   2189 ;main.c:50: SMS_setSpriteMode(SPRITEMODE_TALL);
      000D29 2E 01            [ 7] 2190 	ld	l, #0x01
                                   2191 ;	spillPairReg hl
                                   2192 ;	spillPairReg hl
      000D2B CDr00r00         [17] 2193 	call	_SMS_setSpriteMode
                                   2194 ;main.c:51: SMS_displayOn();
      000D2E 21 40 01         [10] 2195 	ld	hl, #0x0140
      000D31 CDr00r00         [17] 2196 	call	_SMS_VDPturnOnFeature
                                   2197 ;main.c:52: SMS_loadBGPalette(sonicpalette_inc);
      000D34 21r00r00         [10] 2198 	ld	hl, #_sonicpalette_inc
      000D37 CDr00r00         [17] 2199 	call	_SMS_loadBGPalette
                                   2200 ;main.c:53: SMS_loadSpritePalette(palleteAlex_inc);
      000D3A 21r00r00         [10] 2201 	ld	hl, #_palleteAlex_inc
      000D3D CDr00r00         [17] 2202 	call	_SMS_loadSpritePalette
                                   2203 ;main.c:55: spriteAlex = generateSpriteNoRAM(2, 2, spriteAlex_inc_size, spriteAlex_inc);
      000D40 21r00r00         [10] 2204 	ld	hl, #_spriteAlex_inc
      000D43 E5               [11] 2205 	push	hl
      000D44 21 00 10         [10] 2206 	ld	hl, #0x1000
      000D47 E5               [11] 2207 	push	hl
                                   2208 ;	spillPairReg hl
                                   2209 ;	spillPairReg hl
      000D48 3E 02            [ 7] 2210 	ld	a,#0x02
      000D4A 6F               [ 4] 2211 	ld	l,a
      000D4B E5               [11] 2212 	push	hl
      000D4C 21 06 00         [10] 2213 	ld	hl, #0x0006
      000D4F 39               [11] 2214 	add	hl, sp
      000D50 EB               [ 4] 2215 	ex	de,hl
      000D51 E1               [10] 2216 	pop	hl
      000D52 D5               [11] 2217 	push	de
      000D53 CDrAAr00         [17] 2218 	call	_generateSpriteNoRAM
      000D56 F1               [10] 2219 	pop	af
      000D57 F1               [10] 2220 	pop	af
      000D58 F1               [10] 2221 	pop	af
      000D59 11r0Er00         [10] 2222 	ld	de, #_spriteAlex
      000D5C 21 00 00         [10] 2223 	ld	hl, #0
      000D5F 39               [11] 2224 	add	hl, sp
      000D60 01 0A 00         [10] 2225 	ld	bc, #0x000a
      000D63 ED B0            [21] 2226 	ldir
                                   2227 ;main.c:56: spritePuno = generateSprite(1, 2, puno_inc_size, puno_inc);
      000D65 21r00r00         [10] 2228 	ld	hl, #_puno_inc
      000D68 E5               [11] 2229 	push	hl
      000D69 21 80 00         [10] 2230 	ld	hl, #0x0080
      000D6C E5               [11] 2231 	push	hl
      000D6D 2E 02            [ 7] 2232 	ld	l, #0x02
                                   2233 ;	spillPairReg hl
                                   2234 ;	spillPairReg hl
      000D6F 3E 01            [ 7] 2235 	ld	a, #0x01
      000D71 E5               [11] 2236 	push	hl
      000D72 21 10 00         [10] 2237 	ld	hl, #0x0010
      000D75 39               [11] 2238 	add	hl, sp
      000D76 EB               [ 4] 2239 	ex	de,hl
      000D77 E1               [10] 2240 	pop	hl
      000D78 D5               [11] 2241 	push	de
      000D79 CDr00r00         [17] 2242 	call	_generateSprite
      000D7C F1               [10] 2243 	pop	af
      000D7D F1               [10] 2244 	pop	af
      000D7E F1               [10] 2245 	pop	af
      000D7F 11r22r00         [10] 2246 	ld	de, #_spritePuno
      000D82 21 0A 00         [10] 2247 	ld	hl, #10
      000D85 39               [11] 2248 	add	hl, sp
      000D86 01 0A 00         [10] 2249 	ld	bc, #0x000a
      000D89 ED B0            [21] 2250 	ldir
                                   2251 ;main.c:57: spritePajaro = generateSprite(3, 1, spritePajaro_inc_size, spritePajaro_inc);
      000D8B 21r00r00         [10] 2252 	ld	hl, #_spritePajaro_inc
      000D8E E5               [11] 2253 	push	hl
      000D8F 21 80 01         [10] 2254 	ld	hl, #0x0180
      000D92 E5               [11] 2255 	push	hl
      000D93 2E 01            [ 7] 2256 	ld	l, #0x01
                                   2257 ;	spillPairReg hl
                                   2258 ;	spillPairReg hl
      000D95 3E 03            [ 7] 2259 	ld	a, #0x03
      000D97 E5               [11] 2260 	push	hl
      000D98 21 1A 00         [10] 2261 	ld	hl, #0x001a
      000D9B 39               [11] 2262 	add	hl, sp
      000D9C EB               [ 4] 2263 	ex	de,hl
      000D9D E1               [10] 2264 	pop	hl
      000D9E D5               [11] 2265 	push	de
      000D9F CDr00r00         [17] 2266 	call	_generateSprite
      000DA2 F1               [10] 2267 	pop	af
      000DA3 F1               [10] 2268 	pop	af
      000DA4 F1               [10] 2269 	pop	af
      000DA5 11r18r00         [10] 2270 	ld	de, #_spritePajaro
      000DA8 21 14 00         [10] 2271 	ld	hl, #20
      000DAB 39               [11] 2272 	add	hl, sp
      000DAC 01 0A 00         [10] 2273 	ld	bc, #0x000a
      000DAF ED B0            [21] 2274 	ldir
                                   2275 ;main.c:58: SMS_initSprites();
      000DB1 CDr00r00         [17] 2276 	call	_SMS_initSprites
                                   2277 ;main.c:59: alex.initSprite = 255;
      000DB4 21r09r00         [10] 2278 	ld	hl, #_alex + 6
      000DB7 36 FF            [10] 2279 	ld	(hl), #0xff
                                   2280 ;main.c:60: draw_entidad(&alex, &spriteAlex);
      000DB9 11r0Er00         [10] 2281 	ld	de, #_spriteAlex
      000DBC 21r03r00         [10] 2282 	ld	hl, #_alex
      000DBF CDr40r04         [17] 2283 	call	_draw_entidad
                                   2284 ;main.c:61: SMS_addSprite (0, 0, 9); // puno
      000DC2 11 09 00         [10] 2285 	ld	de, #0x0009
      000DC5 21 00 00         [10] 2286 	ld	hl, #0x0000
      000DC8 CDr00r00         [17] 2287 	call	_SMS_addSprite_f
                                   2288 ;main.c:62: inicializaPajaros();
      000DCB CDr57r0C         [17] 2289 	call	_inicializaPajaros
                                   2290 ;main.c:67: SMS_loadTiles(tiles_de_prueba2_inc, 0, tiles_de_prueba2_inc_size);
      000DCE 21 A0 00         [10] 2291 	ld	hl, #0x00a0
      000DD1 E5               [11] 2292 	push	hl
      000DD2 11r00r00         [10] 2293 	ld	de, #_tiles_de_prueba2_inc
      000DD5 21 00 40         [10] 2294 	ld	hl, #0x4000
      000DD8 CDr00r00         [17] 2295 	call	_SMS_VRAMmemcpy
                                   2296 ;main.c:68: SMS_loadTileMap(0, 0, tilemap_de_prueba2_inc, tilemap_de_prueba2_inc_size);
      000DDB 21 80 07         [10] 2297 	ld	hl, #0x0780
      000DDE E5               [11] 2298 	push	hl
      000DDF 11r00r00         [10] 2299 	ld	de, #_tilemap_de_prueba2_inc
      000DE2 21 00 78         [10] 2300 	ld	hl, #0x7800
      000DE5 CDr00r00         [17] 2301 	call	_SMS_VRAMmemcpy
                                   2302 ;main.c:69: SMS_loadBGPalette(paleta_de_prueba2_inc);
      000DE8 21r00r00         [10] 2303 	ld	hl, #_paleta_de_prueba2_inc
      000DEB CDr00r00         [17] 2304 	call	_SMS_loadBGPalette
                                   2305 ;main.c:70: SMS_setSpritePaletteColor(0,0);
                                   2306 ;	spillPairReg hl
                                   2307 ;	spillPairReg hl
      000DEE AF               [ 4] 2308 	xor	a, a
      000DEF 6F               [ 4] 2309 	ld	l, a
      000DF0 CDr00r00         [17] 2310 	call	_SMS_setSpritePaletteColor
                                   2311 ;main.c:71: }
      000DF3 DD F9            [10] 2312 	ld	sp, ix
      000DF5 DD E1            [14] 2313 	pop	ix
      000DF7 C9               [10] 2314 	ret
                                   2315 ;main.c:73: void dibujaPajaros()
                                   2316 ;	---------------------------------
                                   2317 ; Function dibujaPajaros
                                   2318 ; ---------------------------------
      000DF8                       2319 _dibujaPajaros::
      000DF8 DD E5            [15] 2320 	push	ix
      000DFA DD 21 00 00      [14] 2321 	ld	ix,#0
      000DFE DD 39            [15] 2322 	add	ix,sp
      000E00 21 F6 FF         [10] 2323 	ld	hl, #-10
      000E03 39               [11] 2324 	add	hl, sp
      000E04 F9               [ 6] 2325 	ld	sp, hl
                                   2326 ;main.c:78: unsigned char initPajaros = pajaros[0].initSprite;
      000E05 3Ar0Cr03         [13] 2327 	ld	a,(#_pajaros + 6)
      000E08 DD 77 FA         [19] 2328 	ld	-6 (ix), a
                                   2329 ;main.c:79: for (i = 0; i < NUM_PAJAROS; i++)
      000E0B DD 36 FE 00      [19] 2330 	ld	-2 (ix), #0x00
      000E0F                       2331 00119$:
                                   2332 ;main.c:81: T_entidad *p = &pajaros[i];
      000E0F DD 4E FE         [19] 2333 	ld	c, -2 (ix)
      000E12 06 00            [ 7] 2334 	ld	b, #0x00
      000E14 69               [ 4] 2335 	ld	l, c
      000E15 60               [ 4] 2336 	ld	h, b
      000E16 29               [11] 2337 	add	hl, hl
      000E17 29               [11] 2338 	add	hl, hl
      000E18 09               [11] 2339 	add	hl, bc
      000E19 29               [11] 2340 	add	hl, hl
      000E1A 11r06r03         [10] 2341 	ld	de, #_pajaros
      000E1D 19               [11] 2342 	add	hl, de
                                   2343 ;main.c:82: p->x++;
      000E1E DD 75 FB         [19] 2344 	ld	-5 (ix), l
      000E21 DD 74 FC         [19] 2345 	ld	-4 (ix), h
      000E24 7E               [ 7] 2346 	ld	a, (hl)
      000E25 3C               [ 4] 2347 	inc	a
      000E26 DD 6E FB         [19] 2348 	ld	l, -5 (ix)
      000E29 DD 66 FC         [19] 2349 	ld	h, -4 (ix)
      000E2C 77               [ 7] 2350 	ld	(hl), a
                                   2351 ;main.c:83: p->lastChangeFrame++;
      000E2D DD 7E FB         [19] 2352 	ld	a, -5 (ix)
      000E30 C6 03            [ 7] 2353 	add	a, #0x03
      000E32 DD 77 F6         [19] 2354 	ld	-10 (ix), a
      000E35 DD 7E FC         [19] 2355 	ld	a, -4 (ix)
      000E38 CE 00            [ 7] 2356 	adc	a, #0x00
      000E3A DD 77 F7         [19] 2357 	ld	-9 (ix), a
      000E3D E1               [10] 2358 	pop	hl
      000E3E E5               [11] 2359 	push	hl
      000E3F 7E               [ 7] 2360 	ld	a, (hl)
      000E40 3C               [ 4] 2361 	inc	a
      000E41 E1               [10] 2362 	pop	hl
      000E42 E5               [11] 2363 	push	hl
      000E43 77               [ 7] 2364 	ld	(hl), a
                                   2365 ;main.c:85: if (p->lastChangeFrame == 20)
      000E44 D6 14            [ 7] 2366 	sub	a, #0x14
      000E46 C2rDBr0E         [10] 2367 	jp	NZ,00108$
                                   2368 ;main.c:87: p->frame++;
      000E49 DD 7E FB         [19] 2369 	ld	a, -5 (ix)
      000E4C C6 02            [ 7] 2370 	add	a, #0x02
      000E4E DD 77 F8         [19] 2371 	ld	-8 (ix), a
      000E51 DD 7E FC         [19] 2372 	ld	a, -4 (ix)
      000E54 CE 00            [ 7] 2373 	adc	a, #0x00
      000E56 DD 77 F9         [19] 2374 	ld	-7 (ix), a
      000E59 DD 6E F8         [19] 2375 	ld	l, -8 (ix)
      000E5C DD 66 F9         [19] 2376 	ld	h, -7 (ix)
      000E5F 4E               [ 7] 2377 	ld	c, (hl)
      000E60 0C               [ 4] 2378 	inc	c
      000E61 D1               [10] 2379 	pop	de
      000E62 E1               [10] 2380 	pop	hl
      000E63 E5               [11] 2381 	push	hl
      000E64 D5               [11] 2382 	push	de
      000E65 71               [ 7] 2383 	ld	(hl), c
                                   2384 ;main.c:88: if (p->frame > 1)
      000E66 3E 01            [ 7] 2385 	ld	a, #0x01
      000E68 91               [ 4] 2386 	sub	a, c
      000E69 30 06            [12] 2387 	jr	NC, 00104$
                                   2388 ;main.c:89: p->frame = 0;
      000E6B C1               [10] 2389 	pop	bc
      000E6C E1               [10] 2390 	pop	hl
      000E6D E5               [11] 2391 	push	hl
      000E6E C5               [11] 2392 	push	bc
      000E6F 36 00            [10] 2393 	ld	(hl), #0x00
      000E71                       2394 00104$:
                                   2395 ;main.c:90: p->lastChangeFrame = 0;
      000E71 E1               [10] 2396 	pop	hl
      000E72 36 00            [10] 2397 	ld	(hl), #0x00
      000E74 E5               [11] 2398 	push	hl
                                   2399 ;main.c:91: int frame = spritePajaro.tamano*p->frame + spritePajaro.beginVRAM;
      000E75 21r1Ar00         [10] 2400 	ld	hl, #_spritePajaro + 2
      000E78 5E               [ 7] 2401 	ld	e, (hl)
      000E79 DD 6E F8         [19] 2402 	ld	l, -8 (ix)
      000E7C DD 66 F9         [19] 2403 	ld	h, -7 (ix)
      000E7F 66               [ 7] 2404 	ld	h, (hl)
                                   2405 ;	spillPairReg hl
      000E80 2E 00            [ 7] 2406 	ld	l, #0x00
      000E82 55               [ 4] 2407 	ld	d, l
      000E83 06 08            [ 7] 2408 	ld	b, #0x08
      000E85                       2409 00191$:
      000E85 29               [11] 2410 	add	hl, hl
      000E86 30 01            [12] 2411 	jr	NC, 00192$
      000E88 19               [11] 2412 	add	hl, de
      000E89                       2413 00192$:
      000E89 10 FA            [13] 2414 	djnz	00191$
      000E8B 4D               [ 4] 2415 	ld	c, l
      000E8C 3Ar1Cr00         [13] 2416 	ld	a, (#_spritePajaro + 4)
      000E8F 81               [ 4] 2417 	add	a, c
      000E90 DD 77 FD         [19] 2418 	ld	-3 (ix), a
                                   2419 ;main.c:92: for(j=0;j<spritePajaro.alto;j++) {
      000E93 DD 36 FF 00      [19] 2420 	ld	-1 (ix), #0x00
      000E97                       2421 00117$:
      000E97 21r18r00         [10] 2422 	ld	hl, #_spritePajaro
      000E9A DD 7E FF         [19] 2423 	ld	a,-1 (ix)
      000E9D 96               [ 7] 2424 	sub	a,(hl)
      000E9E 30 3B            [12] 2425 	jr	NC, 00108$
                                   2426 ;main.c:93: unsigned char desplazado = (j<<2);
      000EA0 DD 7E FF         [19] 2427 	ld	a, -1 (ix)
      000EA3 87               [ 4] 2428 	add	a, a
      000EA4 87               [ 4] 2429 	add	a, a
                                   2430 ;main.c:94: unsigned char jCalculated = desplazado + frame, y = p->y+(desplazado<<2);
      000EA5 DD 86 FD         [19] 2431 	add	a, -3 (ix)
      000EA8 5F               [ 4] 2432 	ld	e, a
                                   2433 ;main.c:95: for(i2=0;i2<spritePajaro.ancho;i2++) {
      000EA9 16 00            [ 7] 2434 	ld	d, #0x00
      000EAB                       2435 00114$:
      000EAB 21r19r00         [10] 2436 	ld	hl, #_spritePajaro + 1
      000EAE 4E               [ 7] 2437 	ld	c, (hl)
      000EAF 7A               [ 4] 2438 	ld	a, d
      000EB0 91               [ 4] 2439 	sub	a, c
      000EB1 30 23            [12] 2440 	jr	NC, 00118$
                                   2441 ;main.c:96: SpriteTableXN2[(i2+initPajaros)*2+1] = jCalculated + (i2<<1);
      000EB3 4A               [ 4] 2442 	ld	c, d
      000EB4 06 00            [ 7] 2443 	ld	b, #0x00
      000EB6 DD 6E FA         [19] 2444 	ld	l, -6 (ix)
                                   2445 ;	spillPairReg hl
                                   2446 ;	spillPairReg hl
      000EB9 26 00            [ 7] 2447 	ld	h, #0x00
                                   2448 ;	spillPairReg hl
                                   2449 ;	spillPairReg hl
      000EBB 09               [11] 2450 	add	hl, bc
      000EBC 29               [11] 2451 	add	hl, hl
      000EBD 23               [ 6] 2452 	inc	hl
      000EBE 4D               [ 4] 2453 	ld	c, l
      000EBF 44               [ 4] 2454 	ld	b, h
      000EC0 79               [ 4] 2455 	ld	a, c
      000EC1 FD 21r02r03      [14] 2456 	ld	iy, #_SpriteTableXN2
      000EC5 FD 86 00         [19] 2457 	add	a, 0 (iy)
      000EC8 4F               [ 4] 2458 	ld	c, a
      000EC9 78               [ 4] 2459 	ld	a, b
      000ECA FD 8E 01         [19] 2460 	adc	a, 1 (iy)
      000ECD 47               [ 4] 2461 	ld	b, a
      000ECE 7A               [ 4] 2462 	ld	a, d
      000ECF 87               [ 4] 2463 	add	a, a
      000ED0 6B               [ 4] 2464 	ld	l, e
                                   2465 ;	spillPairReg hl
                                   2466 ;	spillPairReg hl
      000ED1 85               [ 4] 2467 	add	a, l
      000ED2 02               [ 7] 2468 	ld	(bc), a
                                   2469 ;main.c:95: for(i2=0;i2<spritePajaro.ancho;i2++) {
      000ED3 14               [ 4] 2470 	inc	d
      000ED4 18 D5            [12] 2471 	jr	00114$
      000ED6                       2472 00118$:
                                   2473 ;main.c:92: for(j=0;j<spritePajaro.alto;j++) {
      000ED6 DD 34 FF         [23] 2474 	inc	-1 (ix)
      000ED9 18 BC            [12] 2475 	jr	00117$
      000EDB                       2476 00108$:
                                   2477 ;main.c:100: initPajaros +=3;
      000EDB DD 7E FA         [19] 2478 	ld	a, -6 (ix)
      000EDE C6 03            [ 7] 2479 	add	a, #0x03
      000EE0 DD 77 FA         [19] 2480 	ld	-6 (ix), a
                                   2481 ;main.c:101: end = p->len;
      000EE3 DD 4E FB         [19] 2482 	ld	c, -5 (ix)
      000EE6 DD 46 FC         [19] 2483 	ld	b, -4 (ix)
      000EE9 21 07 00         [10] 2484 	ld	hl, #7
      000EEC 09               [11] 2485 	add	hl, bc
      000EED 4E               [ 7] 2486 	ld	c, (hl)
                                   2487 ;main.c:102: i2 = p->initSprite << 1;
      000EEE DD 5E FB         [19] 2488 	ld	e, -5 (ix)
      000EF1 DD 56 FC         [19] 2489 	ld	d, -4 (ix)
      000EF4 21 06 00         [10] 2490 	ld	hl, #6
      000EF7 19               [11] 2491 	add	hl, de
      000EF8 7E               [ 7] 2492 	ld	a, (hl)
      000EF9 87               [ 4] 2493 	add	a, a
      000EFA 47               [ 4] 2494 	ld	b, a
                                   2495 ;main.c:103: while(i2<end) {
      000EFB                       2496 00109$:
                                   2497 ;main.c:104: SpriteTableXN2[i2] += 1;
      000EFB 78               [ 4] 2498 	ld	a,b
      000EFC B9               [ 4] 2499 	cp	a,c
      000EFD 30 11            [12] 2500 	jr	NC, 00120$
      000EFF 21r02r03         [10] 2501 	ld	hl, #_SpriteTableXN2
      000F02 86               [ 7] 2502 	add	a, (hl)
      000F03 23               [ 6] 2503 	inc	hl
      000F04 5F               [ 4] 2504 	ld	e, a
      000F05 3E 00            [ 7] 2505 	ld	a, #0x00
      000F07 8E               [ 7] 2506 	adc	a, (hl)
      000F08 57               [ 4] 2507 	ld	d, a
      000F09 1A               [ 7] 2508 	ld	a, (de)
      000F0A 3C               [ 4] 2509 	inc	a
      000F0B 12               [ 7] 2510 	ld	(de), a
                                   2511 ;main.c:105: i2 +=2;
      000F0C 04               [ 4] 2512 	inc	b
      000F0D 04               [ 4] 2513 	inc	b
      000F0E 18 EB            [12] 2514 	jr	00109$
      000F10                       2515 00120$:
                                   2516 ;main.c:79: for (i = 0; i < NUM_PAJAROS; i++)
      000F10 DD 34 FE         [23] 2517 	inc	-2 (ix)
      000F13 DD 7E FE         [19] 2518 	ld	a, -2 (ix)
      000F16 D6 13            [ 7] 2519 	sub	a, #0x13
      000F18 DAr0Fr0E         [10] 2520 	jp	C, 00119$
                                   2521 ;main.c:110: }
      000F1B DD F9            [10] 2522 	ld	sp, ix
      000F1D DD E1            [14] 2523 	pop	ix
      000F1F C9               [10] 2524 	ret
                                   2525 ;main.c:112: void playMusic() {
                                   2526 ;	---------------------------------
                                   2527 ; Function playMusic
                                   2528 ; ---------------------------------
      000F20                       2529 _playMusic::
                                   2530 ;main.c:113: PSGFrame();
      000F20 CDr00r00         [17] 2531 	call	_PSGFrame
                                   2532 ;main.c:114: PSGSFXFrame();
                                   2533 ;main.c:115: }
      000F23 C3r00r00         [10] 2534 	jp	_PSGSFXFrame
                                   2535 ;main.c:117: void disableSprites() {
                                   2536 ;	---------------------------------
                                   2537 ; Function disableSprites
                                   2538 ; ---------------------------------
      000F26                       2539 _disableSprites::
                                   2540 ;main.c:120: while (i < 64) {
      000F26 0E 00            [ 7] 2541 	ld	c, #0x00
      000F28                       2542 00101$:
      000F28 79               [ 4] 2543 	ld	a, c
      000F29 D6 40            [ 7] 2544 	sub	a, #0x40
      000F2B 30 10            [12] 2545 	jr	NC, 00103$
                                   2546 ;main.c:121: SMS_updateSpritePosition(i,10,240); 
      000F2D 41               [ 4] 2547 	ld	b, c
      000F2E C5               [11] 2548 	push	bc
      000F2F 3E F0            [ 7] 2549 	ld	a, #0xf0
      000F31 F5               [11] 2550 	push	af
      000F32 33               [ 6] 2551 	inc	sp
      000F33 2E 0A            [ 7] 2552 	ld	l, #0x0a
                                   2553 ;	spillPairReg hl
                                   2554 ;	spillPairReg hl
      000F35 78               [ 4] 2555 	ld	a, b
      000F36 CDr00r00         [17] 2556 	call	_SMS_updateSpritePosition
      000F39 C1               [10] 2557 	pop	bc
                                   2558 ;main.c:122: i++;
      000F3A 0C               [ 4] 2559 	inc	c
      000F3B 18 EB            [12] 2560 	jr	00101$
      000F3D                       2561 00103$:
                                   2562 ;main.c:124: numSprites = 0;
      000F3D 21 00 00         [10] 2563 	ld	hl, #0x0000
      000F40 22rC4r03         [16] 2564 	ld	(_numSprites), hl
                                   2565 ;main.c:125: }
      000F43 C9               [10] 2566 	ret
                                   2567 ;main.c:127: void main(void)
                                   2568 ;	---------------------------------
                                   2569 ; Function main
                                   2570 ; ---------------------------------
      000F44                       2571 _main::
      000F44 DD E5            [15] 2572 	push	ix
      000F46 DD 21 00 00      [14] 2573 	ld	ix,#0
      000F4A DD 39            [15] 2574 	add	ix,sp
      000F4C F5               [11] 2575 	push	af
                                   2576 ;main.c:132: SMS_VRAMmemsetW(0, 0x0000, 16384);
      000F4D DD 36 FF 00      [19] 2577 	ld	-1 (ix), #0x00
      000F51 DD 36 FE 00      [19] 2578 	ld	-2 (ix), #0x00
      000F55 21 00 40         [10] 2579 	ld	hl, #0x4000
      000F58 E5               [11] 2580 	push	hl
      000F59 11 00 00         [10] 2581 	ld	de, #0x0000
      000F5C 65               [ 4] 2582 	ld	h, l
      000F5D CDr00r00         [17] 2583 	call	_SMS_VRAMmemsetW
                                   2584 ;main.c:142: printf("Hello, World! [1/3]");
      000F60 21r13r10         [10] 2585 	ld	hl, #___str_0
      000F63 E5               [11] 2586 	push	hl
      000F64 CDr00r00         [17] 2587 	call	_printf
      000F67 F1               [10] 2588 	pop	af
                                   2589 ;main.c:147: SMS_displayOn();
      000F68 21 40 01         [10] 2590 	ld	hl, #0x0140
      000F6B CDr00r00         [17] 2591 	call	_SMS_VDPturnOnFeature
                                   2592 ;main.c:148: SMS_setBGScrollX(scroll_x);
      000F6E 2E 00            [ 7] 2593 	ld	l, #0x00
                                   2594 ;	spillPairReg hl
                                   2595 ;	spillPairReg hl
      000F70 CDr00r00         [17] 2596 	call	_SMS_setBGScrollX
                                   2597 ;main.c:149: SMS_setBGScrollY(scroll_y);
      000F73 2E 00            [ 7] 2598 	ld	l, #0x00
                                   2599 ;	spillPairReg hl
                                   2600 ;	spillPairReg hl
      000F75 CDr00r00         [17] 2601 	call	_SMS_setBGScrollY
                                   2602 ;main.c:150: SMS_init();
      000F78 CDr00r00         [17] 2603 	call	_SMS_init
                                   2604 ;main.c:151: initSpritesVariables();
      000F7B CDrDDr03         [17] 2605 	call	_initSpritesVariables
                                   2606 ;main.c:152: loadGrapVRAM();
      000F7E CDr19r0D         [17] 2607 	call	_loadGrapVRAM
                                   2608 ;main.c:158: PSGPlay(special_psg);
      000F81 21r00r00         [10] 2609 	ld	hl, #_special_psg
      000F84 CDr00r00         [17] 2610 	call	_PSGPlay
                                   2611 ;main.c:159: SMS_VDPturnOnFeature(VDPFEATURE_LEFTCOLBLANK);
      000F87 21 20 00         [10] 2612 	ld	hl, #0x0020
      000F8A CDr00r00         [17] 2613 	call	_SMS_VDPturnOnFeature
                                   2614 ;main.c:160: SMS_VDPturnOnFeature(VDPFEATURE_EXTRAHEIGHT);
      000F8D 21 02 00         [10] 2615 	ld	hl, #0x0002
      000F90 CDr00r00         [17] 2616 	call	_SMS_VDPturnOnFeature
                                   2617 ;main.c:162: SMS_VDPturnOnFeature(VDPFEATURE_240LINES);
      000F93 21 08 01         [10] 2618 	ld	hl, #0x0108
      000F96 CDr00r00         [17] 2619 	call	_SMS_VDPturnOnFeature
                                   2620 ;main.c:163: SMS_setFrameInterruptHandler(playMusic);
      000F99 21r20r0F         [10] 2621 	ld	hl, #_playMusic
      000F9C CDr00r00         [17] 2622 	call	_SMS_setFrameInterruptHandler
      000F9F                       2623 00115$:
                                   2624 ;main.c:168: if (SMS_queryPauseRequested())
      000F9F CDr00r00         [17] 2625 	call	_SMS_queryPauseRequested
      000FA2 CB 47            [ 8] 2626 	bit	0,a
      000FA4 28 1E            [12] 2627 	jr	Z, 00105$
                                   2628 ;main.c:170: PSGPlay(emeraldhill_psg);
      000FA6 21r00r00         [10] 2629 	ld	hl, #_emeraldhill_psg
      000FA9 CDr00r00         [17] 2630 	call	_PSGPlay
                                   2631 ;main.c:171: SMS_resetPauseRequest();
      000FAC CDr00r00         [17] 2632 	call	_SMS_resetPauseRequest
                                   2633 ;main.c:172: while (!SMS_queryPauseRequested())
      000FAF                       2634 00101$:
      000FAF CDr00r00         [17] 2635 	call	_SMS_queryPauseRequested
      000FB2 CB 47            [ 8] 2636 	bit	0,a
      000FB4 20 05            [12] 2637 	jr	NZ, 00103$
                                   2638 ;main.c:174: SMS_waitForVBlank();
      000FB6 CDr00r00         [17] 2639 	call	_SMS_waitForVBlank
      000FB9 18 F4            [12] 2640 	jr	00101$
      000FBB                       2641 00103$:
                                   2642 ;main.c:178: SMS_resetPauseRequest();
      000FBB CDr00r00         [17] 2643 	call	_SMS_resetPauseRequest
                                   2644 ;main.c:179: PSGPlay(titulo_psg);
      000FBE 21r00r00         [10] 2645 	ld	hl, #_titulo_psg
      000FC1 CDr00r00         [17] 2646 	call	_PSGPlay
      000FC4                       2647 00105$:
                                   2648 ;main.c:183: int keys = SMS_getKeysHeld();
      000FC4 CDr00r00         [17] 2649 	call	_SMS_getKeysHeld
      000FC7 EB               [ 4] 2650 	ex	de, hl
                                   2651 ;main.c:184: if(keys & PORT_A_KEY_2)
      000FC8 CB 6D            [ 8] 2652 	bit	5, l
      000FCA 28 04            [12] 2653 	jr	Z, 00107$
                                   2654 ;main.c:185: keys = keys  ^ PORT_A_KEY_2;
      000FCC 7D               [ 4] 2655 	ld	a, l
      000FCD EE 20            [ 7] 2656 	xor	a, #0x20
      000FCF 6F               [ 4] 2657 	ld	l, a
                                   2658 ;	spillPairReg hl
                                   2659 ;	spillPairReg hl
      000FD0                       2660 00107$:
                                   2661 ;main.c:186: if(keys & PORT_A_KEY_1)
      000FD0 CB 65            [ 8] 2662 	bit	4, l
      000FD2 28 04            [12] 2663 	jr	Z, 00109$
                                   2664 ;main.c:187: keys = keys  ^ PORT_A_KEY_1;
      000FD4 7D               [ 4] 2665 	ld	a, l
      000FD5 EE 10            [ 7] 2666 	xor	a, #0x10
      000FD7 6F               [ 4] 2667 	ld	l, a
                                   2668 ;	spillPairReg hl
                                   2669 ;	spillPairReg hl
      000FD8                       2670 00109$:
                                   2671 ;main.c:189: keys = keys | (SMS_getKeysPressed() & (PORT_A_KEY_2 | PORT_A_KEY_1));
      000FD8 E5               [11] 2672 	push	hl
      000FD9 CDr00r00         [17] 2673 	call	_SMS_getKeysPressed
      000FDC E1               [10] 2674 	pop	hl
      000FDD 7B               [ 4] 2675 	ld	a, e
      000FDE E6 30            [ 7] 2676 	and	a, #0x30
      000FE0 B5               [ 4] 2677 	or	a, l
      000FE1 6F               [ 4] 2678 	ld	l, a
                                   2679 ;	spillPairReg hl
                                   2680 ;	spillPairReg hl
                                   2681 ;main.c:192: moveAlex(keys);
      000FE2 CDr1Dr0C         [17] 2682 	call	_moveAlex
                                   2683 ;main.c:194: dibujaPajaros();
      000FE5 CDrF8r0D         [17] 2684 	call	_dibujaPajaros
                                   2685 ;main.c:199: SMS_waitForVBlank();
      000FE8 CDr00r00         [17] 2686 	call	_SMS_waitForVBlank
                                   2687 ;main.c:205: copySpritestoSAT();
      000FEB CDr0Cr04         [17] 2688 	call	_copySpritestoSAT
                                   2689 ;main.c:212: if (scroll_y % 2 == 0)
      000FEE DD CB FF 46      [20] 2690 	bit	0, -1 (ix)
      000FF2 20 03            [12] 2691 	jr	NZ, 00111$
                                   2692 ;main.c:213: scroll_x += 1;
      000FF4 DD 34 FE         [23] 2693 	inc	-2 (ix)
      000FF7                       2694 00111$:
                                   2695 ;main.c:214: scroll_y++;
      000FF7 DD 34 FF         [23] 2696 	inc	-1 (ix)
                                   2697 ;main.c:215: if (scroll_y == 224)
      000FFA DD 7E FF         [19] 2698 	ld	a, -1 (ix)
      000FFD D6 E0            [ 7] 2699 	sub	a, #0xe0
      000FFF 20 04            [12] 2700 	jr	NZ, 00113$
                                   2701 ;main.c:216: scroll_y = 0;
      001001 DD 36 FF 00      [19] 2702 	ld	-1 (ix), #0x00
      001005                       2703 00113$:
                                   2704 ;main.c:218: SMS_setBGScrollX(scroll_x);
      001005 DD 6E FE         [19] 2705 	ld	l, -2 (ix)
                                   2706 ;	spillPairReg hl
                                   2707 ;	spillPairReg hl
      001008 CDr00r00         [17] 2708 	call	_SMS_setBGScrollX
                                   2709 ;main.c:220: SMS_displayOn();
      00100B 21 40 01         [10] 2710 	ld	hl, #0x0140
      00100E CDr00r00         [17] 2711 	call	_SMS_VDPturnOnFeature
                                   2712 ;main.c:222: }
      001011 18 8C            [12] 2713 	jr	00115$
      001013                       2714 ___str_0:
      001013 48 65 6C 6C 6F 2C 20  2715 	.ascii "Hello, World! [1/3]"
             57 6F 72 6C 64 21 20
             5B 31 2F 33 5D
      001026 00                    2716 	.db 0x00
                                   2717 	.area _CODE
      001027                       2718 __str_1:
      001027 53 45 47 41           2719 	.ascii "SEGA"
      00102B 00                    2720 	.db 0x00
      00102C                       2721 __str_2:
      00102C 62 61 73 69 63 20 65  2722 	.ascii "basic example"
             78 61 6D 70 6C 65
      001039 00                    2723 	.db 0x00
      00103A                       2724 __str_3:
      00103A 41 20 73 69 6D 70 6C  2725 	.ascii "A simple example"
             65 20 65 78 61 6D 70
             6C 65
      00104A 00                    2726 	.db 0x00
                                   2727 	.area _INITIALIZER
      000000                       2728 __xinit__nextVRAMsprites:
      000000 00 01                 2729 	.dw #0x0100
      000002                       2730 __xinit__maxSalto:
      000002 FF                    2731 	.db #0xff	; 255
      000003                       2732 __xinit__alex:
      000003 1E                    2733 	.db #0x1e	; 30
      000004 96                    2734 	.db #0x96	; 150
      000005 00                    2735 	.db #0x00	; 0
      000006 00                    2736 	.db #0x00	; 0
      000007 00                    2737 	.db #0x00	; 0
      000008 00                    2738 	.db #0x00	; 0
      000009 FF                    2739 	.db #0xff	; 255
      00000A 00                    2740 	.db #0x00	; 0
      00000B 00 00                 2741 	.dw #0x0000
      00000D                       2742 __xinit__lastFrame:
      00000D FF                    2743 	.db #0xff	; 255
      00000E                       2744 __xinit__spriteAlex:
      00000E 02                    2745 	.db #0x02	; 2
      00000F 02                    2746 	.db #0x02	; 2
      000010 08                    2747 	.db #0x08	; 8
      000011 00                    2748 	.db #0x00	; 0
      000012 00 00                 2749 	.dw #0x0000
      000014 00                    2750 	.db #0x00	; 0
      000015 00 00                 2751 	.dw #0x0000
      000017 00                    2752 	.db #0x00	; 0
      000018                       2753 __xinit__spritePajaro:
      000018 02                    2754 	.db #0x02	; 2
      000019 02                    2755 	.db #0x02	; 2
      00001A 08                    2756 	.db #0x08	; 8
      00001B 00                    2757 	.db #0x00	; 0
      00001C 00 00                 2758 	.dw #0x0000
      00001E 00                    2759 	.db #0x00	; 0
      00001F 00 00                 2760 	.dw #0x0000
      000021 00                    2761 	.db #0x00	; 0
      000022                       2762 __xinit__spritePuno:
      000022 02                    2763 	.db #0x02	; 2
      000023 02                    2764 	.db #0x02	; 2
      000024 08                    2765 	.db #0x08	; 8
      000025 00                    2766 	.db #0x00	; 0
      000026 00 00                 2767 	.dw #0x0000
      000028 00                    2768 	.db #0x00	; 0
      000029 00 00                 2769 	.dw #0x0000
      00002B 00                    2770 	.db #0x00	; 0
                                   2771 	.area _CABS (ABS)
      007FF0                       2772 	.org 0x7FF0
      007FF0                       2773 ___SMS__SEGA_signature:
      007FF0 54                    2774 	.db #0x54	; 84	'T'
      007FF1 4D                    2775 	.db #0x4d	; 77	'M'
      007FF2 52                    2776 	.db #0x52	; 82	'R'
      007FF3 20                    2777 	.db #0x20	; 32
      007FF4 53                    2778 	.db #0x53	; 83	'S'
      007FF5 45                    2779 	.db #0x45	; 69	'E'
      007FF6 47                    2780 	.db #0x47	; 71	'G'
      007FF7 41                    2781 	.db #0x41	; 65	'A'
      007FF8 FF                    2782 	.db #0xff	; 255
      007FF9 FF                    2783 	.db #0xff	; 255
      007FFA FF                    2784 	.db #0xff	; 255
      007FFB FF                    2785 	.db #0xff	; 255
      007FFC 99                    2786 	.db #0x99	; 153
      007FFD 09                    2787 	.db #0x09	; 9
      007FFE 00                    2788 	.db #0x00	; 0
      007FFF 4C                    2789 	.db #0x4c	; 76	'L'
      007FDB                       2790 	.org 0x7FDB
      007FDB                       2791 ___SMS__SDSC_author:
      007FDB 53 45 47 41           2792 	.ascii "SEGA"
      007FDF 00                    2793 	.db 0x00
      007FCD                       2794 	.org 0x7FCD
      007FCD                       2795 ___SMS__SDSC_name:
      007FCD 62 61 73 69 63 20 65  2796 	.ascii "basic example"
             78 61 6D 70 6C 65
      007FDA 00                    2797 	.db 0x00
      007FBC                       2798 	.org 0x7FBC
      007FBC                       2799 ___SMS__SDSC_descr:
      007FBC 41 20 73 69 6D 70 6C  2800 	.ascii "A simple example"
             65 20 65 78 61 6D 70
             6C 65
      007FCC 00                    2801 	.db 0x00
      007FE0                       2802 	.org 0x7FE0
      007FE0                       2803 ___SMS__SDSC_signature:
      007FE0 53                    2804 	.db #0x53	; 83	'S'
      007FE1 44                    2805 	.db #0x44	; 68	'D'
      007FE2 53                    2806 	.db #0x53	; 83	'S'
      007FE3 43                    2807 	.db #0x43	; 67	'C'
      007FE4 01                    2808 	.db #0x01	; 1
      007FE5 00                    2809 	.db #0x00	; 0
      007FE6 00                    2810 	.db #0x00	; 0
      007FE7 00                    2811 	.db #0x00	; 0
      007FE8 00                    2812 	.db #0x00	; 0
      007FE9 00                    2813 	.db #0x00	; 0
      007FEA DB                    2814 	.db #0xdb	; 219
      007FEB 7F                    2815 	.db #0x7f	; 127
      007FEC CD                    2816 	.db #0xcd	; 205
      007FED 7F                    2817 	.db #0x7f	; 127
      007FEE BC                    2818 	.db #0xbc	; 188
      007FEF 7F                    2819 	.db #0x7f	; 127
