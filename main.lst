                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14549 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___SMS__SDSC_signature
                                     12 	.globl ___SMS__SDSC_descr
                                     13 	.globl ___SMS__SDSC_name
                                     14 	.globl ___SMS__SDSC_author
                                     15 	.globl ___SMS__SEGA_signature
                                     16 	.globl _main
                                     17 	.globl _draw_main_character
                                     18 	.globl _loadGrapVRAM
                                     19 	.globl _init
                                     20 	.globl _PSGFrame
                                     21 	.globl _PSGPlay
                                     22 	.globl _SMS_VRAMmemsetW
                                     23 	.globl _SMS_VRAMmemcpy
                                     24 	.globl _SMS_loadSpritePalette
                                     25 	.globl _SMS_loadBGPalette
                                     26 	.globl _SMS_copySpritestoSAT
                                     27 	.globl _SMS_finalizeSprites
                                     28 	.globl _SMS_addSprite_f
                                     29 	.globl _SMS_initSprites
                                     30 	.globl _SMS_waitForVBlank
                                     31 	.globl _SMS_setSpriteMode
                                     32 	.globl _SMS_setBGScrollY
                                     33 	.globl _SMS_setBGScrollX
                                     34 	.globl _SMS_VDPturnOffFeature
                                     35 	.globl _SMS_VDPturnOnFeature
                                     36 	.globl _SMS_init
                                     37 	.globl _printf
                                     38 	.globl _delay_frame_player
                                     39 	.globl _frame_player
                                     40 	.globl _player_y
                                     41 	.globl _player_x
                                     42 	.globl _SMS_SRAM
                                     43 	.globl _SRAM_bank_to_be_mapped_on_slot2
                                     44 	.globl _ROM_bank_to_be_mapped_on_slot0
                                     45 	.globl _ROM_bank_to_be_mapped_on_slot1
                                     46 	.globl _ROM_bank_to_be_mapped_on_slot2
                                     47 ;--------------------------------------------------------
                                     48 ; special function registers
                                     49 ;--------------------------------------------------------
                                     50 ;--------------------------------------------------------
                                     51 ; ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area _DATA
                           00FFFF    54 _ROM_bank_to_be_mapped_on_slot2	=	0xffff
                           00FFFE    55 _ROM_bank_to_be_mapped_on_slot1	=	0xfffe
                           00FFFD    56 _ROM_bank_to_be_mapped_on_slot0	=	0xfffd
                           00FFFC    57 _SRAM_bank_to_be_mapped_on_slot2	=	0xfffc
                           008000    58 _SMS_SRAM	=	0x8000
                                     59 ;--------------------------------------------------------
                                     60 ; ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area _INITIALIZED
      000000                         63 _player_x::
      000000                         64 	.ds 2
      000002                         65 _player_y::
      000002                         66 	.ds 2
      000004                         67 _frame_player::
      000004                         68 	.ds 2
      000006                         69 _delay_frame_player::
      000006                         70 	.ds 2
                                     71 ;--------------------------------------------------------
                                     72 ; absolute external ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area _DABS (ABS)
                                     75 ;--------------------------------------------------------
                                     76 ; global & static initialisations
                                     77 ;--------------------------------------------------------
                                     78 	.area _HOME
                                     79 	.area _GSINIT
                                     80 	.area _GSFINAL
                                     81 	.area _GSINIT
                                     82 ;--------------------------------------------------------
                                     83 ; Home
                                     84 ;--------------------------------------------------------
                                     85 	.area _HOME
                                     86 	.area _HOME
                                     87 ;--------------------------------------------------------
                                     88 ; code
                                     89 ;--------------------------------------------------------
                                     90 	.area _CODE
                                     91 ;main.c:10: void init(){
                                     92 ;	---------------------------------
                                     93 ; Function init
                                     94 ; ---------------------------------
      000000                         95 _init::
                                     96 ;main.c:11: SMS_init();
                                     97 ;main.c:12: }
      000000 C3r00r00         [10]   98 	jp	_SMS_init
                                     99 ;main.c:14: void loadGrapVRAM(){
                                    100 ;	---------------------------------
                                    101 ; Function loadGrapVRAM
                                    102 ; ---------------------------------
      000003                        103 _loadGrapVRAM::
                                    104 ;main.c:15: SMS_init();
      000003 CDr00r00         [17]  105 	call	_SMS_init
                                    106 ;main.c:16: SMS_setSpriteMode(SPRITEMODE_NORMAL);
      000006 2E 00            [ 7]  107 	ld	l, #0x00
                                    108 ;	spillPairReg hl
                                    109 ;	spillPairReg hl
      000008 CDr00r00         [17]  110 	call	_SMS_setSpriteMode
                                    111 ;main.c:17: SMS_VDPturnOnFeature(VDPFEATURE_LEFTCOLBLANK);
      00000B 21 20 00         [10]  112 	ld	hl, #0x0020
      00000E CDr00r00         [17]  113 	call	_SMS_VDPturnOnFeature
                                    114 ;main.c:18: SMS_displayOn();
      000011 21 40 01         [10]  115 	ld	hl, #0x0140
      000014 CDr00r00         [17]  116 	call	_SMS_VDPturnOnFeature
                                    117 ;main.c:19: SMS_VDPturnOnFeature(VDPFEATURE_LEFTCOLBLANK);
      000017 21 20 00         [10]  118 	ld	hl, #0x0020
      00001A CDr00r00         [17]  119 	call	_SMS_VDPturnOnFeature
                                    120 ;main.c:20: SMS_loadBGPalette(sonicpalette_inc);
      00001D 21r00r00         [10]  121 	ld	hl, #_sonicpalette_inc
      000020 CDr00r00         [17]  122 	call	_SMS_loadBGPalette
                                    123 ;main.c:21: SMS_loadSpritePalette(alexVariosPaleta_inc);
      000023 21r00r00         [10]  124 	ld	hl, #_alexVariosPaleta_inc
      000026 CDr00r00         [17]  125 	call	_SMS_loadSpritePalette
                                    126 ;main.c:22: SMS_loadTiles(sonictiles_inc,0,sonictiles_inc_size);
      000029 21 C0 14         [10]  127 	ld	hl, #0x14c0
      00002C E5               [11]  128 	push	hl
      00002D 11r00r00         [10]  129 	ld	de, #_sonictiles_inc
      000030 21 00 40         [10]  130 	ld	hl, #0x4000
      000033 CDr00r00         [17]  131 	call	_SMS_VRAMmemcpy
                                    132 ;main.c:23: SMS_loadTiles(alexAndando_inc,256/*SPRITE_TILES_POSITION*/,alexAndando_inc_size);
      000036 21 00 03         [10]  133 	ld	hl, #0x0300
      000039 E5               [11]  134 	push	hl
      00003A 11r00r00         [10]  135 	ld	de, #_alexAndando_inc
      00003D 26 60            [ 7]  136 	ld	h, #0x60
      00003F CDr00r00         [17]  137 	call	_SMS_VRAMmemcpy
                                    138 ;main.c:24: SMS_loadTileMap(0,0,sonictilemap_inc,sonictilemap_inc_size);
      000042 21 00 06         [10]  139 	ld	hl, #0x0600
      000045 E5               [11]  140 	push	hl
      000046 11r00r00         [10]  141 	ld	de, #_sonictilemap_inc
      000049 26 78            [ 7]  142 	ld	h, #0x78
      00004B CDr00r00         [17]  143 	call	_SMS_VRAMmemcpy
                                    144 ;main.c:25: }
      00004E C9               [10]  145 	ret
                                    146 ;main.c:32: draw_main_character(){
                                    147 ;	---------------------------------
                                    148 ; Function draw_main_character
                                    149 ; ---------------------------------
      00004F                        150 _draw_main_character::
      00004F DD E5            [15]  151 	push	ix
      000051 DD 21 00 00      [14]  152 	ld	ix,#0
      000055 DD 39            [15]  153 	add	ix,sp
      000057 21 F7 FF         [10]  154 	ld	hl, #-9
      00005A 39               [11]  155 	add	hl, sp
      00005B F9               [ 6]  156 	ld	sp, hl
                                    157 ;main.c:35: for(numSprites=0;numSprites<2;numSprites++){
      00005C DD 36 FF 00      [19]  158 	ld	-1 (ix), #0x00
                                    159 ;main.c:36: for(j=0;j<3;j++) {
      000060                        160 00114$:
      000060 0E 00            [ 7]  161 	ld	c, #0x00
                                    162 ;main.c:37: for(i=0;i<2;i++) {
      000062                        163 00112$:
      000062 06 00            [ 7]  164 	ld	b, #0x00
      000064                        165 00104$:
                                    166 ;main.c:38: SMS_addSprite(player_x+(i<<3),player_y+(j<<3)+numSprites*30,2*frame_player + 8*j + i);  
      000064 DD 70 F7         [19]  167 	ld	-9 (ix), b
      000067 DD 36 F8 00      [19]  168 	ld	-8 (ix), #0x00
      00006B DD 7E F7         [19]  169 	ld	a, -9 (ix)
      00006E DD 77 F9         [19]  170 	ld	-7 (ix), a
      000071 DD 7E F8         [19]  171 	ld	a, -8 (ix)
      000074 DD 77 FA         [19]  172 	ld	-6 (ix), a
      000077 3E 03            [ 7]  173 	ld	a, #0x03
      000079                        174 00150$:
      000079 DD CB F9 26      [23]  175 	sla	-7 (ix)
      00007D DD CB FA 16      [23]  176 	rl	-6 (ix)
      000081 3D               [ 4]  177 	dec	a
      000082 20 F5            [12]  178 	jr	NZ, 00150$
      000084 3Ar00r00         [13]  179 	ld	a, (_player_x+0)
      000087 DD 86 F9         [19]  180 	add	a, -7 (ix)
      00008A 57               [ 4]  181 	ld	d, a
      00008B 3Ar01r00         [13]  182 	ld	a, (_player_x+1)
      00008E DD 8E FA         [19]  183 	adc	a, -6 (ix)
      000091 2Ar04r00         [16]  184 	ld	hl, (_frame_player)
      000094 29               [11]  185 	add	hl, hl
      000095 DD 71 FD         [19]  186 	ld	-3 (ix), c
      000098 DD 36 FE 00      [19]  187 	ld	-2 (ix), #0x00
      00009C DD 7E FD         [19]  188 	ld	a, -3 (ix)
      00009F DD 77 FB         [19]  189 	ld	-5 (ix), a
      0000A2 DD 7E FE         [19]  190 	ld	a, -2 (ix)
      0000A5 DD 77 FC         [19]  191 	ld	-4 (ix), a
      0000A8 3E 03            [ 7]  192 	ld	a, #0x03
      0000AA                        193 00151$:
      0000AA DD CB FB 26      [23]  194 	sla	-5 (ix)
      0000AE DD CB FC 16      [23]  195 	rl	-4 (ix)
      0000B2 3D               [ 4]  196 	dec	a
      0000B3 20 F5            [12]  197 	jr	NZ, 00151$
      0000B5 7D               [ 4]  198 	ld	a, l
      0000B6 DD 86 FB         [19]  199 	add	a, -5 (ix)
      0000B9 6F               [ 4]  200 	ld	l, a
                                    201 ;	spillPairReg hl
                                    202 ;	spillPairReg hl
      0000BA 7C               [ 4]  203 	ld	a, h
      0000BB DD 8E FC         [19]  204 	adc	a, -4 (ix)
      0000BE 67               [ 4]  205 	ld	h, a
                                    206 ;	spillPairReg hl
                                    207 ;	spillPairReg hl
      0000BF 7D               [ 4]  208 	ld	a, l
      0000C0 DD 86 F7         [19]  209 	add	a, -9 (ix)
      0000C3 FD E5            [15]  210 	push	iy
      0000C5 DD 77 F5         [19]  211 	ld	-11 (ix), a
      0000C8 FD E1            [14]  212 	pop	iy
      0000CA 7C               [ 4]  213 	ld	a, h
      0000CB DD 8E F8         [19]  214 	adc	a, -8 (ix)
      0000CE FD E5            [15]  215 	push	iy
      0000D0 DD 72 F6         [19]  216 	ld	-10 (ix), d
      0000D3 FD E1            [14]  217 	pop	iy
      0000D5 3Ar02r00         [13]  218 	ld	a, (_player_y+0)
      0000D8 DD 86 FB         [19]  219 	add	a, -5 (ix)
      0000DB 5F               [ 4]  220 	ld	e, a
      0000DC 3Ar03r00         [13]  221 	ld	a, (_player_y+1)
      0000DF DD 8E FC         [19]  222 	adc	a, -4 (ix)
      0000E2 57               [ 4]  223 	ld	d, a
      0000E3 DD 6E FF         [19]  224 	ld	l, -1 (ix)
                                    225 ;	spillPairReg hl
                                    226 ;	spillPairReg hl
      0000E6 26 00            [ 7]  227 	ld	h, #0x00
                                    228 ;	spillPairReg hl
                                    229 ;	spillPairReg hl
      0000E8 D5               [11]  230 	push	de
      0000E9 5D               [ 4]  231 	ld	e, l
      0000EA 54               [ 4]  232 	ld	d, h
      0000EB 29               [11]  233 	add	hl, hl
      0000EC 19               [11]  234 	add	hl, de
      0000ED 29               [11]  235 	add	hl, hl
      0000EE 19               [11]  236 	add	hl, de
      0000EF 29               [11]  237 	add	hl, hl
      0000F0 19               [11]  238 	add	hl, de
      0000F1 29               [11]  239 	add	hl, hl
      0000F2 D1               [10]  240 	pop	de
      0000F3 DD 75 FD         [19]  241 	ld	-3 (ix), l
      0000F6 DD 74 FE         [19]  242 	ld	-2 (ix), h
      0000F9 DD 6E FD         [19]  243 	ld	l, -3 (ix)
                                    244 ;	spillPairReg hl
                                    245 ;	spillPairReg hl
      0000FC 26 00            [ 7]  246 	ld	h, #0x00
                                    247 ;	spillPairReg hl
                                    248 ;	spillPairReg hl
      0000FE 19               [11]  249 	add	hl, de
      0000FF C5               [11]  250 	push	bc
      000100 FD E5            [15]  251 	push	iy
      000102 D1               [10]  252 	pop	de
      000103 CDr00r00         [17]  253 	call	_SMS_addSprite_f
      000106 C1               [10]  254 	pop	bc
                                    255 ;main.c:39: SMS_addSprite(player_x+(i<<3)+20,player_y+(j<<3)+numSprites*30,2*frame_player + 8*j + i);  
      000107 3Ar00r00         [13]  256 	ld	a, (_player_x+0)
      00010A DD 86 F9         [19]  257 	add	a, -7 (ix)
      00010D 5F               [ 4]  258 	ld	e, a
      00010E 3Ar01r00         [13]  259 	ld	a, (_player_x+1)
      000111 DD 8E FA         [19]  260 	adc	a, -6 (ix)
      000114 57               [ 4]  261 	ld	d, a
      000115 21 14 00         [10]  262 	ld	hl, #0x0014
      000118 19               [11]  263 	add	hl, de
      000119 65               [ 4]  264 	ld	h, l
                                    265 ;	spillPairReg hl
                                    266 ;	spillPairReg hl
                                    267 ;	spillPairReg hl
                                    268 ;	spillPairReg hl
      00011A FD 2Ar04r00      [20]  269 	ld	iy, (_frame_player)
      00011E FD 29            [15]  270 	add	iy, iy
      000120 DD 5E FB         [19]  271 	ld	e, -5 (ix)
      000123 DD 56 FC         [19]  272 	ld	d, -4 (ix)
      000126 FD 19            [15]  273 	add	iy, de
      000128 D1               [10]  274 	pop	de
      000129 D5               [11]  275 	push	de
      00012A FD 19            [15]  276 	add	iy, de
      00012C FD E5            [15]  277 	push	iy
      00012E DD 74 F6         [19]  278 	ld	-10 (ix), h
      000131 FD E1            [14]  279 	pop	iy
      000133 3Ar02r00         [13]  280 	ld	a, (_player_y+0)
      000136 DD 86 FB         [19]  281 	add	a, -5 (ix)
      000139 5F               [ 4]  282 	ld	e, a
      00013A 3Ar03r00         [13]  283 	ld	a, (_player_y+1)
      00013D DD 8E FC         [19]  284 	adc	a, -4 (ix)
      000140 57               [ 4]  285 	ld	d, a
      000141 DD 6E FD         [19]  286 	ld	l, -3 (ix)
                                    287 ;	spillPairReg hl
                                    288 ;	spillPairReg hl
      000144 26 00            [ 7]  289 	ld	h, #0x00
                                    290 ;	spillPairReg hl
                                    291 ;	spillPairReg hl
      000146 19               [11]  292 	add	hl, de
      000147 C5               [11]  293 	push	bc
      000148 FD E5            [15]  294 	push	iy
      00014A D1               [10]  295 	pop	de
      00014B CDr00r00         [17]  296 	call	_SMS_addSprite_f
      00014E C1               [10]  297 	pop	bc
                                    298 ;main.c:40: SMS_addSprite(player_x+(i<<3)+40,player_y+(j<<3)+numSprites*30,2*frame_player + 8*j + i);  
      00014F 3Ar00r00         [13]  299 	ld	a, (_player_x+0)
      000152 DD 86 F9         [19]  300 	add	a, -7 (ix)
      000155 5F               [ 4]  301 	ld	e, a
      000156 3Ar01r00         [13]  302 	ld	a, (_player_x+1)
      000159 DD 8E FA         [19]  303 	adc	a, -6 (ix)
      00015C 57               [ 4]  304 	ld	d, a
      00015D 21 28 00         [10]  305 	ld	hl, #0x0028
      000160 19               [11]  306 	add	hl, de
      000161 65               [ 4]  307 	ld	h, l
                                    308 ;	spillPairReg hl
                                    309 ;	spillPairReg hl
                                    310 ;	spillPairReg hl
                                    311 ;	spillPairReg hl
      000162 FD 2Ar04r00      [20]  312 	ld	iy, (_frame_player)
      000166 FD 29            [15]  313 	add	iy, iy
      000168 DD 5E FB         [19]  314 	ld	e, -5 (ix)
      00016B DD 56 FC         [19]  315 	ld	d, -4 (ix)
      00016E FD 19            [15]  316 	add	iy, de
      000170 D1               [10]  317 	pop	de
      000171 D5               [11]  318 	push	de
      000172 FD 19            [15]  319 	add	iy, de
      000174 FD E5            [15]  320 	push	iy
      000176 DD 74 F6         [19]  321 	ld	-10 (ix), h
      000179 FD E1            [14]  322 	pop	iy
      00017B 3Ar02r00         [13]  323 	ld	a, (_player_y+0)
      00017E DD 86 FB         [19]  324 	add	a, -5 (ix)
      000181 5F               [ 4]  325 	ld	e, a
      000182 3Ar03r00         [13]  326 	ld	a, (_player_y+1)
      000185 DD 8E FC         [19]  327 	adc	a, -4 (ix)
      000188 57               [ 4]  328 	ld	d, a
      000189 DD 6E FD         [19]  329 	ld	l, -3 (ix)
                                    330 ;	spillPairReg hl
                                    331 ;	spillPairReg hl
      00018C 26 00            [ 7]  332 	ld	h, #0x00
                                    333 ;	spillPairReg hl
                                    334 ;	spillPairReg hl
      00018E 19               [11]  335 	add	hl, de
      00018F C5               [11]  336 	push	bc
      000190 FD E5            [15]  337 	push	iy
      000192 D1               [10]  338 	pop	de
      000193 CDr00r00         [17]  339 	call	_SMS_addSprite_f
      000196 C1               [10]  340 	pop	bc
                                    341 ;main.c:41: SMS_addSprite(player_x+(i<<3)+60,player_y+(j<<3)+numSprites*30,2*frame_player + 8*j + i);  
      000197 DD 7E F9         [19]  342 	ld	a, -7 (ix)
      00019A 21r00r00         [10]  343 	ld	hl, #_player_x
      00019D 86               [ 7]  344 	add	a, (hl)
      00019E 5F               [ 4]  345 	ld	e, a
      00019F DD 7E FA         [19]  346 	ld	a, -6 (ix)
      0001A2 23               [ 6]  347 	inc	hl
      0001A3 8E               [ 7]  348 	adc	a, (hl)
      0001A4 57               [ 4]  349 	ld	d, a
      0001A5 21 3C 00         [10]  350 	ld	hl, #0x003c
      0001A8 19               [11]  351 	add	hl, de
      0001A9 55               [ 4]  352 	ld	d, l
      0001AA 2Ar04r00         [16]  353 	ld	hl, (_frame_player)
      0001AD 29               [11]  354 	add	hl, hl
      0001AE 7D               [ 4]  355 	ld	a, l
      0001AF DD 86 FB         [19]  356 	add	a, -5 (ix)
      0001B2 6F               [ 4]  357 	ld	l, a
                                    358 ;	spillPairReg hl
                                    359 ;	spillPairReg hl
      0001B3 7C               [ 4]  360 	ld	a, h
      0001B4 DD 8E FC         [19]  361 	adc	a, -4 (ix)
                                    362 ;	spillPairReg hl
                                    363 ;	spillPairReg hl
      0001B7 DD 7E F7         [19]  364 	ld	a, -9 (ix)
      0001BA 85               [ 4]  365 	add	a, l
                                    366 ;	spillPairReg hl
                                    367 ;	spillPairReg hl
                                    368 ;	spillPairReg hl
                                    369 ;	spillPairReg hl
                                    370 ;	spillPairReg hl
                                    371 ;	spillPairReg hl
      0001BB 5F               [ 4]  372 	ld	e, a
      0001BC DD 7E FB         [19]  373 	ld	a, -5 (ix)
      0001BF 21r02r00         [10]  374 	ld	hl, #_player_y
      0001C2 86               [ 7]  375 	add	a, (hl)
      0001C3 DD 77 F9         [19]  376 	ld	-7 (ix), a
      0001C6 DD 7E FC         [19]  377 	ld	a, -4 (ix)
      0001C9 23               [ 6]  378 	inc	hl
      0001CA 8E               [ 7]  379 	adc	a, (hl)
      0001CB DD 77 FA         [19]  380 	ld	-6 (ix), a
      0001CE DD 7E F9         [19]  381 	ld	a, -7 (ix)
      0001D1 DD 86 FD         [19]  382 	add	a, -3 (ix)
      0001D4 6F               [ 4]  383 	ld	l, a
                                    384 ;	spillPairReg hl
                                    385 ;	spillPairReg hl
      0001D5 DD 7E FA         [19]  386 	ld	a, -6 (ix)
      0001D8 DD 8E FE         [19]  387 	adc	a, -2 (ix)
      0001DB 67               [ 4]  388 	ld	h, a
                                    389 ;	spillPairReg hl
                                    390 ;	spillPairReg hl
      0001DC C5               [11]  391 	push	bc
      0001DD CDr00r00         [17]  392 	call	_SMS_addSprite_f
      0001E0 C1               [10]  393 	pop	bc
                                    394 ;main.c:37: for(i=0;i<2;i++) {
      0001E1 04               [ 4]  395 	inc	b
      0001E2 78               [ 4]  396 	ld	a, b
      0001E3 D6 02            [ 7]  397 	sub	a, #0x02
      0001E5 DAr64r00         [10]  398 	jp	C, 00104$
                                    399 ;main.c:36: for(j=0;j<3;j++) {
      0001E8 0C               [ 4]  400 	inc	c
      0001E9 79               [ 4]  401 	ld	a, c
      0001EA D6 03            [ 7]  402 	sub	a, #0x03
      0001EC DAr62r00         [10]  403 	jp	C, 00112$
                                    404 ;main.c:35: for(numSprites=0;numSprites<2;numSprites++){
      0001EF DD 34 FF         [23]  405 	inc	-1 (ix)
      0001F2 DD 7E FF         [19]  406 	ld	a, -1 (ix)
      0001F5 D6 02            [ 7]  407 	sub	a, #0x02
      0001F7 DAr60r00         [10]  408 	jp	C, 00114$
                                    409 ;main.c:46: }
      0001FA DD F9            [10]  410 	ld	sp, ix
      0001FC DD E1            [14]  411 	pop	ix
      0001FE C9               [10]  412 	ret
                                    413 ;main.c:48: void main(void)
                                    414 ;	---------------------------------
                                    415 ; Function main
                                    416 ; ---------------------------------
      0001FF                        417 _main::
      0001FF DD E5            [15]  418 	push	ix
      000201 DD 21 00 00      [14]  419 	ld	ix,#0
      000205 DD 39            [15]  420 	add	ix,sp
      000207 F5               [11]  421 	push	af
                                    422 ;main.c:53: SMS_VRAMmemsetW(0, 0x0000, 16384);
      000208 DD 36 FF 00      [19]  423 	ld	-1 (ix), #0x00
      00020C DD 36 FE 00      [19]  424 	ld	-2 (ix), #0x00
      000210 21 00 40         [10]  425 	ld	hl, #0x4000
      000213 E5               [11]  426 	push	hl
      000214 11 00 00         [10]  427 	ld	de, #0x0000
      000217 65               [ 4]  428 	ld	h, l
      000218 CDr00r00         [17]  429 	call	_SMS_VRAMmemsetW
                                    430 ;main.c:63: printf("Hello, World! [1/3]");
      00021B 21rC5r02         [10]  431 	ld	hl, #___str_0
      00021E E5               [11]  432 	push	hl
      00021F CDr00r00         [17]  433 	call	_printf
      000222 F1               [10]  434 	pop	af
                                    435 ;main.c:74: loadGrapVRAM();
      000223 CDr03r00         [17]  436 	call	_loadGrapVRAM
                                    437 ;main.c:76: SMS_displayOn();
      000226 21 40 01         [10]  438 	ld	hl, #0x0140
      000229 CDr00r00         [17]  439 	call	_SMS_VDPturnOnFeature
                                    440 ;main.c:77: SMS_setBGScrollX(scroll_x);
      00022C 2E 00            [ 7]  441 	ld	l, #0x00
                                    442 ;	spillPairReg hl
                                    443 ;	spillPairReg hl
      00022E CDr00r00         [17]  444 	call	_SMS_setBGScrollX
                                    445 ;main.c:78: SMS_setBGScrollY(scroll_y);
      000231 2E 00            [ 7]  446 	ld	l, #0x00
                                    447 ;	spillPairReg hl
                                    448 ;	spillPairReg hl
      000233 CDr00r00         [17]  449 	call	_SMS_setBGScrollY
                                    450 ;main.c:79: SMS_init();
      000236 CDr00r00         [17]  451 	call	_SMS_init
                                    452 ;main.c:80: SMS_setSpriteMode(SPRITEMODE_NORMAL);
      000239 2E 00            [ 7]  453 	ld	l, #0x00
                                    454 ;	spillPairReg hl
                                    455 ;	spillPairReg hl
      00023B CDr00r00         [17]  456 	call	_SMS_setSpriteMode
                                    457 ;main.c:84: PSGPlay(greenhill_psg);
      00023E 21r00r00         [10]  458 	ld	hl, #_greenhill_psg
      000241 CDr00r00         [17]  459 	call	_PSGPlay
                                    460 ;main.c:85: SMS_VDPturnOnFeature(VDPFEATURE_LEFTCOLBLANK);
      000244 21 20 00         [10]  461 	ld	hl, #0x0020
      000247 CDr00r00         [17]  462 	call	_SMS_VDPturnOnFeature
      00024A                        463 00110$:
                                    464 ;main.c:88: player_x++;
      00024A 2Ar00r00         [16]  465 	ld	hl, (_player_x)
      00024D 23               [ 6]  466 	inc	hl
      00024E 22r00r00         [16]  467 	ld	(_player_x), hl
                                    468 ;main.c:89: delay_frame_player++;
      000251 2Ar06r00         [16]  469 	ld	hl, (_delay_frame_player)
      000254 23               [ 6]  470 	inc	hl
      000255 22r06r00         [16]  471 	ld	(_delay_frame_player), hl
                                    472 ;main.c:90: if(delay_frame_player%16==0){
      000258 11 10 00         [10]  473 	ld	de, #0x0010
      00025B 2Ar06r00         [16]  474 	ld	hl, (_delay_frame_player)
      00025E CDr00r00         [17]  475 	call	__modsint
      000261 7A               [ 4]  476 	ld	a, d
      000262 B3               [ 4]  477 	or	a, e
      000263 20 23            [12]  478 	jr	NZ, 00104$
                                    479 ;main.c:91: frame_player++;
      000265 2Ar04r00         [16]  480 	ld	hl, (_frame_player)
      000268 23               [ 6]  481 	inc	hl
      000269 22r04r00         [16]  482 	ld	(_frame_player), hl
                                    483 ;main.c:92: if(frame_player>3){
      00026C 3E 03            [ 7]  484 	ld	a, #0x03
      00026E FD 21r04r00      [14]  485 	ld	iy, #_frame_player
      000272 FD BE 00         [19]  486 	cp	a, 0 (iy)
      000275 3E 00            [ 7]  487 	ld	a, #0x00
      000277 FD 9E 01         [19]  488 	sbc	a, 1 (iy)
      00027A E2r7Fr02         [10]  489 	jp	PO, 00149$
      00027D EE 80            [ 7]  490 	xor	a, #0x80
      00027F                        491 00149$:
      00027F F2r88r02         [10]  492 	jp	P, 00104$
                                    493 ;main.c:93: frame_player=0;
      000282 21 00 00         [10]  494 	ld	hl, #0x0000
      000285 22r04r00         [16]  495 	ld	(_frame_player), hl
      000288                        496 00104$:
                                    497 ;main.c:97: SMS_initSprites();
      000288 CDr00r00         [17]  498 	call	_SMS_initSprites
                                    499 ;main.c:98: draw_main_character();
      00028B CDr4Fr00         [17]  500 	call	_draw_main_character
                                    501 ;main.c:99: SMS_finalizeSprites();
      00028E CDr00r00         [17]  502 	call	_SMS_finalizeSprites
                                    503 ;main.c:100: SMS_waitForVBlank();
      000291 CDr00r00         [17]  504 	call	_SMS_waitForVBlank
                                    505 ;main.c:101: SMS_copySpritestoSAT();
      000294 CDr00r00         [17]  506 	call	_SMS_copySpritestoSAT
                                    507 ;main.c:102: PSGFrame();
      000297 CDr00r00         [17]  508 	call	_PSGFrame
                                    509 ;main.c:103: SMS_displayOff();
      00029A 21 40 01         [10]  510 	ld	hl, #0x0140
      00029D CDr00r00         [17]  511 	call	_SMS_VDPturnOffFeature
                                    512 ;main.c:104: if(scroll_y%2==0)
      0002A0 DD CB FF 46      [20]  513 	bit	0, -1 (ix)
      0002A4 20 03            [12]  514 	jr	NZ, 00106$
                                    515 ;main.c:105: scroll_x += 1;
      0002A6 DD 34 FE         [23]  516 	inc	-2 (ix)
      0002A9                        517 00106$:
                                    518 ;main.c:106: scroll_y++;
      0002A9 DD 34 FF         [23]  519 	inc	-1 (ix)
                                    520 ;main.c:107: if(scroll_y==224)
      0002AC DD 7E FF         [19]  521 	ld	a, -1 (ix)
      0002AF D6 E0            [ 7]  522 	sub	a, #0xe0
      0002B1 20 04            [12]  523 	jr	NZ, 00108$
                                    524 ;main.c:108: scroll_y=0;
      0002B3 DD 36 FF 00      [19]  525 	ld	-1 (ix), #0x00
      0002B7                        526 00108$:
                                    527 ;main.c:110: SMS_setBGScrollX(scroll_x);
      0002B7 DD 6E FE         [19]  528 	ld	l, -2 (ix)
                                    529 ;	spillPairReg hl
                                    530 ;	spillPairReg hl
      0002BA CDr00r00         [17]  531 	call	_SMS_setBGScrollX
                                    532 ;main.c:112: SMS_displayOn();
      0002BD 21 40 01         [10]  533 	ld	hl, #0x0140
      0002C0 CDr00r00         [17]  534 	call	_SMS_VDPturnOnFeature
                                    535 ;main.c:114: }
      0002C3 18 85            [12]  536 	jr	00110$
      0002C5                        537 ___str_0:
      0002C5 48 65 6C 6C 6F 2C 20   538 	.ascii "Hello, World! [1/3]"
             57 6F 72 6C 64 21 20
             5B 31 2F 33 5D
      0002D8 00                     539 	.db 0x00
                                    540 	.area _CODE
      0002D9                        541 __str_1:
      0002D9 72 61 70 68 6E 65 74   542 	.ascii "raphnet"
      0002E0 00                     543 	.db 0x00
      0002E1                        544 __str_2:
      0002E1 62 61 73 69 63 20 65   545 	.ascii "basic example"
             78 61 6D 70 6C 65
      0002EE 00                     546 	.db 0x00
      0002EF                        547 __str_3:
      0002EF 41 20 73 69 6D 70 6C   548 	.ascii "A simple example"
             65 20 65 78 61 6D 70
             6C 65
      0002FF 00                     549 	.db 0x00
                                    550 	.area _INITIALIZER
      000000                        551 __xinit__player_x:
      000000 32 00                  552 	.dw #0x0032
      000002                        553 __xinit__player_y:
      000002 32 00                  554 	.dw #0x0032
      000004                        555 __xinit__frame_player:
      000004 00 00                  556 	.dw #0x0000
      000006                        557 __xinit__delay_frame_player:
      000006 04 00                  558 	.dw #0x0004
                                    559 	.area _CABS (ABS)
      007FF0                        560 	.org 0x7FF0
      007FF0                        561 ___SMS__SEGA_signature:
      007FF0 54                     562 	.db #0x54	; 84	'T'
      007FF1 4D                     563 	.db #0x4d	; 77	'M'
      007FF2 52                     564 	.db #0x52	; 82	'R'
      007FF3 20                     565 	.db #0x20	; 32
      007FF4 53                     566 	.db #0x53	; 83	'S'
      007FF5 45                     567 	.db #0x45	; 69	'E'
      007FF6 47                     568 	.db #0x47	; 71	'G'
      007FF7 41                     569 	.db #0x41	; 65	'A'
      007FF8 FF                     570 	.db #0xff	; 255
      007FF9 FF                     571 	.db #0xff	; 255
      007FFA FF                     572 	.db #0xff	; 255
      007FFB FF                     573 	.db #0xff	; 255
      007FFC 99                     574 	.db #0x99	; 153
      007FFD 99                     575 	.db #0x99	; 153
      007FFE 00                     576 	.db #0x00	; 0
      007FFF 4C                     577 	.db #0x4c	; 76	'L'
      007FD8                        578 	.org 0x7FD8
      007FD8                        579 ___SMS__SDSC_author:
      007FD8 72 61 70 68 6E 65 74   580 	.ascii "raphnet"
      007FDF 00                     581 	.db 0x00
      007FCA                        582 	.org 0x7FCA
      007FCA                        583 ___SMS__SDSC_name:
      007FCA 62 61 73 69 63 20 65   584 	.ascii "basic example"
             78 61 6D 70 6C 65
      007FD7 00                     585 	.db 0x00
      007FB9                        586 	.org 0x7FB9
      007FB9                        587 ___SMS__SDSC_descr:
      007FB9 41 20 73 69 6D 70 6C   588 	.ascii "A simple example"
             65 20 65 78 61 6D 70
             6C 65
      007FC9 00                     589 	.db 0x00
      007FE0                        590 	.org 0x7FE0
      007FE0                        591 ___SMS__SDSC_signature:
      007FE0 53                     592 	.db #0x53	; 83	'S'
      007FE1 44                     593 	.db #0x44	; 68	'D'
      007FE2 53                     594 	.db #0x53	; 83	'S'
      007FE3 43                     595 	.db #0x43	; 67	'C'
      007FE4 01                     596 	.db #0x01	; 1
      007FE5 00                     597 	.db #0x00	; 0
      007FE6 00                     598 	.db #0x00	; 0
      007FE7 00                     599 	.db #0x00	; 0
      007FE8 00                     600 	.db #0x00	; 0
      007FE9 00                     601 	.db #0x00	; 0
      007FEA D8                     602 	.db #0xd8	; 216
      007FEB 7F                     603 	.db #0x7f	; 127
      007FEC CA                     604 	.db #0xca	; 202
      007FED 7F                     605 	.db #0x7f	; 127
      007FEE B9                     606 	.db #0xb9	; 185
      007FEF 7F                     607 	.db #0x7f	; 127
