                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14549 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___SMS__SDSC_signature
                                     12 	.globl ___SMS__SDSC_descr
                                     13 	.globl ___SMS__SDSC_name
                                     14 	.globl ___SMS__SDSC_author
                                     15 	.globl ___SMS__SEGA_signature
                                     16 	.globl _main
                                     17 	.globl _moveAlex
                                     18 	.globl _drawAlex
                                     19 	.globl _moveAlexAire
                                     20 	.globl _moveAlexSuelo
                                     21 	.globl _canRight
                                     22 	.globl _canLeft
                                     23 	.globl _canDown
                                     24 	.globl _canUp
                                     25 	.globl _PSGSFXFrame
                                     26 	.globl _PSGFrame
                                     27 	.globl _PSGSFXPlay
                                     28 	.globl _PSGPlay
                                     29 	.globl _SMS_VRAMmemsetW
                                     30 	.globl _SMS_VRAMmemcpy
                                     31 	.globl _SMS_setFrameInterruptHandler
                                     32 	.globl _SMS_resetPauseRequest
                                     33 	.globl _SMS_queryPauseRequested
                                     34 	.globl _SMS_getKeysHeld
                                     35 	.globl _SMS_getKeysPressed
                                     36 	.globl _SMS_loadSpritePalette
                                     37 	.globl _SMS_loadBGPalette
                                     38 	.globl _SMS_setSpritePaletteColor
                                     39 	.globl _SMS_updateSpritePosition
                                     40 	.globl _SMS_addSprite_f
                                     41 	.globl _SMS_initSprites
                                     42 	.globl _SMS_waitForVBlank
                                     43 	.globl _SMS_setSpriteMode
                                     44 	.globl _SMS_setBGScrollY
                                     45 	.globl _SMS_setBGScrollX
                                     46 	.globl _SMS_VDPturnOnFeature
                                     47 	.globl _SMS_init
                                     48 	.globl _copySpritestoSAT
                                     49 	.globl _addHardwareSprite
                                     50 	.globl _generateSpriteNoRAM
                                     51 	.globl _generateSpriteFlip
                                     52 	.globl _printf
                                     53 	.globl _spritePuno
                                     54 	.globl _spritePajaro
                                     55 	.globl _spriteAlex
                                     56 	.globl _lastFrame
                                     57 	.globl _alex
                                     58 	.globl _maxSalto
                                     59 	.globl _flipArray
                                     60 	.globl _nextVRAMsprites
                                     61 	.globl _numSprites
                                     62 	.globl _pajaros
                                     63 	.globl _SMS_SRAM
                                     64 	.globl _SRAM_bank_to_be_mapped_on_slot2
                                     65 	.globl _ROM_bank_to_be_mapped_on_slot0
                                     66 	.globl _ROM_bank_to_be_mapped_on_slot1
                                     67 	.globl _ROM_bank_to_be_mapped_on_slot2
                                     68 	.globl _SpriteNextFree2
                                     69 	.globl _SpriteTableXN2
                                     70 	.globl _SpriteTableY2
                                     71 	.globl _hardwareSprites
                                     72 	.globl _buffer64
                                     73 	.globl _generateSprite
                                     74 	.globl _initSpritesVariables
                                     75 	.globl _draw_entidad
                                     76 	.globl _disableSprites
                                     77 	.globl _playMusic
                                     78 	.globl _dibujaPajaros
                                     79 	.globl _loadGrapVRAM
                                     80 	.globl _inicializaPajaros
                                     81 ;--------------------------------------------------------
                                     82 ; special function registers
                                     83 ;--------------------------------------------------------
                           0000BF    84 _VDPControlPort	=	0x00bf
                           0000BF    85 _VDPStatusPort	=	0x00bf
                           0000BE    86 _VDPDataPort	=	0x00be
                           00007E    87 _VDPVCounterPort	=	0x007e
                           00007F    88 _VDPHCounterPort	=	0x007f
                                     89 ;--------------------------------------------------------
                                     90 ; ram data
                                     91 ;--------------------------------------------------------
                                     92 	.area _DATA
      000000                         93 _buffer64::
      000000                         94 	.ds 64
      000040                         95 _hardwareSprites::
      000040                         96 	.ds 768
      000340                         97 _SpriteTableY2::
      000340                         98 	.ds 2
      000342                         99 _SpriteTableXN2::
      000342                        100 	.ds 2
      000344                        101 _SpriteNextFree2::
      000344                        102 	.ds 2
                           00FFFF   103 _ROM_bank_to_be_mapped_on_slot2	=	0xffff
                           00FFFE   104 _ROM_bank_to_be_mapped_on_slot1	=	0xfffe
                           00FFFD   105 _ROM_bank_to_be_mapped_on_slot0	=	0xfffd
                           00FFFC   106 _SRAM_bank_to_be_mapped_on_slot2	=	0xfffc
                           008000   107 _SMS_SRAM	=	0x8000
      000346                        108 _pajaros::
      000346                        109 	.ds 266
      000450                        110 _numSprites::
      000450                        111 	.ds 2
                                    112 ;--------------------------------------------------------
                                    113 ; ram data
                                    114 ;--------------------------------------------------------
                                    115 	.area _INITIALIZED
      000000                        116 _nextVRAMsprites::
      000000                        117 	.ds 2
      000002                        118 _flipArray::
      000002                        119 	.ds 256
      000102                        120 _maxSalto::
      000102                        121 	.ds 1
      000103                        122 _alex::
      000103                        123 	.ds 14
      000111                        124 _lastFrame::
      000111                        125 	.ds 1
      000112                        126 _spriteAlex::
      000112                        127 	.ds 10
      00011C                        128 _spritePajaro::
      00011C                        129 	.ds 10
      000126                        130 _spritePuno::
      000126                        131 	.ds 10
                                    132 ;--------------------------------------------------------
                                    133 ; absolute external ram data
                                    134 ;--------------------------------------------------------
                                    135 	.area _DABS (ABS)
                                    136 ;--------------------------------------------------------
                                    137 ; global & static initialisations
                                    138 ;--------------------------------------------------------
                                    139 	.area _HOME
                                    140 	.area _GSINIT
                                    141 	.area _GSFINAL
                                    142 	.area _GSINIT
                                    143 ;--------------------------------------------------------
                                    144 ; Home
                                    145 ;--------------------------------------------------------
                                    146 	.area _HOME
                                    147 	.area _HOME
                                    148 ;--------------------------------------------------------
                                    149 ; code
                                    150 ;--------------------------------------------------------
                                    151 	.area _CODE
                                    152 ;./lib/./sprite.c:24: T_sprite generateSpriteFlip(unsigned char ancho, unsigned char alto, int tam,const unsigned char data[]) {
                                    153 ;	---------------------------------
                                    154 ; Function generateSpriteFlip
                                    155 ; ---------------------------------
      000000                        156 _generateSpriteFlip::
      000000 DD E5            [15]  157 	push	ix
      000002 DD 21 00 00      [14]  158 	ld	ix,#0
      000006 DD 39            [15]  159 	add	ix,sp
      000008 FD 21 EC FF      [14]  160 	ld	iy, #-20
      00000C FD 39            [15]  161 	add	iy, sp
      00000E FD F9            [10]  162 	ld	sp, iy
                                    163 ;./lib/./sprite.c:25: unsigned char tamano = alto*ancho*2;
      000010 DD 77 F9         [19]  164 	ld	-7 (ix), a
      000013 DD 75 F8         [19]  165 	ld	-8 (ix), l
      000016 5F               [ 4]  166 	ld	e, a
      000017 65               [ 4]  167 	ld	h, l
                                    168 ;	spillPairReg hl
                                    169 ;	spillPairReg hl
      000018 2E 00            [ 7]  170 	ld	l, #0x00
      00001A 55               [ 4]  171 	ld	d, l
      00001B 06 08            [ 7]  172 	ld	b, #0x08
      00001D                        173 00175$:
      00001D 29               [11]  174 	add	hl, hl
      00001E 30 01            [12]  175 	jr	NC, 00176$
      000020 19               [11]  176 	add	hl, de
      000021                        177 00176$:
      000021 10 FA            [13]  178 	djnz	00175$
      000023 4D               [ 4]  179 	ld	c, l
      000024 CB 21            [ 8]  180 	sla	c
                                    181 ;./lib/./sprite.c:26: T_sprite sprite = {alto,ancho,tamano,tam/(tamano*32),nextVRAMsprites, 1,0};
      000026 DD 7E F8         [19]  182 	ld	a, -8 (ix)
      000029 DD 77 EC         [19]  183 	ld	-20 (ix), a
      00002C DD 7E F9         [19]  184 	ld	a, -7 (ix)
      00002F DD 77 ED         [19]  185 	ld	-19 (ix), a
      000032 DD 71 EE         [19]  186 	ld	-18 (ix), c
      000035 DD 71 FE         [19]  187 	ld	-2 (ix), c
      000038 DD 36 FF 00      [19]  188 	ld	-1 (ix), #0x00
      00003C 69               [ 4]  189 	ld	l, c
      00003D 26 00            [ 7]  190 	ld	h, #0x00
      00003F 29               [11]  191 	add	hl, hl
      000040 29               [11]  192 	add	hl, hl
      000041 29               [11]  193 	add	hl, hl
      000042 29               [11]  194 	add	hl, hl
      000043 29               [11]  195 	add	hl, hl
      000044 C5               [11]  196 	push	bc
      000045 EB               [ 4]  197 	ex	de, hl
      000046 DD 6E 06         [19]  198 	ld	l, 6 (ix)
                                    199 ;	spillPairReg hl
                                    200 ;	spillPairReg hl
      000049 DD 66 07         [19]  201 	ld	h, 7 (ix)
                                    202 ;	spillPairReg hl
                                    203 ;	spillPairReg hl
      00004C CDr00r00         [17]  204 	call	__divsint
      00004F C1               [10]  205 	pop	bc
      000050 DD 73 EF         [19]  206 	ld	-17 (ix), e
      000053 3Ar00r00         [13]  207 	ld	a, (_nextVRAMsprites+0)
      000056 DD 77 F0         [19]  208 	ld	-16 (ix), a
      000059 3Ar01r00         [13]  209 	ld	a, (_nextVRAMsprites+1)
      00005C DD 77 F1         [19]  210 	ld	-15 (ix), a
      00005F DD 36 F2 01      [19]  211 	ld	-14 (ix), #0x01
      000063 AF               [ 4]  212 	xor	a, a
      000064 DD 77 F3         [19]  213 	ld	-13 (ix), a
      000067 DD 77 F4         [19]  214 	ld	-12 (ix), a
      00006A DD 36 F5 00      [19]  215 	ld	-11 (ix), #0x00
                                    216 ;./lib/./sprite.c:27: SMS_loadTiles(data,nextVRAMsprites,tam);
      00006E DD 5E 08         [19]  217 	ld	e, 8 (ix)
      000071 DD 56 09         [19]  218 	ld	d, 9 (ix)
      000074 2Ar00r00         [16]  219 	ld	hl, (_nextVRAMsprites)
      000077 29               [11]  220 	add	hl, hl
      000078 29               [11]  221 	add	hl, hl
      000079 29               [11]  222 	add	hl, hl
      00007A 29               [11]  223 	add	hl, hl
      00007B 29               [11]  224 	add	hl, hl
      00007C CB F4            [ 8]  225 	set	6, h
      00007E C5               [11]  226 	push	bc
      00007F E5               [11]  227 	push	hl
      000080 DD 6E 06         [19]  228 	ld	l, 6 (ix)
                                    229 ;	spillPairReg hl
                                    230 ;	spillPairReg hl
      000083 DD 66 07         [19]  231 	ld	h, 7 (ix)
                                    232 ;	spillPairReg hl
                                    233 ;	spillPairReg hl
      000086 E3               [19]  234 	ex	(sp), hl
      000087 CDr00r00         [17]  235 	call	_SMS_VRAMmemcpy
      00008A C1               [10]  236 	pop	bc
                                    237 ;./lib/./sprite.c:28: nextVRAMsprites = nextVRAMsprites + (tamano*sprite.numFrames);
      00008B DD 5E EF         [19]  238 	ld	e, -17 (ix)
      00008E 61               [ 4]  239 	ld	h, c
                                    240 ;	spillPairReg hl
                                    241 ;	spillPairReg hl
      00008F 2E 00            [ 7]  242 	ld	l, #0x00
      000091 55               [ 4]  243 	ld	d, l
      000092 06 08            [ 7]  244 	ld	b, #0x08
      000094                        245 00177$:
      000094 29               [11]  246 	add	hl, hl
      000095 30 01            [12]  247 	jr	NC, 00178$
      000097 19               [11]  248 	add	hl, de
      000098                        249 00178$:
      000098 10 FA            [13]  250 	djnz	00177$
      00009A EB               [ 4]  251 	ex	de, hl
      00009B 21r00r00         [10]  252 	ld	hl, #_nextVRAMsprites
      00009E 7E               [ 7]  253 	ld	a, (hl)
      00009F 83               [ 4]  254 	add	a, e
      0000A0 77               [ 7]  255 	ld	(hl), a
      0000A1 23               [ 6]  256 	inc	hl
      0000A2 7E               [ 7]  257 	ld	a, (hl)
      0000A3 8A               [ 4]  258 	adc	a, d
      0000A4 77               [ 7]  259 	ld	(hl), a
                                    260 ;./lib/./sprite.c:30: unsigned char y,x, numFrames = tamano/(alto*ancho);
      0000A5 DD 5E F9         [19]  261 	ld	e, -7 (ix)
      0000A8 DD 66 F8         [19]  262 	ld	h, -8 (ix)
                                    263 ;	spillPairReg hl
                                    264 ;	spillPairReg hl
      0000AB 2E 00            [ 7]  265 	ld	l, #0x00
      0000AD 55               [ 4]  266 	ld	d, l
      0000AE 06 08            [ 7]  267 	ld	b, #0x08
      0000B0                        268 00179$:
      0000B0 29               [11]  269 	add	hl, hl
      0000B1 30 01            [12]  270 	jr	NC, 00180$
      0000B3 19               [11]  271 	add	hl, de
      0000B4                        272 00180$:
      0000B4 10 FA            [13]  273 	djnz	00179$
      0000B6 EB               [ 4]  274 	ex	de, hl
      0000B7 DD 6E FE         [19]  275 	ld	l, -2 (ix)
                                    276 ;	spillPairReg hl
                                    277 ;	spillPairReg hl
      0000BA DD 66 FF         [19]  278 	ld	h, -1 (ix)
                                    279 ;	spillPairReg hl
                                    280 ;	spillPairReg hl
      0000BD CDr00r00         [17]  281 	call	__divsint
      0000C0 DD 73 FA         [19]  282 	ld	-6 (ix), e
                                    283 ;./lib/./sprite.c:31: int offset = 0, yOffset = 0;
      0000C3 01 00 00         [10]  284 	ld	bc, #0x0000
      0000C6 50               [ 4]  285 	ld	d, b
      0000C7 59               [ 4]  286 	ld	e, c
                                    287 ;./lib/./sprite.c:32: while(numFrames) {
      0000C8                        288 00110$:
      0000C8 DD 7E FA         [19]  289 	ld	a, -6 (ix)
      0000CB B7               [ 4]  290 	or	a, a
      0000CC CAr87r01         [10]  291 	jp	Z, 00112$
                                    292 ;./lib/./sprite.c:34: while (y) {
      0000CF DD 7E F8         [19]  293 	ld	a, -8 (ix)
      0000D2 DD 77 FB         [19]  294 	ld	-5 (ix), a
      0000D5                        295 00107$:
      0000D5 DD 7E FB         [19]  296 	ld	a, -5 (ix)
      0000D8 B7               [ 4]  297 	or	a, a
      0000D9 CAr81r01         [10]  298 	jp	Z, 00109$
                                    299 ;./lib/./sprite.c:36: offset = offset + x*64 - 64; // voy al principio del último tile
      0000DC DD 6E F9         [19]  300 	ld	l, -7 (ix)
                                    301 ;	spillPairReg hl
                                    302 ;	spillPairReg hl
      0000DF 26 00            [ 7]  303 	ld	h, #0x00
                                    304 ;	spillPairReg hl
                                    305 ;	spillPairReg hl
      0000E1 29               [11]  306 	add	hl, hl
      0000E2 29               [11]  307 	add	hl, hl
      0000E3 29               [11]  308 	add	hl, hl
      0000E4 29               [11]  309 	add	hl, hl
      0000E5 29               [11]  310 	add	hl, hl
      0000E6 29               [11]  311 	add	hl, hl
      0000E7 09               [11]  312 	add	hl, bc
      0000E8 7D               [ 4]  313 	ld	a, l
      0000E9 C6 C0            [ 7]  314 	add	a, #0xc0
      0000EB DD 77 FC         [19]  315 	ld	-4 (ix), a
      0000EE 7C               [ 4]  316 	ld	a, h
      0000EF CE FF            [ 7]  317 	adc	a, #0xff
      0000F1 DD 77 FD         [19]  318 	ld	-3 (ix), a
                                    319 ;./lib/./sprite.c:37: while(x) {
      0000F4 4B               [ 4]  320 	ld	c, e
      0000F5 42               [ 4]  321 	ld	b, d
      0000F6 DD 7E F9         [19]  322 	ld	a, -7 (ix)
      0000F9 DD 77 FE         [19]  323 	ld	-2 (ix), a
      0000FC                        324 00104$:
      0000FC DD 7E FE         [19]  325 	ld	a, -2 (ix)
      0000FF B7               [ 4]  326 	or	a, a
      000100 28 77            [12]  327 	jr	Z, 00124$
                                    328 ;./lib/./sprite.c:40: while(i<64){
      000102 DD 5E FC         [19]  329 	ld	e, -4 (ix)
      000105 DD 56 FD         [19]  330 	ld	d, -3 (ix)
      000108 DD 36 FF 00      [19]  331 	ld	-1 (ix), #0x00
      00010C                        332 00101$:
      00010C DD 7E FF         [19]  333 	ld	a, -1 (ix)
      00010F D6 40            [ 7]  334 	sub	a, #0x40
      000111 30 2D            [12]  335 	jr	NC, 00103$
                                    336 ;./lib/./sprite.c:41: buffer64[i] = flipArray[data[offset2]];
      000113 3Er00            [ 7]  337 	ld	a, #<(_buffer64)
      000115 DD 86 FF         [19]  338 	add	a, -1 (ix)
      000118 DD 77 F6         [19]  339 	ld	-10 (ix), a
      00011B 3Es00            [ 7]  340 	ld	a, #>(_buffer64)
      00011D CE 00            [ 7]  341 	adc	a, #0x00
      00011F DD 77 F7         [19]  342 	ld	-9 (ix), a
      000122 DD 6E 08         [19]  343 	ld	l, 8 (ix)
                                    344 ;	spillPairReg hl
                                    345 ;	spillPairReg hl
      000125 DD 66 09         [19]  346 	ld	h, 9 (ix)
                                    347 ;	spillPairReg hl
                                    348 ;	spillPairReg hl
      000128 19               [11]  349 	add	hl, de
      000129 7E               [ 7]  350 	ld	a, (hl)
      00012A C6r02            [ 7]  351 	add	a, #<(_flipArray)
      00012C 6F               [ 4]  352 	ld	l, a
                                    353 ;	spillPairReg hl
                                    354 ;	spillPairReg hl
      00012D 3E 00            [ 7]  355 	ld	a, #0x00
      00012F CEs00            [ 7]  356 	adc	a, #>(_flipArray)
      000131 67               [ 4]  357 	ld	h, a
                                    358 ;	spillPairReg hl
                                    359 ;	spillPairReg hl
      000132 7E               [ 7]  360 	ld	a, (hl)
      000133 DD 6E F6         [19]  361 	ld	l, -10 (ix)
      000136 DD 66 F7         [19]  362 	ld	h, -9 (ix)
      000139 77               [ 7]  363 	ld	(hl), a
                                    364 ;./lib/./sprite.c:42: offset2++;
      00013A 13               [ 6]  365 	inc	de
                                    366 ;./lib/./sprite.c:43: i++;
      00013B DD 34 FF         [23]  367 	inc	-1 (ix)
      00013E 18 CC            [12]  368 	jr	00101$
      000140                        369 00103$:
                                    370 ;./lib/./sprite.c:45: SMS_loadTiles(&buffer64,nextVRAMsprites,64);
      000140 2Ar00r00         [16]  371 	ld	hl, (_nextVRAMsprites)
      000143 29               [11]  372 	add	hl, hl
      000144 29               [11]  373 	add	hl, hl
      000145 29               [11]  374 	add	hl, hl
      000146 29               [11]  375 	add	hl, hl
      000147 29               [11]  376 	add	hl, hl
      000148 CB F4            [ 8]  377 	set	6, h
      00014A C5               [11]  378 	push	bc
      00014B 11 40 00         [10]  379 	ld	de, #0x0040
      00014E D5               [11]  380 	push	de
      00014F 11r00r00         [10]  381 	ld	de, #_buffer64
      000152 CDr00r00         [17]  382 	call	_SMS_VRAMmemcpy
      000155 C1               [10]  383 	pop	bc
                                    384 ;./lib/./sprite.c:46: offset = offset - 64; // voy al anterior tile
      000156 DD 7E FC         [19]  385 	ld	a, -4 (ix)
      000159 C6 C0            [ 7]  386 	add	a, #0xc0
      00015B DD 77 FC         [19]  387 	ld	-4 (ix), a
      00015E DD 7E FD         [19]  388 	ld	a, -3 (ix)
      000161 CE FF            [ 7]  389 	adc	a, #0xff
      000163 DD 77 FD         [19]  390 	ld	-3 (ix), a
                                    391 ;./lib/./sprite.c:47: yOffset = yOffset + 64;
      000166 21 40 00         [10]  392 	ld	hl, #0x0040
      000169 09               [11]  393 	add	hl, bc
      00016A 4D               [ 4]  394 	ld	c, l
      00016B 44               [ 4]  395 	ld	b, h
                                    396 ;./lib/./sprite.c:48: nextVRAMsprites += 2;
      00016C 2Ar00r00         [16]  397 	ld	hl, (_nextVRAMsprites)
      00016F 23               [ 6]  398 	inc	hl
      000170 23               [ 6]  399 	inc	hl
      000171 22r00r00         [16]  400 	ld	(_nextVRAMsprites), hl
                                    401 ;./lib/./sprite.c:49: x--;
      000174 DD 35 FE         [23]  402 	dec	-2 (ix)
      000177 18 83            [12]  403 	jr	00104$
      000179                        404 00124$:
      000179 59               [ 4]  405 	ld	e, c
      00017A 50               [ 4]  406 	ld	d, b
                                    407 ;./lib/./sprite.c:51: offset = yOffset;
                                    408 ;./lib/./sprite.c:52: y--;
      00017B DD 35 FB         [23]  409 	dec	-5 (ix)
      00017E C3rD5r00         [10]  410 	jp	00107$
      000181                        411 00109$:
                                    412 ;./lib/./sprite.c:54: numFrames--;
      000181 DD 35 FA         [23]  413 	dec	-6 (ix)
      000184 C3rC8r00         [10]  414 	jp	00110$
      000187                        415 00112$:
                                    416 ;./lib/./sprite.c:56: return sprite;
      000187 21 18 00         [10]  417 	ld	hl, #24
      00018A 39               [11]  418 	add	hl, sp
      00018B 5E               [ 7]  419 	ld	e, (hl)
      00018C 23               [ 6]  420 	inc	hl
      00018D 56               [ 7]  421 	ld	d, (hl)
      00018E 21 00 00         [10]  422 	ld	hl, #0
      000191 39               [11]  423 	add	hl, sp
      000192 01 0A 00         [10]  424 	ld	bc, #10
      000195 ED B0            [21]  425 	ldir
                                    426 ;./lib/./sprite.c:57: }
      000197 DD F9            [10]  427 	ld	sp, ix
      000199 DD E1            [14]  428 	pop	ix
      00019B C9               [10]  429 	ret
                                    430 ;./lib/./sprite.c:61: T_sprite generateSprite(unsigned char ancho, unsigned char alto, int tam,const unsigned char data[]) {
                                    431 ;	---------------------------------
                                    432 ; Function generateSprite
                                    433 ; ---------------------------------
      00019C                        434 _generateSprite::
      00019C DD E5            [15]  435 	push	ix
      00019E DD 21 00 00      [14]  436 	ld	ix,#0
      0001A2 DD 39            [15]  437 	add	ix,sp
      0001A4 FD 21 F6 FF      [14]  438 	ld	iy, #-10
      0001A8 FD 39            [15]  439 	add	iy, sp
      0001AA FD F9            [10]  440 	ld	sp, iy
      0001AC 5F               [ 4]  441 	ld	e, a
      0001AD 55               [ 4]  442 	ld	d, l
                                    443 ;./lib/./sprite.c:62: unsigned char tamano = alto*ancho*2;
      0001AE D5               [11]  444 	push	de
      0001AF 62               [ 4]  445 	ld	h, d
                                    446 ;	spillPairReg hl
                                    447 ;	spillPairReg hl
      0001B0 2E 00            [ 7]  448 	ld	l, #0x00
      0001B2 55               [ 4]  449 	ld	d, l
      0001B3 06 08            [ 7]  450 	ld	b, #0x08
      0001B5                        451 00103$:
      0001B5 29               [11]  452 	add	hl, hl
      0001B6 30 01            [12]  453 	jr	NC, 00104$
      0001B8 19               [11]  454 	add	hl, de
      0001B9                        455 00104$:
      0001B9 10 FA            [13]  456 	djnz	00103$
      0001BB D1               [10]  457 	pop	de
      0001BC 4D               [ 4]  458 	ld	c, l
      0001BD CB 21            [ 8]  459 	sla	c
                                    460 ;./lib/./sprite.c:63: T_sprite sprite = {alto,ancho,tamano,tam/(tamano*32),nextVRAMsprites, 1,0};
      0001BF DD 72 F6         [19]  461 	ld	-10 (ix), d
      0001C2 DD 73 F7         [19]  462 	ld	-9 (ix), e
      0001C5 DD 71 F8         [19]  463 	ld	-8 (ix), c
      0001C8 69               [ 4]  464 	ld	l, c
                                    465 ;	spillPairReg hl
                                    466 ;	spillPairReg hl
      0001C9 26 00            [ 7]  467 	ld	h, #0x00
                                    468 ;	spillPairReg hl
                                    469 ;	spillPairReg hl
      0001CB 29               [11]  470 	add	hl, hl
      0001CC 29               [11]  471 	add	hl, hl
      0001CD 29               [11]  472 	add	hl, hl
      0001CE 29               [11]  473 	add	hl, hl
      0001CF 29               [11]  474 	add	hl, hl
      0001D0 C5               [11]  475 	push	bc
      0001D1 EB               [ 4]  476 	ex	de, hl
      0001D2 DD 6E 06         [19]  477 	ld	l, 6 (ix)
                                    478 ;	spillPairReg hl
                                    479 ;	spillPairReg hl
      0001D5 DD 66 07         [19]  480 	ld	h, 7 (ix)
                                    481 ;	spillPairReg hl
                                    482 ;	spillPairReg hl
      0001D8 CDr00r00         [17]  483 	call	__divsint
      0001DB C1               [10]  484 	pop	bc
      0001DC DD 73 F9         [19]  485 	ld	-7 (ix), e
      0001DF 3Ar00r00         [13]  486 	ld	a, (_nextVRAMsprites+0)
      0001E2 DD 77 FA         [19]  487 	ld	-6 (ix), a
      0001E5 3Ar01r00         [13]  488 	ld	a, (_nextVRAMsprites+1)
      0001E8 DD 77 FB         [19]  489 	ld	-5 (ix), a
      0001EB DD 36 FC 01      [19]  490 	ld	-4 (ix), #0x01
      0001EF AF               [ 4]  491 	xor	a, a
      0001F0 DD 77 FD         [19]  492 	ld	-3 (ix), a
      0001F3 DD 77 FE         [19]  493 	ld	-2 (ix), a
      0001F6 DD 36 FF 00      [19]  494 	ld	-1 (ix), #0x00
                                    495 ;./lib/./sprite.c:64: SMS_loadTiles(data,nextVRAMsprites,tam);
      0001FA DD 5E 08         [19]  496 	ld	e, 8 (ix)
      0001FD DD 56 09         [19]  497 	ld	d, 9 (ix)
      000200 2Ar00r00         [16]  498 	ld	hl, (_nextVRAMsprites)
      000203 29               [11]  499 	add	hl, hl
      000204 29               [11]  500 	add	hl, hl
      000205 29               [11]  501 	add	hl, hl
      000206 29               [11]  502 	add	hl, hl
      000207 29               [11]  503 	add	hl, hl
      000208 CB F4            [ 8]  504 	set	6, h
      00020A C5               [11]  505 	push	bc
      00020B E5               [11]  506 	push	hl
      00020C DD 6E 06         [19]  507 	ld	l, 6 (ix)
                                    508 ;	spillPairReg hl
                                    509 ;	spillPairReg hl
      00020F DD 66 07         [19]  510 	ld	h, 7 (ix)
                                    511 ;	spillPairReg hl
                                    512 ;	spillPairReg hl
      000212 E3               [19]  513 	ex	(sp), hl
      000213 CDr00r00         [17]  514 	call	_SMS_VRAMmemcpy
      000216 C1               [10]  515 	pop	bc
                                    516 ;./lib/./sprite.c:65: nextVRAMsprites = nextVRAMsprites + (tamano*sprite.numFrames);
      000217 DD 5E F9         [19]  517 	ld	e, -7 (ix)
      00021A 61               [ 4]  518 	ld	h, c
                                    519 ;	spillPairReg hl
                                    520 ;	spillPairReg hl
      00021B 2E 00            [ 7]  521 	ld	l, #0x00
      00021D 55               [ 4]  522 	ld	d, l
      00021E 06 08            [ 7]  523 	ld	b, #0x08
      000220                        524 00105$:
      000220 29               [11]  525 	add	hl, hl
      000221 30 01            [12]  526 	jr	NC, 00106$
      000223 19               [11]  527 	add	hl, de
      000224                        528 00106$:
      000224 10 FA            [13]  529 	djnz	00105$
      000226 EB               [ 4]  530 	ex	de, hl
      000227 21r00r00         [10]  531 	ld	hl, #_nextVRAMsprites
      00022A 7E               [ 7]  532 	ld	a, (hl)
      00022B 83               [ 4]  533 	add	a, e
      00022C 77               [ 7]  534 	ld	(hl), a
      00022D 23               [ 6]  535 	inc	hl
      00022E 7E               [ 7]  536 	ld	a, (hl)
      00022F 8A               [ 4]  537 	adc	a, d
      000230 77               [ 7]  538 	ld	(hl), a
                                    539 ;./lib/./sprite.c:66: return sprite;
      000231 21 0E 00         [10]  540 	ld	hl, #14
      000234 39               [11]  541 	add	hl, sp
      000235 5E               [ 7]  542 	ld	e, (hl)
      000236 23               [ 6]  543 	inc	hl
      000237 56               [ 7]  544 	ld	d, (hl)
      000238 21 00 00         [10]  545 	ld	hl, #0
      00023B 39               [11]  546 	add	hl, sp
      00023C 01 0A 00         [10]  547 	ld	bc, #10
      00023F ED B0            [21]  548 	ldir
                                    549 ;./lib/./sprite.c:67: }
      000241 DD F9            [10]  550 	ld	sp, ix
      000243 DD E1            [14]  551 	pop	ix
      000245 C9               [10]  552 	ret
                                    553 ;./lib/./sprite.c:70: T_sprite generateSpriteNoRAM(unsigned char ancho, unsigned char alto, int tam,const unsigned char data[]) {
                                    554 ;	---------------------------------
                                    555 ; Function generateSpriteNoRAM
                                    556 ; ---------------------------------
      000246                        557 _generateSpriteNoRAM::
      000246 DD E5            [15]  558 	push	ix
      000248 DD 21 00 00      [14]  559 	ld	ix,#0
      00024C DD 39            [15]  560 	add	ix,sp
      00024E FD 21 F4 FF      [14]  561 	ld	iy, #-12
      000252 FD 39            [15]  562 	add	iy, sp
      000254 FD F9            [10]  563 	ld	sp, iy
      000256 5F               [ 4]  564 	ld	e, a
      000257 55               [ 4]  565 	ld	d, l
                                    566 ;./lib/./sprite.c:71: unsigned char tamano = alto*ancho*2;
      000258 D5               [11]  567 	push	de
      000259 62               [ 4]  568 	ld	h, d
                                    569 ;	spillPairReg hl
                                    570 ;	spillPairReg hl
      00025A 2E 00            [ 7]  571 	ld	l, #0x00
      00025C 55               [ 4]  572 	ld	d, l
      00025D 06 08            [ 7]  573 	ld	b, #0x08
      00025F                        574 00103$:
      00025F 29               [11]  575 	add	hl, hl
      000260 30 01            [12]  576 	jr	NC, 00104$
      000262 19               [11]  577 	add	hl, de
      000263                        578 00104$:
      000263 10 FA            [13]  579 	djnz	00103$
      000265 D1               [10]  580 	pop	de
      000266 4D               [ 4]  581 	ld	c, l
      000267 CB 21            [ 8]  582 	sla	c
                                    583 ;./lib/./sprite.c:72: T_sprite sprite = {alto,ancho,tamano,tam/(tamano*32),nextVRAMsprites, 0,0};
      000269 DD 72 F4         [19]  584 	ld	-12 (ix), d
      00026C DD 73 F5         [19]  585 	ld	-11 (ix), e
      00026F DD 71 F6         [19]  586 	ld	-10 (ix), c
                                    587 ;	spillPairReg hl
                                    588 ;	spillPairReg hl
      000272 DD 71 FE         [19]  589 	ld	-2 (ix), c
      000275 DD 36 FF 00      [19]  590 	ld	-1 (ix), #0x00
      000279 69               [ 4]  591 	ld	l, c
      00027A 26 00            [ 7]  592 	ld	h, #0x00
                                    593 ;	spillPairReg hl
                                    594 ;	spillPairReg hl
      00027C 29               [11]  595 	add	hl, hl
      00027D 29               [11]  596 	add	hl, hl
      00027E 29               [11]  597 	add	hl, hl
      00027F 29               [11]  598 	add	hl, hl
      000280 29               [11]  599 	add	hl, hl
      000281 EB               [ 4]  600 	ex	de,hl
      000282 D5               [11]  601 	push	de
      000283 DD 6E 06         [19]  602 	ld	l, 6 (ix)
                                    603 ;	spillPairReg hl
                                    604 ;	spillPairReg hl
      000286 DD 66 07         [19]  605 	ld	h, 7 (ix)
                                    606 ;	spillPairReg hl
                                    607 ;	spillPairReg hl
      000289 CDr00r00         [17]  608 	call	__divsint
      00028C EB               [ 4]  609 	ex	de, hl
      00028D D1               [10]  610 	pop	de
      00028E DD 75 F7         [19]  611 	ld	-9 (ix), l
      000291 3Ar00r00         [13]  612 	ld	a, (_nextVRAMsprites+0)
      000294 DD 77 F8         [19]  613 	ld	-8 (ix), a
      000297 3Ar01r00         [13]  614 	ld	a, (_nextVRAMsprites+1)
      00029A DD 77 F9         [19]  615 	ld	-7 (ix), a
      00029D DD 36 FA 00      [19]  616 	ld	-6 (ix), #0x00
      0002A1 AF               [ 4]  617 	xor	a, a
      0002A2 DD 77 FB         [19]  618 	ld	-5 (ix), a
      0002A5 DD 77 FC         [19]  619 	ld	-4 (ix), a
      0002A8 DD 36 FD 00      [19]  620 	ld	-3 (ix), #0x00
                                    621 ;./lib/./sprite.c:73: sprite.data = data;
      0002AC DD 7E 08         [19]  622 	ld	a, 8 (ix)
      0002AF DD 77 FB         [19]  623 	ld	-5 (ix), a
      0002B2 DD 7E 09         [19]  624 	ld	a, 9 (ix)
      0002B5 DD 77 FC         [19]  625 	ld	-4 (ix), a
                                    626 ;./lib/./sprite.c:74: sprite.frameInVRAM = 0;
      0002B8 DD 36 FD 00      [19]  627 	ld	-3 (ix), #0x00
                                    628 ;./lib/./sprite.c:75: SMS_loadTiles(data,nextVRAMsprites,tamano*32);
      0002BC DD 4E 08         [19]  629 	ld	c, 8 (ix)
      0002BF DD 46 09         [19]  630 	ld	b, 9 (ix)
      0002C2 2Ar00r00         [16]  631 	ld	hl, (_nextVRAMsprites)
      0002C5 29               [11]  632 	add	hl, hl
      0002C6 29               [11]  633 	add	hl, hl
      0002C7 29               [11]  634 	add	hl, hl
      0002C8 29               [11]  635 	add	hl, hl
      0002C9 29               [11]  636 	add	hl, hl
      0002CA CB F4            [ 8]  637 	set	6, h
      0002CC D5               [11]  638 	push	de
      0002CD 59               [ 4]  639 	ld	e, c
      0002CE 50               [ 4]  640 	ld	d, b
      0002CF CDr00r00         [17]  641 	call	_SMS_VRAMmemcpy
                                    642 ;./lib/./sprite.c:76: nextVRAMsprites = nextVRAMsprites + (tamano);
      0002D2 21r00r00         [10]  643 	ld	hl, #_nextVRAMsprites
      0002D5 7E               [ 7]  644 	ld	a, (hl)
      0002D6 DD 86 FE         [19]  645 	add	a, -2 (ix)
      0002D9 77               [ 7]  646 	ld	(hl), a
      0002DA 23               [ 6]  647 	inc	hl
      0002DB 7E               [ 7]  648 	ld	a, (hl)
      0002DC DD 8E FF         [19]  649 	adc	a, -1 (ix)
      0002DF 77               [ 7]  650 	ld	(hl), a
                                    651 ;./lib/./sprite.c:77: return sprite;
      0002E0 21 10 00         [10]  652 	ld	hl, #16
      0002E3 39               [11]  653 	add	hl, sp
      0002E4 5E               [ 7]  654 	ld	e, (hl)
      0002E5 23               [ 6]  655 	inc	hl
      0002E6 56               [ 7]  656 	ld	d, (hl)
      0002E7 21 00 00         [10]  657 	ld	hl, #0
      0002EA 39               [11]  658 	add	hl, sp
      0002EB 01 0A 00         [10]  659 	ld	bc, #10
      0002EE ED B0            [21]  660 	ldir
                                    661 ;./lib/./sprite.c:78: }
      0002F0 DD F9            [10]  662 	ld	sp, ix
      0002F2 DD E1            [14]  663 	pop	ix
      0002F4 C9               [10]  664 	ret
                                    665 ;./lib/./sprite.c:89: unsigned int addHardwareSprite(unsigned int x,unsigned int y,unsigned int vx,unsigned int vy,unsigned int lx,
                                    666 ;	---------------------------------
                                    667 ; Function addHardwareSprite
                                    668 ; ---------------------------------
      0002F5                        669 _addHardwareSprite::
      0002F5 DD E5            [15]  670 	push	ix
      0002F7 DD 21 00 00      [14]  671 	ld	ix,#0
      0002FB DD 39            [15]  672 	add	ix,sp
      0002FD FD 21 EA FF      [14]  673 	ld	iy, #-22
      000301 FD 39            [15]  674 	add	iy, sp
      000303 FD F9            [10]  675 	ld	sp, iy
      000305 DD 75 F4         [19]  676 	ld	-12 (ix), l
      000308 DD 74 F5         [19]  677 	ld	-11 (ix), h
      00030B DD 73 F2         [19]  678 	ld	-14 (ix), e
      00030E DD 72 F3         [19]  679 	ld	-13 (ix), d
                                    680 ;./lib/./sprite.c:91: unsigned int i = MAX_HARDWARE_SPRITES;
      000311 21 40 00         [10]  681 	ld	hl, #0x0040
      000314 E3               [19]  682 	ex	(sp), hl
                                    683 ;./lib/./sprite.c:92: while (i) {
      000315 DD 36 FE 40      [19]  684 	ld	-2 (ix), #0x40
      000319 DD 36 FF 00      [19]  685 	ld	-1 (ix), #0
      00031D                        686 00109$:
      00031D DD 7E FF         [19]  687 	ld	a, -1 (ix)
      000320 DD B6 FE         [19]  688 	or	a, -2 (ix)
      000323 CAr6Cr05         [10]  689 	jp	Z, 00111$
                                    690 ;./lib/./sprite.c:93: if (!hardwareSprites[i].len) {
      000326 DD 4E FE         [19]  691 	ld	c, -2 (ix)
      000329 DD 46 FF         [19]  692 	ld	b, -1 (ix)
      00032C 69               [ 4]  693 	ld	l, c
      00032D 60               [ 4]  694 	ld	h, b
      00032E 29               [11]  695 	add	hl, hl
      00032F 09               [11]  696 	add	hl, bc
      000330 29               [11]  697 	add	hl, hl
      000331 29               [11]  698 	add	hl, hl
      000332 DD 75 FC         [19]  699 	ld	-4 (ix), l
      000335 DD 74 FD         [19]  700 	ld	-3 (ix), h
      000338 3Er40            [ 7]  701 	ld	a, #<(_hardwareSprites)
      00033A DD 86 FC         [19]  702 	add	a, -4 (ix)
      00033D DD 77 FA         [19]  703 	ld	-6 (ix), a
      000340 3Es00            [ 7]  704 	ld	a, #>(_hardwareSprites)
      000342 DD 8E FD         [19]  705 	adc	a, -3 (ix)
      000345 DD 77 FB         [19]  706 	ld	-5 (ix), a
      000348 DD 7E FA         [19]  707 	ld	a, -6 (ix)
      00034B DD 77 FC         [19]  708 	ld	-4 (ix), a
      00034E DD 7E FB         [19]  709 	ld	a, -5 (ix)
      000351 DD 77 FD         [19]  710 	ld	-3 (ix), a
      000354 DD 6E FC         [19]  711 	ld	l, -4 (ix)
      000357 DD 66 FD         [19]  712 	ld	h, -3 (ix)
      00035A 11 0A 00         [10]  713 	ld	de, #0x000a
      00035D 19               [11]  714 	add	hl, de
      00035E 7E               [ 7]  715 	ld	a, (hl)
      00035F DD 77 FC         [19]  716 	ld	-4 (ix), a
      000362 23               [ 6]  717 	inc	hl
      000363 7E               [ 7]  718 	ld	a, (hl)
      000364 DD 77 FD         [19]  719 	ld	-3 (ix), a
      000367 DD B6 FC         [19]  720 	or	a, -4 (ix)
      00036A C2r50r05         [10]  721 	jp	NZ, 00108$
                                    722 ;./lib/./sprite.c:94: T_HardwareSprite *p = &hardwareSprites[i]; 
      00036D DD 7E FA         [19]  723 	ld	a, -6 (ix)
      000370 DD 77 FE         [19]  724 	ld	-2 (ix), a
      000373 DD 7E FB         [19]  725 	ld	a, -5 (ix)
      000376 DD 77 FF         [19]  726 	ld	-1 (ix), a
      000379 DD 7E FE         [19]  727 	ld	a, -2 (ix)
      00037C DD 77 EC         [19]  728 	ld	-20 (ix), a
      00037F DD 7E FF         [19]  729 	ld	a, -1 (ix)
      000382 DD 77 ED         [19]  730 	ld	-19 (ix), a
                                    731 ;./lib/./sprite.c:95: p->x = x;
      000385 DD 7E EC         [19]  732 	ld	a, -20 (ix)
      000388 C6 04            [ 7]  733 	add	a, #0x04
      00038A DD 77 FE         [19]  734 	ld	-2 (ix), a
      00038D DD 7E ED         [19]  735 	ld	a, -19 (ix)
      000390 CE 00            [ 7]  736 	adc	a, #0x00
      000392 DD 77 FF         [19]  737 	ld	-1 (ix), a
      000395 DD 6E FE         [19]  738 	ld	l, -2 (ix)
      000398 DD 66 FF         [19]  739 	ld	h, -1 (ix)
      00039B DD 7E F4         [19]  740 	ld	a, -12 (ix)
      00039E 77               [ 7]  741 	ld	(hl), a
      00039F 23               [ 6]  742 	inc	hl
      0003A0 DD 7E F5         [19]  743 	ld	a, -11 (ix)
      0003A3 77               [ 7]  744 	ld	(hl), a
                                    745 ;./lib/./sprite.c:96: p->y = y;
      0003A4 D1               [10]  746 	pop	de
      0003A5 E1               [10]  747 	pop	hl
      0003A6 E5               [11]  748 	push	hl
      0003A7 D5               [11]  749 	push	de
      0003A8 11 06 00         [10]  750 	ld	de, #0x0006
      0003AB 19               [11]  751 	add	hl, de
      0003AC DD 7E F2         [19]  752 	ld	a, -14 (ix)
      0003AF 77               [ 7]  753 	ld	(hl), a
      0003B0 23               [ 6]  754 	inc	hl
      0003B1 DD 7E F3         [19]  755 	ld	a, -13 (ix)
      0003B4 77               [ 7]  756 	ld	(hl), a
                                    757 ;./lib/./sprite.c:97: p->vx = vx;
      0003B5 C1               [10]  758 	pop	bc
      0003B6 E1               [10]  759 	pop	hl
      0003B7 E5               [11]  760 	push	hl
      0003B8 C5               [11]  761 	push	bc
      0003B9 DD 7E 04         [19]  762 	ld	a, 4 (ix)
      0003BC 77               [ 7]  763 	ld	(hl), a
      0003BD 23               [ 6]  764 	inc	hl
      0003BE DD 7E 05         [19]  765 	ld	a, 5 (ix)
      0003C1 77               [ 7]  766 	ld	(hl), a
                                    767 ;./lib/./sprite.c:98: p->vy = vy;
      0003C2 E1               [10]  768 	pop	hl
      0003C3 C1               [10]  769 	pop	bc
      0003C4 C5               [11]  770 	push	bc
      0003C5 E5               [11]  771 	push	hl
      0003C6 03               [ 6]  772 	inc	bc
      0003C7 03               [ 6]  773 	inc	bc
      0003C8 DD 7E 06         [19]  774 	ld	a, 6 (ix)
      0003CB 02               [ 7]  775 	ld	(bc), a
      0003CC 03               [ 6]  776 	inc	bc
      0003CD DD 7E 07         [19]  777 	ld	a, 7 (ix)
      0003D0 02               [ 7]  778 	ld	(bc), a
                                    779 ;./lib/./sprite.c:99: unsigned int iTile = 0;
      0003D1 AF               [ 4]  780 	xor	a, a
      0003D2 DD 77 FE         [19]  781 	ld	-2 (ix), a
      0003D5 DD 77 FF         [19]  782 	ld	-1 (ix), a
                                    783 ;./lib/./sprite.c:100: for (int iy=0;iy<ly;iy++) {
      0003D8 DD 7E F2         [19]  784 	ld	a, -14 (ix)
      0003DB DD 77 F6         [19]  785 	ld	-10 (ix), a
      0003DE DD 7E F3         [19]  786 	ld	a, -13 (ix)
      0003E1 DD 77 F7         [19]  787 	ld	-9 (ix), a
      0003E4 AF               [ 4]  788 	xor	a, a
      0003E5 DD 77 F8         [19]  789 	ld	-8 (ix), a
      0003E8 DD 77 F9         [19]  790 	ld	-7 (ix), a
      0003EB                        791 00116$:
      0003EB DD 7E F8         [19]  792 	ld	a, -8 (ix)
      0003EE DD 77 FC         [19]  793 	ld	-4 (ix), a
      0003F1 DD 7E F9         [19]  794 	ld	a, -7 (ix)
      0003F4 DD 77 FD         [19]  795 	ld	-3 (ix), a
                                    796 ;./lib/./sprite.c:103: p->initSprite = SMS_addSprite(x,y, tiles[iTile]);
      0003F7 DD 7E EC         [19]  797 	ld	a, -20 (ix)
      0003FA C6 08            [ 7]  798 	add	a, #0x08
      0003FC DD 77 EE         [19]  799 	ld	-18 (ix), a
      0003FF DD 7E ED         [19]  800 	ld	a, -19 (ix)
      000402 CE 00            [ 7]  801 	adc	a, #0x00
      000404 DD 77 EF         [19]  802 	ld	-17 (ix), a
                                    803 ;./lib/./sprite.c:100: for (int iy=0;iy<ly;iy++) {
      000407 DD 7E FC         [19]  804 	ld	a, -4 (ix)
      00040A DD 96 0A         [19]  805 	sub	a, 10 (ix)
      00040D DD 7E FD         [19]  806 	ld	a, -3 (ix)
      000410 DD 9E 0B         [19]  807 	sbc	a, 11 (ix)
      000413 D2rF7r04         [10]  808 	jp	NC, 00106$
                                    809 ;./lib/./sprite.c:101: for (int ix=0;ix<lx;ix++){
      000416 DD 7E FE         [19]  810 	ld	a, -2 (ix)
      000419 DD 77 FA         [19]  811 	ld	-6 (ix), a
      00041C DD 7E FF         [19]  812 	ld	a, -1 (ix)
      00041F DD 77 FB         [19]  813 	ld	-5 (ix), a
      000422 DD 7E F4         [19]  814 	ld	a, -12 (ix)
      000425 DD 77 FC         [19]  815 	ld	-4 (ix), a
      000428 DD 7E F5         [19]  816 	ld	a, -11 (ix)
      00042B DD 77 FD         [19]  817 	ld	-3 (ix), a
      00042E AF               [ 4]  818 	xor	a, a
      00042F DD 77 FE         [19]  819 	ld	-2 (ix), a
      000432 DD 77 FF         [19]  820 	ld	-1 (ix), a
      000435                        821 00113$:
      000435 DD 7E FE         [19]  822 	ld	a, -2 (ix)
      000438 DD 77 F0         [19]  823 	ld	-16 (ix), a
      00043B DD 7E FF         [19]  824 	ld	a, -1 (ix)
      00043E DD 77 F1         [19]  825 	ld	-15 (ix), a
      000441 DD 7E F0         [19]  826 	ld	a, -16 (ix)
      000444 DD 96 08         [19]  827 	sub	a, 8 (ix)
      000447 DD 7E F1         [19]  828 	ld	a, -15 (ix)
      00044A DD 9E 09         [19]  829 	sbc	a, 9 (ix)
      00044D 30 77            [12]  830 	jr	NC, 00129$
                                    831 ;./lib/./sprite.c:103: p->initSprite = SMS_addSprite(x,y, tiles[iTile]);
      00044F DD 46 FC         [19]  832 	ld	b, -4 (ix)
      000452 DD 6E FA         [19]  833 	ld	l, -6 (ix)
                                    834 ;	spillPairReg hl
                                    835 ;	spillPairReg hl
      000455 DD 66 FB         [19]  836 	ld	h, -5 (ix)
                                    837 ;	spillPairReg hl
                                    838 ;	spillPairReg hl
      000458 29               [11]  839 	add	hl, hl
      000459 EB               [ 4]  840 	ex	de,hl
      00045A DD 6E 0C         [19]  841 	ld	l, 12 (ix)
                                    842 ;	spillPairReg hl
                                    843 ;	spillPairReg hl
      00045D DD 66 0D         [19]  844 	ld	h, 13 (ix)
                                    845 ;	spillPairReg hl
                                    846 ;	spillPairReg hl
      000460 19               [11]  847 	add	hl, de
      000461 5E               [ 7]  848 	ld	e, (hl)
      000462 DD 73 F0         [19]  849 	ld	-16 (ix), e
      000465 DD 70 F1         [19]  850 	ld	-15 (ix), b
                                    851 ;./lib/./sprite.c:102: if(ix==0 && iy == 0) {
      000468 DD 7E FF         [19]  852 	ld	a, -1 (ix)
      00046B DD B6 FE         [19]  853 	or	a, -2 (ix)
      00046E 20 26            [12]  854 	jr	NZ, 00102$
      000470 DD 7E F9         [19]  855 	ld	a, -7 (ix)
      000473 DD B6 F8         [19]  856 	or	a, -8 (ix)
      000476 20 1E            [12]  857 	jr	NZ, 00102$
                                    858 ;./lib/./sprite.c:103: p->initSprite = SMS_addSprite(x,y, tiles[iTile]);
      000478 DD 5E F0         [19]  859 	ld	e, -16 (ix)
      00047B DD 56 F1         [19]  860 	ld	d, -15 (ix)
      00047E DD 6E F6         [19]  861 	ld	l, -10 (ix)
                                    862 ;	spillPairReg hl
                                    863 ;	spillPairReg hl
      000481 DD 66 F7         [19]  864 	ld	h, -9 (ix)
                                    865 ;	spillPairReg hl
                                    866 ;	spillPairReg hl
      000484 CDr00r00         [17]  867 	call	_SMS_addSprite_f
      000487 4F               [ 4]  868 	ld	c, a
      000488 07               [ 4]  869 	rlca
      000489 9F               [ 4]  870 	sbc	a, a
      00048A 47               [ 4]  871 	ld	b, a
      00048B DD 6E EE         [19]  872 	ld	l, -18 (ix)
      00048E DD 66 EF         [19]  873 	ld	h, -17 (ix)
      000491 71               [ 7]  874 	ld	(hl), c
      000492 23               [ 6]  875 	inc	hl
      000493 70               [ 7]  876 	ld	(hl), b
      000494 18 0F            [12]  877 	jr	00103$
      000496                        878 00102$:
                                    879 ;./lib/./sprite.c:106: SMS_addSprite(x,y, tiles[iTile]);
      000496 DD 5E F0         [19]  880 	ld	e, -16 (ix)
      000499 DD 56 F1         [19]  881 	ld	d, -15 (ix)
      00049C DD 6E F6         [19]  882 	ld	l, -10 (ix)
                                    883 ;	spillPairReg hl
                                    884 ;	spillPairReg hl
      00049F DD 66 F7         [19]  885 	ld	h, -9 (ix)
                                    886 ;	spillPairReg hl
                                    887 ;	spillPairReg hl
      0004A2 CDr00r00         [17]  888 	call	_SMS_addSprite_f
      0004A5                        889 00103$:
                                    890 ;./lib/./sprite.c:108: iTile++;
      0004A5 DD 34 FA         [23]  891 	inc	-6 (ix)
      0004A8 20 03            [12]  892 	jr	NZ, 00185$
      0004AA DD 34 FB         [23]  893 	inc	-5 (ix)
      0004AD                        894 00185$:
                                    895 ;./lib/./sprite.c:109: x += 8;
      0004AD DD 7E FC         [19]  896 	ld	a, -4 (ix)
      0004B0 C6 08            [ 7]  897 	add	a, #0x08
      0004B2 DD 77 FC         [19]  898 	ld	-4 (ix), a
      0004B5 30 03            [12]  899 	jr	NC, 00186$
      0004B7 DD 34 FD         [23]  900 	inc	-3 (ix)
      0004BA                        901 00186$:
                                    902 ;./lib/./sprite.c:101: for (int ix=0;ix<lx;ix++){
      0004BA DD 34 FE         [23]  903 	inc	-2 (ix)
      0004BD C2r35r04         [10]  904 	jp	NZ,00113$
      0004C0 DD 34 FF         [23]  905 	inc	-1 (ix)
      0004C3 C3r35r04         [10]  906 	jp	00113$
      0004C6                        907 00129$:
      0004C6 DD 7E FA         [19]  908 	ld	a, -6 (ix)
      0004C9 DD 77 FE         [19]  909 	ld	-2 (ix), a
      0004CC DD 7E FB         [19]  910 	ld	a, -5 (ix)
      0004CF DD 77 FF         [19]  911 	ld	-1 (ix), a
      0004D2 DD 7E FC         [19]  912 	ld	a, -4 (ix)
      0004D5 DD 77 F4         [19]  913 	ld	-12 (ix), a
      0004D8 DD 7E FD         [19]  914 	ld	a, -3 (ix)
      0004DB DD 77 F5         [19]  915 	ld	-11 (ix), a
                                    916 ;./lib/./sprite.c:111: y += 16;
      0004DE DD 7E F6         [19]  917 	ld	a, -10 (ix)
      0004E1 C6 10            [ 7]  918 	add	a, #0x10
      0004E3 DD 77 F6         [19]  919 	ld	-10 (ix), a
      0004E6 30 03            [12]  920 	jr	NC, 00188$
      0004E8 DD 34 F7         [23]  921 	inc	-9 (ix)
      0004EB                        922 00188$:
                                    923 ;./lib/./sprite.c:100: for (int iy=0;iy<ly;iy++) {
      0004EB DD 34 F8         [23]  924 	inc	-8 (ix)
      0004EE C2rEBr03         [10]  925 	jp	NZ,00116$
      0004F1 DD 34 F9         [23]  926 	inc	-7 (ix)
      0004F4 C3rEBr03         [10]  927 	jp	00116$
      0004F7                        928 00106$:
                                    929 ;./lib/./sprite.c:113: p->len = p->initSprite + lx*ly;
      0004F7 DD 7E EC         [19]  930 	ld	a, -20 (ix)
      0004FA C6 0A            [ 7]  931 	add	a, #0x0a
      0004FC DD 77 FE         [19]  932 	ld	-2 (ix), a
      0004FF DD 7E ED         [19]  933 	ld	a, -19 (ix)
      000502 CE 00            [ 7]  934 	adc	a, #0x00
      000504 DD 77 FF         [19]  935 	ld	-1 (ix), a
      000507 DD 6E EE         [19]  936 	ld	l, -18 (ix)
      00050A DD 66 EF         [19]  937 	ld	h, -17 (ix)
      00050D 7E               [ 7]  938 	ld	a, (hl)
      00050E DD 77 FC         [19]  939 	ld	-4 (ix), a
      000511 23               [ 6]  940 	inc	hl
      000512 7E               [ 7]  941 	ld	a, (hl)
      000513 DD 77 FD         [19]  942 	ld	-3 (ix), a
      000516 DD 5E 0A         [19]  943 	ld	e, 10 (ix)
      000519 DD 56 0B         [19]  944 	ld	d, 11 (ix)
      00051C DD 6E 08         [19]  945 	ld	l, 8 (ix)
                                    946 ;	spillPairReg hl
                                    947 ;	spillPairReg hl
      00051F DD 66 09         [19]  948 	ld	h, 9 (ix)
                                    949 ;	spillPairReg hl
                                    950 ;	spillPairReg hl
      000522 CDr00r00         [17]  951 	call	__mulint
      000525 DD 73 F8         [19]  952 	ld	-8 (ix), e
      000528 DD 72 F9         [19]  953 	ld	-7 (ix), d
      00052B DD 7E F8         [19]  954 	ld	a, -8 (ix)
      00052E DD 86 FC         [19]  955 	add	a, -4 (ix)
      000531 DD 77 FA         [19]  956 	ld	-6 (ix), a
      000534 DD 7E F9         [19]  957 	ld	a, -7 (ix)
      000537 DD 8E FD         [19]  958 	adc	a, -3 (ix)
      00053A DD 77 FB         [19]  959 	ld	-5 (ix), a
      00053D DD 6E FE         [19]  960 	ld	l, -2 (ix)
      000540 DD 66 FF         [19]  961 	ld	h, -1 (ix)
      000543 DD 7E FA         [19]  962 	ld	a, -6 (ix)
      000546 77               [ 7]  963 	ld	(hl), a
      000547 23               [ 6]  964 	inc	hl
      000548 DD 7E FB         [19]  965 	ld	a, -5 (ix)
      00054B 77               [ 7]  966 	ld	(hl), a
                                    967 ;./lib/./sprite.c:114: return i;
      00054C D1               [10]  968 	pop	de
      00054D D5               [11]  969 	push	de
      00054E 18 1E            [12]  970 	jr	00118$
      000550                        971 00108$:
                                    972 ;./lib/./sprite.c:116: i--;
      000550 DD 6E FE         [19]  973 	ld	l, -2 (ix)
      000553 DD 66 FF         [19]  974 	ld	h, -1 (ix)
      000556 2B               [ 6]  975 	dec	hl
      000557 DD 75 FE         [19]  976 	ld	-2 (ix), l
      00055A DD 74 FF         [19]  977 	ld	-1 (ix), h
      00055D DD 7E FE         [19]  978 	ld	a, -2 (ix)
      000560 DD 77 EA         [19]  979 	ld	-22 (ix), a
      000563 DD 7E FF         [19]  980 	ld	a, -1 (ix)
      000566 DD 77 EB         [19]  981 	ld	-21 (ix), a
      000569 C3r1Dr03         [10]  982 	jp	00109$
      00056C                        983 00111$:
                                    984 ;./lib/./sprite.c:118: return i;
      00056C D1               [10]  985 	pop	de
      00056D D5               [11]  986 	push	de
      00056E                        987 00118$:
                                    988 ;./lib/./sprite.c:119: }
      00056E DD F9            [10]  989 	ld	sp, ix
      000570 DD E1            [14]  990 	pop	ix
      000572 E1               [10]  991 	pop	hl
      000573 F1               [10]  992 	pop	af
      000574 F1               [10]  993 	pop	af
      000575 F1               [10]  994 	pop	af
      000576 F1               [10]  995 	pop	af
      000577 F1               [10]  996 	pop	af
      000578 E9               [ 4]  997 	jp	(hl)
                                    998 ;./lib/./sprite.c:131: void initSpritesVariables (void) {
                                    999 ;	---------------------------------
                                   1000 ; Function initSpritesVariables
                                   1001 ; ---------------------------------
      000579                       1002 _initSpritesVariables::
                                   1003 ;./lib/./sprite.c:133: while (i) {
      000579 01 40 00         [10] 1004 	ld	bc, #0x0040
      00057C                       1005 00101$:
      00057C 78               [ 4] 1006 	ld	a, b
      00057D B1               [ 4] 1007 	or	a, c
      00057E 28 15            [12] 1008 	jr	Z, 00103$
                                   1009 ;./lib/./sprite.c:134: hardwareSprites[i].len = 0;
      000580 69               [ 4] 1010 	ld	l, c
      000581 60               [ 4] 1011 	ld	h, b
      000582 29               [11] 1012 	add	hl, hl
      000583 09               [11] 1013 	add	hl, bc
      000584 29               [11] 1014 	add	hl, hl
      000585 29               [11] 1015 	add	hl, hl
      000586 11r40r00         [10] 1016 	ld	de, #_hardwareSprites
      000589 19               [11] 1017 	add	hl, de
      00058A 11 0A 00         [10] 1018 	ld	de, #0x000a
      00058D 19               [11] 1019 	add	hl, de
      00058E AF               [ 4] 1020 	xor	a, a
      00058F 77               [ 7] 1021 	ld	(hl), a
      000590 23               [ 6] 1022 	inc	hl
      000591 77               [ 7] 1023 	ld	(hl), a
                                   1024 ;./lib/./sprite.c:135: i--;
      000592 0B               [ 6] 1025 	dec	bc
      000593 18 E7            [12] 1026 	jr	00101$
      000595                       1027 00103$:
                                   1028 ;./lib/./sprite.c:148: __endasm;
      000595 21r00r00         [10] 1029 	ld	hl, #_SpriteNextFree
      000598 22r44r03         [16] 1030 	ld	(#_SpriteNextFree2), hl
      00059B 21r00r00         [10] 1031 	ld	hl, #_SpriteTableY
      00059E 22r40r03         [16] 1032 	ld	(#_SpriteTableY2), hl
      0005A1 21r00r00         [10] 1033 	ld	hl, #_SpriteTableXN
      0005A4 22r42r03         [16] 1034 	ld	(#_SpriteTableXN2), hl
                                   1035 ;./lib/./sprite.c:151: }
      0005A7 C9               [10] 1036 	ret
                                   1037 ;./lib/./sprite.c:168: void copySpritestoSAT (void) {
                                   1038 ;	---------------------------------
                                   1039 ; Function copySpritestoSAT
                                   1040 ; ---------------------------------
      0005A8                       1041 _copySpritestoSAT::
                                   1042 ;./lib/./sprite.c:169: SMS_setAddr(SMS_SATAddress);
      0005A8 21 00 7F         [10] 1043 	ld	hl, #0x7f00
      0005AB CF               [11] 1044 	rst	#0x08
                                   1045 ;./lib/./sprite.c:185: __endasm;
      0005AC 3Ar00r00         [13] 1046 	ld	a,(#_SpriteNextFree)
      0005AF B7               [ 4] 1047 	or	a
      0005B0 28 25            [12] 1048 	jr	z,_no_sprites
      0005B2 47               [ 4] 1049 	ld	b,a
      0005B3 0E BE            [ 7] 1050 	ld	c,#_VDPDataPort
      0005B5 21r00r00         [10] 1051 	ld	hl,#_SpriteTableY
      0005B8                       1052 _next_spriteY:
      0005B8 ED A3            [16] 1053 	outi	; 16 cycles
      0005BA 20 FC            [12] 1054 	jr	nz,_next_spriteY ; 12 cycles = 28 (VRAM safe on GG too)
      0005BC FE 40            [ 7] 1055 	cp	#64 ; 7 cycles
      0005BE 28 04            [12] 1056 	jr	z,_no_sprite_term ; 7 cycles
      0005C0 3E D0            [ 7] 1057 	ld	a,#0xD0 ; 7 cycles => VRAM safe
      0005C2 ED 79            [12] 1058 	out	(c),a
      0005C4                       1059 _no_sprite_term:
                                   1060 ;./lib/./sprite.c:186: SMS_setAddr(SMS_SATAddress+128);
      0005C4 21 80 7F         [10] 1061 	ld	hl, #0x7f80
      0005C7 CF               [11] 1062 	rst	#0x08
                                   1063 ;./lib/./sprite.c:201: __endasm;
      0005C8 0E BE            [ 7] 1064 	ld	c,#_VDPDataPort
      0005CA 3Ar00r00         [13] 1065 	ld	a,(#_SpriteNextFree)
      0005CD 87               [ 4] 1066 	add	a,a
      0005CE 47               [ 4] 1067 	ld	b,a
      0005CF 21r00r00         [10] 1068 	ld	hl,#_SpriteTableXN
      0005D2                       1069 _next_spriteXN:
      0005D2 ED A3            [16] 1070 	outi	; 16 cycles
      0005D4 20 FC            [12] 1071 	jr	nz,_next_spriteXN ; 12 cycles = 28 (VRAM safe on GG too)
      0005D6 C9               [10] 1072 	ret
      0005D7                       1073 _no_sprites:
      0005D7 3E D0            [ 7] 1074 	ld	a,#0xD0
      0005D9 D3 BE            [11] 1075 	out	(#_VDPDataPort),a
                                   1076 ;./lib/./sprite.c:202: }
      0005DB C9               [10] 1077 	ret
                                   1078 ;./lib/entities.c:13: void draw_entidad(T_entidad *entidad, T_sprite *sprite){
                                   1079 ;	---------------------------------
                                   1080 ; Function draw_entidad
                                   1081 ; ---------------------------------
      0005DC                       1082 _draw_entidad::
      0005DC DD E5            [15] 1083 	push	ix
      0005DE DD 21 00 00      [14] 1084 	ld	ix,#0
      0005E2 DD 39            [15] 1085 	add	ix,sp
      0005E4 FD 21 E3 FF      [14] 1086 	ld	iy, #-29
      0005E8 FD 39            [15] 1087 	add	iy, sp
      0005EA FD F9            [10] 1088 	ld	sp, iy
      0005EC DD 75 FC         [19] 1089 	ld	-4 (ix), l
      0005EF DD 74 FD         [19] 1090 	ld	-3 (ix), h
                                   1091 ;./lib/entities.c:15: if (sprite->allInRAM == 1){
      0005F2 DD 73 FA         [19] 1092 	ld	-6 (ix), e
      0005F5 DD 72 FB         [19] 1093 	ld	-5 (ix), d
      0005F8 4B               [ 4] 1094 	ld	c, e
      0005F9 42               [ 4] 1095 	ld	b, d
      0005FA 21 06 00         [10] 1096 	ld	hl, #6
      0005FD 09               [11] 1097 	add	hl, bc
      0005FE 4E               [ 7] 1098 	ld	c, (hl)
                                   1099 ;./lib/entities.c:16: if (entidad->initSprite == 255) {
      0005FF DD 7E FC         [19] 1100 	ld	a, -4 (ix)
      000602 C6 06            [ 7] 1101 	add	a, #0x06
      000604 DD 77 F2         [19] 1102 	ld	-14 (ix), a
      000607 DD 7E FD         [19] 1103 	ld	a, -3 (ix)
      00060A CE 00            [ 7] 1104 	adc	a, #0x00
      00060C DD 77 F3         [19] 1105 	ld	-13 (ix), a
      00060F DD 6E F2         [19] 1106 	ld	l, -14 (ix)
      000612 DD 66 F3         [19] 1107 	ld	h, -13 (ix)
      000615 46               [ 7] 1108 	ld	b, (hl)
                                   1109 ;./lib/entities.c:17: int frame = sprite->tamano*entidad->frame + sprite->beginVRAM;
      000616 DD 7E FC         [19] 1110 	ld	a, -4 (ix)
      000619 C6 02            [ 7] 1111 	add	a, #0x02
      00061B DD 77 F4         [19] 1112 	ld	-12 (ix), a
      00061E DD 7E FD         [19] 1113 	ld	a, -3 (ix)
      000621 CE 00            [ 7] 1114 	adc	a, #0x00
      000623 DD 77 F5         [19] 1115 	ld	-11 (ix), a
                                   1116 ;./lib/entities.c:18: for(j=0;j<sprite->alto;j++) {
      000626 DD 7E FC         [19] 1117 	ld	a, -4 (ix)
      000629 C6 01            [ 7] 1118 	add	a, #0x01
      00062B DD 77 F8         [19] 1119 	ld	-8 (ix), a
      00062E DD 7E FD         [19] 1120 	ld	a, -3 (ix)
      000631 CE 00            [ 7] 1121 	adc	a, #0x00
      000633 DD 77 F9         [19] 1122 	ld	-7 (ix), a
      000636 DD 7E FA         [19] 1123 	ld	a, -6 (ix)
      000639 C6 01            [ 7] 1124 	add	a, #0x01
      00063B DD 77 FE         [19] 1125 	ld	-2 (ix), a
      00063E DD 7E FB         [19] 1126 	ld	a, -5 (ix)
      000641 CE 00            [ 7] 1127 	adc	a, #0x00
      000643 DD 77 FF         [19] 1128 	ld	-1 (ix), a
                                   1129 ;./lib/entities.c:28: entidad->len = (sprite->alto * sprite->ancho + entidad->initSprite)*2;
      000646 DD 7E FC         [19] 1130 	ld	a, -4 (ix)
      000649 C6 07            [ 7] 1131 	add	a, #0x07
      00064B DD 77 E3         [19] 1132 	ld	-29 (ix), a
      00064E DD 7E FD         [19] 1133 	ld	a, -3 (ix)
      000651 CE 00            [ 7] 1134 	adc	a, #0x00
      000653 DD 77 E4         [19] 1135 	ld	-28 (ix), a
                                   1136 ;./lib/entities.c:16: if (entidad->initSprite == 255) {
      000656 04               [ 4] 1137 	inc	b
      000657 3E 01            [ 7] 1138 	ld	a, #0x01
      000659 28 01            [12] 1139 	jr	Z, 00253$
      00065B AF               [ 4] 1140 	xor	a, a
      00065C                       1141 00253$:
      00065C DD 77 F7         [19] 1142 	ld	-9 (ix), a
                                   1143 ;./lib/entities.c:15: if (sprite->allInRAM == 1){
      00065F 0D               [ 4] 1144 	dec	c
      000660 C2r73r08         [10] 1145 	jp	NZ,00120$
                                   1146 ;./lib/entities.c:16: if (entidad->initSprite == 255) {
      000663 DD 7E F2         [19] 1147 	ld	a, -14 (ix)
      000666 DD 77 E5         [19] 1148 	ld	-27 (ix), a
      000669 DD 7E F3         [19] 1149 	ld	a, -13 (ix)
      00066C DD 77 E6         [19] 1150 	ld	-26 (ix), a
      00066F DD 7E F7         [19] 1151 	ld	a, -9 (ix)
      000672 B7               [ 4] 1152 	or	a, a
      000673 CArFDr09         [10] 1153 	jp	Z, 00134$
                                   1154 ;./lib/entities.c:17: int frame = sprite->tamano*entidad->frame + sprite->beginVRAM;
      000676 DD 7E FA         [19] 1155 	ld	a, -6 (ix)
      000679 DD 77 F2         [19] 1156 	ld	-14 (ix), a
      00067C DD 7E FB         [19] 1157 	ld	a, -5 (ix)
      00067F DD 77 F3         [19] 1158 	ld	-13 (ix), a
      000682 DD 6E F2         [19] 1159 	ld	l, -14 (ix)
      000685 DD 66 F3         [19] 1160 	ld	h, -13 (ix)
      000688 23               [ 6] 1161 	inc	hl
      000689 23               [ 6] 1162 	inc	hl
      00068A 7E               [ 7] 1163 	ld	a, (hl)
      00068B DD 77 F6         [19] 1164 	ld	-10 (ix), a
      00068E DD 6E F4         [19] 1165 	ld	l, -12 (ix)
      000691 DD 66 F5         [19] 1166 	ld	h, -11 (ix)
      000694 7E               [ 7] 1167 	ld	a, (hl)
      000695 DD 77 F7         [19] 1168 	ld	-9 (ix), a
      000698 DD 7E F6         [19] 1169 	ld	a, -10 (ix)
      00069B DD 77 F5         [19] 1170 	ld	-11 (ix), a
      00069E DD 5E F7         [19] 1171 	ld	e, -9 (ix)
      0006A1 DD 66 F5         [19] 1172 	ld	h, -11 (ix)
                                   1173 ;	spillPairReg hl
                                   1174 ;	spillPairReg hl
      0006A4 2E 00            [ 7] 1175 	ld	l, #0x00
      0006A6 55               [ 4] 1176 	ld	d, l
      0006A7 06 08            [ 7] 1177 	ld	b, #0x08
      0006A9                       1178 00256$:
      0006A9 29               [11] 1179 	add	hl, hl
      0006AA 30 01            [12] 1180 	jr	NC, 00257$
      0006AC 19               [11] 1181 	add	hl, de
      0006AD                       1182 00257$:
      0006AD 10 FA            [13] 1183 	djnz	00256$
      0006AF DD 75 F7         [19] 1184 	ld	-9 (ix), l
      0006B2 DD 7E FA         [19] 1185 	ld	a, -6 (ix)
      0006B5 DD 77 F5         [19] 1186 	ld	-11 (ix), a
      0006B8 DD 7E FB         [19] 1187 	ld	a, -5 (ix)
      0006BB DD 77 F6         [19] 1188 	ld	-10 (ix), a
      0006BE DD 6E F5         [19] 1189 	ld	l, -11 (ix)
      0006C1 DD 66 F6         [19] 1190 	ld	h, -10 (ix)
      0006C4 11 04 00         [10] 1191 	ld	de, #0x0004
      0006C7 19               [11] 1192 	add	hl, de
      0006C8 7E               [ 7] 1193 	ld	a, (hl)
      0006C9 DD 77 F6         [19] 1194 	ld	-10 (ix), a
      0006CC DD 86 F7         [19] 1195 	add	a, -9 (ix)
      0006CF DD 77 E7         [19] 1196 	ld	-25 (ix), a
                                   1197 ;./lib/entities.c:18: for(j=0;j<sprite->alto;j++) {
      0006D2 DD 7E F8         [19] 1198 	ld	a, -8 (ix)
      0006D5 DD 77 E8         [19] 1199 	ld	-24 (ix), a
      0006D8 DD 7E F9         [19] 1200 	ld	a, -7 (ix)
      0006DB DD 77 E9         [19] 1201 	ld	-23 (ix), a
      0006DE DD 7E FE         [19] 1202 	ld	a, -2 (ix)
      0006E1 DD 77 EA         [19] 1203 	ld	-22 (ix), a
      0006E4 DD 7E FF         [19] 1204 	ld	a, -1 (ix)
      0006E7 DD 77 EB         [19] 1205 	ld	-21 (ix), a
      0006EA DD 36 FE 00      [19] 1206 	ld	-2 (ix), #0x00
      0006EE                       1207 00126$:
      0006EE DD 6E FA         [19] 1208 	ld	l, -6 (ix)
      0006F1 DD 66 FB         [19] 1209 	ld	h, -5 (ix)
      0006F4 7E               [ 7] 1210 	ld	a, (hl)
      0006F5 DD 77 FF         [19] 1211 	ld	-1 (ix), a
      0006F8 DD 7E FE         [19] 1212 	ld	a, -2 (ix)
      0006FB DD 96 FF         [19] 1213 	sub	a, -1 (ix)
      0006FE D2r37r08         [10] 1214 	jp	NC, 00106$
                                   1215 ;./lib/entities.c:19: unsigned char desplazado = (j<<2);
      000701 DD 7E FE         [19] 1216 	ld	a, -2 (ix)
      000704 DD 77 FF         [19] 1217 	ld	-1 (ix), a
      000707 DD CB FF 26      [23] 1218 	sla	-1 (ix)
      00070B DD CB FF 26      [23] 1219 	sla	-1 (ix)
                                   1220 ;./lib/entities.c:20: unsigned char jCalculated = desplazado + frame, y = entidad->y+(desplazado<<2);
      00070F DD 7E FF         [19] 1221 	ld	a, -1 (ix)
      000712 DD 77 F9         [19] 1222 	ld	-7 (ix), a
      000715 DD 86 E7         [19] 1223 	add	a, -25 (ix)
      000718 DD 77 FF         [19] 1224 	ld	-1 (ix), a
      00071B DD 77 EC         [19] 1225 	ld	-20 (ix), a
      00071E DD 6E E8         [19] 1226 	ld	l, -24 (ix)
      000721 DD 66 E9         [19] 1227 	ld	h, -23 (ix)
      000724 7E               [ 7] 1228 	ld	a, (hl)
      000725 DD 77 FF         [19] 1229 	ld	-1 (ix), a
      000728 DD CB F9 26      [23] 1230 	sla	-7 (ix)
      00072C DD CB F9 26      [23] 1231 	sla	-7 (ix)
      000730 DD 7E FF         [19] 1232 	ld	a, -1 (ix)
      000733 DD 86 F9         [19] 1233 	add	a, -7 (ix)
      000736 DD 77 FF         [19] 1234 	ld	-1 (ix), a
      000739 DD 77 ED         [19] 1235 	ld	-19 (ix), a
                                   1236 ;./lib/entities.c:21: for(i=0;i<sprite->ancho;i++) {
      00073C DD 36 FF 00      [19] 1237 	ld	-1 (ix), #0x00
      000740                       1238 00123$:
      000740 DD 6E EA         [19] 1239 	ld	l, -22 (ix)
      000743 DD 66 EB         [19] 1240 	ld	h, -21 (ix)
      000746 DD 7E FF         [19] 1241 	ld	a,-1 (ix)
      000749 96               [ 7] 1242 	sub	a,(hl)
      00074A D2r31r08         [10] 1243 	jp	NC, 00127$
                                   1244 ;./lib/entities.c:23: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      00074D DD 6E FC         [19] 1245 	ld	l, -4 (ix)
      000750 DD 66 FD         [19] 1246 	ld	h, -3 (ix)
      000753 7E               [ 7] 1247 	ld	a, (hl)
      000754 DD 77 F7         [19] 1248 	ld	-9 (ix), a
      000757 DD 7E FF         [19] 1249 	ld	a, -1 (ix)
      00075A DD 77 F8         [19] 1250 	ld	-8 (ix), a
      00075D DD 36 F9 00      [19] 1251 	ld	-7 (ix), #0x00
      000761 DD 7E EC         [19] 1252 	ld	a, -20 (ix)
      000764 DD 77 EE         [19] 1253 	ld	-18 (ix), a
      000767 DD 36 EF 00      [19] 1254 	ld	-17 (ix), #0x00
      00076B DD 7E ED         [19] 1255 	ld	a, -19 (ix)
      00076E DD 77 F0         [19] 1256 	ld	-16 (ix), a
      000771 DD 36 F1 00      [19] 1257 	ld	-15 (ix), #0x00
      000775 DD 7E F7         [19] 1258 	ld	a, -9 (ix)
      000778 DD 77 F2         [19] 1259 	ld	-14 (ix), a
      00077B DD 36 F3 00      [19] 1260 	ld	-13 (ix), #0x00
      00077F DD 7E F8         [19] 1261 	ld	a, -8 (ix)
      000782 DD 77 F4         [19] 1262 	ld	-12 (ix), a
      000785 DD 7E F9         [19] 1263 	ld	a, -7 (ix)
      000788 DD 77 F5         [19] 1264 	ld	-11 (ix), a
      00078B 06 03            [ 7] 1265 	ld	b, #0x03
      00078D                       1266 00258$:
      00078D DD CB F4 26      [23] 1267 	sla	-12 (ix)
      000791 DD CB F5 16      [23] 1268 	rl	-11 (ix)
      000795 10 F6            [13] 1269 	djnz	00258$
      000797 DD 7E F8         [19] 1270 	ld	a, -8 (ix)
      00079A DD 77 F6         [19] 1271 	ld	-10 (ix), a
      00079D DD 7E F9         [19] 1272 	ld	a, -7 (ix)
      0007A0 DD 77 F7         [19] 1273 	ld	-9 (ix), a
      0007A3 DD CB F6 26      [23] 1274 	sla	-10 (ix)
      0007A7 DD CB F7 16      [23] 1275 	rl	-9 (ix)
      0007AB DD 7E F4         [19] 1276 	ld	a, -12 (ix)
      0007AE DD 86 F2         [19] 1277 	add	a, -14 (ix)
      0007B1 DD 77 F8         [19] 1278 	ld	-8 (ix), a
      0007B4 DD 7E F5         [19] 1279 	ld	a, -11 (ix)
      0007B7 DD 8E F3         [19] 1280 	adc	a, -13 (ix)
      0007BA DD 77 F9         [19] 1281 	ld	-7 (ix), a
      0007BD DD 7E EE         [19] 1282 	ld	a, -18 (ix)
      0007C0 DD 86 F6         [19] 1283 	add	a, -10 (ix)
      0007C3 DD 77 F4         [19] 1284 	ld	-12 (ix), a
      0007C6 3E 00            [ 7] 1285 	ld	a, #0x00
      0007C8 DD 8E F7         [19] 1286 	adc	a, -9 (ix)
      0007CB DD 77 F5         [19] 1287 	ld	-11 (ix), a
      0007CE DD 7E F8         [19] 1288 	ld	a, -8 (ix)
      0007D1 DD 77 F6         [19] 1289 	ld	-10 (ix), a
      0007D4 DD 36 F7 00      [19] 1290 	ld	-9 (ix), #0x00
      0007D8 DD 7E F4         [19] 1291 	ld	a, -12 (ix)
      0007DB DD 77 F8         [19] 1292 	ld	-8 (ix), a
      0007DE DD 36 F9 00      [19] 1293 	ld	-7 (ix), #0x00
      0007E2 DD 7E F6         [19] 1294 	ld	a, -10 (ix)
      0007E5 DD 77 F7         [19] 1295 	ld	-9 (ix), a
      0007E8 DD 36 F6 00      [19] 1296 	ld	-10 (ix), #0x00
      0007EC AF               [ 4] 1297 	xor	a, a
      0007ED DD B6 F8         [19] 1298 	or	a, -8 (ix)
      0007F0 DD 77 F4         [19] 1299 	ld	-12 (ix), a
      0007F3 DD 7E F7         [19] 1300 	ld	a, -9 (ix)
      0007F6 DD B6 F9         [19] 1301 	or	a, -7 (ix)
      0007F9 DD 77 F5         [19] 1302 	ld	-11 (ix), a
                                   1303 ;./lib/entities.c:22: if(i==0 && j==0)
      0007FC DD 7E FF         [19] 1304 	ld	a, -1 (ix)
      0007FF B7               [ 4] 1305 	or	a, a
      000800 20 1B            [12] 1306 	jr	NZ, 00102$
      000802 DD 7E FE         [19] 1307 	ld	a, -2 (ix)
      000805 B7               [ 4] 1308 	or	a, a
      000806 20 15            [12] 1309 	jr	NZ, 00102$
                                   1310 ;./lib/entities.c:23: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      000808 DD 5E F4         [19] 1311 	ld	e, -12 (ix)
      00080B DD 56 F5         [19] 1312 	ld	d, -11 (ix)
      00080E DD 6E F0         [19] 1313 	ld	l, -16 (ix)
                                   1314 ;	spillPairReg hl
                                   1315 ;	spillPairReg hl
      000811 26 00            [ 7] 1316 	ld	h, #0x00
                                   1317 ;	spillPairReg hl
                                   1318 ;	spillPairReg hl
      000813 CDr00r00         [17] 1319 	call	_SMS_addSprite_f
      000816 C1               [10] 1320 	pop	bc
      000817 E1               [10] 1321 	pop	hl
      000818 E5               [11] 1322 	push	hl
      000819 C5               [11] 1323 	push	bc
      00081A 77               [ 7] 1324 	ld	(hl), a
      00081B 18 0E            [12] 1325 	jr	00124$
      00081D                       1326 00102$:
                                   1327 ;./lib/entities.c:25: SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      00081D DD 5E F4         [19] 1328 	ld	e, -12 (ix)
      000820 DD 56 F5         [19] 1329 	ld	d, -11 (ix)
      000823 DD 6E F0         [19] 1330 	ld	l, -16 (ix)
                                   1331 ;	spillPairReg hl
                                   1332 ;	spillPairReg hl
      000826 26 00            [ 7] 1333 	ld	h, #0x00
                                   1334 ;	spillPairReg hl
                                   1335 ;	spillPairReg hl
      000828 CDr00r00         [17] 1336 	call	_SMS_addSprite_f
      00082B                       1337 00124$:
                                   1338 ;./lib/entities.c:21: for(i=0;i<sprite->ancho;i++) {
      00082B DD 34 FF         [23] 1339 	inc	-1 (ix)
      00082E C3r40r07         [10] 1340 	jp	00123$
      000831                       1341 00127$:
                                   1342 ;./lib/entities.c:18: for(j=0;j<sprite->alto;j++) {
      000831 DD 34 FE         [23] 1343 	inc	-2 (ix)
      000834 C3rEEr06         [10] 1344 	jp	00126$
      000837                       1345 00106$:
                                   1346 ;./lib/entities.c:28: entidad->len = (sprite->alto * sprite->ancho + entidad->initSprite)*2;
      000837 DD 6E EA         [19] 1347 	ld	l, -22 (ix)
      00083A DD 66 EB         [19] 1348 	ld	h, -21 (ix)
      00083D 7E               [ 7] 1349 	ld	a, (hl)
      00083E DD 77 FE         [19] 1350 	ld	-2 (ix), a
      000841 5F               [ 4] 1351 	ld	e, a
      000842 DD 66 FF         [19] 1352 	ld	h, -1 (ix)
                                   1353 ;	spillPairReg hl
                                   1354 ;	spillPairReg hl
      000845 2E 00            [ 7] 1355 	ld	l, #0x00
      000847 55               [ 4] 1356 	ld	d, l
      000848 06 08            [ 7] 1357 	ld	b, #0x08
      00084A                       1358 00260$:
      00084A 29               [11] 1359 	add	hl, hl
      00084B 30 01            [12] 1360 	jr	NC, 00261$
      00084D 19               [11] 1361 	add	hl, de
      00084E                       1362 00261$:
      00084E 10 FA            [13] 1363 	djnz	00260$
      000850 DD 75 FF         [19] 1364 	ld	-1 (ix), l
      000853 DD 6E E5         [19] 1365 	ld	l, -27 (ix)
      000856 DD 66 E6         [19] 1366 	ld	h, -26 (ix)
      000859 7E               [ 7] 1367 	ld	a, (hl)
      00085A DD 77 FE         [19] 1368 	ld	-2 (ix), a
      00085D DD 7E FF         [19] 1369 	ld	a, -1 (ix)
      000860 DD 86 FE         [19] 1370 	add	a, -2 (ix)
      000863 DD 77 FF         [19] 1371 	ld	-1 (ix), a
      000866 DD CB FF 26      [23] 1372 	sla	-1 (ix)
      00086A E1               [10] 1373 	pop	hl
      00086B E5               [11] 1374 	push	hl
      00086C DD 7E FF         [19] 1375 	ld	a, -1 (ix)
      00086F 77               [ 7] 1376 	ld	(hl), a
      000870 C3rFDr09         [10] 1377 	jp	00134$
      000873                       1378 00120$:
                                   1379 ;./lib/entities.c:33: if (entidad->initSprite == 255) {
      000873 DD 7E F2         [19] 1380 	ld	a, -14 (ix)
      000876 DD 77 EC         [19] 1381 	ld	-20 (ix), a
      000879 DD 7E F3         [19] 1382 	ld	a, -13 (ix)
      00087C DD 77 ED         [19] 1383 	ld	-19 (ix), a
      00087F DD 7E F7         [19] 1384 	ld	a, -9 (ix)
      000882 B7               [ 4] 1385 	or	a, a
      000883 CArFDr09         [10] 1386 	jp	Z, 00134$
                                   1387 ;./lib/entities.c:34: if (entidad->frame != sprite->frameInVRAM){
      000886 DD 6E F4         [19] 1388 	ld	l, -12 (ix)
      000889 DD 66 F5         [19] 1389 	ld	h, -11 (ix)
      00088C 7E               [ 7] 1390 	ld	a, (hl)
      00088D DD 77 F7         [19] 1391 	ld	-9 (ix), a
      000890 DD 7E FA         [19] 1392 	ld	a, -6 (ix)
      000893 C6 09            [ 7] 1393 	add	a, #0x09
      000895 DD 77 F5         [19] 1394 	ld	-11 (ix), a
      000898 DD 7E FB         [19] 1395 	ld	a, -5 (ix)
      00089B CE 00            [ 7] 1396 	adc	a, #0x00
      00089D DD 77 F6         [19] 1397 	ld	-10 (ix), a
      0008A0 DD 6E F5         [19] 1398 	ld	l, -11 (ix)
      0008A3 DD 66 F6         [19] 1399 	ld	h, -10 (ix)
      0008A6 DD 7E F7         [19] 1400 	ld	a,-9 (ix)
      0008A9 96               [ 7] 1401 	sub	a,(hl)
      0008AA 28 0A            [12] 1402 	jr	Z, 00151$
                                   1403 ;./lib/entities.c:36: sprite->frameInVRAM = entidad->frame;
      0008AC DD 6E F5         [19] 1404 	ld	l, -11 (ix)
      0008AF DD 66 F6         [19] 1405 	ld	h, -10 (ix)
      0008B2 DD 7E F7         [19] 1406 	ld	a, -9 (ix)
      0008B5 77               [ 7] 1407 	ld	(hl), a
                                   1408 ;./lib/entities.c:38: for(j=0;j<sprite->alto;j++) {
      0008B6                       1409 00151$:
      0008B6 DD 7E F8         [19] 1410 	ld	a, -8 (ix)
      0008B9 DD 77 EE         [19] 1411 	ld	-18 (ix), a
      0008BC DD 7E F9         [19] 1412 	ld	a, -7 (ix)
      0008BF DD 77 EF         [19] 1413 	ld	-17 (ix), a
      0008C2 DD 7E F8         [19] 1414 	ld	a, -8 (ix)
      0008C5 DD 77 F0         [19] 1415 	ld	-16 (ix), a
      0008C8 DD 7E F9         [19] 1416 	ld	a, -7 (ix)
      0008CB DD 77 F1         [19] 1417 	ld	-15 (ix), a
      0008CE DD 7E FE         [19] 1418 	ld	a, -2 (ix)
      0008D1 DD 77 F2         [19] 1419 	ld	-14 (ix), a
      0008D4 DD 7E FF         [19] 1420 	ld	a, -1 (ix)
      0008D7 DD 77 F3         [19] 1421 	ld	-13 (ix), a
      0008DA DD 36 FE 00      [19] 1422 	ld	-2 (ix), #0x00
      0008DE                       1423 00132$:
      0008DE DD 6E FA         [19] 1424 	ld	l, -6 (ix)
      0008E1 DD 66 FB         [19] 1425 	ld	h, -5 (ix)
      0008E4 7E               [ 7] 1426 	ld	a, (hl)
      0008E5 DD 77 FF         [19] 1427 	ld	-1 (ix), a
      0008E8 DD 7E FE         [19] 1428 	ld	a, -2 (ix)
      0008EB DD 96 FF         [19] 1429 	sub	a, -1 (ix)
      0008EE D2rACr09         [10] 1430 	jp	NC, 00116$
                                   1431 ;./lib/entities.c:39: for(i=0;i<sprite->ancho;i++) {
      0008F1 DD 36 FF 00      [19] 1432 	ld	-1 (ix), #0x00
      0008F5                       1433 00129$:
      0008F5 DD 6E F2         [19] 1434 	ld	l, -14 (ix)
      0008F8 DD 66 F3         [19] 1435 	ld	h, -13 (ix)
      0008FB DD 7E FF         [19] 1436 	ld	a,-1 (ix)
      0008FE 96               [ 7] 1437 	sub	a,(hl)
      0008FF D2rA6r09         [10] 1438 	jp	NC, 00133$
                                   1439 ;./lib/entities.c:23: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      000902 DD 6E FC         [19] 1440 	ld	l, -4 (ix)
      000905 DD 66 FD         [19] 1441 	ld	h, -3 (ix)
      000908 7E               [ 7] 1442 	ld	a, (hl)
                                   1443 ;./lib/entities.c:41: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),entidad->y+(j<<4), (j<<2) + (i<<1) );  
      000909 DD 4E FF         [19] 1444 	ld	c, -1 (ix)
      00090C 06 00            [ 7] 1445 	ld	b, #0x00
      00090E DD 5E FE         [19] 1446 	ld	e, -2 (ix)
      000911 16 00            [ 7] 1447 	ld	d, #0x00
                                   1448 ;./lib/entities.c:23: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      000913 DD 77 F4         [19] 1449 	ld	-12 (ix), a
      000916 DD 36 F5 00      [19] 1450 	ld	-11 (ix), #0x00
                                   1451 ;./lib/entities.c:41: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),entidad->y+(j<<4), (j<<2) + (i<<1) );  
      00091A DD 71 F6         [19] 1452 	ld	-10 (ix), c
      00091D DD 70 F7         [19] 1453 	ld	-9 (ix), b
      000920 3E 03            [ 7] 1454 	ld	a, #0x03
      000922                       1455 00263$:
      000922 DD CB F6 26      [23] 1456 	sla	-10 (ix)
      000926 DD CB F7 16      [23] 1457 	rl	-9 (ix)
      00092A 3D               [ 4] 1458 	dec	a
      00092B 20 F5            [12] 1459 	jr	NZ, 00263$
      00092D 6B               [ 4] 1460 	ld	l, e
      00092E 62               [ 4] 1461 	ld	h, d
      00092F 29               [11] 1462 	add	hl, hl
      000930 29               [11] 1463 	add	hl, hl
      000931 CB 21            [ 8] 1464 	sla	c
      000933 CB 10            [ 8] 1465 	rl	b
      000935 EB               [ 4] 1466 	ex	de, hl
      000936 29               [11] 1467 	add	hl, hl
      000937 29               [11] 1468 	add	hl, hl
      000938 29               [11] 1469 	add	hl, hl
      000939 29               [11] 1470 	add	hl, hl
      00093A EB               [ 4] 1471 	ex	de, hl
      00093B DD 73 F8         [19] 1472 	ld	-8 (ix), e
      00093E DD 72 F9         [19] 1473 	ld	-7 (ix), d
      000941 DD 7E F4         [19] 1474 	ld	a, -12 (ix)
      000944 DD 86 F6         [19] 1475 	add	a, -10 (ix)
      000947 5F               [ 4] 1476 	ld	e, a
      000948 3E 00            [ 7] 1477 	ld	a, #0x00
      00094A DD 8E F7         [19] 1478 	adc	a, -9 (ix)
      00094D 09               [11] 1479 	add	hl, bc
                                   1480 ;	spillPairReg hl
                                   1481 ;	spillPairReg hl
      00094E AF               [ 4] 1482 	xor	a, a
      00094F 67               [ 4] 1483 	ld	h,a
      000950 B5               [ 4] 1484 	or	a, l
      000951 DD 77 F6         [19] 1485 	ld	-10 (ix), a
      000954 7B               [ 4] 1486 	ld	a, e
      000955 B4               [ 4] 1487 	or	a, h
      000956 DD 77 F7         [19] 1488 	ld	-9 (ix), a
                                   1489 ;./lib/entities.c:40: if(i==0 && j==0) {
      000959 DD 7E FF         [19] 1490 	ld	a, -1 (ix)
      00095C B7               [ 4] 1491 	or	a, a
      00095D 20 28            [12] 1492 	jr	NZ, 00112$
      00095F DD 7E FE         [19] 1493 	ld	a, -2 (ix)
      000962 B7               [ 4] 1494 	or	a, a
      000963 20 22            [12] 1495 	jr	NZ, 00112$
                                   1496 ;./lib/entities.c:41: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),entidad->y+(j<<4), (j<<2) + (i<<1) );  
      000965 DD 6E F0         [19] 1497 	ld	l, -16 (ix)
      000968 DD 66 F1         [19] 1498 	ld	h, -15 (ix)
      00096B 4E               [ 7] 1499 	ld	c, (hl)
      00096C 06 00            [ 7] 1500 	ld	b, #0x00
      00096E DD 6E F8         [19] 1501 	ld	l, -8 (ix)
                                   1502 ;	spillPairReg hl
                                   1503 ;	spillPairReg hl
      000971 DD 66 F9         [19] 1504 	ld	h, -7 (ix)
                                   1505 ;	spillPairReg hl
                                   1506 ;	spillPairReg hl
      000974 09               [11] 1507 	add	hl, bc
      000975 DD 5E F6         [19] 1508 	ld	e, -10 (ix)
      000978 DD 56 F7         [19] 1509 	ld	d, -9 (ix)
      00097B CDr00r00         [17] 1510 	call	_SMS_addSprite_f
      00097E DD 6E EC         [19] 1511 	ld	l, -20 (ix)
      000981 DD 66 ED         [19] 1512 	ld	h, -19 (ix)
      000984 77               [ 7] 1513 	ld	(hl), a
      000985 18 19            [12] 1514 	jr	00130$
      000987                       1515 00112$:
                                   1516 ;./lib/entities.c:44: SMS_addSprite(entidad->x+(i<<3),entidad->y+(j<<4), (j<<2) + (i<<1) );
      000987 DD 6E EE         [19] 1517 	ld	l, -18 (ix)
      00098A DD 66 EF         [19] 1518 	ld	h, -17 (ix)
      00098D 4E               [ 7] 1519 	ld	c, (hl)
      00098E 06 00            [ 7] 1520 	ld	b, #0x00
      000990 DD 6E F8         [19] 1521 	ld	l, -8 (ix)
                                   1522 ;	spillPairReg hl
                                   1523 ;	spillPairReg hl
      000993 DD 66 F9         [19] 1524 	ld	h, -7 (ix)
                                   1525 ;	spillPairReg hl
                                   1526 ;	spillPairReg hl
      000996 09               [11] 1527 	add	hl, bc
      000997 DD 5E F6         [19] 1528 	ld	e, -10 (ix)
      00099A DD 56 F7         [19] 1529 	ld	d, -9 (ix)
      00099D CDr00r00         [17] 1530 	call	_SMS_addSprite_f
      0009A0                       1531 00130$:
                                   1532 ;./lib/entities.c:39: for(i=0;i<sprite->ancho;i++) {
      0009A0 DD 34 FF         [23] 1533 	inc	-1 (ix)
      0009A3 C3rF5r08         [10] 1534 	jp	00129$
      0009A6                       1535 00133$:
                                   1536 ;./lib/entities.c:38: for(j=0;j<sprite->alto;j++) {
      0009A6 DD 34 FE         [23] 1537 	inc	-2 (ix)
      0009A9 C3rDEr08         [10] 1538 	jp	00132$
      0009AC                       1539 00116$:
                                   1540 ;./lib/entities.c:48: entidad->len = sprite->alto * sprite->ancho + entidad->initSprite;
      0009AC DD 6E F2         [19] 1541 	ld	l, -14 (ix)
      0009AF DD 66 F3         [19] 1542 	ld	h, -13 (ix)
      0009B2 7E               [ 7] 1543 	ld	a, (hl)
      0009B3 DD 77 FE         [19] 1544 	ld	-2 (ix), a
      0009B6 5F               [ 4] 1545 	ld	e, a
      0009B7 DD 66 FF         [19] 1546 	ld	h, -1 (ix)
                                   1547 ;	spillPairReg hl
                                   1548 ;	spillPairReg hl
      0009BA 2E 00            [ 7] 1549 	ld	l, #0x00
      0009BC 55               [ 4] 1550 	ld	d, l
      0009BD 06 08            [ 7] 1551 	ld	b, #0x08
      0009BF                       1552 00265$:
      0009BF 29               [11] 1553 	add	hl, hl
      0009C0 30 01            [12] 1554 	jr	NC, 00266$
      0009C2 19               [11] 1555 	add	hl, de
      0009C3                       1556 00266$:
      0009C3 10 FA            [13] 1557 	djnz	00265$
      0009C5 DD 75 FF         [19] 1558 	ld	-1 (ix), l
      0009C8 DD 6E EC         [19] 1559 	ld	l, -20 (ix)
      0009CB DD 66 ED         [19] 1560 	ld	h, -19 (ix)
      0009CE 7E               [ 7] 1561 	ld	a, (hl)
      0009CF DD 77 FE         [19] 1562 	ld	-2 (ix), a
      0009D2 DD 86 FF         [19] 1563 	add	a, -1 (ix)
      0009D5 DD 77 FF         [19] 1564 	ld	-1 (ix), a
      0009D8 E1               [10] 1565 	pop	hl
      0009D9 E5               [11] 1566 	push	hl
      0009DA DD 7E FF         [19] 1567 	ld	a, -1 (ix)
      0009DD 77               [ 7] 1568 	ld	(hl), a
                                   1569 ;./lib/entities.c:49: entidad->sprite = sprite;
      0009DE DD 7E FC         [19] 1570 	ld	a, -4 (ix)
      0009E1 C6 0C            [ 7] 1571 	add	a, #0x0c
      0009E3 DD 77 FE         [19] 1572 	ld	-2 (ix), a
      0009E6 DD 7E FD         [19] 1573 	ld	a, -3 (ix)
      0009E9 CE 00            [ 7] 1574 	adc	a, #0x00
      0009EB DD 77 FF         [19] 1575 	ld	-1 (ix), a
      0009EE DD 6E FE         [19] 1576 	ld	l, -2 (ix)
      0009F1 DD 66 FF         [19] 1577 	ld	h, -1 (ix)
      0009F4 DD 7E FA         [19] 1578 	ld	a, -6 (ix)
      0009F7 77               [ 7] 1579 	ld	(hl), a
      0009F8 23               [ 6] 1580 	inc	hl
      0009F9 DD 7E FB         [19] 1581 	ld	a, -5 (ix)
      0009FC 77               [ 7] 1582 	ld	(hl), a
      0009FD                       1583 00134$:
                                   1584 ;./lib/entities.c:52: }
      0009FD DD F9            [10] 1585 	ld	sp, ix
      0009FF DD E1            [14] 1586 	pop	ix
      000A01 C9               [10] 1587 	ret
                                   1588 ;./alex.c:20: unsigned char canUp(){
                                   1589 ;	---------------------------------
                                   1590 ; Function canUp
                                   1591 ; ---------------------------------
      000A02                       1592 _canUp::
                                   1593 ;./alex.c:21: if (alex.x < 2)
      000A02 3Ar03r01         [13] 1594 	ld	a, (#_alex + 0)
      000A05 D6 02            [ 7] 1595 	sub	a, #0x02
      000A07 30 02            [12] 1596 	jr	NC, 00102$
                                   1597 ;./alex.c:22: return 0;
      000A09 AF               [ 4] 1598 	xor	a, a
      000A0A C9               [10] 1599 	ret
      000A0B                       1600 00102$:
                                   1601 ;./alex.c:23: return 1;
      000A0B 3E 01            [ 7] 1602 	ld	a, #0x01
                                   1603 ;./alex.c:24: }
      000A0D C9               [10] 1604 	ret
                                   1605 ;./alex.c:26: unsigned char canDown() {
                                   1606 ;	---------------------------------
                                   1607 ; Function canDown
                                   1608 ; ---------------------------------
      000A0E                       1609 _canDown::
                                   1610 ;./alex.c:27: if (alex.y > 153)
      000A0E 21r04r01         [10] 1611 	ld	hl, #_alex+1
      000A11 4E               [ 7] 1612 	ld	c, (hl)
      000A12 3E 99            [ 7] 1613 	ld	a, #0x99
      000A14 91               [ 4] 1614 	sub	a, c
      000A15 30 02            [12] 1615 	jr	NC, 00102$
                                   1616 ;./alex.c:28: return 0;
      000A17 AF               [ 4] 1617 	xor	a, a
      000A18 C9               [10] 1618 	ret
      000A19                       1619 00102$:
                                   1620 ;./alex.c:29: return 1;
      000A19 3E 01            [ 7] 1621 	ld	a, #0x01
                                   1622 ;./alex.c:30: }
      000A1B C9               [10] 1623 	ret
                                   1624 ;./alex.c:32: unsigned char canLeft() {
                                   1625 ;	---------------------------------
                                   1626 ; Function canLeft
                                   1627 ; ---------------------------------
      000A1C                       1628 _canLeft::
                                   1629 ;./alex.c:33: if (alex.x < 9)
      000A1C 3Ar03r01         [13] 1630 	ld	a, (#_alex + 0)
      000A1F D6 09            [ 7] 1631 	sub	a, #0x09
      000A21 30 02            [12] 1632 	jr	NC, 00102$
                                   1633 ;./alex.c:34: return 0;
      000A23 AF               [ 4] 1634 	xor	a, a
      000A24 C9               [10] 1635 	ret
      000A25                       1636 00102$:
                                   1637 ;./alex.c:35: return 1;
      000A25 3E 01            [ 7] 1638 	ld	a, #0x01
                                   1639 ;./alex.c:36: }
      000A27 C9               [10] 1640 	ret
                                   1641 ;./alex.c:38: unsigned char canRight() {
                                   1642 ;	---------------------------------
                                   1643 ; Function canRight
                                   1644 ; ---------------------------------
      000A28                       1645 _canRight::
                                   1646 ;./alex.c:39: if (alex.x > 238)
      000A28 21r03r01         [10] 1647 	ld	hl, #_alex+0
      000A2B 4E               [ 7] 1648 	ld	c, (hl)
      000A2C 3E EE            [ 7] 1649 	ld	a, #0xee
      000A2E 91               [ 4] 1650 	sub	a, c
      000A2F 30 02            [12] 1651 	jr	NC, 00102$
                                   1652 ;./alex.c:40: return 0;
      000A31 AF               [ 4] 1653 	xor	a, a
      000A32 C9               [10] 1654 	ret
      000A33                       1655 00102$:
                                   1656 ;./alex.c:41: return 1;
      000A33 3E 01            [ 7] 1657 	ld	a, #0x01
                                   1658 ;./alex.c:42: }
      000A35 C9               [10] 1659 	ret
                                   1660 ;./alex.c:44: void moveAlexSuelo(int keys) {
                                   1661 ;	---------------------------------
                                   1662 ; Function moveAlexSuelo
                                   1663 ; ---------------------------------
      000A36                       1664 _moveAlexSuelo::
      000A36 DD E5            [15] 1665 	push	ix
      000A38 DD 21 00 00      [14] 1666 	ld	ix,#0
      000A3C DD 39            [15] 1667 	add	ix,sp
      000A3E F5               [11] 1668 	push	af
      000A3F F5               [11] 1669 	push	af
      000A40 F5               [11] 1670 	push	af
      000A41 DD 75 FE         [19] 1671 	ld	-2 (ix), l
      000A44 DD 74 FF         [19] 1672 	ld	-1 (ix), h
                                   1673 ;./alex.c:46: if (keys & PORT_A_KEY_LEFT)
      000A47 DD 7E FE         [19] 1674 	ld	a, -2 (ix)
      000A4A E6 04            [ 7] 1675 	and	a, #0x04
      000A4C DD 77 FA         [19] 1676 	ld	-6 (ix), a
      000A4F DD 36 FB 00      [19] 1677 	ld	-5 (ix), #0x00
                                   1678 ;./alex.c:48: if (keys & PORT_A_KEY_RIGHT)
      000A53 DD 7E FE         [19] 1679 	ld	a, -2 (ix)
      000A56 E6 08            [ 7] 1680 	and	a, #0x08
      000A58 DD 77 FC         [19] 1681 	ld	-4 (ix), a
      000A5B DD 36 FD 00      [19] 1682 	ld	-3 (ix), #0x00
                                   1683 ;./alex.c:45: if ((keys & PORT_A_KEY_DOWN)){
      000A5F DD CB FE 4E      [20] 1684 	bit	1, -2 (ix)
      000A63 28 33            [12] 1685 	jr	Z, 00109$
                                   1686 ;./alex.c:46: if (keys & PORT_A_KEY_LEFT)
      000A65 AF               [ 4] 1687 	xor	a, a
      000A66 DD B6 FA         [19] 1688 	or	a, -6 (ix)
      000A69 28 05            [12] 1689 	jr	Z, 00102$
                                   1690 ;./alex.c:47: alex.oriented = 1;
      000A6B 21r07r01         [10] 1691 	ld	hl, #_alex+4
      000A6E 36 01            [10] 1692 	ld	(hl), #0x01
      000A70                       1693 00102$:
                                   1694 ;./alex.c:48: if (keys & PORT_A_KEY_RIGHT)
      000A70 AF               [ 4] 1695 	xor	a, a
      000A71 DD B6 FC         [19] 1696 	or	a, -4 (ix)
      000A74 28 05            [12] 1697 	jr	Z, 00104$
                                   1698 ;./alex.c:49: alex.oriented = 0;
      000A76 21r07r01         [10] 1699 	ld	hl, #_alex+4
      000A79 36 00            [10] 1700 	ld	(hl), #0x00
      000A7B                       1701 00104$:
                                   1702 ;./alex.c:50: if (!alex.oriented)
      000A7B 3Ar07r01         [13] 1703 	ld	a,(#_alex + 4)
                                   1704 ;./alex.c:51: alex.frame = 7;
                                   1705 ;./alex.c:50: if (!alex.oriented)
      000A7E DD 77 FD         [19] 1706 	ld	-3 (ix), a
      000A81 B7               [ 4] 1707 	or	a, a
      000A82 20 07            [12] 1708 	jr	NZ, 00106$
                                   1709 ;./alex.c:51: alex.frame = 7;
      000A84 21r05r01         [10] 1710 	ld	hl, #(_alex + 2)
      000A87 36 07            [10] 1711 	ld	(hl), #0x07
      000A89 18 05            [12] 1712 	jr	00107$
      000A8B                       1713 00106$:
                                   1714 ;./alex.c:53: alex.frame = 15;
      000A8B 21r05r01         [10] 1715 	ld	hl, #(_alex + 2)
      000A8E 36 0F            [10] 1716 	ld	(hl), #0x0f
      000A90                       1717 00107$:
                                   1718 ;./alex.c:54: alex.lastChangeFrame = 15;
      000A90 21r06r01         [10] 1719 	ld	hl, #_alex + 3
      000A93 36 0F            [10] 1720 	ld	(hl), #0x0f
                                   1721 ;./alex.c:55: return; // not move
      000A95 C3r0Ar0C         [10] 1722 	jp	00145$
      000A98                       1723 00109$:
                                   1724 ;./alex.c:58: if (keys & PORT_A_KEY_2) {
      000A98 DD CB FE 6E      [20] 1725 	bit	5, -2 (ix)
      000A9C 28 3B            [12] 1726 	jr	Z, 00116$
                                   1727 ;./alex.c:59: if (alex.y > 100)
      000A9E 01r04r01         [10] 1728 	ld	bc, #_alex+1
      000AA1 0A               [ 7] 1729 	ld	a, (bc)
      000AA2 5F               [ 4] 1730 	ld	e, a
      000AA3 3E 64            [ 7] 1731 	ld	a, #0x64
      000AA5 93               [ 4] 1732 	sub	a, e
      000AA6 30 09            [12] 1733 	jr	NC, 00111$
                                   1734 ;./alex.c:60: maxSalto = alex.y - 100;
      000AA8 7B               [ 4] 1735 	ld	a, e
      000AA9 21r02r01         [10] 1736 	ld	hl, #_maxSalto
      000AAC C6 9C            [ 7] 1737 	add	a, #0x9c
      000AAE 77               [ 7] 1738 	ld	(hl), a
      000AAF 18 05            [12] 1739 	jr	00112$
      000AB1                       1740 00111$:
                                   1741 ;./alex.c:62: maxSalto = 0;
      000AB1 21r02r01         [10] 1742 	ld	hl, #_maxSalto
      000AB4 36 00            [10] 1743 	ld	(hl), #0x00
      000AB6                       1744 00112$:
                                   1745 ;./alex.c:63: alex.y--;
      000AB6 0A               [ 7] 1746 	ld	a, (bc)
      000AB7 3D               [ 4] 1747 	dec	a
      000AB8 02               [ 7] 1748 	ld	(bc), a
                                   1749 ;./alex.c:64: alex.y--;
      000AB9 3D               [ 4] 1750 	dec	a
      000ABA 02               [ 7] 1751 	ld	(bc), a
                                   1752 ;./alex.c:65: SMS_saveROMBank();
      000ABB 3A FF FF         [13] 1753 	ld	a, (_ROM_bank_to_be_mapped_on_slot2+0)
      000ABE DD 77 FD         [19] 1754 	ld	-3 (ix), a
                                   1755 ;./alex.c:66: SMS_mapROMBank(3);
      000AC1 21 FF FF         [10] 1756 	ld	hl, #_ROM_bank_to_be_mapped_on_slot2
      000AC4 36 03            [10] 1757 	ld	(hl), #0x03
                                   1758 ;./alex.c:67: PSGSFXPlay(salto_psg, SFX_CHANNEL1);
      000AC6 3E 08            [ 7] 1759 	ld	a, #0x08
      000AC8 F5               [11] 1760 	push	af
      000AC9 33               [ 6] 1761 	inc	sp
      000ACA 21r00r00         [10] 1762 	ld	hl, #_salto_psg
      000ACD CDr00r00         [17] 1763 	call	_PSGSFXPlay
                                   1764 ;./alex.c:68: SMS_restoreROMBank();
      000AD0 DD 7E FD         [19] 1765 	ld	a, -3 (ix)
      000AD3 32 FF FF         [13] 1766 	ld	(_ROM_bank_to_be_mapped_on_slot2+0), a
                                   1767 ;./alex.c:69: return;
      000AD6 C3r0Ar0C         [10] 1768 	jp	00145$
      000AD9                       1769 00116$:
                                   1770 ;./alex.c:71: else if (keys & PORT_A_KEY_1) {
      000AD9 DD CB FE 66      [20] 1771 	bit	4, -2 (ix)
      000ADD 28 0A            [12] 1772 	jr	Z, 00117$
                                   1773 ;./alex.c:72: alex.state = PUÑETAZO_SUELO;
      000ADF 21r08r01         [10] 1774 	ld	hl, #_alex + 5
      000AE2 36 20            [10] 1775 	ld	(hl), #0x20
                                   1776 ;./alex.c:73: alex.lastChangeFrame = 15;
      000AE4 21r06r01         [10] 1777 	ld	hl, #_alex + 3
      000AE7 36 0F            [10] 1778 	ld	(hl), #0x0f
      000AE9                       1779 00117$:
                                   1780 ;./alex.c:75: if(alex.state != PUÑETAZO_SUELO) {
      000AE9 21r08r01         [10] 1781 	ld	hl, #(_alex + 5)
      000AEC 5E               [ 7] 1782 	ld	e, (hl)
                                   1783 ;./alex.c:80: alex.oriented = 1;
                                   1784 ;./alex.c:81: alex.lastChangeFrame++;
      000AED 01r06r01         [10] 1785 	ld	bc, #_alex + 3
                                   1786 ;./alex.c:84: alex.frame++;
                                   1787 ;./alex.c:75: if(alex.state != PUÑETAZO_SUELO) {
      000AF0 7B               [ 4] 1788 	ld	a, e
      000AF1 D6 20            [ 7] 1789 	sub	a, #0x20
      000AF3 CAr8Ar0B         [10] 1790 	jp	Z,00143$
                                   1791 ;./alex.c:76: SpriteTableY2[4] = 234;
      000AF6 2Ar40r03         [16] 1792 	ld	hl, (_SpriteTableY2)
      000AF9 11 04 00         [10] 1793 	ld	de, #0x0004
      000AFC 19               [11] 1794 	add	hl, de
      000AFD 36 EA            [10] 1795 	ld	(hl), #0xea
                                   1796 ;./alex.c:77: if ((keys & PORT_A_KEY_LEFT) && alex.x > 8 )
      000AFF AF               [ 4] 1797 	xor	a, a
      000B00 DD B6 FA         [19] 1798 	or	a, -6 (ix)
      000B03 28 3A            [12] 1799 	jr	Z, 00134$
      000B05 21r03r01         [10] 1800 	ld	hl, #_alex
      000B08 5E               [ 7] 1801 	ld	e, (hl)
      000B09 3E 08            [ 7] 1802 	ld	a, #0x08
      000B0B 93               [ 4] 1803 	sub	a, e
      000B0C 30 31            [12] 1804 	jr	NC, 00134$
                                   1805 ;./alex.c:79: alex.x -= 1;
      000B0E 1D               [ 4] 1806 	dec	e
      000B0F 21r03r01         [10] 1807 	ld	hl, #_alex
      000B12 73               [ 7] 1808 	ld	(hl), e
                                   1809 ;./alex.c:80: alex.oriented = 1;
      000B13 21r07r01         [10] 1810 	ld	hl, #(_alex + 4)
      000B16 36 01            [10] 1811 	ld	(hl), #0x01
                                   1812 ;./alex.c:81: alex.lastChangeFrame++;
      000B18 0A               [ 7] 1813 	ld	a, (bc)
      000B19 3C               [ 4] 1814 	inc	a
      000B1A 02               [ 7] 1815 	ld	(bc), a
                                   1816 ;./alex.c:82: if (alex.lastChangeFrame == 11) {
      000B1B D6 0B            [ 7] 1817 	sub	a, #0x0b
      000B1D 20 09            [12] 1818 	jr	NZ, 00119$
                                   1819 ;./alex.c:83: alex.lastChangeFrame = 0;
      000B1F AF               [ 4] 1820 	xor	a, a
      000B20 02               [ 7] 1821 	ld	(bc), a
                                   1822 ;./alex.c:84: alex.frame++;
      000B21 3Ar05r01         [13] 1823 	ld	a, (#(_alex + 2) + 0)
      000B24 3C               [ 4] 1824 	inc	a
      000B25 32r05r01         [13] 1825 	ld	(#(_alex + 2)),a
      000B28                       1826 00119$:
                                   1827 ;./alex.c:86: if (alex.frame > 11 || alex.frame < 8)
      000B28 21r05r01         [10] 1828 	ld	hl, #(_alex + 2)
      000B2B 4E               [ 7] 1829 	ld	c, (hl)
      000B2C 3E 0B            [ 7] 1830 	ld	a, #0x0b
      000B2E 91               [ 4] 1831 	sub	a, c
      000B2F 38 06            [12] 1832 	jr	C, 00120$
      000B31 79               [ 4] 1833 	ld	a, c
      000B32 D6 08            [ 7] 1834 	sub	a, #0x08
      000B34 D2r0Ar0C         [10] 1835 	jp	NC, 00145$
      000B37                       1836 00120$:
                                   1837 ;./alex.c:87: alex.frame = 8;
      000B37 21r05r01         [10] 1838 	ld	hl, #(_alex + 2)
      000B3A 36 08            [10] 1839 	ld	(hl), #0x08
      000B3C C3r0Ar0C         [10] 1840 	jp	00145$
      000B3F                       1841 00134$:
                                   1842 ;./alex.c:89: else if ((keys & PORT_A_KEY_RIGHT) && alex.x <240)
      000B3F AF               [ 4] 1843 	xor	a, a
      000B40 DD B6 FC         [19] 1844 	or	a, -4 (ix)
      000B43 28 32            [12] 1845 	jr	Z, 00130$
      000B45 3Ar03r01         [13] 1846 	ld	a, (#_alex + 0)
      000B48 FE F0            [ 7] 1847 	cp	a, #0xf0
      000B4A 30 2B            [12] 1848 	jr	NC, 00130$
                                   1849 ;./alex.c:91: alex.x += 1;
      000B4C 3C               [ 4] 1850 	inc	a
      000B4D 32r03r01         [13] 1851 	ld	(#_alex),a
                                   1852 ;./alex.c:92: alex.oriented = 0;
      000B50 21r07r01         [10] 1853 	ld	hl, #(_alex + 4)
      000B53 36 00            [10] 1854 	ld	(hl), #0x00
                                   1855 ;./alex.c:93: alex.lastChangeFrame++;
      000B55 0A               [ 7] 1856 	ld	a, (bc)
      000B56 3C               [ 4] 1857 	inc	a
      000B57 02               [ 7] 1858 	ld	(bc), a
                                   1859 ;./alex.c:94: if (alex.lastChangeFrame == 11) {
      000B58 D6 0B            [ 7] 1860 	sub	a, #0x0b
      000B5A 20 09            [12] 1861 	jr	NZ, 00124$
                                   1862 ;./alex.c:95: alex.lastChangeFrame = 0;
      000B5C AF               [ 4] 1863 	xor	a, a
      000B5D 02               [ 7] 1864 	ld	(bc), a
                                   1865 ;./alex.c:96: alex.frame++;
      000B5E 3Ar05r01         [13] 1866 	ld	a, (#(_alex + 2) + 0)
      000B61 3C               [ 4] 1867 	inc	a
      000B62 32r05r01         [13] 1868 	ld	(#(_alex + 2)),a
      000B65                       1869 00124$:
                                   1870 ;./alex.c:98: if (alex.frame > 3)
      000B65 21r05r01         [10] 1871 	ld	hl, #(_alex + 2)
      000B68 4E               [ 7] 1872 	ld	c, (hl)
      000B69 3E 03            [ 7] 1873 	ld	a, #0x03
      000B6B 91               [ 4] 1874 	sub	a, c
      000B6C D2r0Ar0C         [10] 1875 	jp	NC, 00145$
                                   1876 ;./alex.c:99: alex.frame = 0;
      000B6F 21r05r01         [10] 1877 	ld	hl, #(_alex + 2)
      000B72 36 00            [10] 1878 	ld	(hl), #0x00
      000B74 C3r0Ar0C         [10] 1879 	jp	00145$
      000B77                       1880 00130$:
                                   1881 ;./alex.c:103: alex.frame = 4;
      000B77 21r05r01         [10] 1882 	ld	hl, #(_alex + 2)
      000B7A 36 04            [10] 1883 	ld	(hl), #0x04
                                   1884 ;./alex.c:104: if (alex.oriented)
      000B7C 3Ar07r01         [13] 1885 	ld	a, (#(_alex + 4) + 0)
      000B7F B7               [ 4] 1886 	or	a, a
      000B80 28 02            [12] 1887 	jr	Z, 00128$
                                   1888 ;./alex.c:105: alex.frame = 12;
      000B82 36 0C            [10] 1889 	ld	(hl), #0x0c
      000B84                       1890 00128$:
                                   1891 ;./alex.c:106: alex.lastChangeFrame = 10;
      000B84 3E 0A            [ 7] 1892 	ld	a, #0x0a
      000B86 02               [ 7] 1893 	ld	(bc), a
      000B87 C3r0Ar0C         [10] 1894 	jp	00145$
      000B8A                       1895 00143$:
                                   1896 ;./alex.c:110: if (!alex.oriented) {
                                   1897 ;./alex.c:115: SpriteTableY2[4] = alex.y + 9;
                                   1898 ;./alex.c:110: if (!alex.oriented) {
      000B8A 3Ar07r01         [13] 1899 	ld	a, (#(_alex + 4) + 0)
      000B8D B7               [ 4] 1900 	or	a, a
      000B8E 20 34            [12] 1901 	jr	NZ, 00138$
                                   1902 ;./alex.c:111: alex.frame = 5;
      000B90 21r05r01         [10] 1903 	ld	hl, #(_alex + 2)
      000B93 36 05            [10] 1904 	ld	(hl), #0x05
                                   1905 ;./alex.c:113: SpriteTableXN2[8] = alex.x + 16;
      000B95 3Ar42r03         [13] 1906 	ld	a, (_SpriteTableXN2+0)
      000B98 C6 08            [ 7] 1907 	add	a, #0x08
      000B9A 5F               [ 4] 1908 	ld	e, a
      000B9B 3Ar43r03         [13] 1909 	ld	a, (_SpriteTableXN2+1)
      000B9E CE 00            [ 7] 1910 	adc	a, #0x00
      000BA0 57               [ 4] 1911 	ld	d, a
      000BA1 3Ar03r01         [13] 1912 	ld	a, (#_alex + 0)
      000BA4 C6 10            [ 7] 1913 	add	a, #0x10
      000BA6 12               [ 7] 1914 	ld	(de), a
                                   1915 ;./alex.c:114: SpriteTableXN2[9] = 9;
      000BA7 2Ar42r03         [16] 1916 	ld	hl, (_SpriteTableXN2)
      000BAA 11 09 00         [10] 1917 	ld	de, #0x0009
      000BAD 19               [11] 1918 	add	hl, de
      000BAE 36 09            [10] 1919 	ld	(hl), #0x09
                                   1920 ;./alex.c:115: SpriteTableY2[4] = alex.y + 9;
      000BB0 3Ar40r03         [13] 1921 	ld	a, (_SpriteTableY2+0)
      000BB3 C6 04            [ 7] 1922 	add	a, #0x04
      000BB5 5F               [ 4] 1923 	ld	e, a
      000BB6 3Ar41r03         [13] 1924 	ld	a, (_SpriteTableY2+1)
      000BB9 CE 00            [ 7] 1925 	adc	a, #0x00
      000BBB 57               [ 4] 1926 	ld	d, a
      000BBC 3Ar04r01         [13] 1927 	ld	a, (#(_alex + 1) + 0)
      000BBF C6 09            [ 7] 1928 	add	a, #0x09
      000BC1 12               [ 7] 1929 	ld	(de), a
      000BC2 18 32            [12] 1930 	jr	00139$
      000BC4                       1931 00138$:
                                   1932 ;./alex.c:118: alex.frame = 13;
      000BC4 21r05r01         [10] 1933 	ld	hl, #(_alex + 2)
      000BC7 36 0D            [10] 1934 	ld	(hl), #0x0d
                                   1935 ;./alex.c:120: SpriteTableXN2[8] = alex.x - 8;
      000BC9 3Ar42r03         [13] 1936 	ld	a, (_SpriteTableXN2+0)
      000BCC C6 08            [ 7] 1937 	add	a, #0x08
      000BCE 5F               [ 4] 1938 	ld	e, a
      000BCF 3Ar43r03         [13] 1939 	ld	a, (_SpriteTableXN2+1)
      000BD2 CE 00            [ 7] 1940 	adc	a, #0x00
      000BD4 57               [ 4] 1941 	ld	d, a
      000BD5 3Ar03r01         [13] 1942 	ld	a, (#_alex + 0)
      000BD8 C6 F8            [ 7] 1943 	add	a, #0xf8
      000BDA 12               [ 7] 1944 	ld	(de), a
                                   1945 ;./alex.c:121: SpriteTableXN2[9] = 11;
      000BDB 2Ar42r03         [16] 1946 	ld	hl, (_SpriteTableXN2)
      000BDE 11 09 00         [10] 1947 	ld	de, #0x0009
      000BE1 19               [11] 1948 	add	hl, de
      000BE2 36 0B            [10] 1949 	ld	(hl), #0x0b
                                   1950 ;./alex.c:122: SpriteTableY2[4] = alex.y + 9;
      000BE4 3Ar40r03         [13] 1951 	ld	a, (_SpriteTableY2+0)
      000BE7 C6 04            [ 7] 1952 	add	a, #0x04
      000BE9 5F               [ 4] 1953 	ld	e, a
      000BEA 3Ar41r03         [13] 1954 	ld	a, (_SpriteTableY2+1)
      000BED CE 00            [ 7] 1955 	adc	a, #0x00
      000BEF 57               [ 4] 1956 	ld	d, a
      000BF0 3Ar04r01         [13] 1957 	ld	a, (#(_alex + 1) + 0)
      000BF3 C6 09            [ 7] 1958 	add	a, #0x09
      000BF5 12               [ 7] 1959 	ld	(de), a
      000BF6                       1960 00139$:
                                   1961 ;./alex.c:124: alex.lastChangeFrame--;
      000BF6 0A               [ 7] 1962 	ld	a, (bc)
      000BF7 3D               [ 4] 1963 	dec	a
      000BF8 02               [ 7] 1964 	ld	(bc), a
                                   1965 ;./alex.c:125: if(!alex.lastChangeFrame) {
      000BF9 B7               [ 4] 1966 	or	a, a
      000BFA 20 0E            [12] 1967 	jr	NZ, 00145$
                                   1968 ;./alex.c:126: alex.state = 0;
      000BFC 21r08r01         [10] 1969 	ld	hl, #(_alex + 5)
      000BFF 36 00            [10] 1970 	ld	(hl), #0x00
                                   1971 ;./alex.c:127: SpriteTableY2[4] = 234;
      000C01 2Ar40r03         [16] 1972 	ld	hl, (_SpriteTableY2)
      000C04 11 04 00         [10] 1973 	ld	de, #0x0004
      000C07 19               [11] 1974 	add	hl, de
      000C08 36 EA            [10] 1975 	ld	(hl), #0xea
      000C0A                       1976 00145$:
                                   1977 ;./alex.c:130: }
      000C0A DD F9            [10] 1978 	ld	sp, ix
      000C0C DD E1            [14] 1979 	pop	ix
      000C0E C9               [10] 1980 	ret
                                   1981 ;./alex.c:132: void moveAlexAire(int keys, unsigned char puedeSubir, unsigned char puedeDerecha, unsigned char puedeIzquieda) {
                                   1982 ;	---------------------------------
                                   1983 ; Function moveAlexAire
                                   1984 ; ---------------------------------
      000C0F                       1985 _moveAlexAire::
      000C0F DD E5            [15] 1986 	push	ix
      000C11 DD 21 00 00      [14] 1987 	ld	ix,#0
      000C15 DD 39            [15] 1988 	add	ix,sp
      000C17 F5               [11] 1989 	push	af
      000C18 3B               [ 6] 1990 	dec	sp
      000C19 DD 75 FE         [19] 1991 	ld	-2 (ix), l
      000C1C DD 74 FF         [19] 1992 	ld	-1 (ix), h
                                   1993 ;./alex.c:133: if (alex.y > maxSalto) {
      000C1F 21r04r01         [10] 1994 	ld	hl, #(_alex + 1)
      000C22 46               [ 7] 1995 	ld	b, (hl)
                                   1996 ;./alex.c:134: alex.y -= 2;
      000C23 48               [ 4] 1997 	ld	c, b
                                   1998 ;./alex.c:133: if (alex.y > maxSalto) {
      000C24 3Ar02r01         [13] 1999 	ld	a, (_maxSalto+0)
      000C27 90               [ 4] 2000 	sub	a, b
      000C28 30 08            [12] 2001 	jr	NC, 00102$
                                   2002 ;./alex.c:134: alex.y -= 2;
      000C2A 0D               [ 4] 2003 	dec	c
      000C2B 0D               [ 4] 2004 	dec	c
      000C2C 21r04r01         [10] 2005 	ld	hl, #(_alex + 1)
      000C2F 71               [ 7] 2006 	ld	(hl), c
      000C30 18 0E            [12] 2007 	jr	00103$
      000C32                       2008 00102$:
                                   2009 ;./alex.c:137: alex.y += 2; // bajando
      000C32 0C               [ 4] 2010 	inc	c
      000C33 0C               [ 4] 2011 	inc	c
      000C34 21r04r01         [10] 2012 	ld	hl, #(_alex + 1)
      000C37 71               [ 7] 2013 	ld	(hl), c
                                   2014 ;./alex.c:138: maxSalto = 255;
      000C38 FD 21r02r01      [14] 2015 	ld	iy, #_maxSalto
      000C3C FD 36 00 FF      [19] 2016 	ld	0 (iy), #0xff
      000C40                       2017 00103$:
                                   2018 ;./alex.c:141: if (alex.state != PUÑETAZO_SALTANDO)
                                   2019 ;./alex.c:142: alex.oriented = 1;
                                   2020 ;./alex.c:140: if (keys & PORT_A_KEY_LEFT) {
      000C40 DD CB FE 56      [20] 2021 	bit	2, -2 (ix)
      000C44 28 1A            [12] 2022 	jr	Z, 00109$
                                   2023 ;./alex.c:141: if (alex.state != PUÑETAZO_SALTANDO)
      000C46 3Ar08r01         [13] 2024 	ld	a, (#(_alex + 5) + 0)
      000C49 D6 10            [ 7] 2025 	sub	a, #0x10
      000C4B 28 05            [12] 2026 	jr	Z, 00105$
                                   2027 ;./alex.c:142: alex.oriented = 1;
      000C4D 21r07r01         [10] 2028 	ld	hl, #(_alex + 4)
      000C50 36 01            [10] 2029 	ld	(hl), #0x01
      000C52                       2030 00105$:
                                   2031 ;./alex.c:143: if (puedeIzquieda)
      000C52 DD 7E 06         [19] 2032 	ld	a, 6 (ix)
      000C55 B7               [ 4] 2033 	or	a, a
      000C56 28 08            [12] 2034 	jr	Z, 00109$
                                   2035 ;./alex.c:144: alex.x -= 2;
      000C58 3Ar03r01         [13] 2036 	ld	a, (#_alex + 0)
      000C5B 3D               [ 4] 2037 	dec	a
      000C5C 3D               [ 4] 2038 	dec	a
      000C5D 32r03r01         [13] 2039 	ld	(#_alex),a
      000C60                       2040 00109$:
                                   2041 ;./alex.c:146: if (keys & PORT_A_KEY_RIGHT) {
      000C60 DD CB FE 5E      [20] 2042 	bit	3, -2 (ix)
      000C64 28 1A            [12] 2043 	jr	Z, 00115$
                                   2044 ;./alex.c:147: if (alex.state != PUÑETAZO_SALTANDO)
      000C66 3Ar08r01         [13] 2045 	ld	a, (#(_alex + 5) + 0)
      000C69 D6 10            [ 7] 2046 	sub	a, #0x10
      000C6B 28 05            [12] 2047 	jr	Z, 00111$
                                   2048 ;./alex.c:148: alex.oriented = 0;
      000C6D 21r07r01         [10] 2049 	ld	hl, #(_alex + 4)
      000C70 36 00            [10] 2050 	ld	(hl), #0x00
      000C72                       2051 00111$:
                                   2052 ;./alex.c:149: if (puedeDerecha)
      000C72 DD 7E 05         [19] 2053 	ld	a, 5 (ix)
      000C75 B7               [ 4] 2054 	or	a, a
      000C76 28 08            [12] 2055 	jr	Z, 00115$
                                   2056 ;./alex.c:150: alex.x += 2;
      000C78 3Ar03r01         [13] 2057 	ld	a, (#_alex + 0)
      000C7B C6 02            [ 7] 2058 	add	a, #0x02
      000C7D 32r03r01         [13] 2059 	ld	(#_alex),a
      000C80                       2060 00115$:
                                   2061 ;./alex.c:152: if (alex.state == PUÑETAZO_SALTANDO) {
      000C80 21r08r01         [10] 2062 	ld	hl, #(_alex + 5)
      000C83 4E               [ 7] 2063 	ld	c, (hl)
                                   2064 ;./alex.c:153: alex.lastChangeFrame--;
                                   2065 ;./alex.c:159: alex.frame = 5;
                                   2066 ;./alex.c:152: if (alex.state == PUÑETAZO_SALTANDO) {
      000C84 79               [ 4] 2067 	ld	a, c
      000C85 D6 10            [ 7] 2068 	sub	a, #0x10
      000C87 C2r13r0D         [10] 2069 	jp	NZ,00127$
                                   2070 ;./alex.c:153: alex.lastChangeFrame--;
      000C8A 21r06r01         [10] 2071 	ld	hl, #(_alex + 3)
      000C8D 4E               [ 7] 2072 	ld	c, (hl)
      000C8E 0D               [ 4] 2073 	dec	c
      000C8F 21r06r01         [10] 2074 	ld	hl, #(_alex + 3)
                                   2075 ;./alex.c:154: if  (!alex.lastChangeFrame) {
      000C92 79               [ 4] 2076 	ld	a,c
      000C93 77               [ 7] 2077 	ld	(hl),a
      000C94 B7               [ 4] 2078 	or	a, a
      000C95 20 0E            [12] 2079 	jr	NZ, 00117$
                                   2080 ;./alex.c:155: alex.state = 0;
      000C97 21r08r01         [10] 2081 	ld	hl, #(_alex + 5)
      000C9A 36 00            [10] 2082 	ld	(hl), #0x00
                                   2083 ;./alex.c:156: SpriteTableY2[4] = 234;
      000C9C 2Ar40r03         [16] 2084 	ld	hl, (_SpriteTableY2)
      000C9F 11 04 00         [10] 2085 	ld	de, #0x0004
      000CA2 19               [11] 2086 	add	hl, de
      000CA3 36 EA            [10] 2087 	ld	(hl), #0xea
      000CA5                       2088 00117$:
                                   2089 ;./alex.c:158: if (!alex.oriented) {
      000CA5 3Ar07r01         [13] 2090 	ld	a, (#(_alex + 4) + 0)
      000CA8 B7               [ 4] 2091 	or	a, a
      000CA9 20 34            [12] 2092 	jr	NZ, 00119$
                                   2093 ;./alex.c:159: alex.frame = 5;
      000CAB 21r05r01         [10] 2094 	ld	hl, #(_alex + 2)
      000CAE 36 05            [10] 2095 	ld	(hl), #0x05
                                   2096 ;./alex.c:161: SpriteTableXN2[8] = alex.x + 16;
      000CB0 3Ar42r03         [13] 2097 	ld	a, (_SpriteTableXN2+0)
      000CB3 C6 08            [ 7] 2098 	add	a, #0x08
      000CB5 4F               [ 4] 2099 	ld	c, a
      000CB6 3Ar43r03         [13] 2100 	ld	a, (_SpriteTableXN2+1)
      000CB9 CE 00            [ 7] 2101 	adc	a, #0x00
      000CBB 47               [ 4] 2102 	ld	b, a
      000CBC 3Ar03r01         [13] 2103 	ld	a, (#_alex + 0)
      000CBF C6 10            [ 7] 2104 	add	a, #0x10
      000CC1 02               [ 7] 2105 	ld	(bc), a
                                   2106 ;./alex.c:162: SpriteTableXN2[9] = 9;
      000CC2 2Ar42r03         [16] 2107 	ld	hl, (_SpriteTableXN2)
      000CC5 11 09 00         [10] 2108 	ld	de, #0x0009
      000CC8 19               [11] 2109 	add	hl, de
      000CC9 36 09            [10] 2110 	ld	(hl), #0x09
                                   2111 ;./alex.c:163: SpriteTableY2[4] = alex.y + 9;
      000CCB 3Ar40r03         [13] 2112 	ld	a, (_SpriteTableY2+0)
      000CCE C6 04            [ 7] 2113 	add	a, #0x04
      000CD0 4F               [ 4] 2114 	ld	c, a
      000CD1 3Ar41r03         [13] 2115 	ld	a, (_SpriteTableY2+1)
      000CD4 CE 00            [ 7] 2116 	adc	a, #0x00
      000CD6 47               [ 4] 2117 	ld	b, a
      000CD7 3Ar04r01         [13] 2118 	ld	a, (#(_alex + 1) + 0)
      000CDA C6 09            [ 7] 2119 	add	a, #0x09
      000CDC 02               [ 7] 2120 	ld	(bc), a
      000CDD 18 62            [12] 2121 	jr	00129$
      000CDF                       2122 00119$:
                                   2123 ;./alex.c:166: alex.frame = 13;
      000CDF 21r05r01         [10] 2124 	ld	hl, #(_alex + 2)
      000CE2 36 0D            [10] 2125 	ld	(hl), #0x0d
                                   2126 ;./alex.c:168: SpriteTableXN2[8] = alex.x - 8;
      000CE4 3Ar42r03         [13] 2127 	ld	a, (_SpriteTableXN2+0)
      000CE7 C6 08            [ 7] 2128 	add	a, #0x08
      000CE9 4F               [ 4] 2129 	ld	c, a
      000CEA 3Ar43r03         [13] 2130 	ld	a, (_SpriteTableXN2+1)
      000CED CE 00            [ 7] 2131 	adc	a, #0x00
      000CEF 47               [ 4] 2132 	ld	b, a
      000CF0 3Ar03r01         [13] 2133 	ld	a, (#_alex + 0)
      000CF3 C6 F8            [ 7] 2134 	add	a, #0xf8
      000CF5 02               [ 7] 2135 	ld	(bc), a
                                   2136 ;./alex.c:169: SpriteTableXN2[9] = 11;
      000CF6 2Ar42r03         [16] 2137 	ld	hl, (_SpriteTableXN2)
      000CF9 11 09 00         [10] 2138 	ld	de, #0x0009
      000CFC 19               [11] 2139 	add	hl, de
      000CFD 36 0B            [10] 2140 	ld	(hl), #0x0b
                                   2141 ;./alex.c:170: SpriteTableY2[4] = alex.y + 9;
      000CFF 3Ar40r03         [13] 2142 	ld	a, (_SpriteTableY2+0)
      000D02 C6 04            [ 7] 2143 	add	a, #0x04
      000D04 4F               [ 4] 2144 	ld	c, a
      000D05 3Ar41r03         [13] 2145 	ld	a, (_SpriteTableY2+1)
      000D08 CE 00            [ 7] 2146 	adc	a, #0x00
      000D0A 47               [ 4] 2147 	ld	b, a
      000D0B 3Ar04r01         [13] 2148 	ld	a, (#(_alex + 1) + 0)
      000D0E C6 09            [ 7] 2149 	add	a, #0x09
      000D10 02               [ 7] 2150 	ld	(bc), a
      000D11 18 2E            [12] 2151 	jr	00129$
      000D13                       2152 00127$:
                                   2153 ;./alex.c:174: SpriteTableY2[4] = 234;
      000D13 2Ar40r03         [16] 2154 	ld	hl, (_SpriteTableY2)
      000D16 11 04 00         [10] 2155 	ld	de, #0x0004
      000D19 19               [11] 2156 	add	hl, de
      000D1A 36 EA            [10] 2157 	ld	(hl), #0xea
                                   2158 ;./alex.c:175: if (!alex.oriented)
      000D1C 3Ar07r01         [13] 2159 	ld	a, (#(_alex + 4) + 0)
      000D1F DD 77 FD         [19] 2160 	ld	-3 (ix), a
      000D22 B7               [ 4] 2161 	or	a, a
      000D23 20 07            [12] 2162 	jr	NZ, 00122$
                                   2163 ;./alex.c:176: alex.frame = 6;
      000D25 21r05r01         [10] 2164 	ld	hl, #(_alex + 2)
      000D28 36 06            [10] 2165 	ld	(hl), #0x06
      000D2A 18 05            [12] 2166 	jr	00123$
      000D2C                       2167 00122$:
                                   2168 ;./alex.c:178: alex.frame = 14;
      000D2C 21r05r01         [10] 2169 	ld	hl, #(_alex + 2)
      000D2F 36 0E            [10] 2170 	ld	(hl), #0x0e
      000D31                       2171 00123$:
                                   2172 ;./alex.c:179: if (keys & PORT_A_KEY_1) {
      000D31 DD CB FE 66      [20] 2173 	bit	4, -2 (ix)
      000D35 28 0A            [12] 2174 	jr	Z, 00129$
                                   2175 ;./alex.c:180: alex.state = PUÑETAZO_SALTANDO;
      000D37 21r08r01         [10] 2176 	ld	hl, #(_alex + 5)
      000D3A 36 10            [10] 2177 	ld	(hl), #0x10
                                   2178 ;./alex.c:181: alex.lastChangeFrame = 20;
      000D3C 21r06r01         [10] 2179 	ld	hl, #(_alex + 3)
      000D3F 36 14            [10] 2180 	ld	(hl), #0x14
      000D41                       2181 00129$:
                                   2182 ;./alex.c:185: }
      000D41 DD F9            [10] 2183 	ld	sp, ix
      000D43 DD E1            [14] 2184 	pop	ix
      000D45 E1               [10] 2185 	pop	hl
      000D46 F1               [10] 2186 	pop	af
      000D47 33               [ 6] 2187 	inc	sp
      000D48 E9               [ 4] 2188 	jp	(hl)
                                   2189 ;./alex.c:189: void drawAlex() {
                                   2190 ;	---------------------------------
                                   2191 ; Function drawAlex
                                   2192 ; ---------------------------------
      000D49                       2193 _drawAlex::
                                   2194 ;./alex.c:190: SpriteTableXN2[0] = alex.x;
      000D49 ED 5Br42r03      [20] 2195 	ld	de, (_SpriteTableXN2)
      000D4D 01r03r01         [10] 2196 	ld	bc, #_alex+0
      000D50 0A               [ 7] 2197 	ld	a, (bc)
      000D51 12               [ 7] 2198 	ld	(de), a
                                   2199 ;./alex.c:191: SpriteTableXN2[2] = alex.x + 8;
      000D52 2Ar42r03         [16] 2200 	ld	hl, (_SpriteTableXN2)
      000D55 23               [ 6] 2201 	inc	hl
      000D56 23               [ 6] 2202 	inc	hl
      000D57 0A               [ 7] 2203 	ld	a, (bc)
      000D58 C6 08            [ 7] 2204 	add	a, #0x08
      000D5A 77               [ 7] 2205 	ld	(hl), a
                                   2206 ;./alex.c:192: SpriteTableXN2[4] = alex.x;
      000D5B 2Ar42r03         [16] 2207 	ld	hl, (_SpriteTableXN2)
      000D5E 11 04 00         [10] 2208 	ld	de, #0x0004
      000D61 19               [11] 2209 	add	hl, de
      000D62 0A               [ 7] 2210 	ld	a, (bc)
      000D63 77               [ 7] 2211 	ld	(hl), a
                                   2212 ;./alex.c:193: SpriteTableXN2[6] = alex.x + 8;
      000D64 2Ar42r03         [16] 2213 	ld	hl, (_SpriteTableXN2)
      000D67 11 06 00         [10] 2214 	ld	de, #0x0006
      000D6A 19               [11] 2215 	add	hl, de
      000D6B 0A               [ 7] 2216 	ld	a, (bc)
      000D6C C6 08            [ 7] 2217 	add	a, #0x08
      000D6E 77               [ 7] 2218 	ld	(hl), a
                                   2219 ;./alex.c:194: SpriteTableY2[0] = alex.y;
      000D6F ED 5Br40r03      [20] 2220 	ld	de, (_SpriteTableY2)
      000D73 01r04r01         [10] 2221 	ld	bc, #_alex + 1
      000D76 0A               [ 7] 2222 	ld	a, (bc)
      000D77 12               [ 7] 2223 	ld	(de), a
                                   2224 ;./alex.c:195: SpriteTableY2[1] = alex.y;
      000D78 2Ar40r03         [16] 2225 	ld	hl, (_SpriteTableY2)
      000D7B 23               [ 6] 2226 	inc	hl
      000D7C 0A               [ 7] 2227 	ld	a, (bc)
      000D7D 77               [ 7] 2228 	ld	(hl), a
                                   2229 ;./alex.c:196: SpriteTableY2[2] = alex.y + 16;
      000D7E 2Ar40r03         [16] 2230 	ld	hl, (_SpriteTableY2)
      000D81 23               [ 6] 2231 	inc	hl
      000D82 23               [ 6] 2232 	inc	hl
      000D83 0A               [ 7] 2233 	ld	a, (bc)
      000D84 C6 10            [ 7] 2234 	add	a, #0x10
      000D86 77               [ 7] 2235 	ld	(hl), a
                                   2236 ;./alex.c:197: SpriteTableY2[3] = alex.y + 16;
      000D87 2Ar40r03         [16] 2237 	ld	hl, (_SpriteTableY2)
      000D8A 23               [ 6] 2238 	inc	hl
      000D8B 23               [ 6] 2239 	inc	hl
      000D8C 23               [ 6] 2240 	inc	hl
      000D8D 0A               [ 7] 2241 	ld	a, (bc)
      000D8E C6 10            [ 7] 2242 	add	a, #0x10
      000D90 77               [ 7] 2243 	ld	(hl), a
                                   2244 ;./alex.c:198: if (alex.frame != lastFrame) {
      000D91 21r05r01         [10] 2245 	ld	hl, #(_alex + 2)
      000D94 5E               [ 7] 2246 	ld	e, (hl)
      000D95 3Ar11r01         [13] 2247 	ld	a, (_lastFrame+0)
      000D98 93               [ 4] 2248 	sub	a, e
      000D99 C8               [11] 2249 	ret	Z
                                   2250 ;./alex.c:199: SMS_loadTiles(alex.sprite->data + alex.frame *256, alex.sprite->beginVRAM, 255);
      000D9A ED 4Br0Fr01      [20] 2251 	ld	bc, (#_alex + 12)
      000D9E C5               [11] 2252 	push	bc
      000D9F FD E1            [14] 2253 	pop	iy
      000DA1 FD 6E 07         [19] 2254 	ld	l, 7 (iy)
                                   2255 ;	spillPairReg hl
      000DA4 FD 66 08         [19] 2256 	ld	h, 8 (iy)
                                   2257 ;	spillPairReg hl
      000DA7 53               [ 4] 2258 	ld	d, e
      000DA8 1E 00            [ 7] 2259 	ld	e, #0x00
      000DAA 19               [11] 2260 	add	hl, de
      000DAB EB               [ 4] 2261 	ex	de, hl
      000DAC 21 04 00         [10] 2262 	ld	hl, #4
      000DAF 09               [11] 2263 	add	hl, bc
      000DB0 7E               [ 7] 2264 	ld	a, (hl)
      000DB1 23               [ 6] 2265 	inc	hl
      000DB2 66               [ 7] 2266 	ld	h, (hl)
                                   2267 ;	spillPairReg hl
      000DB3 6F               [ 4] 2268 	ld	l, a
                                   2269 ;	spillPairReg hl
                                   2270 ;	spillPairReg hl
      000DB4 29               [11] 2271 	add	hl, hl
      000DB5 29               [11] 2272 	add	hl, hl
      000DB6 29               [11] 2273 	add	hl, hl
      000DB7 29               [11] 2274 	add	hl, hl
      000DB8 29               [11] 2275 	add	hl, hl
      000DB9 CB F4            [ 8] 2276 	set	6, h
      000DBB 01 FF 00         [10] 2277 	ld	bc, #0x00ff
      000DBE C5               [11] 2278 	push	bc
      000DBF CDr00r00         [17] 2279 	call	_SMS_VRAMmemcpy
                                   2280 ;./alex.c:200: lastFrame = alex.frame;
      000DC2 21r05r01         [10] 2281 	ld	hl, #(_alex + 2)
      000DC5 7E               [ 7] 2282 	ld	a, (hl)
      000DC6 32r11r01         [13] 2283 	ld	(_lastFrame+0), a
                                   2284 ;./alex.c:202: }
      000DC9 C9               [10] 2285 	ret
                                   2286 ;./alex.c:205: void moveAlex(int keys) {
                                   2287 ;	---------------------------------
                                   2288 ; Function moveAlex
                                   2289 ; ---------------------------------
      000DCA                       2290 _moveAlex::
      000DCA DD E5            [15] 2291 	push	ix
      000DCC DD 21 00 00      [14] 2292 	ld	ix,#0
      000DD0 DD 39            [15] 2293 	add	ix,sp
      000DD2 3B               [ 6] 2294 	dec	sp
                                   2295 ;./alex.c:206: unsigned char puedeBajar = canDown();
      000DD3 E5               [11] 2296 	push	hl
      000DD4 CDr0Er0A         [17] 2297 	call	_canDown
      000DD7 4F               [ 4] 2298 	ld	c, a
      000DD8 C5               [11] 2299 	push	bc
      000DD9 CDr02r0A         [17] 2300 	call	_canUp
      000DDC DD 77 FF         [19] 2301 	ld	-1 (ix), a
      000DDF CDr28r0A         [17] 2302 	call	_canRight
      000DE2 5F               [ 4] 2303 	ld	e, a
      000DE3 D5               [11] 2304 	push	de
      000DE4 CDr1Cr0A         [17] 2305 	call	_canLeft
      000DE7 D1               [10] 2306 	pop	de
      000DE8 C1               [10] 2307 	pop	bc
      000DE9 E1               [10] 2308 	pop	hl
                                   2309 ;./alex.c:210: if (puedeBajar)
      000DEA 0C               [ 4] 2310 	inc	c
      000DEB 0D               [ 4] 2311 	dec	c
      000DEC 28 0C            [12] 2312 	jr	Z, 00102$
                                   2313 ;./alex.c:211: moveAlexAire(keys, puedeSubir, puedeDerecha, puedeIzquierda);
      000DEE 57               [ 4] 2314 	ld	d,a
      000DEF D5               [11] 2315 	push	de
      000DF0 DD 7E FF         [19] 2316 	ld	a, -1 (ix)
      000DF3 F5               [11] 2317 	push	af
      000DF4 33               [ 6] 2318 	inc	sp
      000DF5 CDr0Fr0C         [17] 2319 	call	_moveAlexAire
      000DF8 18 03            [12] 2320 	jr	00104$
      000DFA                       2321 00102$:
                                   2322 ;./alex.c:213: moveAlexSuelo(keys);
      000DFA CDr36r0A         [17] 2323 	call	_moveAlexSuelo
      000DFD                       2324 00104$:
                                   2325 ;./alex.c:215: }
      000DFD 33               [ 6] 2326 	inc	sp
      000DFE DD E1            [14] 2327 	pop	ix
      000E00 C9               [10] 2328 	ret
                                   2329 ;main.c:31: void main(void)
                                   2330 ;	---------------------------------
                                   2331 ; Function main
                                   2332 ; ---------------------------------
      000E01                       2333 _main::
      000E01 DD E5            [15] 2334 	push	ix
      000E03 DD 21 00 00      [14] 2335 	ld	ix,#0
      000E07 DD 39            [15] 2336 	add	ix,sp
      000E09 3B               [ 6] 2337 	dec	sp
                                   2338 ;main.c:36: SMS_VRAMmemsetW(0, 0x0000, 16384);
      000E0A 21 00 40         [10] 2339 	ld	hl, #0x4000
      000E0D E5               [11] 2340 	push	hl
      000E0E 11 00 00         [10] 2341 	ld	de, #0x0000
      000E11 65               [ 4] 2342 	ld	h, l
      000E12 CDr00r00         [17] 2343 	call	_SMS_VRAMmemsetW
                                   2344 ;main.c:46: printf("Hello, World! [1/3]");
      000E15 21rD3r0E         [10] 2345 	ld	hl, #___str_0
      000E18 E5               [11] 2346 	push	hl
      000E19 CDr00r00         [17] 2347 	call	_printf
      000E1C F1               [10] 2348 	pop	af
                                   2349 ;main.c:51: SMS_displayOn();
      000E1D 21 40 01         [10] 2350 	ld	hl, #0x0140
      000E20 CDr00r00         [17] 2351 	call	_SMS_VDPturnOnFeature
                                   2352 ;main.c:52: SMS_setBGScrollX(scroll_x);
      000E23 2E 00            [ 7] 2353 	ld	l, #0x00
                                   2354 ;	spillPairReg hl
                                   2355 ;	spillPairReg hl
      000E25 CDr00r00         [17] 2356 	call	_SMS_setBGScrollX
                                   2357 ;main.c:53: SMS_setBGScrollY(scroll_y);
      000E28 2E 00            [ 7] 2358 	ld	l, #0x00
                                   2359 ;	spillPairReg hl
                                   2360 ;	spillPairReg hl
      000E2A CDr00r00         [17] 2361 	call	_SMS_setBGScrollY
                                   2362 ;main.c:54: SMS_init();
      000E2D CDr00r00         [17] 2363 	call	_SMS_init
                                   2364 ;main.c:55: initSpritesVariables();
      000E30 CDr79r05         [17] 2365 	call	_initSpritesVariables
                                   2366 ;main.c:56: loadGrapVRAM();
      000E33 CDr1Er12         [17] 2367 	call	_loadGrapVRAM
                                   2368 ;main.c:62: char banco = SMS_getROMBank();
      000E36 3A FF FF         [13] 2369 	ld	a, (_ROM_bank_to_be_mapped_on_slot2+0)
      000E39 DD 77 FF         [19] 2370 	ld	-1 (ix), a
                                   2371 ;main.c:63: SMS_mapROMBank(3);
      000E3C 21 FF FF         [10] 2372 	ld	hl, #_ROM_bank_to_be_mapped_on_slot2
      000E3F 36 03            [10] 2373 	ld	(hl), #0x03
                                   2374 ;main.c:64: PSGPlay(special_psg);
      000E41 21r00r00         [10] 2375 	ld	hl, #_special_psg
      000E44 CDr00r00         [17] 2376 	call	_PSGPlay
                                   2377 ;main.c:66: SMS_mapROMBank(banco);
      000E47 DD 7E FF         [19] 2378 	ld	a, -1 (ix)
      000E4A 32 FF FF         [13] 2379 	ld	(_ROM_bank_to_be_mapped_on_slot2+0), a
                                   2380 ;main.c:67: SMS_VDPturnOnFeature(VDPFEATURE_LEFTCOLBLANK);
      000E4D 21 20 00         [10] 2381 	ld	hl, #0x0020
      000E50 CDr00r00         [17] 2382 	call	_SMS_VDPturnOnFeature
                                   2383 ;main.c:68: SMS_VDPturnOnFeature(VDPFEATURE_EXTRAHEIGHT);
      000E53 21 02 00         [10] 2384 	ld	hl, #0x0002
      000E56 CDr00r00         [17] 2385 	call	_SMS_VDPturnOnFeature
                                   2386 ;main.c:70: SMS_VDPturnOnFeature(VDPFEATURE_240LINES);
      000E59 21 08 01         [10] 2387 	ld	hl, #0x0108
      000E5C CDr00r00         [17] 2388 	call	_SMS_VDPturnOnFeature
                                   2389 ;main.c:71: SMS_setFrameInterruptHandler(playMusic);
      000E5F 21r29r0F         [10] 2390 	ld	hl, #_playMusic
      000E62 CDr00r00         [17] 2391 	call	_SMS_setFrameInterruptHandler
      000E65                       2392 00111$:
                                   2393 ;main.c:76: if (SMS_queryPauseRequested())
      000E65 CDr00r00         [17] 2394 	call	_SMS_queryPauseRequested
      000E68 CB 47            [ 8] 2395 	bit	0,a
      000E6A 28 29            [12] 2396 	jr	Z, 00105$
                                   2397 ;main.c:78: char banco = SMS_getROMBank();
      000E6C 3A FF FF         [13] 2398 	ld	a, (_ROM_bank_to_be_mapped_on_slot2+0)
      000E6F DD 77 FF         [19] 2399 	ld	-1 (ix), a
                                   2400 ;main.c:79: SMS_mapROMBank(3);
      000E72 21 FF FF         [10] 2401 	ld	hl, #_ROM_bank_to_be_mapped_on_slot2
      000E75 36 03            [10] 2402 	ld	(hl), #0x03
                                   2403 ;main.c:80: PSGPlay(emeraldhill_psg);
      000E77 21r00r00         [10] 2404 	ld	hl, #_emeraldhill_psg
      000E7A CDr00r00         [17] 2405 	call	_PSGPlay
                                   2406 ;main.c:81: SMS_mapROMBank(banco);
      000E7D DD 7E FF         [19] 2407 	ld	a, -1 (ix)
      000E80 32 FF FF         [13] 2408 	ld	(_ROM_bank_to_be_mapped_on_slot2+0), a
                                   2409 ;main.c:82: SMS_resetPauseRequest();
      000E83 CDr00r00         [17] 2410 	call	_SMS_resetPauseRequest
                                   2411 ;main.c:83: while (!SMS_queryPauseRequested())
      000E86                       2412 00101$:
      000E86 CDr00r00         [17] 2413 	call	_SMS_queryPauseRequested
      000E89 CB 47            [ 8] 2414 	bit	0,a
      000E8B 20 05            [12] 2415 	jr	NZ, 00103$
                                   2416 ;main.c:85: SMS_waitForVBlank();
      000E8D CDr00r00         [17] 2417 	call	_SMS_waitForVBlank
      000E90 18 F4            [12] 2418 	jr	00101$
      000E92                       2419 00103$:
                                   2420 ;main.c:89: SMS_resetPauseRequest();
      000E92 CDr00r00         [17] 2421 	call	_SMS_resetPauseRequest
      000E95                       2422 00105$:
                                   2423 ;main.c:94: unsigned int keys = SMS_getKeysHeld();
      000E95 CDr00r00         [17] 2424 	call	_SMS_getKeysHeld
      000E98 EB               [ 4] 2425 	ex	de, hl
                                   2426 ;main.c:95: if(keys & PORT_A_KEY_2)
      000E99 CB 6D            [ 8] 2427 	bit	5, l
      000E9B 28 04            [12] 2428 	jr	Z, 00107$
                                   2429 ;main.c:96: keys = keys  ^ PORT_A_KEY_2;
      000E9D 7D               [ 4] 2430 	ld	a, l
      000E9E EE 20            [ 7] 2431 	xor	a, #0x20
      000EA0 6F               [ 4] 2432 	ld	l, a
                                   2433 ;	spillPairReg hl
                                   2434 ;	spillPairReg hl
      000EA1                       2435 00107$:
                                   2436 ;main.c:97: if(keys & PORT_A_KEY_1)
      000EA1 CB 65            [ 8] 2437 	bit	4, l
      000EA3 28 04            [12] 2438 	jr	Z, 00109$
                                   2439 ;main.c:98: keys = keys  ^ PORT_A_KEY_1;
      000EA5 7D               [ 4] 2440 	ld	a, l
      000EA6 EE 10            [ 7] 2441 	xor	a, #0x10
      000EA8 6F               [ 4] 2442 	ld	l, a
                                   2443 ;	spillPairReg hl
                                   2444 ;	spillPairReg hl
      000EA9                       2445 00109$:
                                   2446 ;main.c:100: keys = keys | (SMS_getKeysPressed() & (PORT_A_KEY_2 | PORT_A_KEY_1));
      000EA9 E5               [11] 2447 	push	hl
      000EAA CDr00r00         [17] 2448 	call	_SMS_getKeysPressed
      000EAD E1               [10] 2449 	pop	hl
      000EAE 7B               [ 4] 2450 	ld	a, e
      000EAF E6 30            [ 7] 2451 	and	a, #0x30
      000EB1 B5               [ 4] 2452 	or	a, l
      000EB2 6F               [ 4] 2453 	ld	l, a
                                   2454 ;	spillPairReg hl
                                   2455 ;	spillPairReg hl
                                   2456 ;main.c:103: moveAlex(keys);
      000EB3 CDrCAr0D         [17] 2457 	call	_moveAlex
                                   2458 ;main.c:105: dibujaPajaros();
      000EB6 CDr3Fr0F         [17] 2459 	call	_dibujaPajaros
                                   2460 ;main.c:110: SMS_waitForVBlank();
      000EB9 CDr00r00         [17] 2461 	call	_SMS_waitForVBlank
                                   2462 ;main.c:111: drawAlex();
      000EBC CDr49r0D         [17] 2463 	call	_drawAlex
                                   2464 ;main.c:116: copySpritestoSAT();
      000EBF CDrA8r05         [17] 2465 	call	_copySpritestoSAT
                                   2466 ;main.c:122: SMS_setBGScrollX(scroll_x);
      000EC2 2E 00            [ 7] 2467 	ld	l, #0x00
                                   2468 ;	spillPairReg hl
                                   2469 ;	spillPairReg hl
      000EC4 CDr00r00         [17] 2470 	call	_SMS_setBGScrollX
                                   2471 ;main.c:124: SMS_displayOn();
      000EC7 21 40 01         [10] 2472 	ld	hl, #0x0140
      000ECA CDr00r00         [17] 2473 	call	_SMS_VDPturnOnFeature
      000ECD 18 96            [12] 2474 	jr	00111$
                                   2475 ;main.c:126: }
      000ECF 33               [ 6] 2476 	inc	sp
      000ED0 DD E1            [14] 2477 	pop	ix
      000ED2 C9               [10] 2478 	ret
      000ED3                       2479 ___str_0:
      000ED3 48 65 6C 6C 6F 2C 20  2480 	.ascii "Hello, World! [1/3]"
             57 6F 72 6C 64 21 20
             5B 31 2F 33 5D
      000EE6 00                    2481 	.db 0x00
                                   2482 ;main.c:131: void disableSprites() {
                                   2483 ;	---------------------------------
                                   2484 ; Function disableSprites
                                   2485 ; ---------------------------------
      000EE7                       2486 _disableSprites::
                                   2487 ;main.c:134: while (i < 64) {
      000EE7 0E 00            [ 7] 2488 	ld	c, #0x00
      000EE9                       2489 00101$:
      000EE9 79               [ 4] 2490 	ld	a, c
      000EEA D6 40            [ 7] 2491 	sub	a, #0x40
      000EEC 30 10            [12] 2492 	jr	NC, 00103$
                                   2493 ;main.c:135: SMS_updateSpritePosition(i,10,240); 
      000EEE 41               [ 4] 2494 	ld	b, c
      000EEF C5               [11] 2495 	push	bc
      000EF0 3E F0            [ 7] 2496 	ld	a, #0xf0
      000EF2 F5               [11] 2497 	push	af
      000EF3 33               [ 6] 2498 	inc	sp
      000EF4 2E 0A            [ 7] 2499 	ld	l, #0x0a
                                   2500 ;	spillPairReg hl
                                   2501 ;	spillPairReg hl
      000EF6 78               [ 4] 2502 	ld	a, b
      000EF7 CDr00r00         [17] 2503 	call	_SMS_updateSpritePosition
      000EFA C1               [10] 2504 	pop	bc
                                   2505 ;main.c:136: i++;
      000EFB 0C               [ 4] 2506 	inc	c
      000EFC 18 EB            [12] 2507 	jr	00101$
      000EFE                       2508 00103$:
                                   2509 ;main.c:138: numSprites = 0;
      000EFE 21 00 00         [10] 2510 	ld	hl, #0x0000
      000F01 22r50r04         [16] 2511 	ld	(_numSprites), hl
                                   2512 ;main.c:139: }
      000F04 C9               [10] 2513 	ret
      000F05                       2514 __str_1:
      000F05 53 45 47 41           2515 	.ascii "SEGA"
      000F09 00                    2516 	.db 0x00
      000F0A                       2517 __str_2:
      000F0A 62 61 73 69 63 20 65  2518 	.ascii "basic example"
             78 61 6D 70 6C 65
      000F17 00                    2519 	.db 0x00
      000F18                       2520 __str_3:
      000F18 41 20 73 69 6D 70 6C  2521 	.ascii "A simple example"
             65 20 65 78 61 6D 70
             6C 65
      000F28 00                    2522 	.db 0x00
                                   2523 ;main.c:142: void playMusic() {
                                   2524 ;	---------------------------------
                                   2525 ; Function playMusic
                                   2526 ; ---------------------------------
      000F29                       2527 _playMusic::
                                   2528 ;main.c:143: char banco = SMS_getROMBank();
      000F29 3A FF FF         [13] 2529 	ld	a, (_ROM_bank_to_be_mapped_on_slot2+0)
      000F2C 4F               [ 4] 2530 	ld	c, a
                                   2531 ;main.c:144: SMS_mapROMBank(3);
      000F2D 21 FF FF         [10] 2532 	ld	hl, #_ROM_bank_to_be_mapped_on_slot2
      000F30 36 03            [10] 2533 	ld	(hl), #0x03
                                   2534 ;main.c:145: PSGFrame();
      000F32 C5               [11] 2535 	push	bc
      000F33 CDr00r00         [17] 2536 	call	_PSGFrame
      000F36 CDr00r00         [17] 2537 	call	_PSGSFXFrame
      000F39 C1               [10] 2538 	pop	bc
                                   2539 ;main.c:148: SMS_mapROMBank(banco);
      000F3A 21 FF FF         [10] 2540 	ld	hl, #_ROM_bank_to_be_mapped_on_slot2
      000F3D 71               [ 7] 2541 	ld	(hl), c
                                   2542 ;main.c:149: }
      000F3E C9               [10] 2543 	ret
                                   2544 ;main.c:151: void dibujaPajaros()
                                   2545 ;	---------------------------------
                                   2546 ; Function dibujaPajaros
                                   2547 ; ---------------------------------
      000F3F                       2548 _dibujaPajaros::
      000F3F DD E5            [15] 2549 	push	ix
      000F41 DD 21 00 00      [14] 2550 	ld	ix,#0
      000F45 DD 39            [15] 2551 	add	ix,sp
      000F47 21 F1 FF         [10] 2552 	ld	hl, #-15
      000F4A 39               [11] 2553 	add	hl, sp
      000F4B F9               [ 6] 2554 	ld	sp, hl
                                   2555 ;main.c:155: unsigned char initPajaros = pajaros[0].initSprite;
      000F4C 3Ar4Cr03         [13] 2556 	ld	a,(#_pajaros + 6)
      000F4F DD 77 F1         [19] 2557 	ld	-15 (ix), a
                                   2558 ;main.c:156: for (i = 0; i < NUM_PAJAROS; i++)
      000F52 DD 36 FF 00      [19] 2559 	ld	-1 (ix), #0x00
      000F56                       2560 00142$:
                                   2561 ;main.c:158: p = &pajaros[i];
      000F56 DD 4E FF         [19] 2562 	ld	c, -1 (ix)
      000F59 06 00            [ 7] 2563 	ld	b, #0x00
      000F5B 69               [ 4] 2564 	ld	l, c
      000F5C 60               [ 4] 2565 	ld	h, b
      000F5D 29               [11] 2566 	add	hl, hl
      000F5E 09               [11] 2567 	add	hl, bc
      000F5F 29               [11] 2568 	add	hl, hl
      000F60 09               [11] 2569 	add	hl, bc
      000F61 29               [11] 2570 	add	hl, hl
      000F62 11r46r03         [10] 2571 	ld	de, #_pajaros
      000F65 19               [11] 2572 	add	hl, de
      000F66 DD 75 F2         [19] 2573 	ld	-14 (ix), l
      000F69 DD 74 F3         [19] 2574 	ld	-13 (ix), h
                                   2575 ;main.c:159: p->lastChangeFrame++;
      000F6C DD 7E F2         [19] 2576 	ld	a, -14 (ix)
      000F6F C6 03            [ 7] 2577 	add	a, #0x03
      000F71 DD 77 F4         [19] 2578 	ld	-12 (ix), a
      000F74 DD 7E F3         [19] 2579 	ld	a, -13 (ix)
      000F77 CE 00            [ 7] 2580 	adc	a, #0x00
      000F79 DD 77 F5         [19] 2581 	ld	-11 (ix), a
      000F7C DD 6E F4         [19] 2582 	ld	l, -12 (ix)
      000F7F DD 66 F5         [19] 2583 	ld	h, -11 (ix)
      000F82 4E               [ 7] 2584 	ld	c, (hl)
      000F83 0C               [ 4] 2585 	inc	c
      000F84 DD 6E F4         [19] 2586 	ld	l, -12 (ix)
      000F87 DD 66 F5         [19] 2587 	ld	h, -11 (ix)
      000F8A 71               [ 7] 2588 	ld	(hl), c
                                   2589 ;main.c:167: for(j=0;j<spritePajaro.alto;j++) {
      000F8B DD 7E F2         [19] 2590 	ld	a, -14 (ix)
      000F8E C6 08            [ 7] 2591 	add	a, #0x08
      000F90 DD 77 F6         [19] 2592 	ld	-10 (ix), a
      000F93 DD 7E F3         [19] 2593 	ld	a, -13 (ix)
      000F96 CE 00            [ 7] 2594 	adc	a, #0x00
      000F98 DD 77 F7         [19] 2595 	ld	-9 (ix), a
                                   2596 ;main.c:160: if (p->lastChangeFrame == 20)
      000F9B 79               [ 4] 2597 	ld	a, c
      000F9C D6 14            [ 7] 2598 	sub	a, #0x14
      000F9E C2r5Fr10         [10] 2599 	jp	NZ,00108$
                                   2600 ;main.c:162: p->frame++;
      000FA1 DD 5E F2         [19] 2601 	ld	e, -14 (ix)
      000FA4 DD 56 F3         [19] 2602 	ld	d, -13 (ix)
      000FA7 13               [ 6] 2603 	inc	de
      000FA8 13               [ 6] 2604 	inc	de
      000FA9 1A               [ 7] 2605 	ld	a, (de)
      000FAA 3C               [ 4] 2606 	inc	a
      000FAB 4F               [ 4] 2607 	ld	c, a
      000FAC 12               [ 7] 2608 	ld	(de), a
                                   2609 ;main.c:163: if (p->frame > 1)
      000FAD 3E 01            [ 7] 2610 	ld	a, #0x01
      000FAF 91               [ 4] 2611 	sub	a, c
      000FB0 30 02            [12] 2612 	jr	NC, 00102$
                                   2613 ;main.c:164: p->frame = 0;
      000FB2 AF               [ 4] 2614 	xor	a, a
      000FB3 12               [ 7] 2615 	ld	(de), a
      000FB4                       2616 00102$:
                                   2617 ;main.c:165: p->lastChangeFrame = 0;
      000FB4 DD 6E F4         [19] 2618 	ld	l, -12 (ix)
      000FB7 DD 66 F5         [19] 2619 	ld	h, -11 (ix)
      000FBA 36 00            [10] 2620 	ld	(hl), #0x00
                                   2621 ;main.c:166: int frame = spritePajaro.tamano*p->frame + spritePajaro.beginVRAM;
      000FBC 21r1Er01         [10] 2622 	ld	hl, #_spritePajaro + 2
      000FBF 66               [ 7] 2623 	ld	h, (hl)
                                   2624 ;	spillPairReg hl
      000FC0 1A               [ 7] 2625 	ld	a, (de)
      000FC1 5F               [ 4] 2626 	ld	e, a
      000FC2 2E 00            [ 7] 2627 	ld	l, #0x00
      000FC4 55               [ 4] 2628 	ld	d, l
      000FC5 06 08            [ 7] 2629 	ld	b, #0x08
      000FC7                       2630 00313$:
      000FC7 29               [11] 2631 	add	hl, hl
      000FC8 30 01            [12] 2632 	jr	NC, 00314$
      000FCA 19               [11] 2633 	add	hl, de
      000FCB                       2634 00314$:
      000FCB 10 FA            [13] 2635 	djnz	00313$
      000FCD 4D               [ 4] 2636 	ld	c, l
      000FCE 3Ar20r01         [13] 2637 	ld	a, (#_spritePajaro + 4)
      000FD1 81               [ 4] 2638 	add	a, c
      000FD2 4F               [ 4] 2639 	ld	c, a
                                   2640 ;main.c:167: for(j=0;j<spritePajaro.alto;j++) {
      000FD3 DD 7E F6         [19] 2641 	ld	a, -10 (ix)
      000FD6 DD 77 F8         [19] 2642 	ld	-8 (ix), a
      000FD9 DD 7E F7         [19] 2643 	ld	a, -9 (ix)
      000FDC DD 77 F9         [19] 2644 	ld	-7 (ix), a
      000FDF 1E 00            [ 7] 2645 	ld	e, #0x00
      000FE1                       2646 00140$:
      000FE1 21r1Cr01         [10] 2647 	ld	hl, #_spritePajaro
      000FE4 46               [ 7] 2648 	ld	b, (hl)
                                   2649 ;main.c:168: desplazado = (j<<2);
      000FE5 7B               [ 4] 2650 	ld	a,e
      000FE6 B8               [ 4] 2651 	cp	a,b
      000FE7 30 76            [12] 2652 	jr	NC, 00108$
      000FE9 87               [ 4] 2653 	add	a, a
      000FEA 87               [ 4] 2654 	add	a, a
                                   2655 ;main.c:169: jCalculated = desplazado + frame;
      000FEB 81               [ 4] 2656 	add	a, c
      000FEC DD 77 FA         [19] 2657 	ld	-6 (ix), a
                                   2658 ;main.c:171: for(i2=0;i2<spritePajaro.ancho;i2++) {
      000FEF 06 00            [ 7] 2659 	ld	b, #0x00
      000FF1                       2660 00137$:
      000FF1 21r1Dr01         [10] 2661 	ld	hl, #_spritePajaro + 1
      000FF4 56               [ 7] 2662 	ld	d, (hl)
                                   2663 ;main.c:172: SpriteTableXN2[(i2+initPajaros)*2+1] = jCalculated + (i2<<1);
      000FF5 78               [ 4] 2664 	ld	a,b
      000FF6 BA               [ 4] 2665 	cp	a,d
      000FF7 30 63            [12] 2666 	jr	NC, 00141$
      000FF9 16 00            [ 7] 2667 	ld	d, #0x00
      000FFB DD 6E F1         [19] 2668 	ld	l, -15 (ix)
                                   2669 ;	spillPairReg hl
                                   2670 ;	spillPairReg hl
      000FFE 26 00            [ 7] 2671 	ld	h, #0x00
                                   2672 ;	spillPairReg hl
                                   2673 ;	spillPairReg hl
      001000 85               [ 4] 2674 	add	a, l
      001001 6F               [ 4] 2675 	ld	l, a
                                   2676 ;	spillPairReg hl
                                   2677 ;	spillPairReg hl
      001002 7A               [ 4] 2678 	ld	a, d
      001003 8C               [ 4] 2679 	adc	a, h
      001004 67               [ 4] 2680 	ld	h, a
                                   2681 ;	spillPairReg hl
                                   2682 ;	spillPairReg hl
      001005 29               [11] 2683 	add	hl, hl
      001006 23               [ 6] 2684 	inc	hl
      001007 DD 75 FB         [19] 2685 	ld	-5 (ix), l
      00100A DD 74 FC         [19] 2686 	ld	-4 (ix), h
      00100D 3Ar42r03         [13] 2687 	ld	a, (_SpriteTableXN2+0)
      001010 DD 86 FB         [19] 2688 	add	a, -5 (ix)
      001013 DD 77 FD         [19] 2689 	ld	-3 (ix), a
      001016 3Ar43r03         [13] 2690 	ld	a, (_SpriteTableXN2+1)
      001019 DD 8E FC         [19] 2691 	adc	a, -4 (ix)
      00101C DD 77 FE         [19] 2692 	ld	-2 (ix), a
      00101F 78               [ 4] 2693 	ld	a, b
      001020 87               [ 4] 2694 	add	a, a
      001021 DD 56 FA         [19] 2695 	ld	d, -6 (ix)
      001024 82               [ 4] 2696 	add	a, d
      001025 DD 6E FD         [19] 2697 	ld	l, -3 (ix)
      001028 DD 66 FE         [19] 2698 	ld	h, -2 (ix)
      00102B 77               [ 7] 2699 	ld	(hl), a
                                   2700 ;main.c:173: if(p->vx < 0)
      00102C DD 6E F8         [19] 2701 	ld	l, -8 (ix)
      00102F DD 66 F9         [19] 2702 	ld	h, -7 (ix)
      001032 23               [ 6] 2703 	inc	hl
                                   2704 ;	spillPairReg hl
      001033 CB 7E            [12] 2705 	bit	7, (hl)
      001035 28 22            [12] 2706 	jr	Z, 00138$
                                   2707 ;main.c:174: SpriteTableXN2[(i2+initPajaros)*2+1] += 12;
      001037 DD 7E FB         [19] 2708 	ld	a, -5 (ix)
      00103A 21r42r03         [10] 2709 	ld	hl, #_SpriteTableXN2
      00103D 86               [ 7] 2710 	add	a, (hl)
      00103E DD 77 FD         [19] 2711 	ld	-3 (ix), a
      001041 DD 7E FC         [19] 2712 	ld	a, -4 (ix)
      001044 23               [ 6] 2713 	inc	hl
      001045 8E               [ 7] 2714 	adc	a, (hl)
      001046 DD 77 FE         [19] 2715 	ld	-2 (ix), a
      001049 DD 6E FD         [19] 2716 	ld	l, -3 (ix)
      00104C DD 66 FE         [19] 2717 	ld	h, -2 (ix)
      00104F 7E               [ 7] 2718 	ld	a, (hl)
      001050 C6 0C            [ 7] 2719 	add	a, #0x0c
      001052 DD 6E FD         [19] 2720 	ld	l, -3 (ix)
      001055 DD 66 FE         [19] 2721 	ld	h, -2 (ix)
      001058 77               [ 7] 2722 	ld	(hl), a
      001059                       2723 00138$:
                                   2724 ;main.c:171: for(i2=0;i2<spritePajaro.ancho;i2++) {
      001059 04               [ 4] 2725 	inc	b
      00105A 18 95            [12] 2726 	jr	00137$
      00105C                       2727 00141$:
                                   2728 ;main.c:167: for(j=0;j<spritePajaro.alto;j++) {
      00105C 1C               [ 4] 2729 	inc	e
      00105D 18 82            [12] 2730 	jr	00140$
      00105F                       2731 00108$:
                                   2732 ;main.c:179: initPajaros +=3;
      00105F DD 7E F1         [19] 2733 	ld	a, -15 (ix)
      001062 C6 03            [ 7] 2734 	add	a, #0x03
      001064 DD 77 F1         [19] 2735 	ld	-15 (ix), a
                                   2736 ;main.c:180: i2 = p->initSprite << 1;
      001067 DD 7E F2         [19] 2737 	ld	a, -14 (ix)
      00106A C6 06            [ 7] 2738 	add	a, #0x06
      00106C DD 77 FA         [19] 2739 	ld	-6 (ix), a
      00106F DD 7E F3         [19] 2740 	ld	a, -13 (ix)
      001072 CE 00            [ 7] 2741 	adc	a, #0x00
      001074 DD 77 FB         [19] 2742 	ld	-5 (ix), a
      001077 DD 6E FA         [19] 2743 	ld	l, -6 (ix)
      00107A DD 66 FB         [19] 2744 	ld	h, -5 (ix)
      00107D 7E               [ 7] 2745 	ld	a, (hl)
      00107E 87               [ 4] 2746 	add	a, a
      00107F DD 77 FC         [19] 2747 	ld	-4 (ix), a
                                   2748 ;main.c:181: p->x += p->vx;
      001082 DD 6E F2         [19] 2749 	ld	l, -14 (ix)
      001085 DD 66 F3         [19] 2750 	ld	h, -13 (ix)
      001088 4E               [ 7] 2751 	ld	c, (hl)
      001089 DD 7E F6         [19] 2752 	ld	a, -10 (ix)
      00108C DD 77 FD         [19] 2753 	ld	-3 (ix), a
      00108F DD 7E F7         [19] 2754 	ld	a, -9 (ix)
      001092 DD 77 FE         [19] 2755 	ld	-2 (ix), a
      001095 DD 6E F6         [19] 2756 	ld	l, -10 (ix)
      001098 DD 66 F7         [19] 2757 	ld	h, -9 (ix)
      00109B 7E               [ 7] 2758 	ld	a, (hl)
      00109C 81               [ 4] 2759 	add	a, c
      00109D DD 6E F2         [19] 2760 	ld	l, -14 (ix)
      0010A0 DD 66 F3         [19] 2761 	ld	h, -13 (ix)
      0010A3 77               [ 7] 2762 	ld	(hl), a
                                   2763 ;main.c:182: if (SpriteTableXN2[i2] >= 230) {
      0010A4 3Ar42r03         [13] 2764 	ld	a, (_SpriteTableXN2+0)
      0010A7 DD 86 FC         [19] 2765 	add	a, -4 (ix)
      0010AA 4F               [ 4] 2766 	ld	c, a
      0010AB 3Ar43r03         [13] 2767 	ld	a, (_SpriteTableXN2+1)
      0010AE CE 00            [ 7] 2768 	adc	a, #0x00
      0010B0 47               [ 4] 2769 	ld	b, a
      0010B1 0A               [ 7] 2770 	ld	a, (bc)
      0010B2 FE E6            [ 7] 2771 	cp	a, #0xe6
      0010B4 38 15            [12] 2772 	jr	C, 00112$
                                   2773 ;main.c:183: p->vx = -1;
      0010B6 DD 6E F6         [19] 2774 	ld	l, -10 (ix)
      0010B9 DD 66 F7         [19] 2775 	ld	h, -9 (ix)
      0010BC 36 FF            [10] 2776 	ld	(hl), #0xff
      0010BE 23               [ 6] 2777 	inc	hl
      0010BF 36 FF            [10] 2778 	ld	(hl), #0xff
                                   2779 ;main.c:184: p->lastChangeFrame = 19;
      0010C1 DD 6E F4         [19] 2780 	ld	l, -12 (ix)
      0010C4 DD 66 F5         [19] 2781 	ld	h, -11 (ix)
      0010C7 36 13            [10] 2782 	ld	(hl), #0x13
      0010C9 18 17            [12] 2783 	jr	00156$
      0010CB                       2784 00112$:
                                   2785 ;main.c:186: else if(SpriteTableXN2[i2] < 10) {
      0010CB D6 0A            [ 7] 2786 	sub	a, #0x0a
      0010CD 30 13            [12] 2787 	jr	NC, 00156$
                                   2788 ;main.c:187: p->vx = 1;
      0010CF DD 6E F6         [19] 2789 	ld	l, -10 (ix)
      0010D2 DD 66 F7         [19] 2790 	ld	h, -9 (ix)
      0010D5 36 01            [10] 2791 	ld	(hl), #0x01
      0010D7 23               [ 6] 2792 	inc	hl
      0010D8 36 00            [10] 2793 	ld	(hl), #0x00
                                   2794 ;main.c:188: p->lastChangeFrame = 19;
      0010DA DD 6E F4         [19] 2795 	ld	l, -12 (ix)
      0010DD DD 66 F5         [19] 2796 	ld	h, -11 (ix)
      0010E0 36 13            [10] 2797 	ld	(hl), #0x13
                                   2798 ;main.c:190: while(i2<p->len) {
      0010E2                       2799 00156$:
      0010E2 DD 7E F2         [19] 2800 	ld	a, -14 (ix)
      0010E5 C6 07            [ 7] 2801 	add	a, #0x07
      0010E7 DD 77 F6         [19] 2802 	ld	-10 (ix), a
      0010EA DD 7E F3         [19] 2803 	ld	a, -13 (ix)
      0010ED CE 00            [ 7] 2804 	adc	a, #0x00
      0010EF DD 77 F7         [19] 2805 	ld	-9 (ix), a
      0010F2                       2806 00114$:
      0010F2 DD 6E F6         [19] 2807 	ld	l, -10 (ix)
      0010F5 DD 66 F7         [19] 2808 	ld	h, -9 (ix)
      0010F8 DD 7E FC         [19] 2809 	ld	a,-4 (ix)
      0010FB 96               [ 7] 2810 	sub	a,(hl)
      0010FC 30 31            [12] 2811 	jr	NC, 00116$
                                   2812 ;main.c:191: SpriteTableXN2[i2] += p->vx;
      0010FE 3Ar42r03         [13] 2813 	ld	a, (_SpriteTableXN2+0)
      001101 DD 86 FC         [19] 2814 	add	a, -4 (ix)
      001104 DD 77 F8         [19] 2815 	ld	-8 (ix), a
      001107 3Ar43r03         [13] 2816 	ld	a, (_SpriteTableXN2+1)
      00110A CE 00            [ 7] 2817 	adc	a, #0x00
      00110C DD 77 F9         [19] 2818 	ld	-7 (ix), a
      00110F DD 6E F8         [19] 2819 	ld	l, -8 (ix)
      001112 DD 66 F9         [19] 2820 	ld	h, -7 (ix)
      001115 4E               [ 7] 2821 	ld	c, (hl)
      001116 DD 6E FD         [19] 2822 	ld	l, -3 (ix)
      001119 DD 66 FE         [19] 2823 	ld	h, -2 (ix)
      00111C 7E               [ 7] 2824 	ld	a, (hl)
      00111D 81               [ 4] 2825 	add	a, c
      00111E DD 6E F8         [19] 2826 	ld	l, -8 (ix)
      001121 DD 66 F9         [19] 2827 	ld	h, -7 (ix)
      001124 77               [ 7] 2828 	ld	(hl), a
                                   2829 ;main.c:192: i2 +=2;
      001125 DD 7E FC         [19] 2830 	ld	a, -4 (ix)
      001128 C6 02            [ 7] 2831 	add	a, #0x02
      00112A DD 77 FC         [19] 2832 	ld	-4 (ix), a
      00112D 18 C3            [12] 2833 	jr	00114$
      00112F                       2834 00116$:
                                   2835 ;main.c:195: if (alex.state == PUÑETAZO_SALTANDO) {
      00112F 3Ar08r01         [13] 2836 	ld	a, (#(_alex + 5) + 0)
      001132 D6 10            [ 7] 2837 	sub	a, #0x10
      001134 C2r0Er12         [10] 2838 	jp	NZ,00143$
                                   2839 ;main.c:196: unsigned char matar = 1;
      001137 0E 01            [ 7] 2840 	ld	c, #0x01
                                   2841 ;main.c:197: if(SpriteTableXN2[8] > p->x + 24 )
      001139 FD 2Ar42r03      [20] 2842 	ld	iy, (_SpriteTableXN2)
      00113D FD 46 08         [19] 2843 	ld	b, 8 (iy)
                                   2844 ;main.c:181: p->x += p->vx;
      001140 DD 6E F2         [19] 2845 	ld	l, -14 (ix)
      001143 DD 66 F3         [19] 2846 	ld	h, -13 (ix)
      001146 7E               [ 7] 2847 	ld	a, (hl)
                                   2848 ;main.c:197: if(SpriteTableXN2[8] > p->x + 24 )
      001147 DD 77 FD         [19] 2849 	ld	-3 (ix), a
      00114A DD 36 FE 00      [19] 2850 	ld	-2 (ix), #0x00
      00114E DD 6E FD         [19] 2851 	ld	l, -3 (ix)
                                   2852 ;	spillPairReg hl
                                   2853 ;	spillPairReg hl
      001151 26 00            [ 7] 2854 	ld	h, #0x00
                                   2855 ;	spillPairReg hl
                                   2856 ;	spillPairReg hl
      001153 11 18 00         [10] 2857 	ld	de, #0x0018
      001156 19               [11] 2858 	add	hl, de
      001157 58               [ 4] 2859 	ld	e, b
      001158 16 00            [ 7] 2860 	ld	d, #0x00
      00115A 7D               [ 4] 2861 	ld	a, l
      00115B 93               [ 4] 2862 	sub	a, e
      00115C 7C               [ 4] 2863 	ld	a, h
      00115D 9A               [ 4] 2864 	sbc	a, d
      00115E E2r63r11         [10] 2865 	jp	PO, 00317$
      001161 EE 80            [ 7] 2866 	xor	a, #0x80
      001163                       2867 00317$:
      001163 F2r68r11         [10] 2868 	jp	P, 00118$
                                   2869 ;main.c:198: matar = 0;
      001166 0E 00            [ 7] 2870 	ld	c, #0x00
      001168                       2871 00118$:
                                   2872 ;main.c:199: if (matar && (SpriteTableXN2[8] + 16 < p->x))
      001168 79               [ 4] 2873 	ld	a, c
      001169 B7               [ 4] 2874 	or	a, a
      00116A 28 16            [12] 2875 	jr	Z, 00120$
      00116C 21 10 00         [10] 2876 	ld	hl, #0x0010
      00116F 19               [11] 2877 	add	hl, de
      001170 7D               [ 4] 2878 	ld	a, l
      001171 DD 96 FD         [19] 2879 	sub	a, -3 (ix)
      001174 7C               [ 4] 2880 	ld	a, h
      001175 DD 9E FE         [19] 2881 	sbc	a, -2 (ix)
      001178 E2r7Dr11         [10] 2882 	jp	PO, 00318$
      00117B EE 80            [ 7] 2883 	xor	a, #0x80
      00117D                       2884 00318$:
      00117D F2r82r11         [10] 2885 	jp	P, 00120$
                                   2886 ;main.c:200: matar = 0;
      001180 0E 00            [ 7] 2887 	ld	c, #0x00
      001182                       2888 00120$:
                                   2889 ;main.c:201: if(matar && (SpriteTableY2[4] > p->y + 16))
      001182 3Ar40r03         [13] 2890 	ld	a, (_SpriteTableY2+0)
      001185 C6 04            [ 7] 2891 	add	a, #0x04
      001187 DD 77 FD         [19] 2892 	ld	-3 (ix), a
      00118A 3Ar41r03         [13] 2893 	ld	a, (_SpriteTableY2+1)
      00118D CE 00            [ 7] 2894 	adc	a, #0x00
      00118F DD 77 FE         [19] 2895 	ld	-2 (ix), a
      001192 DD 5E F2         [19] 2896 	ld	e, -14 (ix)
      001195 DD 56 F3         [19] 2897 	ld	d, -13 (ix)
      001198 13               [ 6] 2898 	inc	de
      001199 79               [ 4] 2899 	ld	a, c
      00119A B7               [ 4] 2900 	or	a, a
      00119B 28 29            [12] 2901 	jr	Z, 00123$
      00119D DD 6E FD         [19] 2902 	ld	l, -3 (ix)
      0011A0 DD 66 FE         [19] 2903 	ld	h, -2 (ix)
      0011A3 46               [ 7] 2904 	ld	b, (hl)
      0011A4 1A               [ 7] 2905 	ld	a, (de)
      0011A5 26 00            [ 7] 2906 	ld	h, #0x00
                                   2907 ;	spillPairReg hl
                                   2908 ;	spillPairReg hl
      0011A7 C6 10            [ 7] 2909 	add	a, #0x10
      0011A9 6F               [ 4] 2910 	ld	l, a
                                   2911 ;	spillPairReg hl
                                   2912 ;	spillPairReg hl
      0011AA 30 01            [12] 2913 	jr	NC, 00319$
      0011AC 24               [ 4] 2914 	inc	h
      0011AD                       2915 00319$:
      0011AD DD 70 F8         [19] 2916 	ld	-8 (ix), b
      0011B0 DD 36 F9 00      [19] 2917 	ld	-7 (ix), #0x00
      0011B4 7D               [ 4] 2918 	ld	a, l
      0011B5 DD 96 F8         [19] 2919 	sub	a, -8 (ix)
      0011B8 7C               [ 4] 2920 	ld	a, h
      0011B9 DD 9E F9         [19] 2921 	sbc	a, -7 (ix)
      0011BC E2rC1r11         [10] 2922 	jp	PO, 00320$
      0011BF EE 80            [ 7] 2923 	xor	a, #0x80
      0011C1                       2924 00320$:
      0011C1 F2rC6r11         [10] 2925 	jp	P, 00123$
                                   2926 ;main.c:202: matar = 0;
      0011C4 0E 00            [ 7] 2927 	ld	c, #0x00
      0011C6                       2928 00123$:
                                   2929 ;main.c:203: if (matar && (SpriteTableY2[4] + 12 < p->y))
      0011C6 79               [ 4] 2930 	ld	a, c
      0011C7 B7               [ 4] 2931 	or	a, a
      0011C8 28 21            [12] 2932 	jr	Z, 00126$
      0011CA DD 6E FD         [19] 2933 	ld	l, -3 (ix)
      0011CD DD 66 FE         [19] 2934 	ld	h, -2 (ix)
      0011D0 7E               [ 7] 2935 	ld	a, (hl)
      0011D1 2E 00            [ 7] 2936 	ld	l, #0x00
                                   2937 ;	spillPairReg hl
                                   2938 ;	spillPairReg hl
      0011D3 C6 0C            [ 7] 2939 	add	a, #0x0c
      0011D5 47               [ 4] 2940 	ld	b, a
      0011D6 30 01            [12] 2941 	jr	NC, 00321$
      0011D8 2C               [ 4] 2942 	inc	l
      0011D9                       2943 00321$:
      0011D9 1A               [ 7] 2944 	ld	a, (de)
      0011DA 5F               [ 4] 2945 	ld	e, a
      0011DB 16 00            [ 7] 2946 	ld	d, #0x00
      0011DD 78               [ 4] 2947 	ld	a, b
      0011DE 93               [ 4] 2948 	sub	a, e
      0011DF 7D               [ 4] 2949 	ld	a, l
      0011E0 9A               [ 4] 2950 	sbc	a, d
      0011E1 E2rE6r11         [10] 2951 	jp	PO, 00322$
      0011E4 EE 80            [ 7] 2952 	xor	a, #0x80
      0011E6                       2953 00322$:
      0011E6 F2rEBr11         [10] 2954 	jp	P, 00126$
                                   2955 ;main.c:204: matar = 0;
      0011E9 0E 00            [ 7] 2956 	ld	c, #0x00
      0011EB                       2957 00126$:
                                   2958 ;main.c:205: if (matar) {
      0011EB 79               [ 4] 2959 	ld	a, c
      0011EC B7               [ 4] 2960 	or	a, a
      0011ED 28 1F            [12] 2961 	jr	Z, 00143$
                                   2962 ;main.c:207: i2 = p->initSprite;
      0011EF DD 6E FA         [19] 2963 	ld	l, -6 (ix)
      0011F2 DD 66 FB         [19] 2964 	ld	h, -5 (ix)
      0011F5 4E               [ 7] 2965 	ld	c, (hl)
                                   2966 ;main.c:208: while(i2<(p->len>>1)) {
      0011F6                       2967 00128$:
      0011F6 DD 6E F6         [19] 2968 	ld	l, -10 (ix)
      0011F9 DD 66 F7         [19] 2969 	ld	h, -9 (ix)
      0011FC 46               [ 7] 2970 	ld	b, (hl)
      0011FD CB 38            [ 8] 2971 	srl	b
      0011FF 79               [ 4] 2972 	ld	a, c
      001200 90               [ 4] 2973 	sub	a, b
      001201 30 0B            [12] 2974 	jr	NC, 00143$
                                   2975 ;main.c:209: SpriteTableY2[i2] = 239;
      001203 2Ar40r03         [16] 2976 	ld	hl, (_SpriteTableY2)
      001206 06 00            [ 7] 2977 	ld	b, #0x00
      001208 09               [11] 2978 	add	hl, bc
      001209 36 EF            [10] 2979 	ld	(hl), #0xef
                                   2980 ;main.c:210: i2 ++;
      00120B 0C               [ 4] 2981 	inc	c
      00120C 18 E8            [12] 2982 	jr	00128$
      00120E                       2983 00143$:
                                   2984 ;main.c:156: for (i = 0; i < NUM_PAJAROS; i++)
      00120E DD 34 FF         [23] 2985 	inc	-1 (ix)
      001211 DD 7E FF         [19] 2986 	ld	a, -1 (ix)
      001214 D6 13            [ 7] 2987 	sub	a, #0x13
      001216 DAr56r0F         [10] 2988 	jp	C, 00142$
                                   2989 ;main.c:215: }
      001219 DD F9            [10] 2990 	ld	sp, ix
      00121B DD E1            [14] 2991 	pop	ix
      00121D C9               [10] 2992 	ret
                                   2993 ;main.c:218: void loadGrapVRAM()
                                   2994 ;	---------------------------------
                                   2995 ; Function loadGrapVRAM
                                   2996 ; ---------------------------------
      00121E                       2997 _loadGrapVRAM::
      00121E DD E5            [15] 2998 	push	ix
      001220 DD 21 00 00      [14] 2999 	ld	ix,#0
      001224 DD 39            [15] 3000 	add	ix,sp
      001226 21 E2 FF         [10] 3001 	ld	hl, #-30
      001229 39               [11] 3002 	add	hl, sp
      00122A F9               [ 6] 3003 	ld	sp, hl
                                   3004 ;main.c:220: SMS_init();
      00122B CDr00r00         [17] 3005 	call	_SMS_init
                                   3006 ;main.c:223: SMS_setSpriteMode(SPRITEMODE_TALL);
      00122E 2E 01            [ 7] 3007 	ld	l, #0x01
                                   3008 ;	spillPairReg hl
                                   3009 ;	spillPairReg hl
      001230 CDr00r00         [17] 3010 	call	_SMS_setSpriteMode
                                   3011 ;main.c:224: SMS_displayOn();
      001233 21 40 01         [10] 3012 	ld	hl, #0x0140
      001236 CDr00r00         [17] 3013 	call	_SMS_VDPturnOnFeature
                                   3014 ;main.c:225: SMS_loadBGPalette(sonicpalette_inc);
      001239 21r00r00         [10] 3015 	ld	hl, #_sonicpalette_inc
      00123C CDr00r00         [17] 3016 	call	_SMS_loadBGPalette
                                   3017 ;main.c:226: SMS_loadSpritePalette(palleteAlex_inc);
      00123F 21r00r00         [10] 3018 	ld	hl, #_palleteAlex_inc
      001242 CDr00r00         [17] 3019 	call	_SMS_loadSpritePalette
                                   3020 ;main.c:228: spriteAlex = generateSpriteNoRAM(2, 2, spriteAlex_inc_size, spriteAlex_inc);
      001245 21r00r00         [10] 3021 	ld	hl, #_spriteAlex_inc
      001248 E5               [11] 3022 	push	hl
      001249 21 00 10         [10] 3023 	ld	hl, #0x1000
      00124C E5               [11] 3024 	push	hl
                                   3025 ;	spillPairReg hl
                                   3026 ;	spillPairReg hl
      00124D 3E 02            [ 7] 3027 	ld	a,#0x02
      00124F 6F               [ 4] 3028 	ld	l,a
      001250 E5               [11] 3029 	push	hl
      001251 21 06 00         [10] 3030 	ld	hl, #0x0006
      001254 39               [11] 3031 	add	hl, sp
      001255 EB               [ 4] 3032 	ex	de,hl
      001256 E1               [10] 3033 	pop	hl
      001257 D5               [11] 3034 	push	de
      001258 CDr46r02         [17] 3035 	call	_generateSpriteNoRAM
      00125B F1               [10] 3036 	pop	af
      00125C F1               [10] 3037 	pop	af
      00125D F1               [10] 3038 	pop	af
      00125E 11r12r01         [10] 3039 	ld	de, #_spriteAlex
      001261 21 00 00         [10] 3040 	ld	hl, #0
      001264 39               [11] 3041 	add	hl, sp
      001265 01 0A 00         [10] 3042 	ld	bc, #0x000a
      001268 ED B0            [21] 3043 	ldir
                                   3044 ;main.c:229: spritePuno = generateSprite(1, 2, puno_inc_size, puno_inc);
      00126A 21r00r00         [10] 3045 	ld	hl, #_puno_inc
      00126D E5               [11] 3046 	push	hl
      00126E 21 80 00         [10] 3047 	ld	hl, #0x0080
      001271 E5               [11] 3048 	push	hl
      001272 2E 02            [ 7] 3049 	ld	l, #0x02
                                   3050 ;	spillPairReg hl
                                   3051 ;	spillPairReg hl
      001274 3E 01            [ 7] 3052 	ld	a, #0x01
      001276 E5               [11] 3053 	push	hl
      001277 21 10 00         [10] 3054 	ld	hl, #0x0010
      00127A 39               [11] 3055 	add	hl, sp
      00127B EB               [ 4] 3056 	ex	de,hl
      00127C E1               [10] 3057 	pop	hl
      00127D D5               [11] 3058 	push	de
      00127E CDr9Cr01         [17] 3059 	call	_generateSprite
      001281 F1               [10] 3060 	pop	af
      001282 F1               [10] 3061 	pop	af
      001283 F1               [10] 3062 	pop	af
      001284 11r26r01         [10] 3063 	ld	de, #_spritePuno
      001287 21 0A 00         [10] 3064 	ld	hl, #10
      00128A 39               [11] 3065 	add	hl, sp
      00128B 01 0A 00         [10] 3066 	ld	bc, #0x000a
      00128E ED B0            [21] 3067 	ldir
                                   3068 ;main.c:230: spritePajaro = generateSpriteFlip(3, 1, spritePajaro_inc_size, spritePajaro_inc);
      001290 21r00r00         [10] 3069 	ld	hl, #_spritePajaro_inc
      001293 E5               [11] 3070 	push	hl
      001294 21 80 01         [10] 3071 	ld	hl, #0x0180
      001297 E5               [11] 3072 	push	hl
      001298 2E 01            [ 7] 3073 	ld	l, #0x01
                                   3074 ;	spillPairReg hl
                                   3075 ;	spillPairReg hl
      00129A 3E 03            [ 7] 3076 	ld	a, #0x03
      00129C E5               [11] 3077 	push	hl
      00129D 21 1A 00         [10] 3078 	ld	hl, #0x001a
      0012A0 39               [11] 3079 	add	hl, sp
      0012A1 EB               [ 4] 3080 	ex	de,hl
      0012A2 E1               [10] 3081 	pop	hl
      0012A3 D5               [11] 3082 	push	de
      0012A4 CDr00r00         [17] 3083 	call	_generateSpriteFlip
      0012A7 F1               [10] 3084 	pop	af
      0012A8 F1               [10] 3085 	pop	af
      0012A9 F1               [10] 3086 	pop	af
      0012AA 11r1Cr01         [10] 3087 	ld	de, #_spritePajaro
      0012AD 21 14 00         [10] 3088 	ld	hl, #20
      0012B0 39               [11] 3089 	add	hl, sp
      0012B1 01 0A 00         [10] 3090 	ld	bc, #0x000a
      0012B4 ED B0            [21] 3091 	ldir
                                   3092 ;main.c:231: SMS_initSprites();
      0012B6 CDr00r00         [17] 3093 	call	_SMS_initSprites
                                   3094 ;main.c:232: alex.initSprite = 255;
      0012B9 21r09r01         [10] 3095 	ld	hl, #_alex + 6
      0012BC 36 FF            [10] 3096 	ld	(hl), #0xff
                                   3097 ;main.c:233: draw_entidad(&alex, &spriteAlex);
      0012BE 11r12r01         [10] 3098 	ld	de, #_spriteAlex
      0012C1 21r03r01         [10] 3099 	ld	hl, #_alex
      0012C4 CDrDCr05         [17] 3100 	call	_draw_entidad
                                   3101 ;main.c:234: SMS_addSprite (0, 0, 9); // puno
      0012C7 11 09 00         [10] 3102 	ld	de, #0x0009
      0012CA 21 00 00         [10] 3103 	ld	hl, #0x0000
      0012CD CDr00r00         [17] 3104 	call	_SMS_addSprite_f
                                   3105 ;main.c:235: inicializaPajaros();
      0012D0 CDrFDr12         [17] 3106 	call	_inicializaPajaros
                                   3107 ;main.c:240: SMS_loadTiles(tiles_de_prueba2_inc, 0, tiles_de_prueba2_inc_size);
      0012D3 21 A0 00         [10] 3108 	ld	hl, #0x00a0
      0012D6 E5               [11] 3109 	push	hl
      0012D7 11r00r00         [10] 3110 	ld	de, #_tiles_de_prueba2_inc
      0012DA 21 00 40         [10] 3111 	ld	hl, #0x4000
      0012DD CDr00r00         [17] 3112 	call	_SMS_VRAMmemcpy
                                   3113 ;main.c:241: SMS_loadTileMap(0, 0, tilemap_de_prueba2_inc, tilemap_de_prueba2_inc_size);
      0012E0 21 80 07         [10] 3114 	ld	hl, #0x0780
      0012E3 E5               [11] 3115 	push	hl
      0012E4 11r00r00         [10] 3116 	ld	de, #_tilemap_de_prueba2_inc
      0012E7 21 00 78         [10] 3117 	ld	hl, #0x7800
      0012EA CDr00r00         [17] 3118 	call	_SMS_VRAMmemcpy
                                   3119 ;main.c:242: SMS_loadBGPalette(paleta_de_prueba2_inc);
      0012ED 21r00r00         [10] 3120 	ld	hl, #_paleta_de_prueba2_inc
      0012F0 CDr00r00         [17] 3121 	call	_SMS_loadBGPalette
                                   3122 ;main.c:243: SMS_setSpritePaletteColor(0,0);
                                   3123 ;	spillPairReg hl
                                   3124 ;	spillPairReg hl
      0012F3 AF               [ 4] 3125 	xor	a, a
      0012F4 6F               [ 4] 3126 	ld	l, a
      0012F5 CDr00r00         [17] 3127 	call	_SMS_setSpritePaletteColor
                                   3128 ;main.c:244: }
      0012F8 DD F9            [10] 3129 	ld	sp, ix
      0012FA DD E1            [14] 3130 	pop	ix
      0012FC C9               [10] 3131 	ret
                                   3132 ;main.c:247: void inicializaPajaros()
                                   3133 ;	---------------------------------
                                   3134 ; Function inicializaPajaros
                                   3135 ; ---------------------------------
      0012FD                       3136 _inicializaPajaros::
      0012FD DD E5            [15] 3137 	push	ix
      0012FF DD 21 00 00      [14] 3138 	ld	ix,#0
      001303 DD 39            [15] 3139 	add	ix,sp
      001305 21 F7 FF         [10] 3140 	ld	hl, #-9
      001308 39               [11] 3141 	add	hl, sp
      001309 F9               [ 6] 3142 	ld	sp, hl
                                   3143 ;main.c:250: for (i = 0; i < NUM_PAJAROS; i++)
      00130A DD 36 FF 00      [19] 3144 	ld	-1 (ix), #0x00
      00130E                       3145 00108$:
                                   3146 ;main.c:252: pajaros[i].x = 15 + (32 * i) % 200;
      00130E DD 4E FF         [19] 3147 	ld	c, -1 (ix)
      001311 06 00            [ 7] 3148 	ld	b, #0x00
      001313 69               [ 4] 3149 	ld	l, c
      001314 60               [ 4] 3150 	ld	h, b
      001315 29               [11] 3151 	add	hl, hl
      001316 09               [11] 3152 	add	hl, bc
      001317 29               [11] 3153 	add	hl, hl
      001318 09               [11] 3154 	add	hl, bc
      001319 29               [11] 3155 	add	hl, hl
      00131A 11r46r03         [10] 3156 	ld	de, #_pajaros
      00131D 19               [11] 3157 	add	hl, de
      00131E E3               [19] 3158 	ex	(sp), hl
      00131F DD 7E FF         [19] 3159 	ld	a, -1 (ix)
      001322 DD 77 F9         [19] 3160 	ld	-7 (ix), a
      001325 DD 36 FA 00      [19] 3161 	ld	-6 (ix), #0x00
      001329 C1               [10] 3162 	pop	bc
      00132A E1               [10] 3163 	pop	hl
      00132B E5               [11] 3164 	push	hl
      00132C C5               [11] 3165 	push	bc
      00132D 29               [11] 3166 	add	hl, hl
      00132E 29               [11] 3167 	add	hl, hl
      00132F 29               [11] 3168 	add	hl, hl
      001330 29               [11] 3169 	add	hl, hl
      001331 29               [11] 3170 	add	hl, hl
      001332 11 C8 00         [10] 3171 	ld	de, #0x00c8
      001335 CDr00r00         [17] 3172 	call	__modsint
      001338 7B               [ 4] 3173 	ld	a, e
      001339 C6 0F            [ 7] 3174 	add	a, #0x0f
      00133B E1               [10] 3175 	pop	hl
      00133C E5               [11] 3176 	push	hl
      00133D 77               [ 7] 3177 	ld	(hl), a
                                   3178 ;main.c:253: pajaros[i].y = 16 * (i / 2);
      00133E DD 7E F7         [19] 3179 	ld	a, -9 (ix)
      001341 C6 01            [ 7] 3180 	add	a, #0x01
      001343 DD 77 FB         [19] 3181 	ld	-5 (ix), a
      001346 DD 7E F8         [19] 3182 	ld	a, -8 (ix)
      001349 CE 00            [ 7] 3183 	adc	a, #0x00
      00134B DD 77 FC         [19] 3184 	ld	-4 (ix), a
      00134E DD 7E F9         [19] 3185 	ld	a, -7 (ix)
      001351 DD 77 FD         [19] 3186 	ld	-3 (ix), a
      001354 DD 7E FA         [19] 3187 	ld	a, -6 (ix)
      001357 DD 77 FE         [19] 3188 	ld	-2 (ix), a
      00135A DD CB FA 7E      [20] 3189 	bit	7, -6 (ix)
      00135E 28 10            [12] 3190 	jr	Z, 00112$
      001360 DD 7E F9         [19] 3191 	ld	a, -7 (ix)
      001363 C6 01            [ 7] 3192 	add	a, #0x01
      001365 DD 77 FD         [19] 3193 	ld	-3 (ix), a
      001368 DD 7E FA         [19] 3194 	ld	a, -6 (ix)
      00136B CE 00            [ 7] 3195 	adc	a, #0x00
      00136D DD 77 FE         [19] 3196 	ld	-2 (ix), a
      001370                       3197 00112$:
      001370 DD 4E FD         [19] 3198 	ld	c, -3 (ix)
      001373 DD 46 FE         [19] 3199 	ld	b, -2 (ix)
      001376 CB 28            [ 8] 3200 	sra	b
      001378 CB 19            [ 8] 3201 	rr	c
      00137A 79               [ 4] 3202 	ld	a, c
      00137B 87               [ 4] 3203 	add	a, a
      00137C 87               [ 4] 3204 	add	a, a
      00137D 87               [ 4] 3205 	add	a, a
      00137E 87               [ 4] 3206 	add	a, a
      00137F DD 6E FB         [19] 3207 	ld	l, -5 (ix)
      001382 DD 66 FC         [19] 3208 	ld	h, -4 (ix)
      001385 77               [ 7] 3209 	ld	(hl), a
                                   3210 ;main.c:254: pajaros[i].lastChangeFrame = i * 3;
      001386 C1               [10] 3211 	pop	bc
      001387 C5               [11] 3212 	push	bc
      001388 03               [ 6] 3213 	inc	bc
      001389 03               [ 6] 3214 	inc	bc
      00138A 03               [ 6] 3215 	inc	bc
      00138B DD 7E FF         [19] 3216 	ld	a, -1 (ix)
      00138E 5F               [ 4] 3217 	ld	e, a
      00138F 87               [ 4] 3218 	add	a, a
      001390 83               [ 4] 3219 	add	a, e
      001391 02               [ 7] 3220 	ld	(bc), a
                                   3221 ;main.c:255: pajaros[i].initSprite = 255;
      001392 DD 7E F7         [19] 3222 	ld	a, -9 (ix)
      001395 C6 06            [ 7] 3223 	add	a, #0x06
      001397 5F               [ 4] 3224 	ld	e, a
      001398 DD 7E F8         [19] 3225 	ld	a, -8 (ix)
      00139B CE 00            [ 7] 3226 	adc	a, #0x00
      00139D 57               [ 4] 3227 	ld	d, a
      00139E 3E FF            [ 7] 3228 	ld	a, #0xff
      0013A0 12               [ 7] 3229 	ld	(de), a
                                   3230 ;main.c:257: pajaros[i].x++;
      0013A1 E1               [10] 3231 	pop	hl
      0013A2 E5               [11] 3232 	push	hl
      0013A3 7E               [ 7] 3233 	ld	a, (hl)
      0013A4 3C               [ 4] 3234 	inc	a
      0013A5 E1               [10] 3235 	pop	hl
      0013A6 E5               [11] 3236 	push	hl
      0013A7 77               [ 7] 3237 	ld	(hl), a
                                   3238 ;main.c:258: pajaros[i].lastChangeFrame++;
      0013A8 0A               [ 7] 3239 	ld	a, (bc)
      0013A9 3C               [ 4] 3240 	inc	a
      0013AA 02               [ 7] 3241 	ld	(bc), a
                                   3242 ;main.c:259: pajaros[i].vx = 1;
      0013AB DD 7E F7         [19] 3243 	ld	a, -9 (ix)
      0013AE C6 08            [ 7] 3244 	add	a, #0x08
      0013B0 6F               [ 4] 3245 	ld	l, a
                                   3246 ;	spillPairReg hl
                                   3247 ;	spillPairReg hl
      0013B1 DD 7E F8         [19] 3248 	ld	a, -8 (ix)
      0013B4 CE 00            [ 7] 3249 	adc	a, #0x00
      0013B6 67               [ 4] 3250 	ld	h, a
                                   3251 ;	spillPairReg hl
                                   3252 ;	spillPairReg hl
      0013B7 36 01            [10] 3253 	ld	(hl), #0x01
      0013B9 23               [ 6] 3254 	inc	hl
      0013BA 36 00            [10] 3255 	ld	(hl), #0x00
                                   3256 ;main.c:260: pajaros[i].vy = 0;
      0013BC DD 7E F7         [19] 3257 	ld	a, -9 (ix)
      0013BF C6 0A            [ 7] 3258 	add	a, #0x0a
      0013C1 6F               [ 4] 3259 	ld	l, a
                                   3260 ;	spillPairReg hl
                                   3261 ;	spillPairReg hl
      0013C2 DD 7E F8         [19] 3262 	ld	a, -8 (ix)
      0013C5 CE 00            [ 7] 3263 	adc	a, #0x00
      0013C7 67               [ 4] 3264 	ld	h, a
                                   3265 ;	spillPairReg hl
                                   3266 ;	spillPairReg hl
      0013C8 AF               [ 4] 3267 	xor	a, a
      0013C9 77               [ 7] 3268 	ld	(hl), a
      0013CA 23               [ 6] 3269 	inc	hl
      0013CB 77               [ 7] 3270 	ld	(hl), a
                                   3271 ;main.c:261: if (pajaros[i].lastChangeFrame == 20)
      0013CC 0A               [ 7] 3272 	ld	a, (bc)
      0013CD D6 14            [ 7] 3273 	sub	a, #0x14
      0013CF 20 15            [12] 3274 	jr	NZ, 00104$
                                   3275 ;main.c:263: pajaros[i].frame++;
      0013D1 E1               [10] 3276 	pop	hl
      0013D2 E5               [11] 3277 	push	hl
      0013D3 23               [ 6] 3278 	inc	hl
      0013D4 23               [ 6] 3279 	inc	hl
      0013D5 7E               [ 7] 3280 	ld	a, (hl)
      0013D6 3C               [ 4] 3281 	inc	a
      0013D7 DD 77 FE         [19] 3282 	ld	-2 (ix), a
      0013DA 77               [ 7] 3283 	ld	(hl), a
                                   3284 ;main.c:264: if (pajaros[i].frame > 1)
      0013DB 3E 01            [ 7] 3285 	ld	a, #0x01
      0013DD DD 96 FE         [19] 3286 	sub	a, -2 (ix)
      0013E0 30 02            [12] 3287 	jr	NC, 00102$
                                   3288 ;main.c:265: pajaros[i].frame = 0;
      0013E2 36 00            [10] 3289 	ld	(hl), #0x00
      0013E4                       3290 00102$:
                                   3291 ;main.c:266: pajaros[i].lastChangeFrame = 0;
      0013E4 AF               [ 4] 3292 	xor	a, a
      0013E5 02               [ 7] 3293 	ld	(bc), a
      0013E6                       3294 00104$:
                                   3295 ;main.c:268: if(pajaros[i].initSprite == 255) {
      0013E6 1A               [ 7] 3296 	ld	a, (de)
      0013E7 3C               [ 4] 3297 	inc	a
      0013E8 20 08            [12] 3298 	jr	NZ, 00109$
                                   3299 ;main.c:269: draw_entidad(&(pajaros[i]), &spritePajaro);
      0013EA 11r1Cr01         [10] 3300 	ld	de, #_spritePajaro
      0013ED E1               [10] 3301 	pop	hl
      0013EE E5               [11] 3302 	push	hl
      0013EF CDrDCr05         [17] 3303 	call	_draw_entidad
      0013F2                       3304 00109$:
                                   3305 ;main.c:250: for (i = 0; i < NUM_PAJAROS; i++)
      0013F2 DD 34 FF         [23] 3306 	inc	-1 (ix)
      0013F5 DD 7E FF         [19] 3307 	ld	a, -1 (ix)
      0013F8 D6 13            [ 7] 3308 	sub	a, #0x13
      0013FA DAr0Er13         [10] 3309 	jp	C, 00108$
                                   3310 ;main.c:272: }
      0013FD DD F9            [10] 3311 	ld	sp, ix
      0013FF DD E1            [14] 3312 	pop	ix
      001401 C9               [10] 3313 	ret
                                   3314 	.area _CODE
                                   3315 	.area _INITIALIZER
      000000                       3316 __xinit__nextVRAMsprites:
      000000 00 01                 3317 	.dw #0x0100
      000002                       3318 __xinit__flipArray:
      000002 00                    3319 	.db #0x00	; 0
      000003 80                    3320 	.db #0x80	; 128
      000004 40                    3321 	.db #0x40	; 64
      000005 C0                    3322 	.db #0xc0	; 192
      000006 20                    3323 	.db #0x20	; 32
      000007 A0                    3324 	.db #0xa0	; 160
      000008 60                    3325 	.db #0x60	; 96
      000009 E0                    3326 	.db #0xe0	; 224
      00000A 10                    3327 	.db #0x10	; 16
      00000B 90                    3328 	.db #0x90	; 144
      00000C 50                    3329 	.db #0x50	; 80	'P'
      00000D D0                    3330 	.db #0xd0	; 208
      00000E 30                    3331 	.db #0x30	; 48	'0'
      00000F B0                    3332 	.db #0xb0	; 176
      000010 70                    3333 	.db #0x70	; 112	'p'
      000011 F0                    3334 	.db #0xf0	; 240
      000012 08                    3335 	.db #0x08	; 8
      000013 88                    3336 	.db #0x88	; 136
      000014 48                    3337 	.db #0x48	; 72	'H'
      000015 C8                    3338 	.db #0xc8	; 200
      000016 28                    3339 	.db #0x28	; 40
      000017 A8                    3340 	.db #0xa8	; 168
      000018 68                    3341 	.db #0x68	; 104	'h'
      000019 E8                    3342 	.db #0xe8	; 232
      00001A 18                    3343 	.db #0x18	; 24
      00001B 98                    3344 	.db #0x98	; 152
      00001C 58                    3345 	.db #0x58	; 88	'X'
      00001D D8                    3346 	.db #0xd8	; 216
      00001E 38                    3347 	.db #0x38	; 56	'8'
      00001F B8                    3348 	.db #0xb8	; 184
      000020 78                    3349 	.db #0x78	; 120	'x'
      000021 F8                    3350 	.db #0xf8	; 248
      000022 04                    3351 	.db #0x04	; 4
      000023 84                    3352 	.db #0x84	; 132
      000024 44                    3353 	.db #0x44	; 68	'D'
      000025 C4                    3354 	.db #0xc4	; 196
      000026 24                    3355 	.db #0x24	; 36
      000027 A4                    3356 	.db #0xa4	; 164
      000028 64                    3357 	.db #0x64	; 100	'd'
      000029 E4                    3358 	.db #0xe4	; 228
      00002A 14                    3359 	.db #0x14	; 20
      00002B 94                    3360 	.db #0x94	; 148
      00002C 54                    3361 	.db #0x54	; 84	'T'
      00002D D4                    3362 	.db #0xd4	; 212
      00002E 34                    3363 	.db #0x34	; 52	'4'
      00002F B4                    3364 	.db #0xb4	; 180
      000030 74                    3365 	.db #0x74	; 116	't'
      000031 F4                    3366 	.db #0xf4	; 244
      000032 0C                    3367 	.db #0x0c	; 12
      000033 8C                    3368 	.db #0x8c	; 140
      000034 4C                    3369 	.db #0x4c	; 76	'L'
      000035 CC                    3370 	.db #0xcc	; 204
      000036 2C                    3371 	.db #0x2c	; 44
      000037 AC                    3372 	.db #0xac	; 172
      000038 6C                    3373 	.db #0x6c	; 108	'l'
      000039 EC                    3374 	.db #0xec	; 236
      00003A 1C                    3375 	.db #0x1c	; 28
      00003B 9C                    3376 	.db #0x9c	; 156
      00003C 5C                    3377 	.db #0x5c	; 92
      00003D DC                    3378 	.db #0xdc	; 220
      00003E 3C                    3379 	.db #0x3c	; 60
      00003F BC                    3380 	.db #0xbc	; 188
      000040 7C                    3381 	.db #0x7c	; 124
      000041 FC                    3382 	.db #0xfc	; 252
      000042 02                    3383 	.db #0x02	; 2
      000043 82                    3384 	.db #0x82	; 130
      000044 42                    3385 	.db #0x42	; 66	'B'
      000045 C2                    3386 	.db #0xc2	; 194
      000046 22                    3387 	.db #0x22	; 34
      000047 A2                    3388 	.db #0xa2	; 162
      000048 62                    3389 	.db #0x62	; 98	'b'
      000049 E2                    3390 	.db #0xe2	; 226
      00004A 12                    3391 	.db #0x12	; 18
      00004B 92                    3392 	.db #0x92	; 146
      00004C 52                    3393 	.db #0x52	; 82	'R'
      00004D D2                    3394 	.db #0xd2	; 210
      00004E 32                    3395 	.db #0x32	; 50	'2'
      00004F B2                    3396 	.db #0xb2	; 178
      000050 72                    3397 	.db #0x72	; 114	'r'
      000051 F2                    3398 	.db #0xf2	; 242
      000052 0A                    3399 	.db #0x0a	; 10
      000053 8A                    3400 	.db #0x8a	; 138
      000054 4A                    3401 	.db #0x4a	; 74	'J'
      000055 CA                    3402 	.db #0xca	; 202
      000056 2A                    3403 	.db #0x2a	; 42
      000057 AA                    3404 	.db #0xaa	; 170
      000058 6A                    3405 	.db #0x6a	; 106	'j'
      000059 EA                    3406 	.db #0xea	; 234
      00005A 1A                    3407 	.db #0x1a	; 26
      00005B 9A                    3408 	.db #0x9a	; 154
      00005C 5A                    3409 	.db #0x5a	; 90	'Z'
      00005D DA                    3410 	.db #0xda	; 218
      00005E 3A                    3411 	.db #0x3a	; 58
      00005F BA                    3412 	.db #0xba	; 186
      000060 7A                    3413 	.db #0x7a	; 122	'z'
      000061 FA                    3414 	.db #0xfa	; 250
      000062 06                    3415 	.db #0x06	; 6
      000063 86                    3416 	.db #0x86	; 134
      000064 46                    3417 	.db #0x46	; 70	'F'
      000065 C6                    3418 	.db #0xc6	; 198
      000066 26                    3419 	.db #0x26	; 38
      000067 A6                    3420 	.db #0xa6	; 166
      000068 66                    3421 	.db #0x66	; 102	'f'
      000069 E6                    3422 	.db #0xe6	; 230
      00006A 16                    3423 	.db #0x16	; 22
      00006B 96                    3424 	.db #0x96	; 150
      00006C 56                    3425 	.db #0x56	; 86	'V'
      00006D D6                    3426 	.db #0xd6	; 214
      00006E 36                    3427 	.db #0x36	; 54	'6'
      00006F B6                    3428 	.db #0xb6	; 182
      000070 76                    3429 	.db #0x76	; 118	'v'
      000071 F6                    3430 	.db #0xf6	; 246
      000072 0E                    3431 	.db #0x0e	; 14
      000073 8E                    3432 	.db #0x8e	; 142
      000074 4E                    3433 	.db #0x4e	; 78	'N'
      000075 CE                    3434 	.db #0xce	; 206
      000076 2E                    3435 	.db #0x2e	; 46
      000077 AE                    3436 	.db #0xae	; 174
      000078 6E                    3437 	.db #0x6e	; 110	'n'
      000079 EE                    3438 	.db #0xee	; 238
      00007A 1E                    3439 	.db #0x1e	; 30
      00007B 9E                    3440 	.db #0x9e	; 158
      00007C 5E                    3441 	.db #0x5e	; 94
      00007D DE                    3442 	.db #0xde	; 222
      00007E 3E                    3443 	.db #0x3e	; 62
      00007F BE                    3444 	.db #0xbe	; 190
      000080 7E                    3445 	.db #0x7e	; 126
      000081 FE                    3446 	.db #0xfe	; 254
      000082 01                    3447 	.db #0x01	; 1
      000083 81                    3448 	.db #0x81	; 129
      000084 41                    3449 	.db #0x41	; 65	'A'
      000085 C1                    3450 	.db #0xc1	; 193
      000086 21                    3451 	.db #0x21	; 33
      000087 A1                    3452 	.db #0xa1	; 161
      000088 61                    3453 	.db #0x61	; 97	'a'
      000089 E1                    3454 	.db #0xe1	; 225
      00008A 11                    3455 	.db #0x11	; 17
      00008B 91                    3456 	.db #0x91	; 145
      00008C 51                    3457 	.db #0x51	; 81	'Q'
      00008D D1                    3458 	.db #0xd1	; 209
      00008E 31                    3459 	.db #0x31	; 49	'1'
      00008F B1                    3460 	.db #0xb1	; 177
      000090 71                    3461 	.db #0x71	; 113	'q'
      000091 F1                    3462 	.db #0xf1	; 241
      000092 09                    3463 	.db #0x09	; 9
      000093 89                    3464 	.db #0x89	; 137
      000094 49                    3465 	.db #0x49	; 73	'I'
      000095 C9                    3466 	.db #0xc9	; 201
      000096 29                    3467 	.db #0x29	; 41
      000097 A9                    3468 	.db #0xa9	; 169
      000098 69                    3469 	.db #0x69	; 105	'i'
      000099 E9                    3470 	.db #0xe9	; 233
      00009A 19                    3471 	.db #0x19	; 25
      00009B 99                    3472 	.db #0x99	; 153
      00009C 59                    3473 	.db #0x59	; 89	'Y'
      00009D D9                    3474 	.db #0xd9	; 217
      00009E 39                    3475 	.db #0x39	; 57	'9'
      00009F B9                    3476 	.db #0xb9	; 185
      0000A0 79                    3477 	.db #0x79	; 121	'y'
      0000A1 F9                    3478 	.db #0xf9	; 249
      0000A2 05                    3479 	.db #0x05	; 5
      0000A3 85                    3480 	.db #0x85	; 133
      0000A4 45                    3481 	.db #0x45	; 69	'E'
      0000A5 C5                    3482 	.db #0xc5	; 197
      0000A6 25                    3483 	.db #0x25	; 37
      0000A7 A5                    3484 	.db #0xa5	; 165
      0000A8 65                    3485 	.db #0x65	; 101	'e'
      0000A9 E5                    3486 	.db #0xe5	; 229
      0000AA 15                    3487 	.db #0x15	; 21
      0000AB 95                    3488 	.db #0x95	; 149
      0000AC 55                    3489 	.db #0x55	; 85	'U'
      0000AD D5                    3490 	.db #0xd5	; 213
      0000AE 35                    3491 	.db #0x35	; 53	'5'
      0000AF B5                    3492 	.db #0xb5	; 181
      0000B0 75                    3493 	.db #0x75	; 117	'u'
      0000B1 F5                    3494 	.db #0xf5	; 245
      0000B2 0D                    3495 	.db #0x0d	; 13
      0000B3 8D                    3496 	.db #0x8d	; 141
      0000B4 4D                    3497 	.db #0x4d	; 77	'M'
      0000B5 CD                    3498 	.db #0xcd	; 205
      0000B6 2D                    3499 	.db #0x2d	; 45
      0000B7 AD                    3500 	.db #0xad	; 173
      0000B8 6D                    3501 	.db #0x6d	; 109	'm'
      0000B9 ED                    3502 	.db #0xed	; 237
      0000BA 1D                    3503 	.db #0x1d	; 29
      0000BB 9D                    3504 	.db #0x9d	; 157
      0000BC 5D                    3505 	.db #0x5d	; 93
      0000BD DD                    3506 	.db #0xdd	; 221
      0000BE 3D                    3507 	.db #0x3d	; 61
      0000BF BD                    3508 	.db #0xbd	; 189
      0000C0 7D                    3509 	.db #0x7d	; 125
      0000C1 FD                    3510 	.db #0xfd	; 253
      0000C2 03                    3511 	.db #0x03	; 3
      0000C3 83                    3512 	.db #0x83	; 131
      0000C4 43                    3513 	.db #0x43	; 67	'C'
      0000C5 C3                    3514 	.db #0xc3	; 195
      0000C6 23                    3515 	.db #0x23	; 35
      0000C7 A3                    3516 	.db #0xa3	; 163
      0000C8 63                    3517 	.db #0x63	; 99	'c'
      0000C9 E3                    3518 	.db #0xe3	; 227
      0000CA 13                    3519 	.db #0x13	; 19
      0000CB 93                    3520 	.db #0x93	; 147
      0000CC 53                    3521 	.db #0x53	; 83	'S'
      0000CD D3                    3522 	.db #0xd3	; 211
      0000CE 33                    3523 	.db #0x33	; 51	'3'
      0000CF B3                    3524 	.db #0xb3	; 179
      0000D0 73                    3525 	.db #0x73	; 115	's'
      0000D1 F3                    3526 	.db #0xf3	; 243
      0000D2 0B                    3527 	.db #0x0b	; 11
      0000D3 8B                    3528 	.db #0x8b	; 139
      0000D4 4B                    3529 	.db #0x4b	; 75	'K'
      0000D5 CB                    3530 	.db #0xcb	; 203
      0000D6 2B                    3531 	.db #0x2b	; 43
      0000D7 AB                    3532 	.db #0xab	; 171
      0000D8 6B                    3533 	.db #0x6b	; 107	'k'
      0000D9 EB                    3534 	.db #0xeb	; 235
      0000DA 1B                    3535 	.db #0x1b	; 27
      0000DB 9B                    3536 	.db #0x9b	; 155
      0000DC 5B                    3537 	.db #0x5b	; 91
      0000DD DB                    3538 	.db #0xdb	; 219
      0000DE 3B                    3539 	.db #0x3b	; 59
      0000DF BB                    3540 	.db #0xbb	; 187
      0000E0 7B                    3541 	.db #0x7b	; 123
      0000E1 FB                    3542 	.db #0xfb	; 251
      0000E2 07                    3543 	.db #0x07	; 7
      0000E3 87                    3544 	.db #0x87	; 135
      0000E4 47                    3545 	.db #0x47	; 71	'G'
      0000E5 C7                    3546 	.db #0xc7	; 199
      0000E6 27                    3547 	.db #0x27	; 39
      0000E7 A7                    3548 	.db #0xa7	; 167
      0000E8 67                    3549 	.db #0x67	; 103	'g'
      0000E9 E7                    3550 	.db #0xe7	; 231
      0000EA 17                    3551 	.db #0x17	; 23
      0000EB 97                    3552 	.db #0x97	; 151
      0000EC 57                    3553 	.db #0x57	; 87	'W'
      0000ED D7                    3554 	.db #0xd7	; 215
      0000EE 37                    3555 	.db #0x37	; 55	'7'
      0000EF B7                    3556 	.db #0xb7	; 183
      0000F0 77                    3557 	.db #0x77	; 119	'w'
      0000F1 F7                    3558 	.db #0xf7	; 247
      0000F2 0F                    3559 	.db #0x0f	; 15
      0000F3 8F                    3560 	.db #0x8f	; 143
      0000F4 4F                    3561 	.db #0x4f	; 79	'O'
      0000F5 CF                    3562 	.db #0xcf	; 207
      0000F6 2F                    3563 	.db #0x2f	; 47
      0000F7 AF                    3564 	.db #0xaf	; 175
      0000F8 6F                    3565 	.db #0x6f	; 111	'o'
      0000F9 EF                    3566 	.db #0xef	; 239
      0000FA 1F                    3567 	.db #0x1f	; 31
      0000FB 9F                    3568 	.db #0x9f	; 159
      0000FC 5F                    3569 	.db #0x5f	; 95
      0000FD DF                    3570 	.db #0xdf	; 223
      0000FE 3F                    3571 	.db #0x3f	; 63
      0000FF BF                    3572 	.db #0xbf	; 191
      000100 7F                    3573 	.db #0x7f	; 127
      000101 FF                    3574 	.db #0xff	; 255
      000102                       3575 __xinit__maxSalto:
      000102 FF                    3576 	.db #0xff	; 255
      000103                       3577 __xinit__alex:
      000103 1E                    3578 	.db #0x1e	; 30
      000104 96                    3579 	.db #0x96	; 150
      000105 00                    3580 	.db #0x00	; 0
      000106 00                    3581 	.db #0x00	; 0
      000107 00                    3582 	.db #0x00	; 0
      000108 00                    3583 	.db #0x00	; 0
      000109 FF                    3584 	.db #0xff	; 255
      00010A 00                    3585 	.db #0x00	; 0
      00010B 00 00                 3586 	.dw #0x0000
      00010D 00 00                 3587 	.dw #0x0000
      00010F 00 00                 3588 	.dw #0x0000
      000111                       3589 __xinit__lastFrame:
      000111 FF                    3590 	.db #0xff	; 255
      000112                       3591 __xinit__spriteAlex:
      000112 02                    3592 	.db #0x02	; 2
      000113 02                    3593 	.db #0x02	; 2
      000114 08                    3594 	.db #0x08	; 8
      000115 00                    3595 	.db #0x00	; 0
      000116 00 00                 3596 	.dw #0x0000
      000118 00                    3597 	.db #0x00	; 0
      000119 00 00                 3598 	.dw #0x0000
      00011B 00                    3599 	.db #0x00	; 0
      00011C                       3600 __xinit__spritePajaro:
      00011C 02                    3601 	.db #0x02	; 2
      00011D 02                    3602 	.db #0x02	; 2
      00011E 08                    3603 	.db #0x08	; 8
      00011F 00                    3604 	.db #0x00	; 0
      000120 00 00                 3605 	.dw #0x0000
      000122 00                    3606 	.db #0x00	; 0
      000123 00 00                 3607 	.dw #0x0000
      000125 00                    3608 	.db #0x00	; 0
      000126                       3609 __xinit__spritePuno:
      000126 02                    3610 	.db #0x02	; 2
      000127 02                    3611 	.db #0x02	; 2
      000128 08                    3612 	.db #0x08	; 8
      000129 00                    3613 	.db #0x00	; 0
      00012A 00 00                 3614 	.dw #0x0000
      00012C 00                    3615 	.db #0x00	; 0
      00012D 00 00                 3616 	.dw #0x0000
      00012F 00                    3617 	.db #0x00	; 0
                                   3618 	.area _CABS (ABS)
      007FF0                       3619 	.org 0x7FF0
      007FF0                       3620 ___SMS__SEGA_signature:
      007FF0 54                    3621 	.db #0x54	; 84	'T'
      007FF1 4D                    3622 	.db #0x4d	; 77	'M'
      007FF2 52                    3623 	.db #0x52	; 82	'R'
      007FF3 20                    3624 	.db #0x20	; 32
      007FF4 53                    3625 	.db #0x53	; 83	'S'
      007FF5 45                    3626 	.db #0x45	; 69	'E'
      007FF6 47                    3627 	.db #0x47	; 71	'G'
      007FF7 41                    3628 	.db #0x41	; 65	'A'
      007FF8 FF                    3629 	.db #0xff	; 255
      007FF9 FF                    3630 	.db #0xff	; 255
      007FFA FF                    3631 	.db #0xff	; 255
      007FFB FF                    3632 	.db #0xff	; 255
      007FFC 99                    3633 	.db #0x99	; 153
      007FFD 99                    3634 	.db #0x99	; 153
      007FFE 00                    3635 	.db #0x00	; 0
      007FFF 4C                    3636 	.db #0x4c	; 76	'L'
      007FDB                       3637 	.org 0x7FDB
      007FDB                       3638 ___SMS__SDSC_author:
      007FDB 53 45 47 41           3639 	.ascii "SEGA"
      007FDF 00                    3640 	.db 0x00
      007FCD                       3641 	.org 0x7FCD
      007FCD                       3642 ___SMS__SDSC_name:
      007FCD 62 61 73 69 63 20 65  3643 	.ascii "basic example"
             78 61 6D 70 6C 65
      007FDA 00                    3644 	.db 0x00
      007FBC                       3645 	.org 0x7FBC
      007FBC                       3646 ___SMS__SDSC_descr:
      007FBC 41 20 73 69 6D 70 6C  3647 	.ascii "A simple example"
             65 20 65 78 61 6D 70
             6C 65
      007FCC 00                    3648 	.db 0x00
      007FE0                       3649 	.org 0x7FE0
      007FE0                       3650 ___SMS__SDSC_signature:
      007FE0 53                    3651 	.db #0x53	; 83	'S'
      007FE1 44                    3652 	.db #0x44	; 68	'D'
      007FE2 53                    3653 	.db #0x53	; 83	'S'
      007FE3 43                    3654 	.db #0x43	; 67	'C'
      007FE4 01                    3655 	.db #0x01	; 1
      007FE5 00                    3656 	.db #0x00	; 0
      007FE6 00                    3657 	.db #0x00	; 0
      007FE7 00                    3658 	.db #0x00	; 0
      007FE8 00                    3659 	.db #0x00	; 0
      007FE9 00                    3660 	.db #0x00	; 0
      007FEA DB                    3661 	.db #0xdb	; 219
      007FEB 7F                    3662 	.db #0x7f	; 127
      007FEC CD                    3663 	.db #0xcd	; 205
      007FED 7F                    3664 	.db #0x7f	; 127
      007FEE BC                    3665 	.db #0xbc	; 188
      007FEF 7F                    3666 	.db #0x7f	; 127
