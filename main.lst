                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14549 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___SMS__SDSC_signature
                                     12 	.globl ___SMS__SDSC_descr
                                     13 	.globl ___SMS__SDSC_name
                                     14 	.globl ___SMS__SDSC_author
                                     15 	.globl ___SMS__SEGA_signature
                                     16 	.globl _main
                                     17 	.globl _PSGSFXFrame
                                     18 	.globl _PSGFrame
                                     19 	.globl _PSGSFXPlay
                                     20 	.globl _PSGPlay
                                     21 	.globl _copySpritestoSAT
                                     22 	.globl _addHardwareSprite
                                     23 	.globl _generateSpriteNoRAM
                                     24 	.globl _generateSpriteFlip
                                     25 	.globl _SMS_VRAMmemsetW
                                     26 	.globl _SMS_VRAMmemcpy
                                     27 	.globl _SMS_setFrameInterruptHandler
                                     28 	.globl _SMS_resetPauseRequest
                                     29 	.globl _SMS_queryPauseRequested
                                     30 	.globl _SMS_getKeysHeld
                                     31 	.globl _SMS_getKeysPressed
                                     32 	.globl _SMS_loadSpritePalette
                                     33 	.globl _SMS_loadBGPalette
                                     34 	.globl _SMS_setSpritePaletteColor
                                     35 	.globl _SMS_updateSpritePosition
                                     36 	.globl _SMS_addSprite_f
                                     37 	.globl _SMS_initSprites
                                     38 	.globl _SMS_crt0_RST08
                                     39 	.globl _SMS_waitForVBlank
                                     40 	.globl _SMS_setSpriteMode
                                     41 	.globl _SMS_setBGScrollY
                                     42 	.globl _SMS_setBGScrollX
                                     43 	.globl _SMS_VDPturnOnFeature
                                     44 	.globl _SMS_init
                                     45 	.globl _printf
                                     46 	.globl _spritePuno
                                     47 	.globl _spritePajaro
                                     48 	.globl _spriteAlex
                                     49 	.globl _lastFrame
                                     50 	.globl _alex
                                     51 	.globl _maxSalto
                                     52 	.globl _flipArray
                                     53 	.globl _nextVRAMsprites
                                     54 	.globl _numSprites
                                     55 	.globl _pajaros
                                     56 	.globl _SpriteNextFree2
                                     57 	.globl _SpriteTableXN2
                                     58 	.globl _SpriteTableY2
                                     59 	.globl _hardwareSprites
                                     60 	.globl _buffer64
                                     61 	.globl _SMS_SRAM
                                     62 	.globl _SRAM_bank_to_be_mapped_on_slot2
                                     63 	.globl _ROM_bank_to_be_mapped_on_slot0
                                     64 	.globl _ROM_bank_to_be_mapped_on_slot1
                                     65 	.globl _ROM_bank_to_be_mapped_on_slot2
                                     66 	.globl _generateSprite
                                     67 	.globl _initSpritesVariables
                                     68 	.globl _draw_entidad
                                     69 	.globl _canUp
                                     70 	.globl _canDown
                                     71 	.globl _canLeft
                                     72 	.globl _canRight
                                     73 	.globl _moveAlexSuelo
                                     74 	.globl _moveAlexAire
                                     75 	.globl _drawAlex
                                     76 	.globl _moveAlex
                                     77 	.globl _disableSprites
                                     78 	.globl _playMusic
                                     79 	.globl _dibujaPajaros
                                     80 	.globl _loadGrapVRAM
                                     81 	.globl _inicializaPajaros
                                     82 ;--------------------------------------------------------
                                     83 ; special function registers
                                     84 ;--------------------------------------------------------
                           0000BF    85 _VDPControlPort	=	0x00bf
                           0000BF    86 _VDPStatusPort	=	0x00bf
                           0000BE    87 _VDPDataPort	=	0x00be
                           00007E    88 _VDPVCounterPort	=	0x007e
                           00007F    89 _VDPHCounterPort	=	0x007f
                                     90 ;--------------------------------------------------------
                                     91 ; ram data
                                     92 ;--------------------------------------------------------
                                     93 	.area _DATA
                           00FFFF    94 _ROM_bank_to_be_mapped_on_slot2	=	0xffff
                           00FFFE    95 _ROM_bank_to_be_mapped_on_slot1	=	0xfffe
                           00FFFD    96 _ROM_bank_to_be_mapped_on_slot0	=	0xfffd
                           00FFFC    97 _SRAM_bank_to_be_mapped_on_slot2	=	0xfffc
                           008000    98 _SMS_SRAM	=	0x8000
      000000                         99 _buffer64::
      000000                        100 	.ds 64
      000040                        101 _hardwareSprites::
      000040                        102 	.ds 768
      000340                        103 _SpriteTableY2::
      000340                        104 	.ds 2
      000342                        105 _SpriteTableXN2::
      000342                        106 	.ds 2
      000344                        107 _SpriteNextFree2::
      000344                        108 	.ds 2
      000346                        109 _pajaros::
      000346                        110 	.ds 266
      000450                        111 _numSprites::
      000450                        112 	.ds 2
                                    113 ;--------------------------------------------------------
                                    114 ; ram data
                                    115 ;--------------------------------------------------------
                                    116 	.area _INITIALIZED
      000000                        117 _nextVRAMsprites::
      000000                        118 	.ds 2
      000002                        119 _flipArray::
      000002                        120 	.ds 256
      000102                        121 _maxSalto::
      000102                        122 	.ds 1
      000103                        123 _alex::
      000103                        124 	.ds 14
      000111                        125 _lastFrame::
      000111                        126 	.ds 1
      000112                        127 _spriteAlex::
      000112                        128 	.ds 10
      00011C                        129 _spritePajaro::
      00011C                        130 	.ds 10
      000126                        131 _spritePuno::
      000126                        132 	.ds 10
                                    133 ;--------------------------------------------------------
                                    134 ; absolute external ram data
                                    135 ;--------------------------------------------------------
                                    136 	.area _DABS (ABS)
                                    137 ;--------------------------------------------------------
                                    138 ; global & static initialisations
                                    139 ;--------------------------------------------------------
                                    140 	.area _HOME
                                    141 	.area _GSINIT
                                    142 	.area _GSFINAL
                                    143 	.area _GSINIT
                                    144 ;--------------------------------------------------------
                                    145 ; Home
                                    146 ;--------------------------------------------------------
                                    147 	.area _HOME
                                    148 	.area _HOME
                                    149 ;--------------------------------------------------------
                                    150 ; code
                                    151 ;--------------------------------------------------------
                                    152 	.area _CODE
                                    153 ;./lib/./sprite.c:24: T_sprite generateSpriteFlip(unsigned char ancho, unsigned char alto, int tam,const unsigned char data[]) {
                                    154 ;	---------------------------------
                                    155 ; Function generateSpriteFlip
                                    156 ; ---------------------------------
      000000                        157 _generateSpriteFlip::
      000000 DD E5            [15]  158 	push	ix
      000002 DD 21 00 00      [14]  159 	ld	ix,#0
      000006 DD 39            [15]  160 	add	ix,sp
      000008 FD 21 EC FF      [14]  161 	ld	iy, #-20
      00000C FD 39            [15]  162 	add	iy, sp
      00000E FD F9            [10]  163 	ld	sp, iy
                                    164 ;./lib/./sprite.c:25: unsigned char tamano = alto*ancho*2;
      000010 DD 77 F9         [19]  165 	ld	-7 (ix), a
      000013 DD 75 F8         [19]  166 	ld	-8 (ix), l
      000016 5F               [ 4]  167 	ld	e, a
      000017 65               [ 4]  168 	ld	h, l
                                    169 ;	spillPairReg hl
                                    170 ;	spillPairReg hl
      000018 2E 00            [ 7]  171 	ld	l, #0x00
      00001A 55               [ 4]  172 	ld	d, l
      00001B 06 08            [ 7]  173 	ld	b, #0x08
      00001D                        174 00175$:
      00001D 29               [11]  175 	add	hl, hl
      00001E 30 01            [12]  176 	jr	NC, 00176$
      000020 19               [11]  177 	add	hl, de
      000021                        178 00176$:
      000021 10 FA            [13]  179 	djnz	00175$
      000023 4D               [ 4]  180 	ld	c, l
      000024 CB 21            [ 8]  181 	sla	c
                                    182 ;./lib/./sprite.c:26: T_sprite sprite = {alto,ancho,tamano,tam/(tamano*32),nextVRAMsprites, 1,0};
      000026 DD 7E F8         [19]  183 	ld	a, -8 (ix)
      000029 DD 77 EC         [19]  184 	ld	-20 (ix), a
      00002C DD 7E F9         [19]  185 	ld	a, -7 (ix)
      00002F DD 77 ED         [19]  186 	ld	-19 (ix), a
      000032 DD 71 EE         [19]  187 	ld	-18 (ix), c
      000035 DD 71 FE         [19]  188 	ld	-2 (ix), c
      000038 DD 36 FF 00      [19]  189 	ld	-1 (ix), #0x00
      00003C 69               [ 4]  190 	ld	l, c
      00003D 26 00            [ 7]  191 	ld	h, #0x00
      00003F 29               [11]  192 	add	hl, hl
      000040 29               [11]  193 	add	hl, hl
      000041 29               [11]  194 	add	hl, hl
      000042 29               [11]  195 	add	hl, hl
      000043 29               [11]  196 	add	hl, hl
      000044 C5               [11]  197 	push	bc
      000045 EB               [ 4]  198 	ex	de, hl
      000046 DD 6E 06         [19]  199 	ld	l, 6 (ix)
                                    200 ;	spillPairReg hl
                                    201 ;	spillPairReg hl
      000049 DD 66 07         [19]  202 	ld	h, 7 (ix)
                                    203 ;	spillPairReg hl
                                    204 ;	spillPairReg hl
      00004C CDr00r00         [17]  205 	call	__divsint
      00004F C1               [10]  206 	pop	bc
      000050 DD 73 EF         [19]  207 	ld	-17 (ix), e
      000053 3Ar00r00         [13]  208 	ld	a, (_nextVRAMsprites+0)
      000056 DD 77 F0         [19]  209 	ld	-16 (ix), a
      000059 3Ar01r00         [13]  210 	ld	a, (_nextVRAMsprites+1)
      00005C DD 77 F1         [19]  211 	ld	-15 (ix), a
      00005F DD 36 F2 01      [19]  212 	ld	-14 (ix), #0x01
      000063 AF               [ 4]  213 	xor	a, a
      000064 DD 77 F3         [19]  214 	ld	-13 (ix), a
      000067 DD 77 F4         [19]  215 	ld	-12 (ix), a
      00006A DD 36 F5 00      [19]  216 	ld	-11 (ix), #0x00
                                    217 ;./lib/./sprite.c:27: SMS_loadTiles(data,nextVRAMsprites,tam);
      00006E DD 5E 08         [19]  218 	ld	e, 8 (ix)
      000071 DD 56 09         [19]  219 	ld	d, 9 (ix)
      000074 2Ar00r00         [16]  220 	ld	hl, (_nextVRAMsprites)
      000077 29               [11]  221 	add	hl, hl
      000078 29               [11]  222 	add	hl, hl
      000079 29               [11]  223 	add	hl, hl
      00007A 29               [11]  224 	add	hl, hl
      00007B 29               [11]  225 	add	hl, hl
      00007C CB F4            [ 8]  226 	set	6, h
      00007E C5               [11]  227 	push	bc
      00007F E5               [11]  228 	push	hl
      000080 DD 6E 06         [19]  229 	ld	l, 6 (ix)
                                    230 ;	spillPairReg hl
                                    231 ;	spillPairReg hl
      000083 DD 66 07         [19]  232 	ld	h, 7 (ix)
                                    233 ;	spillPairReg hl
                                    234 ;	spillPairReg hl
      000086 E3               [19]  235 	ex	(sp), hl
      000087 CDr00r00         [17]  236 	call	_SMS_VRAMmemcpy
      00008A C1               [10]  237 	pop	bc
                                    238 ;./lib/./sprite.c:28: nextVRAMsprites = nextVRAMsprites + (tamano*sprite.numFrames);
      00008B DD 5E EF         [19]  239 	ld	e, -17 (ix)
      00008E 61               [ 4]  240 	ld	h, c
                                    241 ;	spillPairReg hl
                                    242 ;	spillPairReg hl
      00008F 2E 00            [ 7]  243 	ld	l, #0x00
      000091 55               [ 4]  244 	ld	d, l
      000092 06 08            [ 7]  245 	ld	b, #0x08
      000094                        246 00177$:
      000094 29               [11]  247 	add	hl, hl
      000095 30 01            [12]  248 	jr	NC, 00178$
      000097 19               [11]  249 	add	hl, de
      000098                        250 00178$:
      000098 10 FA            [13]  251 	djnz	00177$
      00009A EB               [ 4]  252 	ex	de, hl
      00009B 21r00r00         [10]  253 	ld	hl, #_nextVRAMsprites
      00009E 7E               [ 7]  254 	ld	a, (hl)
      00009F 83               [ 4]  255 	add	a, e
      0000A0 77               [ 7]  256 	ld	(hl), a
      0000A1 23               [ 6]  257 	inc	hl
      0000A2 7E               [ 7]  258 	ld	a, (hl)
      0000A3 8A               [ 4]  259 	adc	a, d
      0000A4 77               [ 7]  260 	ld	(hl), a
                                    261 ;./lib/./sprite.c:30: unsigned char y,x, numFrames = tamano/(alto*ancho);
      0000A5 DD 5E F9         [19]  262 	ld	e, -7 (ix)
      0000A8 DD 66 F8         [19]  263 	ld	h, -8 (ix)
                                    264 ;	spillPairReg hl
                                    265 ;	spillPairReg hl
      0000AB 2E 00            [ 7]  266 	ld	l, #0x00
      0000AD 55               [ 4]  267 	ld	d, l
      0000AE 06 08            [ 7]  268 	ld	b, #0x08
      0000B0                        269 00179$:
      0000B0 29               [11]  270 	add	hl, hl
      0000B1 30 01            [12]  271 	jr	NC, 00180$
      0000B3 19               [11]  272 	add	hl, de
      0000B4                        273 00180$:
      0000B4 10 FA            [13]  274 	djnz	00179$
      0000B6 EB               [ 4]  275 	ex	de, hl
      0000B7 DD 6E FE         [19]  276 	ld	l, -2 (ix)
                                    277 ;	spillPairReg hl
                                    278 ;	spillPairReg hl
      0000BA DD 66 FF         [19]  279 	ld	h, -1 (ix)
                                    280 ;	spillPairReg hl
                                    281 ;	spillPairReg hl
      0000BD CDr00r00         [17]  282 	call	__divsint
      0000C0 DD 73 FA         [19]  283 	ld	-6 (ix), e
                                    284 ;./lib/./sprite.c:31: int offset = 0, yOffset = 0;
      0000C3 01 00 00         [10]  285 	ld	bc, #0x0000
      0000C6 50               [ 4]  286 	ld	d, b
      0000C7 59               [ 4]  287 	ld	e, c
                                    288 ;./lib/./sprite.c:32: while(numFrames) {
      0000C8                        289 00110$:
      0000C8 DD 7E FA         [19]  290 	ld	a, -6 (ix)
      0000CB B7               [ 4]  291 	or	a, a
      0000CC CAr87r01         [10]  292 	jp	Z, 00112$
                                    293 ;./lib/./sprite.c:34: while (y) {
      0000CF DD 7E F8         [19]  294 	ld	a, -8 (ix)
      0000D2 DD 77 FB         [19]  295 	ld	-5 (ix), a
      0000D5                        296 00107$:
      0000D5 DD 7E FB         [19]  297 	ld	a, -5 (ix)
      0000D8 B7               [ 4]  298 	or	a, a
      0000D9 CAr81r01         [10]  299 	jp	Z, 00109$
                                    300 ;./lib/./sprite.c:36: offset = offset + x*64 - 64; // voy al principio del último tile
      0000DC DD 6E F9         [19]  301 	ld	l, -7 (ix)
                                    302 ;	spillPairReg hl
                                    303 ;	spillPairReg hl
      0000DF 26 00            [ 7]  304 	ld	h, #0x00
                                    305 ;	spillPairReg hl
                                    306 ;	spillPairReg hl
      0000E1 29               [11]  307 	add	hl, hl
      0000E2 29               [11]  308 	add	hl, hl
      0000E3 29               [11]  309 	add	hl, hl
      0000E4 29               [11]  310 	add	hl, hl
      0000E5 29               [11]  311 	add	hl, hl
      0000E6 29               [11]  312 	add	hl, hl
      0000E7 09               [11]  313 	add	hl, bc
      0000E8 7D               [ 4]  314 	ld	a, l
      0000E9 C6 C0            [ 7]  315 	add	a, #0xc0
      0000EB DD 77 FC         [19]  316 	ld	-4 (ix), a
      0000EE 7C               [ 4]  317 	ld	a, h
      0000EF CE FF            [ 7]  318 	adc	a, #0xff
      0000F1 DD 77 FD         [19]  319 	ld	-3 (ix), a
                                    320 ;./lib/./sprite.c:37: while(x) {
      0000F4 4B               [ 4]  321 	ld	c, e
      0000F5 42               [ 4]  322 	ld	b, d
      0000F6 DD 7E F9         [19]  323 	ld	a, -7 (ix)
      0000F9 DD 77 FE         [19]  324 	ld	-2 (ix), a
      0000FC                        325 00104$:
      0000FC DD 7E FE         [19]  326 	ld	a, -2 (ix)
      0000FF B7               [ 4]  327 	or	a, a
      000100 28 77            [12]  328 	jr	Z, 00124$
                                    329 ;./lib/./sprite.c:40: while(i<64){
      000102 DD 5E FC         [19]  330 	ld	e, -4 (ix)
      000105 DD 56 FD         [19]  331 	ld	d, -3 (ix)
      000108 DD 36 FF 00      [19]  332 	ld	-1 (ix), #0x00
      00010C                        333 00101$:
      00010C DD 7E FF         [19]  334 	ld	a, -1 (ix)
      00010F D6 40            [ 7]  335 	sub	a, #0x40
      000111 30 2D            [12]  336 	jr	NC, 00103$
                                    337 ;./lib/./sprite.c:41: buffer64[i] = flipArray[data[offset2]];
      000113 3Er00            [ 7]  338 	ld	a, #<(_buffer64)
      000115 DD 86 FF         [19]  339 	add	a, -1 (ix)
      000118 DD 77 F6         [19]  340 	ld	-10 (ix), a
      00011B 3Es00            [ 7]  341 	ld	a, #>(_buffer64)
      00011D CE 00            [ 7]  342 	adc	a, #0x00
      00011F DD 77 F7         [19]  343 	ld	-9 (ix), a
      000122 DD 6E 08         [19]  344 	ld	l, 8 (ix)
                                    345 ;	spillPairReg hl
                                    346 ;	spillPairReg hl
      000125 DD 66 09         [19]  347 	ld	h, 9 (ix)
                                    348 ;	spillPairReg hl
                                    349 ;	spillPairReg hl
      000128 19               [11]  350 	add	hl, de
      000129 7E               [ 7]  351 	ld	a, (hl)
      00012A C6r02            [ 7]  352 	add	a, #<(_flipArray)
      00012C 6F               [ 4]  353 	ld	l, a
                                    354 ;	spillPairReg hl
                                    355 ;	spillPairReg hl
      00012D 3E 00            [ 7]  356 	ld	a, #0x00
      00012F CEs00            [ 7]  357 	adc	a, #>(_flipArray)
      000131 67               [ 4]  358 	ld	h, a
                                    359 ;	spillPairReg hl
                                    360 ;	spillPairReg hl
      000132 7E               [ 7]  361 	ld	a, (hl)
      000133 DD 6E F6         [19]  362 	ld	l, -10 (ix)
      000136 DD 66 F7         [19]  363 	ld	h, -9 (ix)
      000139 77               [ 7]  364 	ld	(hl), a
                                    365 ;./lib/./sprite.c:42: offset2++;
      00013A 13               [ 6]  366 	inc	de
                                    367 ;./lib/./sprite.c:43: i++;
      00013B DD 34 FF         [23]  368 	inc	-1 (ix)
      00013E 18 CC            [12]  369 	jr	00101$
      000140                        370 00103$:
                                    371 ;./lib/./sprite.c:45: SMS_loadTiles(&buffer64,nextVRAMsprites,64);
      000140 2Ar00r00         [16]  372 	ld	hl, (_nextVRAMsprites)
      000143 29               [11]  373 	add	hl, hl
      000144 29               [11]  374 	add	hl, hl
      000145 29               [11]  375 	add	hl, hl
      000146 29               [11]  376 	add	hl, hl
      000147 29               [11]  377 	add	hl, hl
      000148 CB F4            [ 8]  378 	set	6, h
      00014A C5               [11]  379 	push	bc
      00014B 11 40 00         [10]  380 	ld	de, #0x0040
      00014E D5               [11]  381 	push	de
      00014F 11r00r00         [10]  382 	ld	de, #_buffer64
      000152 CDr00r00         [17]  383 	call	_SMS_VRAMmemcpy
      000155 C1               [10]  384 	pop	bc
                                    385 ;./lib/./sprite.c:46: offset = offset - 64; // voy al anterior tile
      000156 DD 7E FC         [19]  386 	ld	a, -4 (ix)
      000159 C6 C0            [ 7]  387 	add	a, #0xc0
      00015B DD 77 FC         [19]  388 	ld	-4 (ix), a
      00015E DD 7E FD         [19]  389 	ld	a, -3 (ix)
      000161 CE FF            [ 7]  390 	adc	a, #0xff
      000163 DD 77 FD         [19]  391 	ld	-3 (ix), a
                                    392 ;./lib/./sprite.c:47: yOffset = yOffset + 64;
      000166 21 40 00         [10]  393 	ld	hl, #0x0040
      000169 09               [11]  394 	add	hl, bc
      00016A 4D               [ 4]  395 	ld	c, l
      00016B 44               [ 4]  396 	ld	b, h
                                    397 ;./lib/./sprite.c:48: nextVRAMsprites += 2;
      00016C 2Ar00r00         [16]  398 	ld	hl, (_nextVRAMsprites)
      00016F 23               [ 6]  399 	inc	hl
      000170 23               [ 6]  400 	inc	hl
      000171 22r00r00         [16]  401 	ld	(_nextVRAMsprites), hl
                                    402 ;./lib/./sprite.c:49: x--;
      000174 DD 35 FE         [23]  403 	dec	-2 (ix)
      000177 18 83            [12]  404 	jr	00104$
      000179                        405 00124$:
      000179 59               [ 4]  406 	ld	e, c
      00017A 50               [ 4]  407 	ld	d, b
                                    408 ;./lib/./sprite.c:51: offset = yOffset;
                                    409 ;./lib/./sprite.c:52: y--;
      00017B DD 35 FB         [23]  410 	dec	-5 (ix)
      00017E C3rD5r00         [10]  411 	jp	00107$
      000181                        412 00109$:
                                    413 ;./lib/./sprite.c:54: numFrames--;
      000181 DD 35 FA         [23]  414 	dec	-6 (ix)
      000184 C3rC8r00         [10]  415 	jp	00110$
      000187                        416 00112$:
                                    417 ;./lib/./sprite.c:56: return sprite;
      000187 21 18 00         [10]  418 	ld	hl, #24
      00018A 39               [11]  419 	add	hl, sp
      00018B 5E               [ 7]  420 	ld	e, (hl)
      00018C 23               [ 6]  421 	inc	hl
      00018D 56               [ 7]  422 	ld	d, (hl)
      00018E 21 00 00         [10]  423 	ld	hl, #0
      000191 39               [11]  424 	add	hl, sp
      000192 01 0A 00         [10]  425 	ld	bc, #10
      000195 ED B0            [21]  426 	ldir
                                    427 ;./lib/./sprite.c:57: }
      000197 DD F9            [10]  428 	ld	sp, ix
      000199 DD E1            [14]  429 	pop	ix
      00019B C9               [10]  430 	ret
                                    431 ;./lib/./sprite.c:61: T_sprite generateSprite(unsigned char ancho, unsigned char alto, int tam,const unsigned char data[]) {
                                    432 ;	---------------------------------
                                    433 ; Function generateSprite
                                    434 ; ---------------------------------
      00019C                        435 _generateSprite::
      00019C DD E5            [15]  436 	push	ix
      00019E DD 21 00 00      [14]  437 	ld	ix,#0
      0001A2 DD 39            [15]  438 	add	ix,sp
      0001A4 FD 21 F6 FF      [14]  439 	ld	iy, #-10
      0001A8 FD 39            [15]  440 	add	iy, sp
      0001AA FD F9            [10]  441 	ld	sp, iy
      0001AC 5F               [ 4]  442 	ld	e, a
      0001AD 55               [ 4]  443 	ld	d, l
                                    444 ;./lib/./sprite.c:62: unsigned char tamano = alto*ancho*2;
      0001AE D5               [11]  445 	push	de
      0001AF 62               [ 4]  446 	ld	h, d
                                    447 ;	spillPairReg hl
                                    448 ;	spillPairReg hl
      0001B0 2E 00            [ 7]  449 	ld	l, #0x00
      0001B2 55               [ 4]  450 	ld	d, l
      0001B3 06 08            [ 7]  451 	ld	b, #0x08
      0001B5                        452 00103$:
      0001B5 29               [11]  453 	add	hl, hl
      0001B6 30 01            [12]  454 	jr	NC, 00104$
      0001B8 19               [11]  455 	add	hl, de
      0001B9                        456 00104$:
      0001B9 10 FA            [13]  457 	djnz	00103$
      0001BB D1               [10]  458 	pop	de
      0001BC 4D               [ 4]  459 	ld	c, l
      0001BD CB 21            [ 8]  460 	sla	c
                                    461 ;./lib/./sprite.c:63: T_sprite sprite = {alto,ancho,tamano,tam/(tamano*32),nextVRAMsprites, 1,0};
      0001BF DD 72 F6         [19]  462 	ld	-10 (ix), d
      0001C2 DD 73 F7         [19]  463 	ld	-9 (ix), e
      0001C5 DD 71 F8         [19]  464 	ld	-8 (ix), c
      0001C8 69               [ 4]  465 	ld	l, c
                                    466 ;	spillPairReg hl
                                    467 ;	spillPairReg hl
      0001C9 26 00            [ 7]  468 	ld	h, #0x00
                                    469 ;	spillPairReg hl
                                    470 ;	spillPairReg hl
      0001CB 29               [11]  471 	add	hl, hl
      0001CC 29               [11]  472 	add	hl, hl
      0001CD 29               [11]  473 	add	hl, hl
      0001CE 29               [11]  474 	add	hl, hl
      0001CF 29               [11]  475 	add	hl, hl
      0001D0 C5               [11]  476 	push	bc
      0001D1 EB               [ 4]  477 	ex	de, hl
      0001D2 DD 6E 06         [19]  478 	ld	l, 6 (ix)
                                    479 ;	spillPairReg hl
                                    480 ;	spillPairReg hl
      0001D5 DD 66 07         [19]  481 	ld	h, 7 (ix)
                                    482 ;	spillPairReg hl
                                    483 ;	spillPairReg hl
      0001D8 CDr00r00         [17]  484 	call	__divsint
      0001DB C1               [10]  485 	pop	bc
      0001DC DD 73 F9         [19]  486 	ld	-7 (ix), e
      0001DF 3Ar00r00         [13]  487 	ld	a, (_nextVRAMsprites+0)
      0001E2 DD 77 FA         [19]  488 	ld	-6 (ix), a
      0001E5 3Ar01r00         [13]  489 	ld	a, (_nextVRAMsprites+1)
      0001E8 DD 77 FB         [19]  490 	ld	-5 (ix), a
      0001EB DD 36 FC 01      [19]  491 	ld	-4 (ix), #0x01
      0001EF AF               [ 4]  492 	xor	a, a
      0001F0 DD 77 FD         [19]  493 	ld	-3 (ix), a
      0001F3 DD 77 FE         [19]  494 	ld	-2 (ix), a
      0001F6 DD 36 FF 00      [19]  495 	ld	-1 (ix), #0x00
                                    496 ;./lib/./sprite.c:64: SMS_loadTiles(data,nextVRAMsprites,tam);
      0001FA DD 5E 08         [19]  497 	ld	e, 8 (ix)
      0001FD DD 56 09         [19]  498 	ld	d, 9 (ix)
      000200 2Ar00r00         [16]  499 	ld	hl, (_nextVRAMsprites)
      000203 29               [11]  500 	add	hl, hl
      000204 29               [11]  501 	add	hl, hl
      000205 29               [11]  502 	add	hl, hl
      000206 29               [11]  503 	add	hl, hl
      000207 29               [11]  504 	add	hl, hl
      000208 CB F4            [ 8]  505 	set	6, h
      00020A C5               [11]  506 	push	bc
      00020B E5               [11]  507 	push	hl
      00020C DD 6E 06         [19]  508 	ld	l, 6 (ix)
                                    509 ;	spillPairReg hl
                                    510 ;	spillPairReg hl
      00020F DD 66 07         [19]  511 	ld	h, 7 (ix)
                                    512 ;	spillPairReg hl
                                    513 ;	spillPairReg hl
      000212 E3               [19]  514 	ex	(sp), hl
      000213 CDr00r00         [17]  515 	call	_SMS_VRAMmemcpy
      000216 C1               [10]  516 	pop	bc
                                    517 ;./lib/./sprite.c:65: nextVRAMsprites = nextVRAMsprites + (tamano*sprite.numFrames);
      000217 DD 5E F9         [19]  518 	ld	e, -7 (ix)
      00021A 61               [ 4]  519 	ld	h, c
                                    520 ;	spillPairReg hl
                                    521 ;	spillPairReg hl
      00021B 2E 00            [ 7]  522 	ld	l, #0x00
      00021D 55               [ 4]  523 	ld	d, l
      00021E 06 08            [ 7]  524 	ld	b, #0x08
      000220                        525 00105$:
      000220 29               [11]  526 	add	hl, hl
      000221 30 01            [12]  527 	jr	NC, 00106$
      000223 19               [11]  528 	add	hl, de
      000224                        529 00106$:
      000224 10 FA            [13]  530 	djnz	00105$
      000226 EB               [ 4]  531 	ex	de, hl
      000227 21r00r00         [10]  532 	ld	hl, #_nextVRAMsprites
      00022A 7E               [ 7]  533 	ld	a, (hl)
      00022B 83               [ 4]  534 	add	a, e
      00022C 77               [ 7]  535 	ld	(hl), a
      00022D 23               [ 6]  536 	inc	hl
      00022E 7E               [ 7]  537 	ld	a, (hl)
      00022F 8A               [ 4]  538 	adc	a, d
      000230 77               [ 7]  539 	ld	(hl), a
                                    540 ;./lib/./sprite.c:66: return sprite;
      000231 21 0E 00         [10]  541 	ld	hl, #14
      000234 39               [11]  542 	add	hl, sp
      000235 5E               [ 7]  543 	ld	e, (hl)
      000236 23               [ 6]  544 	inc	hl
      000237 56               [ 7]  545 	ld	d, (hl)
      000238 21 00 00         [10]  546 	ld	hl, #0
      00023B 39               [11]  547 	add	hl, sp
      00023C 01 0A 00         [10]  548 	ld	bc, #10
      00023F ED B0            [21]  549 	ldir
                                    550 ;./lib/./sprite.c:67: }
      000241 DD F9            [10]  551 	ld	sp, ix
      000243 DD E1            [14]  552 	pop	ix
      000245 C9               [10]  553 	ret
                                    554 ;./lib/./sprite.c:70: T_sprite generateSpriteNoRAM(unsigned char ancho, unsigned char alto, int tam,const unsigned char data[]) {
                                    555 ;	---------------------------------
                                    556 ; Function generateSpriteNoRAM
                                    557 ; ---------------------------------
      000246                        558 _generateSpriteNoRAM::
      000246 DD E5            [15]  559 	push	ix
      000248 DD 21 00 00      [14]  560 	ld	ix,#0
      00024C DD 39            [15]  561 	add	ix,sp
      00024E FD 21 F4 FF      [14]  562 	ld	iy, #-12
      000252 FD 39            [15]  563 	add	iy, sp
      000254 FD F9            [10]  564 	ld	sp, iy
      000256 5F               [ 4]  565 	ld	e, a
      000257 55               [ 4]  566 	ld	d, l
                                    567 ;./lib/./sprite.c:71: unsigned char tamano = alto*ancho*2;
      000258 D5               [11]  568 	push	de
      000259 62               [ 4]  569 	ld	h, d
                                    570 ;	spillPairReg hl
                                    571 ;	spillPairReg hl
      00025A 2E 00            [ 7]  572 	ld	l, #0x00
      00025C 55               [ 4]  573 	ld	d, l
      00025D 06 08            [ 7]  574 	ld	b, #0x08
      00025F                        575 00103$:
      00025F 29               [11]  576 	add	hl, hl
      000260 30 01            [12]  577 	jr	NC, 00104$
      000262 19               [11]  578 	add	hl, de
      000263                        579 00104$:
      000263 10 FA            [13]  580 	djnz	00103$
      000265 D1               [10]  581 	pop	de
      000266 4D               [ 4]  582 	ld	c, l
      000267 CB 21            [ 8]  583 	sla	c
                                    584 ;./lib/./sprite.c:72: T_sprite sprite = {alto,ancho,tamano,tam/(tamano*32),nextVRAMsprites, 0,0};
      000269 DD 72 F4         [19]  585 	ld	-12 (ix), d
      00026C DD 73 F5         [19]  586 	ld	-11 (ix), e
      00026F DD 71 F6         [19]  587 	ld	-10 (ix), c
                                    588 ;	spillPairReg hl
                                    589 ;	spillPairReg hl
      000272 DD 71 FE         [19]  590 	ld	-2 (ix), c
      000275 DD 36 FF 00      [19]  591 	ld	-1 (ix), #0x00
      000279 69               [ 4]  592 	ld	l, c
      00027A 26 00            [ 7]  593 	ld	h, #0x00
                                    594 ;	spillPairReg hl
                                    595 ;	spillPairReg hl
      00027C 29               [11]  596 	add	hl, hl
      00027D 29               [11]  597 	add	hl, hl
      00027E 29               [11]  598 	add	hl, hl
      00027F 29               [11]  599 	add	hl, hl
      000280 29               [11]  600 	add	hl, hl
      000281 EB               [ 4]  601 	ex	de,hl
      000282 D5               [11]  602 	push	de
      000283 DD 6E 06         [19]  603 	ld	l, 6 (ix)
                                    604 ;	spillPairReg hl
                                    605 ;	spillPairReg hl
      000286 DD 66 07         [19]  606 	ld	h, 7 (ix)
                                    607 ;	spillPairReg hl
                                    608 ;	spillPairReg hl
      000289 CDr00r00         [17]  609 	call	__divsint
      00028C EB               [ 4]  610 	ex	de, hl
      00028D D1               [10]  611 	pop	de
      00028E DD 75 F7         [19]  612 	ld	-9 (ix), l
      000291 3Ar00r00         [13]  613 	ld	a, (_nextVRAMsprites+0)
      000294 DD 77 F8         [19]  614 	ld	-8 (ix), a
      000297 3Ar01r00         [13]  615 	ld	a, (_nextVRAMsprites+1)
      00029A DD 77 F9         [19]  616 	ld	-7 (ix), a
      00029D DD 36 FA 00      [19]  617 	ld	-6 (ix), #0x00
      0002A1 AF               [ 4]  618 	xor	a, a
      0002A2 DD 77 FB         [19]  619 	ld	-5 (ix), a
      0002A5 DD 77 FC         [19]  620 	ld	-4 (ix), a
      0002A8 DD 36 FD 00      [19]  621 	ld	-3 (ix), #0x00
                                    622 ;./lib/./sprite.c:73: sprite.data = data;
      0002AC DD 7E 08         [19]  623 	ld	a, 8 (ix)
      0002AF DD 77 FB         [19]  624 	ld	-5 (ix), a
      0002B2 DD 7E 09         [19]  625 	ld	a, 9 (ix)
      0002B5 DD 77 FC         [19]  626 	ld	-4 (ix), a
                                    627 ;./lib/./sprite.c:74: sprite.frameInVRAM = 0;
      0002B8 DD 36 FD 00      [19]  628 	ld	-3 (ix), #0x00
                                    629 ;./lib/./sprite.c:75: SMS_loadTiles(data,nextVRAMsprites,tamano*32);
      0002BC DD 4E 08         [19]  630 	ld	c, 8 (ix)
      0002BF DD 46 09         [19]  631 	ld	b, 9 (ix)
      0002C2 2Ar00r00         [16]  632 	ld	hl, (_nextVRAMsprites)
      0002C5 29               [11]  633 	add	hl, hl
      0002C6 29               [11]  634 	add	hl, hl
      0002C7 29               [11]  635 	add	hl, hl
      0002C8 29               [11]  636 	add	hl, hl
      0002C9 29               [11]  637 	add	hl, hl
      0002CA CB F4            [ 8]  638 	set	6, h
      0002CC D5               [11]  639 	push	de
      0002CD 59               [ 4]  640 	ld	e, c
      0002CE 50               [ 4]  641 	ld	d, b
      0002CF CDr00r00         [17]  642 	call	_SMS_VRAMmemcpy
                                    643 ;./lib/./sprite.c:76: nextVRAMsprites = nextVRAMsprites + (tamano);
      0002D2 21r00r00         [10]  644 	ld	hl, #_nextVRAMsprites
      0002D5 7E               [ 7]  645 	ld	a, (hl)
      0002D6 DD 86 FE         [19]  646 	add	a, -2 (ix)
      0002D9 77               [ 7]  647 	ld	(hl), a
      0002DA 23               [ 6]  648 	inc	hl
      0002DB 7E               [ 7]  649 	ld	a, (hl)
      0002DC DD 8E FF         [19]  650 	adc	a, -1 (ix)
      0002DF 77               [ 7]  651 	ld	(hl), a
                                    652 ;./lib/./sprite.c:77: return sprite;
      0002E0 21 10 00         [10]  653 	ld	hl, #16
      0002E3 39               [11]  654 	add	hl, sp
      0002E4 5E               [ 7]  655 	ld	e, (hl)
      0002E5 23               [ 6]  656 	inc	hl
      0002E6 56               [ 7]  657 	ld	d, (hl)
      0002E7 21 00 00         [10]  658 	ld	hl, #0
      0002EA 39               [11]  659 	add	hl, sp
      0002EB 01 0A 00         [10]  660 	ld	bc, #10
      0002EE ED B0            [21]  661 	ldir
                                    662 ;./lib/./sprite.c:78: }
      0002F0 DD F9            [10]  663 	ld	sp, ix
      0002F2 DD E1            [14]  664 	pop	ix
      0002F4 C9               [10]  665 	ret
                                    666 ;./lib/./sprite.c:89: unsigned int addHardwareSprite(unsigned int x,unsigned int y,unsigned int vx,unsigned int vy,unsigned int lx,
                                    667 ;	---------------------------------
                                    668 ; Function addHardwareSprite
                                    669 ; ---------------------------------
      0002F5                        670 _addHardwareSprite::
      0002F5 DD E5            [15]  671 	push	ix
      0002F7 DD 21 00 00      [14]  672 	ld	ix,#0
      0002FB DD 39            [15]  673 	add	ix,sp
      0002FD FD 21 EA FF      [14]  674 	ld	iy, #-22
      000301 FD 39            [15]  675 	add	iy, sp
      000303 FD F9            [10]  676 	ld	sp, iy
      000305 DD 75 F4         [19]  677 	ld	-12 (ix), l
      000308 DD 74 F5         [19]  678 	ld	-11 (ix), h
      00030B DD 73 F2         [19]  679 	ld	-14 (ix), e
      00030E DD 72 F3         [19]  680 	ld	-13 (ix), d
                                    681 ;./lib/./sprite.c:91: unsigned int i = MAX_HARDWARE_SPRITES;
      000311 21 40 00         [10]  682 	ld	hl, #0x0040
      000314 E3               [19]  683 	ex	(sp), hl
                                    684 ;./lib/./sprite.c:92: while (i) {
      000315 DD 36 FE 40      [19]  685 	ld	-2 (ix), #0x40
      000319 DD 36 FF 00      [19]  686 	ld	-1 (ix), #0
      00031D                        687 00109$:
      00031D DD 7E FF         [19]  688 	ld	a, -1 (ix)
      000320 DD B6 FE         [19]  689 	or	a, -2 (ix)
      000323 CAr6Cr05         [10]  690 	jp	Z, 00111$
                                    691 ;./lib/./sprite.c:93: if (!hardwareSprites[i].len) {
      000326 DD 4E FE         [19]  692 	ld	c, -2 (ix)
      000329 DD 46 FF         [19]  693 	ld	b, -1 (ix)
      00032C 69               [ 4]  694 	ld	l, c
      00032D 60               [ 4]  695 	ld	h, b
      00032E 29               [11]  696 	add	hl, hl
      00032F 09               [11]  697 	add	hl, bc
      000330 29               [11]  698 	add	hl, hl
      000331 29               [11]  699 	add	hl, hl
      000332 DD 75 FC         [19]  700 	ld	-4 (ix), l
      000335 DD 74 FD         [19]  701 	ld	-3 (ix), h
      000338 3Er40            [ 7]  702 	ld	a, #<(_hardwareSprites)
      00033A DD 86 FC         [19]  703 	add	a, -4 (ix)
      00033D DD 77 FA         [19]  704 	ld	-6 (ix), a
      000340 3Es00            [ 7]  705 	ld	a, #>(_hardwareSprites)
      000342 DD 8E FD         [19]  706 	adc	a, -3 (ix)
      000345 DD 77 FB         [19]  707 	ld	-5 (ix), a
      000348 DD 7E FA         [19]  708 	ld	a, -6 (ix)
      00034B DD 77 FC         [19]  709 	ld	-4 (ix), a
      00034E DD 7E FB         [19]  710 	ld	a, -5 (ix)
      000351 DD 77 FD         [19]  711 	ld	-3 (ix), a
      000354 DD 6E FC         [19]  712 	ld	l, -4 (ix)
      000357 DD 66 FD         [19]  713 	ld	h, -3 (ix)
      00035A 11 0A 00         [10]  714 	ld	de, #0x000a
      00035D 19               [11]  715 	add	hl, de
      00035E 7E               [ 7]  716 	ld	a, (hl)
      00035F DD 77 FC         [19]  717 	ld	-4 (ix), a
      000362 23               [ 6]  718 	inc	hl
      000363 7E               [ 7]  719 	ld	a, (hl)
      000364 DD 77 FD         [19]  720 	ld	-3 (ix), a
      000367 DD B6 FC         [19]  721 	or	a, -4 (ix)
      00036A C2r50r05         [10]  722 	jp	NZ, 00108$
                                    723 ;./lib/./sprite.c:94: T_HardwareSprite *p = &hardwareSprites[i]; 
      00036D DD 7E FA         [19]  724 	ld	a, -6 (ix)
      000370 DD 77 FE         [19]  725 	ld	-2 (ix), a
      000373 DD 7E FB         [19]  726 	ld	a, -5 (ix)
      000376 DD 77 FF         [19]  727 	ld	-1 (ix), a
      000379 DD 7E FE         [19]  728 	ld	a, -2 (ix)
      00037C DD 77 EC         [19]  729 	ld	-20 (ix), a
      00037F DD 7E FF         [19]  730 	ld	a, -1 (ix)
      000382 DD 77 ED         [19]  731 	ld	-19 (ix), a
                                    732 ;./lib/./sprite.c:95: p->x = x;
      000385 DD 7E EC         [19]  733 	ld	a, -20 (ix)
      000388 C6 04            [ 7]  734 	add	a, #0x04
      00038A DD 77 FE         [19]  735 	ld	-2 (ix), a
      00038D DD 7E ED         [19]  736 	ld	a, -19 (ix)
      000390 CE 00            [ 7]  737 	adc	a, #0x00
      000392 DD 77 FF         [19]  738 	ld	-1 (ix), a
      000395 DD 6E FE         [19]  739 	ld	l, -2 (ix)
      000398 DD 66 FF         [19]  740 	ld	h, -1 (ix)
      00039B DD 7E F4         [19]  741 	ld	a, -12 (ix)
      00039E 77               [ 7]  742 	ld	(hl), a
      00039F 23               [ 6]  743 	inc	hl
      0003A0 DD 7E F5         [19]  744 	ld	a, -11 (ix)
      0003A3 77               [ 7]  745 	ld	(hl), a
                                    746 ;./lib/./sprite.c:96: p->y = y;
      0003A4 D1               [10]  747 	pop	de
      0003A5 E1               [10]  748 	pop	hl
      0003A6 E5               [11]  749 	push	hl
      0003A7 D5               [11]  750 	push	de
      0003A8 11 06 00         [10]  751 	ld	de, #0x0006
      0003AB 19               [11]  752 	add	hl, de
      0003AC DD 7E F2         [19]  753 	ld	a, -14 (ix)
      0003AF 77               [ 7]  754 	ld	(hl), a
      0003B0 23               [ 6]  755 	inc	hl
      0003B1 DD 7E F3         [19]  756 	ld	a, -13 (ix)
      0003B4 77               [ 7]  757 	ld	(hl), a
                                    758 ;./lib/./sprite.c:97: p->vx = vx;
      0003B5 C1               [10]  759 	pop	bc
      0003B6 E1               [10]  760 	pop	hl
      0003B7 E5               [11]  761 	push	hl
      0003B8 C5               [11]  762 	push	bc
      0003B9 DD 7E 04         [19]  763 	ld	a, 4 (ix)
      0003BC 77               [ 7]  764 	ld	(hl), a
      0003BD 23               [ 6]  765 	inc	hl
      0003BE DD 7E 05         [19]  766 	ld	a, 5 (ix)
      0003C1 77               [ 7]  767 	ld	(hl), a
                                    768 ;./lib/./sprite.c:98: p->vy = vy;
      0003C2 E1               [10]  769 	pop	hl
      0003C3 C1               [10]  770 	pop	bc
      0003C4 C5               [11]  771 	push	bc
      0003C5 E5               [11]  772 	push	hl
      0003C6 03               [ 6]  773 	inc	bc
      0003C7 03               [ 6]  774 	inc	bc
      0003C8 DD 7E 06         [19]  775 	ld	a, 6 (ix)
      0003CB 02               [ 7]  776 	ld	(bc), a
      0003CC 03               [ 6]  777 	inc	bc
      0003CD DD 7E 07         [19]  778 	ld	a, 7 (ix)
      0003D0 02               [ 7]  779 	ld	(bc), a
                                    780 ;./lib/./sprite.c:99: unsigned int iTile = 0;
      0003D1 AF               [ 4]  781 	xor	a, a
      0003D2 DD 77 FE         [19]  782 	ld	-2 (ix), a
      0003D5 DD 77 FF         [19]  783 	ld	-1 (ix), a
                                    784 ;./lib/./sprite.c:100: for (int iy=0;iy<ly;iy++) {
      0003D8 DD 7E F2         [19]  785 	ld	a, -14 (ix)
      0003DB DD 77 F6         [19]  786 	ld	-10 (ix), a
      0003DE DD 7E F3         [19]  787 	ld	a, -13 (ix)
      0003E1 DD 77 F7         [19]  788 	ld	-9 (ix), a
      0003E4 AF               [ 4]  789 	xor	a, a
      0003E5 DD 77 F8         [19]  790 	ld	-8 (ix), a
      0003E8 DD 77 F9         [19]  791 	ld	-7 (ix), a
      0003EB                        792 00116$:
      0003EB DD 7E F8         [19]  793 	ld	a, -8 (ix)
      0003EE DD 77 FC         [19]  794 	ld	-4 (ix), a
      0003F1 DD 7E F9         [19]  795 	ld	a, -7 (ix)
      0003F4 DD 77 FD         [19]  796 	ld	-3 (ix), a
                                    797 ;./lib/./sprite.c:103: p->initSprite = SMS_addSprite(x,y, tiles[iTile]);
      0003F7 DD 7E EC         [19]  798 	ld	a, -20 (ix)
      0003FA C6 08            [ 7]  799 	add	a, #0x08
      0003FC DD 77 EE         [19]  800 	ld	-18 (ix), a
      0003FF DD 7E ED         [19]  801 	ld	a, -19 (ix)
      000402 CE 00            [ 7]  802 	adc	a, #0x00
      000404 DD 77 EF         [19]  803 	ld	-17 (ix), a
                                    804 ;./lib/./sprite.c:100: for (int iy=0;iy<ly;iy++) {
      000407 DD 7E FC         [19]  805 	ld	a, -4 (ix)
      00040A DD 96 0A         [19]  806 	sub	a, 10 (ix)
      00040D DD 7E FD         [19]  807 	ld	a, -3 (ix)
      000410 DD 9E 0B         [19]  808 	sbc	a, 11 (ix)
      000413 D2rF7r04         [10]  809 	jp	NC, 00106$
                                    810 ;./lib/./sprite.c:101: for (int ix=0;ix<lx;ix++){
      000416 DD 7E FE         [19]  811 	ld	a, -2 (ix)
      000419 DD 77 FA         [19]  812 	ld	-6 (ix), a
      00041C DD 7E FF         [19]  813 	ld	a, -1 (ix)
      00041F DD 77 FB         [19]  814 	ld	-5 (ix), a
      000422 DD 7E F4         [19]  815 	ld	a, -12 (ix)
      000425 DD 77 FC         [19]  816 	ld	-4 (ix), a
      000428 DD 7E F5         [19]  817 	ld	a, -11 (ix)
      00042B DD 77 FD         [19]  818 	ld	-3 (ix), a
      00042E AF               [ 4]  819 	xor	a, a
      00042F DD 77 FE         [19]  820 	ld	-2 (ix), a
      000432 DD 77 FF         [19]  821 	ld	-1 (ix), a
      000435                        822 00113$:
      000435 DD 7E FE         [19]  823 	ld	a, -2 (ix)
      000438 DD 77 F0         [19]  824 	ld	-16 (ix), a
      00043B DD 7E FF         [19]  825 	ld	a, -1 (ix)
      00043E DD 77 F1         [19]  826 	ld	-15 (ix), a
      000441 DD 7E F0         [19]  827 	ld	a, -16 (ix)
      000444 DD 96 08         [19]  828 	sub	a, 8 (ix)
      000447 DD 7E F1         [19]  829 	ld	a, -15 (ix)
      00044A DD 9E 09         [19]  830 	sbc	a, 9 (ix)
      00044D 30 77            [12]  831 	jr	NC, 00129$
                                    832 ;./lib/./sprite.c:103: p->initSprite = SMS_addSprite(x,y, tiles[iTile]);
      00044F DD 46 FC         [19]  833 	ld	b, -4 (ix)
      000452 DD 6E FA         [19]  834 	ld	l, -6 (ix)
                                    835 ;	spillPairReg hl
                                    836 ;	spillPairReg hl
      000455 DD 66 FB         [19]  837 	ld	h, -5 (ix)
                                    838 ;	spillPairReg hl
                                    839 ;	spillPairReg hl
      000458 29               [11]  840 	add	hl, hl
      000459 EB               [ 4]  841 	ex	de,hl
      00045A DD 6E 0C         [19]  842 	ld	l, 12 (ix)
                                    843 ;	spillPairReg hl
                                    844 ;	spillPairReg hl
      00045D DD 66 0D         [19]  845 	ld	h, 13 (ix)
                                    846 ;	spillPairReg hl
                                    847 ;	spillPairReg hl
      000460 19               [11]  848 	add	hl, de
      000461 5E               [ 7]  849 	ld	e, (hl)
      000462 DD 73 F0         [19]  850 	ld	-16 (ix), e
      000465 DD 70 F1         [19]  851 	ld	-15 (ix), b
                                    852 ;./lib/./sprite.c:102: if(ix==0 && iy == 0) {
      000468 DD 7E FF         [19]  853 	ld	a, -1 (ix)
      00046B DD B6 FE         [19]  854 	or	a, -2 (ix)
      00046E 20 26            [12]  855 	jr	NZ, 00102$
      000470 DD 7E F9         [19]  856 	ld	a, -7 (ix)
      000473 DD B6 F8         [19]  857 	or	a, -8 (ix)
      000476 20 1E            [12]  858 	jr	NZ, 00102$
                                    859 ;./lib/./sprite.c:103: p->initSprite = SMS_addSprite(x,y, tiles[iTile]);
      000478 DD 5E F0         [19]  860 	ld	e, -16 (ix)
      00047B DD 56 F1         [19]  861 	ld	d, -15 (ix)
      00047E DD 6E F6         [19]  862 	ld	l, -10 (ix)
                                    863 ;	spillPairReg hl
                                    864 ;	spillPairReg hl
      000481 DD 66 F7         [19]  865 	ld	h, -9 (ix)
                                    866 ;	spillPairReg hl
                                    867 ;	spillPairReg hl
      000484 CDr00r00         [17]  868 	call	_SMS_addSprite_f
      000487 4F               [ 4]  869 	ld	c, a
      000488 07               [ 4]  870 	rlca
      000489 9F               [ 4]  871 	sbc	a, a
      00048A 47               [ 4]  872 	ld	b, a
      00048B DD 6E EE         [19]  873 	ld	l, -18 (ix)
      00048E DD 66 EF         [19]  874 	ld	h, -17 (ix)
      000491 71               [ 7]  875 	ld	(hl), c
      000492 23               [ 6]  876 	inc	hl
      000493 70               [ 7]  877 	ld	(hl), b
      000494 18 0F            [12]  878 	jr	00103$
      000496                        879 00102$:
                                    880 ;./lib/./sprite.c:106: SMS_addSprite(x,y, tiles[iTile]);
      000496 DD 5E F0         [19]  881 	ld	e, -16 (ix)
      000499 DD 56 F1         [19]  882 	ld	d, -15 (ix)
      00049C DD 6E F6         [19]  883 	ld	l, -10 (ix)
                                    884 ;	spillPairReg hl
                                    885 ;	spillPairReg hl
      00049F DD 66 F7         [19]  886 	ld	h, -9 (ix)
                                    887 ;	spillPairReg hl
                                    888 ;	spillPairReg hl
      0004A2 CDr00r00         [17]  889 	call	_SMS_addSprite_f
      0004A5                        890 00103$:
                                    891 ;./lib/./sprite.c:108: iTile++;
      0004A5 DD 34 FA         [23]  892 	inc	-6 (ix)
      0004A8 20 03            [12]  893 	jr	NZ, 00185$
      0004AA DD 34 FB         [23]  894 	inc	-5 (ix)
      0004AD                        895 00185$:
                                    896 ;./lib/./sprite.c:109: x += 8;
      0004AD DD 7E FC         [19]  897 	ld	a, -4 (ix)
      0004B0 C6 08            [ 7]  898 	add	a, #0x08
      0004B2 DD 77 FC         [19]  899 	ld	-4 (ix), a
      0004B5 30 03            [12]  900 	jr	NC, 00186$
      0004B7 DD 34 FD         [23]  901 	inc	-3 (ix)
      0004BA                        902 00186$:
                                    903 ;./lib/./sprite.c:101: for (int ix=0;ix<lx;ix++){
      0004BA DD 34 FE         [23]  904 	inc	-2 (ix)
      0004BD C2r35r04         [10]  905 	jp	NZ,00113$
      0004C0 DD 34 FF         [23]  906 	inc	-1 (ix)
      0004C3 C3r35r04         [10]  907 	jp	00113$
      0004C6                        908 00129$:
      0004C6 DD 7E FA         [19]  909 	ld	a, -6 (ix)
      0004C9 DD 77 FE         [19]  910 	ld	-2 (ix), a
      0004CC DD 7E FB         [19]  911 	ld	a, -5 (ix)
      0004CF DD 77 FF         [19]  912 	ld	-1 (ix), a
      0004D2 DD 7E FC         [19]  913 	ld	a, -4 (ix)
      0004D5 DD 77 F4         [19]  914 	ld	-12 (ix), a
      0004D8 DD 7E FD         [19]  915 	ld	a, -3 (ix)
      0004DB DD 77 F5         [19]  916 	ld	-11 (ix), a
                                    917 ;./lib/./sprite.c:111: y += 16;
      0004DE DD 7E F6         [19]  918 	ld	a, -10 (ix)
      0004E1 C6 10            [ 7]  919 	add	a, #0x10
      0004E3 DD 77 F6         [19]  920 	ld	-10 (ix), a
      0004E6 30 03            [12]  921 	jr	NC, 00188$
      0004E8 DD 34 F7         [23]  922 	inc	-9 (ix)
      0004EB                        923 00188$:
                                    924 ;./lib/./sprite.c:100: for (int iy=0;iy<ly;iy++) {
      0004EB DD 34 F8         [23]  925 	inc	-8 (ix)
      0004EE C2rEBr03         [10]  926 	jp	NZ,00116$
      0004F1 DD 34 F9         [23]  927 	inc	-7 (ix)
      0004F4 C3rEBr03         [10]  928 	jp	00116$
      0004F7                        929 00106$:
                                    930 ;./lib/./sprite.c:113: p->len = p->initSprite + lx*ly;
      0004F7 DD 7E EC         [19]  931 	ld	a, -20 (ix)
      0004FA C6 0A            [ 7]  932 	add	a, #0x0a
      0004FC DD 77 FE         [19]  933 	ld	-2 (ix), a
      0004FF DD 7E ED         [19]  934 	ld	a, -19 (ix)
      000502 CE 00            [ 7]  935 	adc	a, #0x00
      000504 DD 77 FF         [19]  936 	ld	-1 (ix), a
      000507 DD 6E EE         [19]  937 	ld	l, -18 (ix)
      00050A DD 66 EF         [19]  938 	ld	h, -17 (ix)
      00050D 7E               [ 7]  939 	ld	a, (hl)
      00050E DD 77 FC         [19]  940 	ld	-4 (ix), a
      000511 23               [ 6]  941 	inc	hl
      000512 7E               [ 7]  942 	ld	a, (hl)
      000513 DD 77 FD         [19]  943 	ld	-3 (ix), a
      000516 DD 5E 0A         [19]  944 	ld	e, 10 (ix)
      000519 DD 56 0B         [19]  945 	ld	d, 11 (ix)
      00051C DD 6E 08         [19]  946 	ld	l, 8 (ix)
                                    947 ;	spillPairReg hl
                                    948 ;	spillPairReg hl
      00051F DD 66 09         [19]  949 	ld	h, 9 (ix)
                                    950 ;	spillPairReg hl
                                    951 ;	spillPairReg hl
      000522 CDr00r00         [17]  952 	call	__mulint
      000525 DD 73 F8         [19]  953 	ld	-8 (ix), e
      000528 DD 72 F9         [19]  954 	ld	-7 (ix), d
      00052B DD 7E F8         [19]  955 	ld	a, -8 (ix)
      00052E DD 86 FC         [19]  956 	add	a, -4 (ix)
      000531 DD 77 FA         [19]  957 	ld	-6 (ix), a
      000534 DD 7E F9         [19]  958 	ld	a, -7 (ix)
      000537 DD 8E FD         [19]  959 	adc	a, -3 (ix)
      00053A DD 77 FB         [19]  960 	ld	-5 (ix), a
      00053D DD 6E FE         [19]  961 	ld	l, -2 (ix)
      000540 DD 66 FF         [19]  962 	ld	h, -1 (ix)
      000543 DD 7E FA         [19]  963 	ld	a, -6 (ix)
      000546 77               [ 7]  964 	ld	(hl), a
      000547 23               [ 6]  965 	inc	hl
      000548 DD 7E FB         [19]  966 	ld	a, -5 (ix)
      00054B 77               [ 7]  967 	ld	(hl), a
                                    968 ;./lib/./sprite.c:114: return i;
      00054C D1               [10]  969 	pop	de
      00054D D5               [11]  970 	push	de
      00054E 18 1E            [12]  971 	jr	00118$
      000550                        972 00108$:
                                    973 ;./lib/./sprite.c:116: i--;
      000550 DD 6E FE         [19]  974 	ld	l, -2 (ix)
      000553 DD 66 FF         [19]  975 	ld	h, -1 (ix)
      000556 2B               [ 6]  976 	dec	hl
      000557 DD 75 FE         [19]  977 	ld	-2 (ix), l
      00055A DD 74 FF         [19]  978 	ld	-1 (ix), h
      00055D DD 7E FE         [19]  979 	ld	a, -2 (ix)
      000560 DD 77 EA         [19]  980 	ld	-22 (ix), a
      000563 DD 7E FF         [19]  981 	ld	a, -1 (ix)
      000566 DD 77 EB         [19]  982 	ld	-21 (ix), a
      000569 C3r1Dr03         [10]  983 	jp	00109$
      00056C                        984 00111$:
                                    985 ;./lib/./sprite.c:118: return i;
      00056C D1               [10]  986 	pop	de
      00056D D5               [11]  987 	push	de
      00056E                        988 00118$:
                                    989 ;./lib/./sprite.c:119: }
      00056E DD F9            [10]  990 	ld	sp, ix
      000570 DD E1            [14]  991 	pop	ix
      000572 E1               [10]  992 	pop	hl
      000573 F1               [10]  993 	pop	af
      000574 F1               [10]  994 	pop	af
      000575 F1               [10]  995 	pop	af
      000576 F1               [10]  996 	pop	af
      000577 F1               [10]  997 	pop	af
      000578 E9               [ 4]  998 	jp	(hl)
                                    999 ;./lib/./sprite.c:131: void initSpritesVariables (void) {
                                   1000 ;	---------------------------------
                                   1001 ; Function initSpritesVariables
                                   1002 ; ---------------------------------
      000579                       1003 _initSpritesVariables::
                                   1004 ;./lib/./sprite.c:133: while (i) {
      000579 01 40 00         [10] 1005 	ld	bc, #0x0040
      00057C                       1006 00101$:
      00057C 78               [ 4] 1007 	ld	a, b
      00057D B1               [ 4] 1008 	or	a, c
      00057E 28 15            [12] 1009 	jr	Z, 00103$
                                   1010 ;./lib/./sprite.c:134: hardwareSprites[i].len = 0;
      000580 69               [ 4] 1011 	ld	l, c
      000581 60               [ 4] 1012 	ld	h, b
      000582 29               [11] 1013 	add	hl, hl
      000583 09               [11] 1014 	add	hl, bc
      000584 29               [11] 1015 	add	hl, hl
      000585 29               [11] 1016 	add	hl, hl
      000586 11r40r00         [10] 1017 	ld	de, #_hardwareSprites
      000589 19               [11] 1018 	add	hl, de
      00058A 11 0A 00         [10] 1019 	ld	de, #0x000a
      00058D 19               [11] 1020 	add	hl, de
      00058E AF               [ 4] 1021 	xor	a, a
      00058F 77               [ 7] 1022 	ld	(hl), a
      000590 23               [ 6] 1023 	inc	hl
      000591 77               [ 7] 1024 	ld	(hl), a
                                   1025 ;./lib/./sprite.c:135: i--;
      000592 0B               [ 6] 1026 	dec	bc
      000593 18 E7            [12] 1027 	jr	00101$
      000595                       1028 00103$:
                                   1029 ;./lib/./sprite.c:148: __endasm;
      000595 21r00r00         [10] 1030 	ld	hl, #_SpriteNextFree
      000598 22r44r03         [16] 1031 	ld	(#_SpriteNextFree2), hl
      00059B 21r00r00         [10] 1032 	ld	hl, #_SpriteTableY
      00059E 22r40r03         [16] 1033 	ld	(#_SpriteTableY2), hl
      0005A1 21r00r00         [10] 1034 	ld	hl, #_SpriteTableXN
      0005A4 22r42r03         [16] 1035 	ld	(#_SpriteTableXN2), hl
                                   1036 ;./lib/./sprite.c:151: }
      0005A7 C9               [10] 1037 	ret
                                   1038 ;./lib/./sprite.c:168: void copySpritestoSAT (void) {
                                   1039 ;	---------------------------------
                                   1040 ; Function copySpritestoSAT
                                   1041 ; ---------------------------------
      0005A8                       1042 _copySpritestoSAT::
                                   1043 ;./lib/./sprite.c:169: SMS_setAddr(SMS_SATAddress);
      0005A8 21 00 7F         [10] 1044 	ld	hl, #0x7f00
      0005AB CF               [11] 1045 	rst	#0x08
                                   1046 ;./lib/./sprite.c:185: __endasm;
      0005AC 3Ar00r00         [13] 1047 	ld	a,(#_SpriteNextFree)
      0005AF B7               [ 4] 1048 	or	a
      0005B0 28 25            [12] 1049 	jr	z,_no_sprites
      0005B2 47               [ 4] 1050 	ld	b,a
      0005B3 0E BE            [ 7] 1051 	ld	c,#_VDPDataPort
      0005B5 21r00r00         [10] 1052 	ld	hl,#_SpriteTableY
      0005B8                       1053 _next_spriteY:
      0005B8 ED A3            [16] 1054 	outi	; 16 cycles
      0005BA 20 FC            [12] 1055 	jr	nz,_next_spriteY ; 12 cycles = 28 (VRAM safe on GG too)
      0005BC FE 40            [ 7] 1056 	cp	#64 ; 7 cycles
      0005BE 28 04            [12] 1057 	jr	z,_no_sprite_term ; 7 cycles
      0005C0 3E D0            [ 7] 1058 	ld	a,#0xD0 ; 7 cycles => VRAM safe
      0005C2 ED 79            [12] 1059 	out	(c),a
      0005C4                       1060 _no_sprite_term:
                                   1061 ;./lib/./sprite.c:186: SMS_setAddr(SMS_SATAddress+128);
      0005C4 21 80 7F         [10] 1062 	ld	hl, #0x7f80
      0005C7 CF               [11] 1063 	rst	#0x08
                                   1064 ;./lib/./sprite.c:201: __endasm;
      0005C8 0E BE            [ 7] 1065 	ld	c,#_VDPDataPort
      0005CA 3Ar00r00         [13] 1066 	ld	a,(#_SpriteNextFree)
      0005CD 87               [ 4] 1067 	add	a,a
      0005CE 47               [ 4] 1068 	ld	b,a
      0005CF 21r00r00         [10] 1069 	ld	hl,#_SpriteTableXN
      0005D2                       1070 _next_spriteXN:
      0005D2 ED A3            [16] 1071 	outi	; 16 cycles
      0005D4 20 FC            [12] 1072 	jr	nz,_next_spriteXN ; 12 cycles = 28 (VRAM safe on GG too)
      0005D6 C9               [10] 1073 	ret
      0005D7                       1074 _no_sprites:
      0005D7 3E D0            [ 7] 1075 	ld	a,#0xD0
      0005D9 D3 BE            [11] 1076 	out	(#_VDPDataPort),a
                                   1077 ;./lib/./sprite.c:202: }
      0005DB C9               [10] 1078 	ret
                                   1079 ;./lib/entities.c:13: void draw_entidad(T_entidad *entidad, T_sprite *sprite){
                                   1080 ;	---------------------------------
                                   1081 ; Function draw_entidad
                                   1082 ; ---------------------------------
      0005DC                       1083 _draw_entidad::
      0005DC DD E5            [15] 1084 	push	ix
      0005DE DD 21 00 00      [14] 1085 	ld	ix,#0
      0005E2 DD 39            [15] 1086 	add	ix,sp
      0005E4 FD 21 E3 FF      [14] 1087 	ld	iy, #-29
      0005E8 FD 39            [15] 1088 	add	iy, sp
      0005EA FD F9            [10] 1089 	ld	sp, iy
      0005EC DD 75 FC         [19] 1090 	ld	-4 (ix), l
      0005EF DD 74 FD         [19] 1091 	ld	-3 (ix), h
                                   1092 ;./lib/entities.c:15: if (sprite->allInRAM == 1){
      0005F2 DD 73 FA         [19] 1093 	ld	-6 (ix), e
      0005F5 DD 72 FB         [19] 1094 	ld	-5 (ix), d
      0005F8 4B               [ 4] 1095 	ld	c, e
      0005F9 42               [ 4] 1096 	ld	b, d
      0005FA 21 06 00         [10] 1097 	ld	hl, #6
      0005FD 09               [11] 1098 	add	hl, bc
      0005FE 4E               [ 7] 1099 	ld	c, (hl)
                                   1100 ;./lib/entities.c:16: if (entidad->initSprite == 255) {
      0005FF DD 7E FC         [19] 1101 	ld	a, -4 (ix)
      000602 C6 06            [ 7] 1102 	add	a, #0x06
      000604 DD 77 F2         [19] 1103 	ld	-14 (ix), a
      000607 DD 7E FD         [19] 1104 	ld	a, -3 (ix)
      00060A CE 00            [ 7] 1105 	adc	a, #0x00
      00060C DD 77 F3         [19] 1106 	ld	-13 (ix), a
      00060F DD 6E F2         [19] 1107 	ld	l, -14 (ix)
      000612 DD 66 F3         [19] 1108 	ld	h, -13 (ix)
      000615 46               [ 7] 1109 	ld	b, (hl)
                                   1110 ;./lib/entities.c:17: int frame = sprite->tamano*entidad->frame + sprite->beginVRAM;
      000616 DD 7E FC         [19] 1111 	ld	a, -4 (ix)
      000619 C6 02            [ 7] 1112 	add	a, #0x02
      00061B DD 77 F4         [19] 1113 	ld	-12 (ix), a
      00061E DD 7E FD         [19] 1114 	ld	a, -3 (ix)
      000621 CE 00            [ 7] 1115 	adc	a, #0x00
      000623 DD 77 F5         [19] 1116 	ld	-11 (ix), a
                                   1117 ;./lib/entities.c:18: for(j=0;j<sprite->alto;j++) {
      000626 DD 7E FC         [19] 1118 	ld	a, -4 (ix)
      000629 C6 01            [ 7] 1119 	add	a, #0x01
      00062B DD 77 F8         [19] 1120 	ld	-8 (ix), a
      00062E DD 7E FD         [19] 1121 	ld	a, -3 (ix)
      000631 CE 00            [ 7] 1122 	adc	a, #0x00
      000633 DD 77 F9         [19] 1123 	ld	-7 (ix), a
      000636 DD 7E FA         [19] 1124 	ld	a, -6 (ix)
      000639 C6 01            [ 7] 1125 	add	a, #0x01
      00063B DD 77 FE         [19] 1126 	ld	-2 (ix), a
      00063E DD 7E FB         [19] 1127 	ld	a, -5 (ix)
      000641 CE 00            [ 7] 1128 	adc	a, #0x00
      000643 DD 77 FF         [19] 1129 	ld	-1 (ix), a
                                   1130 ;./lib/entities.c:28: entidad->len = (sprite->alto * sprite->ancho + entidad->initSprite)*2;
      000646 DD 7E FC         [19] 1131 	ld	a, -4 (ix)
      000649 C6 07            [ 7] 1132 	add	a, #0x07
      00064B DD 77 E3         [19] 1133 	ld	-29 (ix), a
      00064E DD 7E FD         [19] 1134 	ld	a, -3 (ix)
      000651 CE 00            [ 7] 1135 	adc	a, #0x00
      000653 DD 77 E4         [19] 1136 	ld	-28 (ix), a
                                   1137 ;./lib/entities.c:16: if (entidad->initSprite == 255) {
      000656 04               [ 4] 1138 	inc	b
      000657 3E 01            [ 7] 1139 	ld	a, #0x01
      000659 28 01            [12] 1140 	jr	Z, 00253$
      00065B AF               [ 4] 1141 	xor	a, a
      00065C                       1142 00253$:
      00065C DD 77 F7         [19] 1143 	ld	-9 (ix), a
                                   1144 ;./lib/entities.c:15: if (sprite->allInRAM == 1){
      00065F 0D               [ 4] 1145 	dec	c
      000660 C2r73r08         [10] 1146 	jp	NZ,00120$
                                   1147 ;./lib/entities.c:16: if (entidad->initSprite == 255) {
      000663 DD 7E F2         [19] 1148 	ld	a, -14 (ix)
      000666 DD 77 E5         [19] 1149 	ld	-27 (ix), a
      000669 DD 7E F3         [19] 1150 	ld	a, -13 (ix)
      00066C DD 77 E6         [19] 1151 	ld	-26 (ix), a
      00066F DD 7E F7         [19] 1152 	ld	a, -9 (ix)
      000672 B7               [ 4] 1153 	or	a, a
      000673 CArFDr09         [10] 1154 	jp	Z, 00134$
                                   1155 ;./lib/entities.c:17: int frame = sprite->tamano*entidad->frame + sprite->beginVRAM;
      000676 DD 7E FA         [19] 1156 	ld	a, -6 (ix)
      000679 DD 77 F2         [19] 1157 	ld	-14 (ix), a
      00067C DD 7E FB         [19] 1158 	ld	a, -5 (ix)
      00067F DD 77 F3         [19] 1159 	ld	-13 (ix), a
      000682 DD 6E F2         [19] 1160 	ld	l, -14 (ix)
      000685 DD 66 F3         [19] 1161 	ld	h, -13 (ix)
      000688 23               [ 6] 1162 	inc	hl
      000689 23               [ 6] 1163 	inc	hl
      00068A 7E               [ 7] 1164 	ld	a, (hl)
      00068B DD 77 F6         [19] 1165 	ld	-10 (ix), a
      00068E DD 6E F4         [19] 1166 	ld	l, -12 (ix)
      000691 DD 66 F5         [19] 1167 	ld	h, -11 (ix)
      000694 7E               [ 7] 1168 	ld	a, (hl)
      000695 DD 77 F7         [19] 1169 	ld	-9 (ix), a
      000698 DD 7E F6         [19] 1170 	ld	a, -10 (ix)
      00069B DD 77 F5         [19] 1171 	ld	-11 (ix), a
      00069E DD 5E F7         [19] 1172 	ld	e, -9 (ix)
      0006A1 DD 66 F5         [19] 1173 	ld	h, -11 (ix)
                                   1174 ;	spillPairReg hl
                                   1175 ;	spillPairReg hl
      0006A4 2E 00            [ 7] 1176 	ld	l, #0x00
      0006A6 55               [ 4] 1177 	ld	d, l
      0006A7 06 08            [ 7] 1178 	ld	b, #0x08
      0006A9                       1179 00256$:
      0006A9 29               [11] 1180 	add	hl, hl
      0006AA 30 01            [12] 1181 	jr	NC, 00257$
      0006AC 19               [11] 1182 	add	hl, de
      0006AD                       1183 00257$:
      0006AD 10 FA            [13] 1184 	djnz	00256$
      0006AF DD 75 F7         [19] 1185 	ld	-9 (ix), l
      0006B2 DD 7E FA         [19] 1186 	ld	a, -6 (ix)
      0006B5 DD 77 F5         [19] 1187 	ld	-11 (ix), a
      0006B8 DD 7E FB         [19] 1188 	ld	a, -5 (ix)
      0006BB DD 77 F6         [19] 1189 	ld	-10 (ix), a
      0006BE DD 6E F5         [19] 1190 	ld	l, -11 (ix)
      0006C1 DD 66 F6         [19] 1191 	ld	h, -10 (ix)
      0006C4 11 04 00         [10] 1192 	ld	de, #0x0004
      0006C7 19               [11] 1193 	add	hl, de
      0006C8 7E               [ 7] 1194 	ld	a, (hl)
      0006C9 DD 77 F6         [19] 1195 	ld	-10 (ix), a
      0006CC DD 86 F7         [19] 1196 	add	a, -9 (ix)
      0006CF DD 77 E7         [19] 1197 	ld	-25 (ix), a
                                   1198 ;./lib/entities.c:18: for(j=0;j<sprite->alto;j++) {
      0006D2 DD 7E F8         [19] 1199 	ld	a, -8 (ix)
      0006D5 DD 77 E8         [19] 1200 	ld	-24 (ix), a
      0006D8 DD 7E F9         [19] 1201 	ld	a, -7 (ix)
      0006DB DD 77 E9         [19] 1202 	ld	-23 (ix), a
      0006DE DD 7E FE         [19] 1203 	ld	a, -2 (ix)
      0006E1 DD 77 EA         [19] 1204 	ld	-22 (ix), a
      0006E4 DD 7E FF         [19] 1205 	ld	a, -1 (ix)
      0006E7 DD 77 EB         [19] 1206 	ld	-21 (ix), a
      0006EA DD 36 FE 00      [19] 1207 	ld	-2 (ix), #0x00
      0006EE                       1208 00126$:
      0006EE DD 6E FA         [19] 1209 	ld	l, -6 (ix)
      0006F1 DD 66 FB         [19] 1210 	ld	h, -5 (ix)
      0006F4 7E               [ 7] 1211 	ld	a, (hl)
      0006F5 DD 77 FF         [19] 1212 	ld	-1 (ix), a
      0006F8 DD 7E FE         [19] 1213 	ld	a, -2 (ix)
      0006FB DD 96 FF         [19] 1214 	sub	a, -1 (ix)
      0006FE D2r37r08         [10] 1215 	jp	NC, 00106$
                                   1216 ;./lib/entities.c:19: unsigned char desplazado = (j<<2);
      000701 DD 7E FE         [19] 1217 	ld	a, -2 (ix)
      000704 DD 77 FF         [19] 1218 	ld	-1 (ix), a
      000707 DD CB FF 26      [23] 1219 	sla	-1 (ix)
      00070B DD CB FF 26      [23] 1220 	sla	-1 (ix)
                                   1221 ;./lib/entities.c:20: unsigned char jCalculated = desplazado + frame, y = entidad->y+(desplazado<<2);
      00070F DD 7E FF         [19] 1222 	ld	a, -1 (ix)
      000712 DD 77 F9         [19] 1223 	ld	-7 (ix), a
      000715 DD 86 E7         [19] 1224 	add	a, -25 (ix)
      000718 DD 77 FF         [19] 1225 	ld	-1 (ix), a
      00071B DD 77 EC         [19] 1226 	ld	-20 (ix), a
      00071E DD 6E E8         [19] 1227 	ld	l, -24 (ix)
      000721 DD 66 E9         [19] 1228 	ld	h, -23 (ix)
      000724 7E               [ 7] 1229 	ld	a, (hl)
      000725 DD 77 FF         [19] 1230 	ld	-1 (ix), a
      000728 DD CB F9 26      [23] 1231 	sla	-7 (ix)
      00072C DD CB F9 26      [23] 1232 	sla	-7 (ix)
      000730 DD 7E FF         [19] 1233 	ld	a, -1 (ix)
      000733 DD 86 F9         [19] 1234 	add	a, -7 (ix)
      000736 DD 77 FF         [19] 1235 	ld	-1 (ix), a
      000739 DD 77 ED         [19] 1236 	ld	-19 (ix), a
                                   1237 ;./lib/entities.c:21: for(i=0;i<sprite->ancho;i++) {
      00073C DD 36 FF 00      [19] 1238 	ld	-1 (ix), #0x00
      000740                       1239 00123$:
      000740 DD 6E EA         [19] 1240 	ld	l, -22 (ix)
      000743 DD 66 EB         [19] 1241 	ld	h, -21 (ix)
      000746 DD 7E FF         [19] 1242 	ld	a,-1 (ix)
      000749 96               [ 7] 1243 	sub	a,(hl)
      00074A D2r31r08         [10] 1244 	jp	NC, 00127$
                                   1245 ;./lib/entities.c:23: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      00074D DD 6E FC         [19] 1246 	ld	l, -4 (ix)
      000750 DD 66 FD         [19] 1247 	ld	h, -3 (ix)
      000753 7E               [ 7] 1248 	ld	a, (hl)
      000754 DD 77 F7         [19] 1249 	ld	-9 (ix), a
      000757 DD 7E FF         [19] 1250 	ld	a, -1 (ix)
      00075A DD 77 F8         [19] 1251 	ld	-8 (ix), a
      00075D DD 36 F9 00      [19] 1252 	ld	-7 (ix), #0x00
      000761 DD 7E EC         [19] 1253 	ld	a, -20 (ix)
      000764 DD 77 EE         [19] 1254 	ld	-18 (ix), a
      000767 DD 36 EF 00      [19] 1255 	ld	-17 (ix), #0x00
      00076B DD 7E ED         [19] 1256 	ld	a, -19 (ix)
      00076E DD 77 F0         [19] 1257 	ld	-16 (ix), a
      000771 DD 36 F1 00      [19] 1258 	ld	-15 (ix), #0x00
      000775 DD 7E F7         [19] 1259 	ld	a, -9 (ix)
      000778 DD 77 F2         [19] 1260 	ld	-14 (ix), a
      00077B DD 36 F3 00      [19] 1261 	ld	-13 (ix), #0x00
      00077F DD 7E F8         [19] 1262 	ld	a, -8 (ix)
      000782 DD 77 F4         [19] 1263 	ld	-12 (ix), a
      000785 DD 7E F9         [19] 1264 	ld	a, -7 (ix)
      000788 DD 77 F5         [19] 1265 	ld	-11 (ix), a
      00078B 06 03            [ 7] 1266 	ld	b, #0x03
      00078D                       1267 00258$:
      00078D DD CB F4 26      [23] 1268 	sla	-12 (ix)
      000791 DD CB F5 16      [23] 1269 	rl	-11 (ix)
      000795 10 F6            [13] 1270 	djnz	00258$
      000797 DD 7E F8         [19] 1271 	ld	a, -8 (ix)
      00079A DD 77 F6         [19] 1272 	ld	-10 (ix), a
      00079D DD 7E F9         [19] 1273 	ld	a, -7 (ix)
      0007A0 DD 77 F7         [19] 1274 	ld	-9 (ix), a
      0007A3 DD CB F6 26      [23] 1275 	sla	-10 (ix)
      0007A7 DD CB F7 16      [23] 1276 	rl	-9 (ix)
      0007AB DD 7E F4         [19] 1277 	ld	a, -12 (ix)
      0007AE DD 86 F2         [19] 1278 	add	a, -14 (ix)
      0007B1 DD 77 F8         [19] 1279 	ld	-8 (ix), a
      0007B4 DD 7E F5         [19] 1280 	ld	a, -11 (ix)
      0007B7 DD 8E F3         [19] 1281 	adc	a, -13 (ix)
      0007BA DD 77 F9         [19] 1282 	ld	-7 (ix), a
      0007BD DD 7E EE         [19] 1283 	ld	a, -18 (ix)
      0007C0 DD 86 F6         [19] 1284 	add	a, -10 (ix)
      0007C3 DD 77 F4         [19] 1285 	ld	-12 (ix), a
      0007C6 3E 00            [ 7] 1286 	ld	a, #0x00
      0007C8 DD 8E F7         [19] 1287 	adc	a, -9 (ix)
      0007CB DD 77 F5         [19] 1288 	ld	-11 (ix), a
      0007CE DD 7E F8         [19] 1289 	ld	a, -8 (ix)
      0007D1 DD 77 F6         [19] 1290 	ld	-10 (ix), a
      0007D4 DD 36 F7 00      [19] 1291 	ld	-9 (ix), #0x00
      0007D8 DD 7E F4         [19] 1292 	ld	a, -12 (ix)
      0007DB DD 77 F8         [19] 1293 	ld	-8 (ix), a
      0007DE DD 36 F9 00      [19] 1294 	ld	-7 (ix), #0x00
      0007E2 DD 7E F6         [19] 1295 	ld	a, -10 (ix)
      0007E5 DD 77 F7         [19] 1296 	ld	-9 (ix), a
      0007E8 DD 36 F6 00      [19] 1297 	ld	-10 (ix), #0x00
      0007EC AF               [ 4] 1298 	xor	a, a
      0007ED DD B6 F8         [19] 1299 	or	a, -8 (ix)
      0007F0 DD 77 F4         [19] 1300 	ld	-12 (ix), a
      0007F3 DD 7E F7         [19] 1301 	ld	a, -9 (ix)
      0007F6 DD B6 F9         [19] 1302 	or	a, -7 (ix)
      0007F9 DD 77 F5         [19] 1303 	ld	-11 (ix), a
                                   1304 ;./lib/entities.c:22: if(i==0 && j==0)
      0007FC DD 7E FF         [19] 1305 	ld	a, -1 (ix)
      0007FF B7               [ 4] 1306 	or	a, a
      000800 20 1B            [12] 1307 	jr	NZ, 00102$
      000802 DD 7E FE         [19] 1308 	ld	a, -2 (ix)
      000805 B7               [ 4] 1309 	or	a, a
      000806 20 15            [12] 1310 	jr	NZ, 00102$
                                   1311 ;./lib/entities.c:23: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      000808 DD 5E F4         [19] 1312 	ld	e, -12 (ix)
      00080B DD 56 F5         [19] 1313 	ld	d, -11 (ix)
      00080E DD 6E F0         [19] 1314 	ld	l, -16 (ix)
                                   1315 ;	spillPairReg hl
                                   1316 ;	spillPairReg hl
      000811 26 00            [ 7] 1317 	ld	h, #0x00
                                   1318 ;	spillPairReg hl
                                   1319 ;	spillPairReg hl
      000813 CDr00r00         [17] 1320 	call	_SMS_addSprite_f
      000816 C1               [10] 1321 	pop	bc
      000817 E1               [10] 1322 	pop	hl
      000818 E5               [11] 1323 	push	hl
      000819 C5               [11] 1324 	push	bc
      00081A 77               [ 7] 1325 	ld	(hl), a
      00081B 18 0E            [12] 1326 	jr	00124$
      00081D                       1327 00102$:
                                   1328 ;./lib/entities.c:25: SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      00081D DD 5E F4         [19] 1329 	ld	e, -12 (ix)
      000820 DD 56 F5         [19] 1330 	ld	d, -11 (ix)
      000823 DD 6E F0         [19] 1331 	ld	l, -16 (ix)
                                   1332 ;	spillPairReg hl
                                   1333 ;	spillPairReg hl
      000826 26 00            [ 7] 1334 	ld	h, #0x00
                                   1335 ;	spillPairReg hl
                                   1336 ;	spillPairReg hl
      000828 CDr00r00         [17] 1337 	call	_SMS_addSprite_f
      00082B                       1338 00124$:
                                   1339 ;./lib/entities.c:21: for(i=0;i<sprite->ancho;i++) {
      00082B DD 34 FF         [23] 1340 	inc	-1 (ix)
      00082E C3r40r07         [10] 1341 	jp	00123$
      000831                       1342 00127$:
                                   1343 ;./lib/entities.c:18: for(j=0;j<sprite->alto;j++) {
      000831 DD 34 FE         [23] 1344 	inc	-2 (ix)
      000834 C3rEEr06         [10] 1345 	jp	00126$
      000837                       1346 00106$:
                                   1347 ;./lib/entities.c:28: entidad->len = (sprite->alto * sprite->ancho + entidad->initSprite)*2;
      000837 DD 6E EA         [19] 1348 	ld	l, -22 (ix)
      00083A DD 66 EB         [19] 1349 	ld	h, -21 (ix)
      00083D 7E               [ 7] 1350 	ld	a, (hl)
      00083E DD 77 FE         [19] 1351 	ld	-2 (ix), a
      000841 5F               [ 4] 1352 	ld	e, a
      000842 DD 66 FF         [19] 1353 	ld	h, -1 (ix)
                                   1354 ;	spillPairReg hl
                                   1355 ;	spillPairReg hl
      000845 2E 00            [ 7] 1356 	ld	l, #0x00
      000847 55               [ 4] 1357 	ld	d, l
      000848 06 08            [ 7] 1358 	ld	b, #0x08
      00084A                       1359 00260$:
      00084A 29               [11] 1360 	add	hl, hl
      00084B 30 01            [12] 1361 	jr	NC, 00261$
      00084D 19               [11] 1362 	add	hl, de
      00084E                       1363 00261$:
      00084E 10 FA            [13] 1364 	djnz	00260$
      000850 DD 75 FF         [19] 1365 	ld	-1 (ix), l
      000853 DD 6E E5         [19] 1366 	ld	l, -27 (ix)
      000856 DD 66 E6         [19] 1367 	ld	h, -26 (ix)
      000859 7E               [ 7] 1368 	ld	a, (hl)
      00085A DD 77 FE         [19] 1369 	ld	-2 (ix), a
      00085D DD 7E FF         [19] 1370 	ld	a, -1 (ix)
      000860 DD 86 FE         [19] 1371 	add	a, -2 (ix)
      000863 DD 77 FF         [19] 1372 	ld	-1 (ix), a
      000866 DD CB FF 26      [23] 1373 	sla	-1 (ix)
      00086A E1               [10] 1374 	pop	hl
      00086B E5               [11] 1375 	push	hl
      00086C DD 7E FF         [19] 1376 	ld	a, -1 (ix)
      00086F 77               [ 7] 1377 	ld	(hl), a
      000870 C3rFDr09         [10] 1378 	jp	00134$
      000873                       1379 00120$:
                                   1380 ;./lib/entities.c:33: if (entidad->initSprite == 255) {
      000873 DD 7E F2         [19] 1381 	ld	a, -14 (ix)
      000876 DD 77 EC         [19] 1382 	ld	-20 (ix), a
      000879 DD 7E F3         [19] 1383 	ld	a, -13 (ix)
      00087C DD 77 ED         [19] 1384 	ld	-19 (ix), a
      00087F DD 7E F7         [19] 1385 	ld	a, -9 (ix)
      000882 B7               [ 4] 1386 	or	a, a
      000883 CArFDr09         [10] 1387 	jp	Z, 00134$
                                   1388 ;./lib/entities.c:34: if (entidad->frame != sprite->frameInVRAM){
      000886 DD 6E F4         [19] 1389 	ld	l, -12 (ix)
      000889 DD 66 F5         [19] 1390 	ld	h, -11 (ix)
      00088C 7E               [ 7] 1391 	ld	a, (hl)
      00088D DD 77 F7         [19] 1392 	ld	-9 (ix), a
      000890 DD 7E FA         [19] 1393 	ld	a, -6 (ix)
      000893 C6 09            [ 7] 1394 	add	a, #0x09
      000895 DD 77 F5         [19] 1395 	ld	-11 (ix), a
      000898 DD 7E FB         [19] 1396 	ld	a, -5 (ix)
      00089B CE 00            [ 7] 1397 	adc	a, #0x00
      00089D DD 77 F6         [19] 1398 	ld	-10 (ix), a
      0008A0 DD 6E F5         [19] 1399 	ld	l, -11 (ix)
      0008A3 DD 66 F6         [19] 1400 	ld	h, -10 (ix)
      0008A6 DD 7E F7         [19] 1401 	ld	a,-9 (ix)
      0008A9 96               [ 7] 1402 	sub	a,(hl)
      0008AA 28 0A            [12] 1403 	jr	Z, 00151$
                                   1404 ;./lib/entities.c:36: sprite->frameInVRAM = entidad->frame;
      0008AC DD 6E F5         [19] 1405 	ld	l, -11 (ix)
      0008AF DD 66 F6         [19] 1406 	ld	h, -10 (ix)
      0008B2 DD 7E F7         [19] 1407 	ld	a, -9 (ix)
      0008B5 77               [ 7] 1408 	ld	(hl), a
                                   1409 ;./lib/entities.c:38: for(j=0;j<sprite->alto;j++) {
      0008B6                       1410 00151$:
      0008B6 DD 7E F8         [19] 1411 	ld	a, -8 (ix)
      0008B9 DD 77 EE         [19] 1412 	ld	-18 (ix), a
      0008BC DD 7E F9         [19] 1413 	ld	a, -7 (ix)
      0008BF DD 77 EF         [19] 1414 	ld	-17 (ix), a
      0008C2 DD 7E F8         [19] 1415 	ld	a, -8 (ix)
      0008C5 DD 77 F0         [19] 1416 	ld	-16 (ix), a
      0008C8 DD 7E F9         [19] 1417 	ld	a, -7 (ix)
      0008CB DD 77 F1         [19] 1418 	ld	-15 (ix), a
      0008CE DD 7E FE         [19] 1419 	ld	a, -2 (ix)
      0008D1 DD 77 F2         [19] 1420 	ld	-14 (ix), a
      0008D4 DD 7E FF         [19] 1421 	ld	a, -1 (ix)
      0008D7 DD 77 F3         [19] 1422 	ld	-13 (ix), a
      0008DA DD 36 FE 00      [19] 1423 	ld	-2 (ix), #0x00
      0008DE                       1424 00132$:
      0008DE DD 6E FA         [19] 1425 	ld	l, -6 (ix)
      0008E1 DD 66 FB         [19] 1426 	ld	h, -5 (ix)
      0008E4 7E               [ 7] 1427 	ld	a, (hl)
      0008E5 DD 77 FF         [19] 1428 	ld	-1 (ix), a
      0008E8 DD 7E FE         [19] 1429 	ld	a, -2 (ix)
      0008EB DD 96 FF         [19] 1430 	sub	a, -1 (ix)
      0008EE D2rACr09         [10] 1431 	jp	NC, 00116$
                                   1432 ;./lib/entities.c:39: for(i=0;i<sprite->ancho;i++) {
      0008F1 DD 36 FF 00      [19] 1433 	ld	-1 (ix), #0x00
      0008F5                       1434 00129$:
      0008F5 DD 6E F2         [19] 1435 	ld	l, -14 (ix)
      0008F8 DD 66 F3         [19] 1436 	ld	h, -13 (ix)
      0008FB DD 7E FF         [19] 1437 	ld	a,-1 (ix)
      0008FE 96               [ 7] 1438 	sub	a,(hl)
      0008FF D2rA6r09         [10] 1439 	jp	NC, 00133$
                                   1440 ;./lib/entities.c:23: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      000902 DD 6E FC         [19] 1441 	ld	l, -4 (ix)
      000905 DD 66 FD         [19] 1442 	ld	h, -3 (ix)
      000908 7E               [ 7] 1443 	ld	a, (hl)
                                   1444 ;./lib/entities.c:41: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),entidad->y+(j<<4), (j<<2) + (i<<1) );  
      000909 DD 4E FF         [19] 1445 	ld	c, -1 (ix)
      00090C 06 00            [ 7] 1446 	ld	b, #0x00
      00090E DD 5E FE         [19] 1447 	ld	e, -2 (ix)
      000911 16 00            [ 7] 1448 	ld	d, #0x00
                                   1449 ;./lib/entities.c:23: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      000913 DD 77 F4         [19] 1450 	ld	-12 (ix), a
      000916 DD 36 F5 00      [19] 1451 	ld	-11 (ix), #0x00
                                   1452 ;./lib/entities.c:41: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),entidad->y+(j<<4), (j<<2) + (i<<1) );  
      00091A DD 71 F6         [19] 1453 	ld	-10 (ix), c
      00091D DD 70 F7         [19] 1454 	ld	-9 (ix), b
      000920 3E 03            [ 7] 1455 	ld	a, #0x03
      000922                       1456 00263$:
      000922 DD CB F6 26      [23] 1457 	sla	-10 (ix)
      000926 DD CB F7 16      [23] 1458 	rl	-9 (ix)
      00092A 3D               [ 4] 1459 	dec	a
      00092B 20 F5            [12] 1460 	jr	NZ, 00263$
      00092D 6B               [ 4] 1461 	ld	l, e
      00092E 62               [ 4] 1462 	ld	h, d
      00092F 29               [11] 1463 	add	hl, hl
      000930 29               [11] 1464 	add	hl, hl
      000931 CB 21            [ 8] 1465 	sla	c
      000933 CB 10            [ 8] 1466 	rl	b
      000935 EB               [ 4] 1467 	ex	de, hl
      000936 29               [11] 1468 	add	hl, hl
      000937 29               [11] 1469 	add	hl, hl
      000938 29               [11] 1470 	add	hl, hl
      000939 29               [11] 1471 	add	hl, hl
      00093A EB               [ 4] 1472 	ex	de, hl
      00093B DD 73 F8         [19] 1473 	ld	-8 (ix), e
      00093E DD 72 F9         [19] 1474 	ld	-7 (ix), d
      000941 DD 7E F4         [19] 1475 	ld	a, -12 (ix)
      000944 DD 86 F6         [19] 1476 	add	a, -10 (ix)
      000947 5F               [ 4] 1477 	ld	e, a
      000948 3E 00            [ 7] 1478 	ld	a, #0x00
      00094A DD 8E F7         [19] 1479 	adc	a, -9 (ix)
      00094D 09               [11] 1480 	add	hl, bc
                                   1481 ;	spillPairReg hl
                                   1482 ;	spillPairReg hl
      00094E AF               [ 4] 1483 	xor	a, a
      00094F 67               [ 4] 1484 	ld	h,a
      000950 B5               [ 4] 1485 	or	a, l
      000951 DD 77 F6         [19] 1486 	ld	-10 (ix), a
      000954 7B               [ 4] 1487 	ld	a, e
      000955 B4               [ 4] 1488 	or	a, h
      000956 DD 77 F7         [19] 1489 	ld	-9 (ix), a
                                   1490 ;./lib/entities.c:40: if(i==0 && j==0) {
      000959 DD 7E FF         [19] 1491 	ld	a, -1 (ix)
      00095C B7               [ 4] 1492 	or	a, a
      00095D 20 28            [12] 1493 	jr	NZ, 00112$
      00095F DD 7E FE         [19] 1494 	ld	a, -2 (ix)
      000962 B7               [ 4] 1495 	or	a, a
      000963 20 22            [12] 1496 	jr	NZ, 00112$
                                   1497 ;./lib/entities.c:41: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),entidad->y+(j<<4), (j<<2) + (i<<1) );  
      000965 DD 6E F0         [19] 1498 	ld	l, -16 (ix)
      000968 DD 66 F1         [19] 1499 	ld	h, -15 (ix)
      00096B 4E               [ 7] 1500 	ld	c, (hl)
      00096C 06 00            [ 7] 1501 	ld	b, #0x00
      00096E DD 6E F8         [19] 1502 	ld	l, -8 (ix)
                                   1503 ;	spillPairReg hl
                                   1504 ;	spillPairReg hl
      000971 DD 66 F9         [19] 1505 	ld	h, -7 (ix)
                                   1506 ;	spillPairReg hl
                                   1507 ;	spillPairReg hl
      000974 09               [11] 1508 	add	hl, bc
      000975 DD 5E F6         [19] 1509 	ld	e, -10 (ix)
      000978 DD 56 F7         [19] 1510 	ld	d, -9 (ix)
      00097B CDr00r00         [17] 1511 	call	_SMS_addSprite_f
      00097E DD 6E EC         [19] 1512 	ld	l, -20 (ix)
      000981 DD 66 ED         [19] 1513 	ld	h, -19 (ix)
      000984 77               [ 7] 1514 	ld	(hl), a
      000985 18 19            [12] 1515 	jr	00130$
      000987                       1516 00112$:
                                   1517 ;./lib/entities.c:44: SMS_addSprite(entidad->x+(i<<3),entidad->y+(j<<4), (j<<2) + (i<<1) );
      000987 DD 6E EE         [19] 1518 	ld	l, -18 (ix)
      00098A DD 66 EF         [19] 1519 	ld	h, -17 (ix)
      00098D 4E               [ 7] 1520 	ld	c, (hl)
      00098E 06 00            [ 7] 1521 	ld	b, #0x00
      000990 DD 6E F8         [19] 1522 	ld	l, -8 (ix)
                                   1523 ;	spillPairReg hl
                                   1524 ;	spillPairReg hl
      000993 DD 66 F9         [19] 1525 	ld	h, -7 (ix)
                                   1526 ;	spillPairReg hl
                                   1527 ;	spillPairReg hl
      000996 09               [11] 1528 	add	hl, bc
      000997 DD 5E F6         [19] 1529 	ld	e, -10 (ix)
      00099A DD 56 F7         [19] 1530 	ld	d, -9 (ix)
      00099D CDr00r00         [17] 1531 	call	_SMS_addSprite_f
      0009A0                       1532 00130$:
                                   1533 ;./lib/entities.c:39: for(i=0;i<sprite->ancho;i++) {
      0009A0 DD 34 FF         [23] 1534 	inc	-1 (ix)
      0009A3 C3rF5r08         [10] 1535 	jp	00129$
      0009A6                       1536 00133$:
                                   1537 ;./lib/entities.c:38: for(j=0;j<sprite->alto;j++) {
      0009A6 DD 34 FE         [23] 1538 	inc	-2 (ix)
      0009A9 C3rDEr08         [10] 1539 	jp	00132$
      0009AC                       1540 00116$:
                                   1541 ;./lib/entities.c:48: entidad->len = sprite->alto * sprite->ancho + entidad->initSprite;
      0009AC DD 6E F2         [19] 1542 	ld	l, -14 (ix)
      0009AF DD 66 F3         [19] 1543 	ld	h, -13 (ix)
      0009B2 7E               [ 7] 1544 	ld	a, (hl)
      0009B3 DD 77 FE         [19] 1545 	ld	-2 (ix), a
      0009B6 5F               [ 4] 1546 	ld	e, a
      0009B7 DD 66 FF         [19] 1547 	ld	h, -1 (ix)
                                   1548 ;	spillPairReg hl
                                   1549 ;	spillPairReg hl
      0009BA 2E 00            [ 7] 1550 	ld	l, #0x00
      0009BC 55               [ 4] 1551 	ld	d, l
      0009BD 06 08            [ 7] 1552 	ld	b, #0x08
      0009BF                       1553 00265$:
      0009BF 29               [11] 1554 	add	hl, hl
      0009C0 30 01            [12] 1555 	jr	NC, 00266$
      0009C2 19               [11] 1556 	add	hl, de
      0009C3                       1557 00266$:
      0009C3 10 FA            [13] 1558 	djnz	00265$
      0009C5 DD 75 FF         [19] 1559 	ld	-1 (ix), l
      0009C8 DD 6E EC         [19] 1560 	ld	l, -20 (ix)
      0009CB DD 66 ED         [19] 1561 	ld	h, -19 (ix)
      0009CE 7E               [ 7] 1562 	ld	a, (hl)
      0009CF DD 77 FE         [19] 1563 	ld	-2 (ix), a
      0009D2 DD 86 FF         [19] 1564 	add	a, -1 (ix)
      0009D5 DD 77 FF         [19] 1565 	ld	-1 (ix), a
      0009D8 E1               [10] 1566 	pop	hl
      0009D9 E5               [11] 1567 	push	hl
      0009DA DD 7E FF         [19] 1568 	ld	a, -1 (ix)
      0009DD 77               [ 7] 1569 	ld	(hl), a
                                   1570 ;./lib/entities.c:49: entidad->sprite = sprite;
      0009DE DD 7E FC         [19] 1571 	ld	a, -4 (ix)
      0009E1 C6 0C            [ 7] 1572 	add	a, #0x0c
      0009E3 DD 77 FE         [19] 1573 	ld	-2 (ix), a
      0009E6 DD 7E FD         [19] 1574 	ld	a, -3 (ix)
      0009E9 CE 00            [ 7] 1575 	adc	a, #0x00
      0009EB DD 77 FF         [19] 1576 	ld	-1 (ix), a
      0009EE DD 6E FE         [19] 1577 	ld	l, -2 (ix)
      0009F1 DD 66 FF         [19] 1578 	ld	h, -1 (ix)
      0009F4 DD 7E FA         [19] 1579 	ld	a, -6 (ix)
      0009F7 77               [ 7] 1580 	ld	(hl), a
      0009F8 23               [ 6] 1581 	inc	hl
      0009F9 DD 7E FB         [19] 1582 	ld	a, -5 (ix)
      0009FC 77               [ 7] 1583 	ld	(hl), a
      0009FD                       1584 00134$:
                                   1585 ;./lib/entities.c:52: }
      0009FD DD F9            [10] 1586 	ld	sp, ix
      0009FF DD E1            [14] 1587 	pop	ix
      000A01 C9               [10] 1588 	ret
                                   1589 ;./alex.c:7: unsigned char canUp(void){
                                   1590 ;	---------------------------------
                                   1591 ; Function canUp
                                   1592 ; ---------------------------------
      000A02                       1593 _canUp::
                                   1594 ;./alex.c:8: if (alex.x < 2)
      000A02 3Ar03r01         [13] 1595 	ld	a, (#_alex + 0)
      000A05 D6 02            [ 7] 1596 	sub	a, #0x02
      000A07 30 02            [12] 1597 	jr	NC, 00102$
                                   1598 ;./alex.c:9: return 0;
      000A09 AF               [ 4] 1599 	xor	a, a
      000A0A C9               [10] 1600 	ret
      000A0B                       1601 00102$:
                                   1602 ;./alex.c:10: return 1;
      000A0B 3E 01            [ 7] 1603 	ld	a, #0x01
                                   1604 ;./alex.c:11: }
      000A0D C9               [10] 1605 	ret
                                   1606 ;./alex.c:13: unsigned char canDown(void) {
                                   1607 ;	---------------------------------
                                   1608 ; Function canDown
                                   1609 ; ---------------------------------
      000A0E                       1610 _canDown::
                                   1611 ;./alex.c:14: if (alex.y > 153)
      000A0E 21r04r01         [10] 1612 	ld	hl, #_alex+1
      000A11 4E               [ 7] 1613 	ld	c, (hl)
      000A12 3E 99            [ 7] 1614 	ld	a, #0x99
      000A14 91               [ 4] 1615 	sub	a, c
      000A15 30 02            [12] 1616 	jr	NC, 00102$
                                   1617 ;./alex.c:15: return 0;
      000A17 AF               [ 4] 1618 	xor	a, a
      000A18 C9               [10] 1619 	ret
      000A19                       1620 00102$:
                                   1621 ;./alex.c:16: return 1;
      000A19 3E 01            [ 7] 1622 	ld	a, #0x01
                                   1623 ;./alex.c:17: }
      000A1B C9               [10] 1624 	ret
                                   1625 ;./alex.c:19: unsigned char canLeft(void) {
                                   1626 ;	---------------------------------
                                   1627 ; Function canLeft
                                   1628 ; ---------------------------------
      000A1C                       1629 _canLeft::
                                   1630 ;./alex.c:20: if (alex.x < 9)
      000A1C 3Ar03r01         [13] 1631 	ld	a, (#_alex + 0)
      000A1F D6 09            [ 7] 1632 	sub	a, #0x09
      000A21 30 02            [12] 1633 	jr	NC, 00102$
                                   1634 ;./alex.c:21: return 0;
      000A23 AF               [ 4] 1635 	xor	a, a
      000A24 C9               [10] 1636 	ret
      000A25                       1637 00102$:
                                   1638 ;./alex.c:22: return 1;
      000A25 3E 01            [ 7] 1639 	ld	a, #0x01
                                   1640 ;./alex.c:23: }
      000A27 C9               [10] 1641 	ret
                                   1642 ;./alex.c:25: unsigned char canRight(void) {
                                   1643 ;	---------------------------------
                                   1644 ; Function canRight
                                   1645 ; ---------------------------------
      000A28                       1646 _canRight::
                                   1647 ;./alex.c:26: if (alex.x > 238)
      000A28 21r03r01         [10] 1648 	ld	hl, #_alex+0
      000A2B 4E               [ 7] 1649 	ld	c, (hl)
      000A2C 3E EE            [ 7] 1650 	ld	a, #0xee
      000A2E 91               [ 4] 1651 	sub	a, c
      000A2F 30 02            [12] 1652 	jr	NC, 00102$
                                   1653 ;./alex.c:27: return 0;
      000A31 AF               [ 4] 1654 	xor	a, a
      000A32 C9               [10] 1655 	ret
      000A33                       1656 00102$:
                                   1657 ;./alex.c:28: return 1;
      000A33 3E 01            [ 7] 1658 	ld	a, #0x01
                                   1659 ;./alex.c:29: }
      000A35 C9               [10] 1660 	ret
                                   1661 ;./alex.c:31: void moveAlexSuelo(int keys) {
                                   1662 ;	---------------------------------
                                   1663 ; Function moveAlexSuelo
                                   1664 ; ---------------------------------
      000A36                       1665 _moveAlexSuelo::
      000A36 DD E5            [15] 1666 	push	ix
      000A38 DD 21 00 00      [14] 1667 	ld	ix,#0
      000A3C DD 39            [15] 1668 	add	ix,sp
      000A3E F5               [11] 1669 	push	af
      000A3F F5               [11] 1670 	push	af
      000A40 F5               [11] 1671 	push	af
      000A41 DD 75 FE         [19] 1672 	ld	-2 (ix), l
      000A44 DD 74 FF         [19] 1673 	ld	-1 (ix), h
                                   1674 ;./alex.c:33: if (keys & PORT_A_KEY_LEFT)
      000A47 DD 7E FE         [19] 1675 	ld	a, -2 (ix)
      000A4A E6 04            [ 7] 1676 	and	a, #0x04
      000A4C DD 77 FA         [19] 1677 	ld	-6 (ix), a
      000A4F DD 36 FB 00      [19] 1678 	ld	-5 (ix), #0x00
                                   1679 ;./alex.c:35: if (keys & PORT_A_KEY_RIGHT)
      000A53 DD 7E FE         [19] 1680 	ld	a, -2 (ix)
      000A56 E6 08            [ 7] 1681 	and	a, #0x08
      000A58 DD 77 FC         [19] 1682 	ld	-4 (ix), a
      000A5B DD 36 FD 00      [19] 1683 	ld	-3 (ix), #0x00
                                   1684 ;./alex.c:32: if ((keys & PORT_A_KEY_DOWN)){
      000A5F DD CB FE 4E      [20] 1685 	bit	1, -2 (ix)
      000A63 28 33            [12] 1686 	jr	Z, 00109$
                                   1687 ;./alex.c:33: if (keys & PORT_A_KEY_LEFT)
      000A65 AF               [ 4] 1688 	xor	a, a
      000A66 DD B6 FA         [19] 1689 	or	a, -6 (ix)
      000A69 28 05            [12] 1690 	jr	Z, 00102$
                                   1691 ;./alex.c:34: alex.oriented = 1;
      000A6B 21r07r01         [10] 1692 	ld	hl, #_alex+4
      000A6E 36 01            [10] 1693 	ld	(hl), #0x01
      000A70                       1694 00102$:
                                   1695 ;./alex.c:35: if (keys & PORT_A_KEY_RIGHT)
      000A70 AF               [ 4] 1696 	xor	a, a
      000A71 DD B6 FC         [19] 1697 	or	a, -4 (ix)
      000A74 28 05            [12] 1698 	jr	Z, 00104$
                                   1699 ;./alex.c:36: alex.oriented = 0;
      000A76 21r07r01         [10] 1700 	ld	hl, #_alex+4
      000A79 36 00            [10] 1701 	ld	(hl), #0x00
      000A7B                       1702 00104$:
                                   1703 ;./alex.c:37: if (!alex.oriented)
      000A7B 3Ar07r01         [13] 1704 	ld	a,(#_alex + 4)
                                   1705 ;./alex.c:38: alex.frame = 7;
                                   1706 ;./alex.c:37: if (!alex.oriented)
      000A7E DD 77 FD         [19] 1707 	ld	-3 (ix), a
      000A81 B7               [ 4] 1708 	or	a, a
      000A82 20 07            [12] 1709 	jr	NZ, 00106$
                                   1710 ;./alex.c:38: alex.frame = 7;
      000A84 21r05r01         [10] 1711 	ld	hl, #(_alex + 2)
      000A87 36 07            [10] 1712 	ld	(hl), #0x07
      000A89 18 05            [12] 1713 	jr	00107$
      000A8B                       1714 00106$:
                                   1715 ;./alex.c:40: alex.frame = 15;
      000A8B 21r05r01         [10] 1716 	ld	hl, #(_alex + 2)
      000A8E 36 0F            [10] 1717 	ld	(hl), #0x0f
      000A90                       1718 00107$:
                                   1719 ;./alex.c:41: alex.lastChangeFrame = 15;
      000A90 21r06r01         [10] 1720 	ld	hl, #_alex + 3
      000A93 36 0F            [10] 1721 	ld	(hl), #0x0f
                                   1722 ;./alex.c:42: return; // not move
      000A95 C3r0Ar0C         [10] 1723 	jp	00145$
      000A98                       1724 00109$:
                                   1725 ;./alex.c:45: if (keys & PORT_A_KEY_2) {
      000A98 DD CB FE 6E      [20] 1726 	bit	5, -2 (ix)
      000A9C 28 3B            [12] 1727 	jr	Z, 00116$
                                   1728 ;./alex.c:46: if (alex.y > 100)
      000A9E 01r04r01         [10] 1729 	ld	bc, #_alex+1
      000AA1 0A               [ 7] 1730 	ld	a, (bc)
      000AA2 5F               [ 4] 1731 	ld	e, a
      000AA3 3E 64            [ 7] 1732 	ld	a, #0x64
      000AA5 93               [ 4] 1733 	sub	a, e
      000AA6 30 09            [12] 1734 	jr	NC, 00111$
                                   1735 ;./alex.c:47: maxSalto = alex.y - 100;
      000AA8 7B               [ 4] 1736 	ld	a, e
      000AA9 21r02r01         [10] 1737 	ld	hl, #_maxSalto
      000AAC C6 9C            [ 7] 1738 	add	a, #0x9c
      000AAE 77               [ 7] 1739 	ld	(hl), a
      000AAF 18 05            [12] 1740 	jr	00112$
      000AB1                       1741 00111$:
                                   1742 ;./alex.c:49: maxSalto = 0;
      000AB1 21r02r01         [10] 1743 	ld	hl, #_maxSalto
      000AB4 36 00            [10] 1744 	ld	(hl), #0x00
      000AB6                       1745 00112$:
                                   1746 ;./alex.c:50: alex.y--;
      000AB6 0A               [ 7] 1747 	ld	a, (bc)
      000AB7 3D               [ 4] 1748 	dec	a
      000AB8 02               [ 7] 1749 	ld	(bc), a
                                   1750 ;./alex.c:51: alex.y--;
      000AB9 3D               [ 4] 1751 	dec	a
      000ABA 02               [ 7] 1752 	ld	(bc), a
                                   1753 ;./alex.c:52: SMS_saveROMBank();
      000ABB 3A FF FF         [13] 1754 	ld	a, (_ROM_bank_to_be_mapped_on_slot2+0)
      000ABE DD 77 FD         [19] 1755 	ld	-3 (ix), a
                                   1756 ;./alex.c:53: SMS_mapROMBank(3);
      000AC1 21 FF FF         [10] 1757 	ld	hl, #_ROM_bank_to_be_mapped_on_slot2
      000AC4 36 03            [10] 1758 	ld	(hl), #0x03
                                   1759 ;./alex.c:54: PSGSFXPlay(salto_psg, SFX_CHANNEL1);
      000AC6 3E 08            [ 7] 1760 	ld	a, #0x08
      000AC8 F5               [11] 1761 	push	af
      000AC9 33               [ 6] 1762 	inc	sp
      000ACA 21r00r00         [10] 1763 	ld	hl, #_salto_psg
      000ACD CDr00r00         [17] 1764 	call	_PSGSFXPlay
                                   1765 ;./alex.c:55: SMS_restoreROMBank();
      000AD0 DD 7E FD         [19] 1766 	ld	a, -3 (ix)
      000AD3 32 FF FF         [13] 1767 	ld	(_ROM_bank_to_be_mapped_on_slot2+0), a
                                   1768 ;./alex.c:56: return;
      000AD6 C3r0Ar0C         [10] 1769 	jp	00145$
      000AD9                       1770 00116$:
                                   1771 ;./alex.c:58: else if (keys & PORT_A_KEY_1) {
      000AD9 DD CB FE 66      [20] 1772 	bit	4, -2 (ix)
      000ADD 28 0A            [12] 1773 	jr	Z, 00117$
                                   1774 ;./alex.c:59: alex.state = PUÑETAZO_SUELO;
      000ADF 21r08r01         [10] 1775 	ld	hl, #_alex + 5
      000AE2 36 20            [10] 1776 	ld	(hl), #0x20
                                   1777 ;./alex.c:60: alex.lastChangeFrame = 15;
      000AE4 21r06r01         [10] 1778 	ld	hl, #_alex + 3
      000AE7 36 0F            [10] 1779 	ld	(hl), #0x0f
      000AE9                       1780 00117$:
                                   1781 ;./alex.c:62: if(alex.state != PUÑETAZO_SUELO) {
      000AE9 21r08r01         [10] 1782 	ld	hl, #(_alex + 5)
      000AEC 5E               [ 7] 1783 	ld	e, (hl)
                                   1784 ;./alex.c:67: alex.oriented = 1;
                                   1785 ;./alex.c:68: alex.lastChangeFrame++;
      000AED 01r06r01         [10] 1786 	ld	bc, #_alex + 3
                                   1787 ;./alex.c:71: alex.frame++;
                                   1788 ;./alex.c:62: if(alex.state != PUÑETAZO_SUELO) {
      000AF0 7B               [ 4] 1789 	ld	a, e
      000AF1 D6 20            [ 7] 1790 	sub	a, #0x20
      000AF3 CAr8Ar0B         [10] 1791 	jp	Z,00143$
                                   1792 ;./alex.c:63: SpriteTableY2[4] = 234;
      000AF6 2Ar40r03         [16] 1793 	ld	hl, (_SpriteTableY2)
      000AF9 11 04 00         [10] 1794 	ld	de, #0x0004
      000AFC 19               [11] 1795 	add	hl, de
      000AFD 36 EA            [10] 1796 	ld	(hl), #0xea
                                   1797 ;./alex.c:64: if ((keys & PORT_A_KEY_LEFT) && alex.x > 8 )
      000AFF AF               [ 4] 1798 	xor	a, a
      000B00 DD B6 FA         [19] 1799 	or	a, -6 (ix)
      000B03 28 3A            [12] 1800 	jr	Z, 00134$
      000B05 21r03r01         [10] 1801 	ld	hl, #_alex
      000B08 5E               [ 7] 1802 	ld	e, (hl)
      000B09 3E 08            [ 7] 1803 	ld	a, #0x08
      000B0B 93               [ 4] 1804 	sub	a, e
      000B0C 30 31            [12] 1805 	jr	NC, 00134$
                                   1806 ;./alex.c:66: alex.x -= 1;
      000B0E 1D               [ 4] 1807 	dec	e
      000B0F 21r03r01         [10] 1808 	ld	hl, #_alex
      000B12 73               [ 7] 1809 	ld	(hl), e
                                   1810 ;./alex.c:67: alex.oriented = 1;
      000B13 21r07r01         [10] 1811 	ld	hl, #(_alex + 4)
      000B16 36 01            [10] 1812 	ld	(hl), #0x01
                                   1813 ;./alex.c:68: alex.lastChangeFrame++;
      000B18 0A               [ 7] 1814 	ld	a, (bc)
      000B19 3C               [ 4] 1815 	inc	a
      000B1A 02               [ 7] 1816 	ld	(bc), a
                                   1817 ;./alex.c:69: if (alex.lastChangeFrame == 11) {
      000B1B D6 0B            [ 7] 1818 	sub	a, #0x0b
      000B1D 20 09            [12] 1819 	jr	NZ, 00119$
                                   1820 ;./alex.c:70: alex.lastChangeFrame = 0;
      000B1F AF               [ 4] 1821 	xor	a, a
      000B20 02               [ 7] 1822 	ld	(bc), a
                                   1823 ;./alex.c:71: alex.frame++;
      000B21 3Ar05r01         [13] 1824 	ld	a, (#(_alex + 2) + 0)
      000B24 3C               [ 4] 1825 	inc	a
      000B25 32r05r01         [13] 1826 	ld	(#(_alex + 2)),a
      000B28                       1827 00119$:
                                   1828 ;./alex.c:73: if (alex.frame > 11 || alex.frame < 8)
      000B28 21r05r01         [10] 1829 	ld	hl, #(_alex + 2)
      000B2B 4E               [ 7] 1830 	ld	c, (hl)
      000B2C 3E 0B            [ 7] 1831 	ld	a, #0x0b
      000B2E 91               [ 4] 1832 	sub	a, c
      000B2F 38 06            [12] 1833 	jr	C, 00120$
      000B31 79               [ 4] 1834 	ld	a, c
      000B32 D6 08            [ 7] 1835 	sub	a, #0x08
      000B34 D2r0Ar0C         [10] 1836 	jp	NC, 00145$
      000B37                       1837 00120$:
                                   1838 ;./alex.c:74: alex.frame = 8;
      000B37 21r05r01         [10] 1839 	ld	hl, #(_alex + 2)
      000B3A 36 08            [10] 1840 	ld	(hl), #0x08
      000B3C C3r0Ar0C         [10] 1841 	jp	00145$
      000B3F                       1842 00134$:
                                   1843 ;./alex.c:76: else if ((keys & PORT_A_KEY_RIGHT) && alex.x <240)
      000B3F AF               [ 4] 1844 	xor	a, a
      000B40 DD B6 FC         [19] 1845 	or	a, -4 (ix)
      000B43 28 32            [12] 1846 	jr	Z, 00130$
      000B45 3Ar03r01         [13] 1847 	ld	a, (#_alex + 0)
      000B48 FE F0            [ 7] 1848 	cp	a, #0xf0
      000B4A 30 2B            [12] 1849 	jr	NC, 00130$
                                   1850 ;./alex.c:78: alex.x += 1;
      000B4C 3C               [ 4] 1851 	inc	a
      000B4D 32r03r01         [13] 1852 	ld	(#_alex),a
                                   1853 ;./alex.c:79: alex.oriented = 0;
      000B50 21r07r01         [10] 1854 	ld	hl, #(_alex + 4)
      000B53 36 00            [10] 1855 	ld	(hl), #0x00
                                   1856 ;./alex.c:80: alex.lastChangeFrame++;
      000B55 0A               [ 7] 1857 	ld	a, (bc)
      000B56 3C               [ 4] 1858 	inc	a
      000B57 02               [ 7] 1859 	ld	(bc), a
                                   1860 ;./alex.c:81: if (alex.lastChangeFrame == 11) {
      000B58 D6 0B            [ 7] 1861 	sub	a, #0x0b
      000B5A 20 09            [12] 1862 	jr	NZ, 00124$
                                   1863 ;./alex.c:82: alex.lastChangeFrame = 0;
      000B5C AF               [ 4] 1864 	xor	a, a
      000B5D 02               [ 7] 1865 	ld	(bc), a
                                   1866 ;./alex.c:83: alex.frame++;
      000B5E 3Ar05r01         [13] 1867 	ld	a, (#(_alex + 2) + 0)
      000B61 3C               [ 4] 1868 	inc	a
      000B62 32r05r01         [13] 1869 	ld	(#(_alex + 2)),a
      000B65                       1870 00124$:
                                   1871 ;./alex.c:85: if (alex.frame > 3)
      000B65 21r05r01         [10] 1872 	ld	hl, #(_alex + 2)
      000B68 4E               [ 7] 1873 	ld	c, (hl)
      000B69 3E 03            [ 7] 1874 	ld	a, #0x03
      000B6B 91               [ 4] 1875 	sub	a, c
      000B6C D2r0Ar0C         [10] 1876 	jp	NC, 00145$
                                   1877 ;./alex.c:86: alex.frame = 0;
      000B6F 21r05r01         [10] 1878 	ld	hl, #(_alex + 2)
      000B72 36 00            [10] 1879 	ld	(hl), #0x00
      000B74 C3r0Ar0C         [10] 1880 	jp	00145$
      000B77                       1881 00130$:
                                   1882 ;./alex.c:90: alex.frame = 4;
      000B77 21r05r01         [10] 1883 	ld	hl, #(_alex + 2)
      000B7A 36 04            [10] 1884 	ld	(hl), #0x04
                                   1885 ;./alex.c:91: if (alex.oriented)
      000B7C 3Ar07r01         [13] 1886 	ld	a, (#(_alex + 4) + 0)
      000B7F B7               [ 4] 1887 	or	a, a
      000B80 28 02            [12] 1888 	jr	Z, 00128$
                                   1889 ;./alex.c:92: alex.frame = 12;
      000B82 36 0C            [10] 1890 	ld	(hl), #0x0c
      000B84                       1891 00128$:
                                   1892 ;./alex.c:93: alex.lastChangeFrame = 10;
      000B84 3E 0A            [ 7] 1893 	ld	a, #0x0a
      000B86 02               [ 7] 1894 	ld	(bc), a
      000B87 C3r0Ar0C         [10] 1895 	jp	00145$
      000B8A                       1896 00143$:
                                   1897 ;./alex.c:97: if (!alex.oriented) {
                                   1898 ;./alex.c:102: SpriteTableY2[4] = alex.y + 9;
                                   1899 ;./alex.c:97: if (!alex.oriented) {
      000B8A 3Ar07r01         [13] 1900 	ld	a, (#(_alex + 4) + 0)
      000B8D B7               [ 4] 1901 	or	a, a
      000B8E 20 34            [12] 1902 	jr	NZ, 00138$
                                   1903 ;./alex.c:98: alex.frame = 5;
      000B90 21r05r01         [10] 1904 	ld	hl, #(_alex + 2)
      000B93 36 05            [10] 1905 	ld	(hl), #0x05
                                   1906 ;./alex.c:100: SpriteTableXN2[8] = alex.x + 16;
      000B95 3Ar42r03         [13] 1907 	ld	a, (_SpriteTableXN2+0)
      000B98 C6 08            [ 7] 1908 	add	a, #0x08
      000B9A 5F               [ 4] 1909 	ld	e, a
      000B9B 3Ar43r03         [13] 1910 	ld	a, (_SpriteTableXN2+1)
      000B9E CE 00            [ 7] 1911 	adc	a, #0x00
      000BA0 57               [ 4] 1912 	ld	d, a
      000BA1 3Ar03r01         [13] 1913 	ld	a, (#_alex + 0)
      000BA4 C6 10            [ 7] 1914 	add	a, #0x10
      000BA6 12               [ 7] 1915 	ld	(de), a
                                   1916 ;./alex.c:101: SpriteTableXN2[9] = 9;
      000BA7 2Ar42r03         [16] 1917 	ld	hl, (_SpriteTableXN2)
      000BAA 11 09 00         [10] 1918 	ld	de, #0x0009
      000BAD 19               [11] 1919 	add	hl, de
      000BAE 36 09            [10] 1920 	ld	(hl), #0x09
                                   1921 ;./alex.c:102: SpriteTableY2[4] = alex.y + 9;
      000BB0 3Ar40r03         [13] 1922 	ld	a, (_SpriteTableY2+0)
      000BB3 C6 04            [ 7] 1923 	add	a, #0x04
      000BB5 5F               [ 4] 1924 	ld	e, a
      000BB6 3Ar41r03         [13] 1925 	ld	a, (_SpriteTableY2+1)
      000BB9 CE 00            [ 7] 1926 	adc	a, #0x00
      000BBB 57               [ 4] 1927 	ld	d, a
      000BBC 3Ar04r01         [13] 1928 	ld	a, (#(_alex + 1) + 0)
      000BBF C6 09            [ 7] 1929 	add	a, #0x09
      000BC1 12               [ 7] 1930 	ld	(de), a
      000BC2 18 32            [12] 1931 	jr	00139$
      000BC4                       1932 00138$:
                                   1933 ;./alex.c:105: alex.frame = 13;
      000BC4 21r05r01         [10] 1934 	ld	hl, #(_alex + 2)
      000BC7 36 0D            [10] 1935 	ld	(hl), #0x0d
                                   1936 ;./alex.c:107: SpriteTableXN2[8] = alex.x - 8;
      000BC9 3Ar42r03         [13] 1937 	ld	a, (_SpriteTableXN2+0)
      000BCC C6 08            [ 7] 1938 	add	a, #0x08
      000BCE 5F               [ 4] 1939 	ld	e, a
      000BCF 3Ar43r03         [13] 1940 	ld	a, (_SpriteTableXN2+1)
      000BD2 CE 00            [ 7] 1941 	adc	a, #0x00
      000BD4 57               [ 4] 1942 	ld	d, a
      000BD5 3Ar03r01         [13] 1943 	ld	a, (#_alex + 0)
      000BD8 C6 F8            [ 7] 1944 	add	a, #0xf8
      000BDA 12               [ 7] 1945 	ld	(de), a
                                   1946 ;./alex.c:108: SpriteTableXN2[9] = 11;
      000BDB 2Ar42r03         [16] 1947 	ld	hl, (_SpriteTableXN2)
      000BDE 11 09 00         [10] 1948 	ld	de, #0x0009
      000BE1 19               [11] 1949 	add	hl, de
      000BE2 36 0B            [10] 1950 	ld	(hl), #0x0b
                                   1951 ;./alex.c:109: SpriteTableY2[4] = alex.y + 9;
      000BE4 3Ar40r03         [13] 1952 	ld	a, (_SpriteTableY2+0)
      000BE7 C6 04            [ 7] 1953 	add	a, #0x04
      000BE9 5F               [ 4] 1954 	ld	e, a
      000BEA 3Ar41r03         [13] 1955 	ld	a, (_SpriteTableY2+1)
      000BED CE 00            [ 7] 1956 	adc	a, #0x00
      000BEF 57               [ 4] 1957 	ld	d, a
      000BF0 3Ar04r01         [13] 1958 	ld	a, (#(_alex + 1) + 0)
      000BF3 C6 09            [ 7] 1959 	add	a, #0x09
      000BF5 12               [ 7] 1960 	ld	(de), a
      000BF6                       1961 00139$:
                                   1962 ;./alex.c:111: alex.lastChangeFrame--;
      000BF6 0A               [ 7] 1963 	ld	a, (bc)
      000BF7 3D               [ 4] 1964 	dec	a
      000BF8 02               [ 7] 1965 	ld	(bc), a
                                   1966 ;./alex.c:112: if(!alex.lastChangeFrame) {
      000BF9 B7               [ 4] 1967 	or	a, a
      000BFA 20 0E            [12] 1968 	jr	NZ, 00145$
                                   1969 ;./alex.c:113: alex.state = 0;
      000BFC 21r08r01         [10] 1970 	ld	hl, #(_alex + 5)
      000BFF 36 00            [10] 1971 	ld	(hl), #0x00
                                   1972 ;./alex.c:114: SpriteTableY2[4] = 234;
      000C01 2Ar40r03         [16] 1973 	ld	hl, (_SpriteTableY2)
      000C04 11 04 00         [10] 1974 	ld	de, #0x0004
      000C07 19               [11] 1975 	add	hl, de
      000C08 36 EA            [10] 1976 	ld	(hl), #0xea
      000C0A                       1977 00145$:
                                   1978 ;./alex.c:117: }
      000C0A DD F9            [10] 1979 	ld	sp, ix
      000C0C DD E1            [14] 1980 	pop	ix
      000C0E C9               [10] 1981 	ret
                                   1982 ;./alex.c:119: void moveAlexAire(int keys, unsigned char puedeSubir, unsigned char puedeDerecha, unsigned char puedeIzquieda) {
                                   1983 ;	---------------------------------
                                   1984 ; Function moveAlexAire
                                   1985 ; ---------------------------------
      000C0F                       1986 _moveAlexAire::
      000C0F DD E5            [15] 1987 	push	ix
      000C11 DD 21 00 00      [14] 1988 	ld	ix,#0
      000C15 DD 39            [15] 1989 	add	ix,sp
      000C17 F5               [11] 1990 	push	af
      000C18 3B               [ 6] 1991 	dec	sp
      000C19 DD 75 FE         [19] 1992 	ld	-2 (ix), l
      000C1C DD 74 FF         [19] 1993 	ld	-1 (ix), h
                                   1994 ;./alex.c:120: if (alex.y > maxSalto) {
      000C1F 21r04r01         [10] 1995 	ld	hl, #(_alex + 1)
      000C22 46               [ 7] 1996 	ld	b, (hl)
                                   1997 ;./alex.c:121: alex.y -= 2;
      000C23 48               [ 4] 1998 	ld	c, b
                                   1999 ;./alex.c:120: if (alex.y > maxSalto) {
      000C24 3Ar02r01         [13] 2000 	ld	a, (_maxSalto+0)
      000C27 90               [ 4] 2001 	sub	a, b
      000C28 30 08            [12] 2002 	jr	NC, 00104$
                                   2003 ;./alex.c:121: alex.y -= 2;
      000C2A 0D               [ 4] 2004 	dec	c
      000C2B 0D               [ 4] 2005 	dec	c
      000C2C 21r04r01         [10] 2006 	ld	hl, #(_alex + 1)
      000C2F 71               [ 7] 2007 	ld	(hl), c
      000C30 18 14            [12] 2008 	jr	00105$
      000C32                       2009 00104$:
                                   2010 ;./alex.c:123: else if (puedeSubir) {
      000C32 DD 7E 04         [19] 2011 	ld	a, 4 (ix)
      000C35 B7               [ 4] 2012 	or	a, a
      000C36 28 0E            [12] 2013 	jr	Z, 00105$
                                   2014 ;./alex.c:124: alex.y += 2; // bajando
      000C38 0C               [ 4] 2015 	inc	c
      000C39 0C               [ 4] 2016 	inc	c
      000C3A 21r04r01         [10] 2017 	ld	hl, #(_alex + 1)
      000C3D 71               [ 7] 2018 	ld	(hl), c
                                   2019 ;./alex.c:125: maxSalto = 255;
      000C3E FD 21r02r01      [14] 2020 	ld	iy, #_maxSalto
      000C42 FD 36 00 FF      [19] 2021 	ld	0 (iy), #0xff
      000C46                       2022 00105$:
                                   2023 ;./alex.c:128: if (alex.state != PUÑETAZO_SALTANDO)
                                   2024 ;./alex.c:129: alex.oriented = 1;
                                   2025 ;./alex.c:127: if (keys & PORT_A_KEY_LEFT) {
      000C46 DD CB FE 56      [20] 2026 	bit	2, -2 (ix)
      000C4A 28 1A            [12] 2027 	jr	Z, 00111$
                                   2028 ;./alex.c:128: if (alex.state != PUÑETAZO_SALTANDO)
      000C4C 3Ar08r01         [13] 2029 	ld	a, (#(_alex + 5) + 0)
      000C4F D6 10            [ 7] 2030 	sub	a, #0x10
      000C51 28 05            [12] 2031 	jr	Z, 00107$
                                   2032 ;./alex.c:129: alex.oriented = 1;
      000C53 21r07r01         [10] 2033 	ld	hl, #(_alex + 4)
      000C56 36 01            [10] 2034 	ld	(hl), #0x01
      000C58                       2035 00107$:
                                   2036 ;./alex.c:130: if (puedeIzquieda)
      000C58 DD 7E 06         [19] 2037 	ld	a, 6 (ix)
      000C5B B7               [ 4] 2038 	or	a, a
      000C5C 28 08            [12] 2039 	jr	Z, 00111$
                                   2040 ;./alex.c:131: alex.x -= 2;
      000C5E 3Ar03r01         [13] 2041 	ld	a, (#_alex + 0)
      000C61 3D               [ 4] 2042 	dec	a
      000C62 3D               [ 4] 2043 	dec	a
      000C63 32r03r01         [13] 2044 	ld	(#_alex),a
      000C66                       2045 00111$:
                                   2046 ;./alex.c:133: if (keys & PORT_A_KEY_RIGHT) {
      000C66 DD CB FE 5E      [20] 2047 	bit	3, -2 (ix)
      000C6A 28 1A            [12] 2048 	jr	Z, 00117$
                                   2049 ;./alex.c:134: if (alex.state != PUÑETAZO_SALTANDO)
      000C6C 3Ar08r01         [13] 2050 	ld	a, (#(_alex + 5) + 0)
      000C6F D6 10            [ 7] 2051 	sub	a, #0x10
      000C71 28 05            [12] 2052 	jr	Z, 00113$
                                   2053 ;./alex.c:135: alex.oriented = 0;
      000C73 21r07r01         [10] 2054 	ld	hl, #(_alex + 4)
      000C76 36 00            [10] 2055 	ld	(hl), #0x00
      000C78                       2056 00113$:
                                   2057 ;./alex.c:136: if (puedeDerecha)
      000C78 DD 7E 05         [19] 2058 	ld	a, 5 (ix)
      000C7B B7               [ 4] 2059 	or	a, a
      000C7C 28 08            [12] 2060 	jr	Z, 00117$
                                   2061 ;./alex.c:137: alex.x += 2;
      000C7E 3Ar03r01         [13] 2062 	ld	a, (#_alex + 0)
      000C81 C6 02            [ 7] 2063 	add	a, #0x02
      000C83 32r03r01         [13] 2064 	ld	(#_alex),a
      000C86                       2065 00117$:
                                   2066 ;./alex.c:139: if (alex.state == PUÑETAZO_SALTANDO) {
      000C86 21r08r01         [10] 2067 	ld	hl, #(_alex + 5)
      000C89 4E               [ 7] 2068 	ld	c, (hl)
                                   2069 ;./alex.c:140: alex.lastChangeFrame--;
                                   2070 ;./alex.c:146: alex.frame = 5;
                                   2071 ;./alex.c:139: if (alex.state == PUÑETAZO_SALTANDO) {
      000C8A 79               [ 4] 2072 	ld	a, c
      000C8B D6 10            [ 7] 2073 	sub	a, #0x10
      000C8D C2r19r0D         [10] 2074 	jp	NZ,00129$
                                   2075 ;./alex.c:140: alex.lastChangeFrame--;
      000C90 21r06r01         [10] 2076 	ld	hl, #(_alex + 3)
      000C93 4E               [ 7] 2077 	ld	c, (hl)
      000C94 0D               [ 4] 2078 	dec	c
      000C95 21r06r01         [10] 2079 	ld	hl, #(_alex + 3)
                                   2080 ;./alex.c:141: if  (!alex.lastChangeFrame) {
      000C98 79               [ 4] 2081 	ld	a,c
      000C99 77               [ 7] 2082 	ld	(hl),a
      000C9A B7               [ 4] 2083 	or	a, a
      000C9B 20 0E            [12] 2084 	jr	NZ, 00119$
                                   2085 ;./alex.c:142: alex.state = 0;
      000C9D 21r08r01         [10] 2086 	ld	hl, #(_alex + 5)
      000CA0 36 00            [10] 2087 	ld	(hl), #0x00
                                   2088 ;./alex.c:143: SpriteTableY2[4] = 234;
      000CA2 2Ar40r03         [16] 2089 	ld	hl, (_SpriteTableY2)
      000CA5 11 04 00         [10] 2090 	ld	de, #0x0004
      000CA8 19               [11] 2091 	add	hl, de
      000CA9 36 EA            [10] 2092 	ld	(hl), #0xea
      000CAB                       2093 00119$:
                                   2094 ;./alex.c:145: if (!alex.oriented) {
      000CAB 3Ar07r01         [13] 2095 	ld	a, (#(_alex + 4) + 0)
      000CAE B7               [ 4] 2096 	or	a, a
      000CAF 20 34            [12] 2097 	jr	NZ, 00121$
                                   2098 ;./alex.c:146: alex.frame = 5;
      000CB1 21r05r01         [10] 2099 	ld	hl, #(_alex + 2)
      000CB4 36 05            [10] 2100 	ld	(hl), #0x05
                                   2101 ;./alex.c:148: SpriteTableXN2[8] = alex.x + 16;
      000CB6 3Ar42r03         [13] 2102 	ld	a, (_SpriteTableXN2+0)
      000CB9 C6 08            [ 7] 2103 	add	a, #0x08
      000CBB 4F               [ 4] 2104 	ld	c, a
      000CBC 3Ar43r03         [13] 2105 	ld	a, (_SpriteTableXN2+1)
      000CBF CE 00            [ 7] 2106 	adc	a, #0x00
      000CC1 47               [ 4] 2107 	ld	b, a
      000CC2 3Ar03r01         [13] 2108 	ld	a, (#_alex + 0)
      000CC5 C6 10            [ 7] 2109 	add	a, #0x10
      000CC7 02               [ 7] 2110 	ld	(bc), a
                                   2111 ;./alex.c:149: SpriteTableXN2[9] = 9;
      000CC8 2Ar42r03         [16] 2112 	ld	hl, (_SpriteTableXN2)
      000CCB 11 09 00         [10] 2113 	ld	de, #0x0009
      000CCE 19               [11] 2114 	add	hl, de
      000CCF 36 09            [10] 2115 	ld	(hl), #0x09
                                   2116 ;./alex.c:150: SpriteTableY2[4] = alex.y + 9;
      000CD1 3Ar40r03         [13] 2117 	ld	a, (_SpriteTableY2+0)
      000CD4 C6 04            [ 7] 2118 	add	a, #0x04
      000CD6 4F               [ 4] 2119 	ld	c, a
      000CD7 3Ar41r03         [13] 2120 	ld	a, (_SpriteTableY2+1)
      000CDA CE 00            [ 7] 2121 	adc	a, #0x00
      000CDC 47               [ 4] 2122 	ld	b, a
      000CDD 3Ar04r01         [13] 2123 	ld	a, (#(_alex + 1) + 0)
      000CE0 C6 09            [ 7] 2124 	add	a, #0x09
      000CE2 02               [ 7] 2125 	ld	(bc), a
      000CE3 18 62            [12] 2126 	jr	00131$
      000CE5                       2127 00121$:
                                   2128 ;./alex.c:153: alex.frame = 13;
      000CE5 21r05r01         [10] 2129 	ld	hl, #(_alex + 2)
      000CE8 36 0D            [10] 2130 	ld	(hl), #0x0d
                                   2131 ;./alex.c:155: SpriteTableXN2[8] = alex.x - 8;
      000CEA 3Ar42r03         [13] 2132 	ld	a, (_SpriteTableXN2+0)
      000CED C6 08            [ 7] 2133 	add	a, #0x08
      000CEF 4F               [ 4] 2134 	ld	c, a
      000CF0 3Ar43r03         [13] 2135 	ld	a, (_SpriteTableXN2+1)
      000CF3 CE 00            [ 7] 2136 	adc	a, #0x00
      000CF5 47               [ 4] 2137 	ld	b, a
      000CF6 3Ar03r01         [13] 2138 	ld	a, (#_alex + 0)
      000CF9 C6 F8            [ 7] 2139 	add	a, #0xf8
      000CFB 02               [ 7] 2140 	ld	(bc), a
                                   2141 ;./alex.c:156: SpriteTableXN2[9] = 11;
      000CFC 2Ar42r03         [16] 2142 	ld	hl, (_SpriteTableXN2)
      000CFF 11 09 00         [10] 2143 	ld	de, #0x0009
      000D02 19               [11] 2144 	add	hl, de
      000D03 36 0B            [10] 2145 	ld	(hl), #0x0b
                                   2146 ;./alex.c:157: SpriteTableY2[4] = alex.y + 9;
      000D05 3Ar40r03         [13] 2147 	ld	a, (_SpriteTableY2+0)
      000D08 C6 04            [ 7] 2148 	add	a, #0x04
      000D0A 4F               [ 4] 2149 	ld	c, a
      000D0B 3Ar41r03         [13] 2150 	ld	a, (_SpriteTableY2+1)
      000D0E CE 00            [ 7] 2151 	adc	a, #0x00
      000D10 47               [ 4] 2152 	ld	b, a
      000D11 3Ar04r01         [13] 2153 	ld	a, (#(_alex + 1) + 0)
      000D14 C6 09            [ 7] 2154 	add	a, #0x09
      000D16 02               [ 7] 2155 	ld	(bc), a
      000D17 18 2E            [12] 2156 	jr	00131$
      000D19                       2157 00129$:
                                   2158 ;./alex.c:161: SpriteTableY2[4] = 234;
      000D19 2Ar40r03         [16] 2159 	ld	hl, (_SpriteTableY2)
      000D1C 11 04 00         [10] 2160 	ld	de, #0x0004
      000D1F 19               [11] 2161 	add	hl, de
      000D20 36 EA            [10] 2162 	ld	(hl), #0xea
                                   2163 ;./alex.c:162: if (!alex.oriented)
      000D22 3Ar07r01         [13] 2164 	ld	a, (#(_alex + 4) + 0)
      000D25 DD 77 FD         [19] 2165 	ld	-3 (ix), a
      000D28 B7               [ 4] 2166 	or	a, a
      000D29 20 07            [12] 2167 	jr	NZ, 00124$
                                   2168 ;./alex.c:163: alex.frame = 6;
      000D2B 21r05r01         [10] 2169 	ld	hl, #(_alex + 2)
      000D2E 36 06            [10] 2170 	ld	(hl), #0x06
      000D30 18 05            [12] 2171 	jr	00125$
      000D32                       2172 00124$:
                                   2173 ;./alex.c:165: alex.frame = 14;
      000D32 21r05r01         [10] 2174 	ld	hl, #(_alex + 2)
      000D35 36 0E            [10] 2175 	ld	(hl), #0x0e
      000D37                       2176 00125$:
                                   2177 ;./alex.c:166: if (keys & PORT_A_KEY_1) {
      000D37 DD CB FE 66      [20] 2178 	bit	4, -2 (ix)
      000D3B 28 0A            [12] 2179 	jr	Z, 00131$
                                   2180 ;./alex.c:167: alex.state = PUÑETAZO_SALTANDO;
      000D3D 21r08r01         [10] 2181 	ld	hl, #(_alex + 5)
      000D40 36 10            [10] 2182 	ld	(hl), #0x10
                                   2183 ;./alex.c:168: alex.lastChangeFrame = 20;
      000D42 21r06r01         [10] 2184 	ld	hl, #(_alex + 3)
      000D45 36 14            [10] 2185 	ld	(hl), #0x14
      000D47                       2186 00131$:
                                   2187 ;./alex.c:172: }
      000D47 DD F9            [10] 2188 	ld	sp, ix
      000D49 DD E1            [14] 2189 	pop	ix
      000D4B E1               [10] 2190 	pop	hl
      000D4C F1               [10] 2191 	pop	af
      000D4D 33               [ 6] 2192 	inc	sp
      000D4E E9               [ 4] 2193 	jp	(hl)
                                   2194 ;./alex.c:174: void drawAlex(void) {
                                   2195 ;	---------------------------------
                                   2196 ; Function drawAlex
                                   2197 ; ---------------------------------
      000D4F                       2198 _drawAlex::
                                   2199 ;./alex.c:175: SpriteTableXN2[0] = alex.x;
      000D4F ED 5Br42r03      [20] 2200 	ld	de, (_SpriteTableXN2)
      000D53 01r03r01         [10] 2201 	ld	bc, #_alex+0
      000D56 0A               [ 7] 2202 	ld	a, (bc)
      000D57 12               [ 7] 2203 	ld	(de), a
                                   2204 ;./alex.c:176: SpriteTableXN2[2] = alex.x + 8;
      000D58 2Ar42r03         [16] 2205 	ld	hl, (_SpriteTableXN2)
      000D5B 23               [ 6] 2206 	inc	hl
      000D5C 23               [ 6] 2207 	inc	hl
      000D5D 0A               [ 7] 2208 	ld	a, (bc)
      000D5E C6 08            [ 7] 2209 	add	a, #0x08
      000D60 77               [ 7] 2210 	ld	(hl), a
                                   2211 ;./alex.c:177: SpriteTableXN2[4] = alex.x;
      000D61 2Ar42r03         [16] 2212 	ld	hl, (_SpriteTableXN2)
      000D64 11 04 00         [10] 2213 	ld	de, #0x0004
      000D67 19               [11] 2214 	add	hl, de
      000D68 0A               [ 7] 2215 	ld	a, (bc)
      000D69 77               [ 7] 2216 	ld	(hl), a
                                   2217 ;./alex.c:178: SpriteTableXN2[6] = alex.x + 8;
      000D6A 2Ar42r03         [16] 2218 	ld	hl, (_SpriteTableXN2)
      000D6D 11 06 00         [10] 2219 	ld	de, #0x0006
      000D70 19               [11] 2220 	add	hl, de
      000D71 0A               [ 7] 2221 	ld	a, (bc)
      000D72 C6 08            [ 7] 2222 	add	a, #0x08
      000D74 77               [ 7] 2223 	ld	(hl), a
                                   2224 ;./alex.c:179: SpriteTableY2[0] = alex.y;
      000D75 ED 5Br40r03      [20] 2225 	ld	de, (_SpriteTableY2)
      000D79 01r04r01         [10] 2226 	ld	bc, #_alex + 1
      000D7C 0A               [ 7] 2227 	ld	a, (bc)
      000D7D 12               [ 7] 2228 	ld	(de), a
                                   2229 ;./alex.c:180: SpriteTableY2[1] = alex.y;
      000D7E 2Ar40r03         [16] 2230 	ld	hl, (_SpriteTableY2)
      000D81 23               [ 6] 2231 	inc	hl
      000D82 0A               [ 7] 2232 	ld	a, (bc)
      000D83 77               [ 7] 2233 	ld	(hl), a
                                   2234 ;./alex.c:181: SpriteTableY2[2] = alex.y + 16;
      000D84 2Ar40r03         [16] 2235 	ld	hl, (_SpriteTableY2)
      000D87 23               [ 6] 2236 	inc	hl
      000D88 23               [ 6] 2237 	inc	hl
      000D89 0A               [ 7] 2238 	ld	a, (bc)
      000D8A C6 10            [ 7] 2239 	add	a, #0x10
      000D8C 77               [ 7] 2240 	ld	(hl), a
                                   2241 ;./alex.c:182: SpriteTableY2[3] = alex.y + 16;
      000D8D 2Ar40r03         [16] 2242 	ld	hl, (_SpriteTableY2)
      000D90 23               [ 6] 2243 	inc	hl
      000D91 23               [ 6] 2244 	inc	hl
      000D92 23               [ 6] 2245 	inc	hl
      000D93 0A               [ 7] 2246 	ld	a, (bc)
      000D94 C6 10            [ 7] 2247 	add	a, #0x10
      000D96 77               [ 7] 2248 	ld	(hl), a
                                   2249 ;./alex.c:183: if (alex.frame != lastFrame) {
      000D97 21r05r01         [10] 2250 	ld	hl, #(_alex + 2)
      000D9A 5E               [ 7] 2251 	ld	e, (hl)
      000D9B 3Ar11r01         [13] 2252 	ld	a, (_lastFrame+0)
      000D9E 93               [ 4] 2253 	sub	a, e
      000D9F C8               [11] 2254 	ret	Z
                                   2255 ;./alex.c:184: SMS_loadTiles(alex.sprite->data + alex.frame *256, alex.sprite->beginVRAM, 255);
      000DA0 ED 4Br0Fr01      [20] 2256 	ld	bc, (#_alex + 12)
      000DA4 C5               [11] 2257 	push	bc
      000DA5 FD E1            [14] 2258 	pop	iy
      000DA7 FD 6E 07         [19] 2259 	ld	l, 7 (iy)
                                   2260 ;	spillPairReg hl
      000DAA FD 66 08         [19] 2261 	ld	h, 8 (iy)
                                   2262 ;	spillPairReg hl
      000DAD 53               [ 4] 2263 	ld	d, e
      000DAE 1E 00            [ 7] 2264 	ld	e, #0x00
      000DB0 19               [11] 2265 	add	hl, de
      000DB1 EB               [ 4] 2266 	ex	de, hl
      000DB2 21 04 00         [10] 2267 	ld	hl, #4
      000DB5 09               [11] 2268 	add	hl, bc
      000DB6 7E               [ 7] 2269 	ld	a, (hl)
      000DB7 23               [ 6] 2270 	inc	hl
      000DB8 66               [ 7] 2271 	ld	h, (hl)
                                   2272 ;	spillPairReg hl
      000DB9 6F               [ 4] 2273 	ld	l, a
                                   2274 ;	spillPairReg hl
                                   2275 ;	spillPairReg hl
      000DBA 29               [11] 2276 	add	hl, hl
      000DBB 29               [11] 2277 	add	hl, hl
      000DBC 29               [11] 2278 	add	hl, hl
      000DBD 29               [11] 2279 	add	hl, hl
      000DBE 29               [11] 2280 	add	hl, hl
      000DBF CB F4            [ 8] 2281 	set	6, h
      000DC1 01 FF 00         [10] 2282 	ld	bc, #0x00ff
      000DC4 C5               [11] 2283 	push	bc
      000DC5 CDr00r00         [17] 2284 	call	_SMS_VRAMmemcpy
                                   2285 ;./alex.c:185: lastFrame = alex.frame;
      000DC8 21r05r01         [10] 2286 	ld	hl, #(_alex + 2)
      000DCB 7E               [ 7] 2287 	ld	a, (hl)
      000DCC 32r11r01         [13] 2288 	ld	(_lastFrame+0), a
                                   2289 ;./alex.c:187: }
      000DCF C9               [10] 2290 	ret
                                   2291 ;./alex.c:189: void moveAlex(int keys) {
                                   2292 ;	---------------------------------
                                   2293 ; Function moveAlex
                                   2294 ; ---------------------------------
      000DD0                       2295 _moveAlex::
      000DD0 DD E5            [15] 2296 	push	ix
      000DD2 DD 21 00 00      [14] 2297 	ld	ix,#0
      000DD6 DD 39            [15] 2298 	add	ix,sp
      000DD8 3B               [ 6] 2299 	dec	sp
                                   2300 ;./alex.c:190: unsigned char puedeBajar = canDown();
      000DD9 E5               [11] 2301 	push	hl
      000DDA CDr0Er0A         [17] 2302 	call	_canDown
      000DDD 4F               [ 4] 2303 	ld	c, a
      000DDE C5               [11] 2304 	push	bc
      000DDF CDr02r0A         [17] 2305 	call	_canUp
      000DE2 DD 77 FF         [19] 2306 	ld	-1 (ix), a
      000DE5 CDr28r0A         [17] 2307 	call	_canRight
      000DE8 5F               [ 4] 2308 	ld	e, a
      000DE9 D5               [11] 2309 	push	de
      000DEA CDr1Cr0A         [17] 2310 	call	_canLeft
      000DED D1               [10] 2311 	pop	de
      000DEE C1               [10] 2312 	pop	bc
      000DEF E1               [10] 2313 	pop	hl
                                   2314 ;./alex.c:194: if (puedeBajar)
      000DF0 0C               [ 4] 2315 	inc	c
      000DF1 0D               [ 4] 2316 	dec	c
      000DF2 28 0C            [12] 2317 	jr	Z, 00102$
                                   2318 ;./alex.c:195: moveAlexAire(keys, puedeSubir, puedeDerecha, puedeIzquierda);
      000DF4 57               [ 4] 2319 	ld	d,a
      000DF5 D5               [11] 2320 	push	de
      000DF6 DD 7E FF         [19] 2321 	ld	a, -1 (ix)
      000DF9 F5               [11] 2322 	push	af
      000DFA 33               [ 6] 2323 	inc	sp
      000DFB CDr0Fr0C         [17] 2324 	call	_moveAlexAire
      000DFE 18 03            [12] 2325 	jr	00104$
      000E00                       2326 00102$:
                                   2327 ;./alex.c:197: moveAlexSuelo(keys);
      000E00 CDr36r0A         [17] 2328 	call	_moveAlexSuelo
      000E03                       2329 00104$:
                                   2330 ;./alex.c:199: }
      000E03 33               [ 6] 2331 	inc	sp
      000E04 DD E1            [14] 2332 	pop	ix
      000E06 C9               [10] 2333 	ret
                                   2334 ;main.c:35: void main(void)
                                   2335 ;	---------------------------------
                                   2336 ; Function main
                                   2337 ; ---------------------------------
      000E07                       2338 _main::
      000E07 DD E5            [15] 2339 	push	ix
      000E09 DD 21 00 00      [14] 2340 	ld	ix,#0
      000E0D DD 39            [15] 2341 	add	ix,sp
      000E0F 3B               [ 6] 2342 	dec	sp
                                   2343 ;main.c:40: SMS_VRAMmemsetW(0, 0x0000, 16384);
      000E10 21 00 40         [10] 2344 	ld	hl, #0x4000
      000E13 E5               [11] 2345 	push	hl
      000E14 11 00 00         [10] 2346 	ld	de, #0x0000
      000E17 65               [ 4] 2347 	ld	h, l
      000E18 CDr00r00         [17] 2348 	call	_SMS_VRAMmemsetW
                                   2349 ;main.c:50: printf("Hello, World! [1/3]");
      000E1B 21rD9r0E         [10] 2350 	ld	hl, #___str_0
      000E1E E5               [11] 2351 	push	hl
      000E1F CDr00r00         [17] 2352 	call	_printf
      000E22 F1               [10] 2353 	pop	af
                                   2354 ;main.c:55: SMS_displayOn();
      000E23 21 40 01         [10] 2355 	ld	hl, #0x0140
      000E26 CDr00r00         [17] 2356 	call	_SMS_VDPturnOnFeature
                                   2357 ;main.c:56: SMS_setBGScrollX(scroll_x);
      000E29 2E 00            [ 7] 2358 	ld	l, #0x00
                                   2359 ;	spillPairReg hl
                                   2360 ;	spillPairReg hl
      000E2B CDr00r00         [17] 2361 	call	_SMS_setBGScrollX
                                   2362 ;main.c:57: SMS_setBGScrollY(scroll_y);
      000E2E 2E 00            [ 7] 2363 	ld	l, #0x00
                                   2364 ;	spillPairReg hl
                                   2365 ;	spillPairReg hl
      000E30 CDr00r00         [17] 2366 	call	_SMS_setBGScrollY
                                   2367 ;main.c:58: SMS_init();
      000E33 CDr00r00         [17] 2368 	call	_SMS_init
                                   2369 ;main.c:59: initSpritesVariables();
      000E36 CDr79r05         [17] 2370 	call	_initSpritesVariables
                                   2371 ;main.c:60: loadGrapVRAM();
      000E39 CDr24r12         [17] 2372 	call	_loadGrapVRAM
                                   2373 ;main.c:66: char banco = SMS_getROMBank();
      000E3C 3A FF FF         [13] 2374 	ld	a, (_ROM_bank_to_be_mapped_on_slot2+0)
      000E3F DD 77 FF         [19] 2375 	ld	-1 (ix), a
                                   2376 ;main.c:67: SMS_mapROMBank(3);
      000E42 21 FF FF         [10] 2377 	ld	hl, #_ROM_bank_to_be_mapped_on_slot2
      000E45 36 03            [10] 2378 	ld	(hl), #0x03
                                   2379 ;main.c:68: PSGPlay(special_psg);
      000E47 21r00r00         [10] 2380 	ld	hl, #_special_psg
      000E4A CDr00r00         [17] 2381 	call	_PSGPlay
                                   2382 ;main.c:70: SMS_mapROMBank(banco);
      000E4D DD 7E FF         [19] 2383 	ld	a, -1 (ix)
      000E50 32 FF FF         [13] 2384 	ld	(_ROM_bank_to_be_mapped_on_slot2+0), a
                                   2385 ;main.c:71: SMS_VDPturnOnFeature(VDPFEATURE_LEFTCOLBLANK);
      000E53 21 20 00         [10] 2386 	ld	hl, #0x0020
      000E56 CDr00r00         [17] 2387 	call	_SMS_VDPturnOnFeature
                                   2388 ;main.c:72: SMS_VDPturnOnFeature(VDPFEATURE_EXTRAHEIGHT);
      000E59 21 02 00         [10] 2389 	ld	hl, #0x0002
      000E5C CDr00r00         [17] 2390 	call	_SMS_VDPturnOnFeature
                                   2391 ;main.c:74: SMS_VDPturnOnFeature(VDPFEATURE_240LINES);
      000E5F 21 08 01         [10] 2392 	ld	hl, #0x0108
      000E62 CDr00r00         [17] 2393 	call	_SMS_VDPturnOnFeature
                                   2394 ;main.c:75: SMS_setFrameInterruptHandler(playMusic);
      000E65 21r2Fr0F         [10] 2395 	ld	hl, #_playMusic
      000E68 CDr00r00         [17] 2396 	call	_SMS_setFrameInterruptHandler
      000E6B                       2397 00111$:
                                   2398 ;main.c:80: if (SMS_queryPauseRequested())
      000E6B CDr00r00         [17] 2399 	call	_SMS_queryPauseRequested
      000E6E CB 47            [ 8] 2400 	bit	0,a
      000E70 28 29            [12] 2401 	jr	Z, 00105$
                                   2402 ;main.c:82: char banco = SMS_getROMBank();
      000E72 3A FF FF         [13] 2403 	ld	a, (_ROM_bank_to_be_mapped_on_slot2+0)
      000E75 DD 77 FF         [19] 2404 	ld	-1 (ix), a
                                   2405 ;main.c:83: SMS_mapROMBank(3);
      000E78 21 FF FF         [10] 2406 	ld	hl, #_ROM_bank_to_be_mapped_on_slot2
      000E7B 36 03            [10] 2407 	ld	(hl), #0x03
                                   2408 ;main.c:84: PSGPlay(emeraldhill_psg);
      000E7D 21r00r00         [10] 2409 	ld	hl, #_emeraldhill_psg
      000E80 CDr00r00         [17] 2410 	call	_PSGPlay
                                   2411 ;main.c:85: SMS_mapROMBank(banco);
      000E83 DD 7E FF         [19] 2412 	ld	a, -1 (ix)
      000E86 32 FF FF         [13] 2413 	ld	(_ROM_bank_to_be_mapped_on_slot2+0), a
                                   2414 ;main.c:86: SMS_resetPauseRequest();
      000E89 CDr00r00         [17] 2415 	call	_SMS_resetPauseRequest
                                   2416 ;main.c:87: while (!SMS_queryPauseRequested())
      000E8C                       2417 00101$:
      000E8C CDr00r00         [17] 2418 	call	_SMS_queryPauseRequested
      000E8F CB 47            [ 8] 2419 	bit	0,a
      000E91 20 05            [12] 2420 	jr	NZ, 00103$
                                   2421 ;main.c:89: SMS_waitForVBlank();
      000E93 CDr00r00         [17] 2422 	call	_SMS_waitForVBlank
      000E96 18 F4            [12] 2423 	jr	00101$
      000E98                       2424 00103$:
                                   2425 ;main.c:93: SMS_resetPauseRequest();
      000E98 CDr00r00         [17] 2426 	call	_SMS_resetPauseRequest
      000E9B                       2427 00105$:
                                   2428 ;main.c:98: unsigned int keys = SMS_getKeysHeld();
      000E9B CDr00r00         [17] 2429 	call	_SMS_getKeysHeld
      000E9E EB               [ 4] 2430 	ex	de, hl
                                   2431 ;main.c:99: if(keys & PORT_A_KEY_2)
      000E9F CB 6D            [ 8] 2432 	bit	5, l
      000EA1 28 04            [12] 2433 	jr	Z, 00107$
                                   2434 ;main.c:100: keys = keys  ^ PORT_A_KEY_2;
      000EA3 7D               [ 4] 2435 	ld	a, l
      000EA4 EE 20            [ 7] 2436 	xor	a, #0x20
      000EA6 6F               [ 4] 2437 	ld	l, a
                                   2438 ;	spillPairReg hl
                                   2439 ;	spillPairReg hl
      000EA7                       2440 00107$:
                                   2441 ;main.c:101: if(keys & PORT_A_KEY_1)
      000EA7 CB 65            [ 8] 2442 	bit	4, l
      000EA9 28 04            [12] 2443 	jr	Z, 00109$
                                   2444 ;main.c:102: keys = keys  ^ PORT_A_KEY_1;
      000EAB 7D               [ 4] 2445 	ld	a, l
      000EAC EE 10            [ 7] 2446 	xor	a, #0x10
      000EAE 6F               [ 4] 2447 	ld	l, a
                                   2448 ;	spillPairReg hl
                                   2449 ;	spillPairReg hl
      000EAF                       2450 00109$:
                                   2451 ;main.c:104: keys = keys | (SMS_getKeysPressed() & (PORT_A_KEY_2 | PORT_A_KEY_1));
      000EAF E5               [11] 2452 	push	hl
      000EB0 CDr00r00         [17] 2453 	call	_SMS_getKeysPressed
      000EB3 E1               [10] 2454 	pop	hl
      000EB4 7B               [ 4] 2455 	ld	a, e
      000EB5 E6 30            [ 7] 2456 	and	a, #0x30
      000EB7 B5               [ 4] 2457 	or	a, l
      000EB8 6F               [ 4] 2458 	ld	l, a
                                   2459 ;	spillPairReg hl
                                   2460 ;	spillPairReg hl
                                   2461 ;main.c:107: moveAlex(keys);
      000EB9 CDrD0r0D         [17] 2462 	call	_moveAlex
                                   2463 ;main.c:109: dibujaPajaros();
      000EBC CDr45r0F         [17] 2464 	call	_dibujaPajaros
                                   2465 ;main.c:114: SMS_waitForVBlank();
      000EBF CDr00r00         [17] 2466 	call	_SMS_waitForVBlank
                                   2467 ;main.c:115: drawAlex();
      000EC2 CDr4Fr0D         [17] 2468 	call	_drawAlex
                                   2469 ;main.c:120: copySpritestoSAT();
      000EC5 CDrA8r05         [17] 2470 	call	_copySpritestoSAT
                                   2471 ;main.c:126: SMS_setBGScrollX(scroll_x);
      000EC8 2E 00            [ 7] 2472 	ld	l, #0x00
                                   2473 ;	spillPairReg hl
                                   2474 ;	spillPairReg hl
      000ECA CDr00r00         [17] 2475 	call	_SMS_setBGScrollX
                                   2476 ;main.c:128: SMS_displayOn();
      000ECD 21 40 01         [10] 2477 	ld	hl, #0x0140
      000ED0 CDr00r00         [17] 2478 	call	_SMS_VDPturnOnFeature
      000ED3 18 96            [12] 2479 	jr	00111$
                                   2480 ;main.c:130: }
      000ED5 33               [ 6] 2481 	inc	sp
      000ED6 DD E1            [14] 2482 	pop	ix
      000ED8 C9               [10] 2483 	ret
      000ED9                       2484 ___str_0:
      000ED9 48 65 6C 6C 6F 2C 20  2485 	.ascii "Hello, World! [1/3]"
             57 6F 72 6C 64 21 20
             5B 31 2F 33 5D
      000EEC 00                    2486 	.db 0x00
                                   2487 ;main.c:135: void disableSprites(void) {
                                   2488 ;	---------------------------------
                                   2489 ; Function disableSprites
                                   2490 ; ---------------------------------
      000EED                       2491 _disableSprites::
                                   2492 ;main.c:138: while (i < 64) {
      000EED 0E 00            [ 7] 2493 	ld	c, #0x00
      000EEF                       2494 00101$:
      000EEF 79               [ 4] 2495 	ld	a, c
      000EF0 D6 40            [ 7] 2496 	sub	a, #0x40
      000EF2 30 10            [12] 2497 	jr	NC, 00103$
                                   2498 ;main.c:139: SMS_updateSpritePosition(i,10,240); 
      000EF4 41               [ 4] 2499 	ld	b, c
      000EF5 C5               [11] 2500 	push	bc
      000EF6 3E F0            [ 7] 2501 	ld	a, #0xf0
      000EF8 F5               [11] 2502 	push	af
      000EF9 33               [ 6] 2503 	inc	sp
      000EFA 2E 0A            [ 7] 2504 	ld	l, #0x0a
                                   2505 ;	spillPairReg hl
                                   2506 ;	spillPairReg hl
      000EFC 78               [ 4] 2507 	ld	a, b
      000EFD CDr00r00         [17] 2508 	call	_SMS_updateSpritePosition
      000F00 C1               [10] 2509 	pop	bc
                                   2510 ;main.c:140: i++;
      000F01 0C               [ 4] 2511 	inc	c
      000F02 18 EB            [12] 2512 	jr	00101$
      000F04                       2513 00103$:
                                   2514 ;main.c:142: numSprites = 0;
      000F04 21 00 00         [10] 2515 	ld	hl, #0x0000
      000F07 22r50r04         [16] 2516 	ld	(_numSprites), hl
                                   2517 ;main.c:143: }
      000F0A C9               [10] 2518 	ret
      000F0B                       2519 __str_1:
      000F0B 53 45 47 41           2520 	.ascii "SEGA"
      000F0F 00                    2521 	.db 0x00
      000F10                       2522 __str_2:
      000F10 62 61 73 69 63 20 65  2523 	.ascii "basic example"
             78 61 6D 70 6C 65
      000F1D 00                    2524 	.db 0x00
      000F1E                       2525 __str_3:
      000F1E 41 20 73 69 6D 70 6C  2526 	.ascii "A simple example"
             65 20 65 78 61 6D 70
             6C 65
      000F2E 00                    2527 	.db 0x00
                                   2528 ;main.c:146: void playMusic(void) {
                                   2529 ;	---------------------------------
                                   2530 ; Function playMusic
                                   2531 ; ---------------------------------
      000F2F                       2532 _playMusic::
                                   2533 ;main.c:147: char banco = SMS_getROMBank();
      000F2F 3A FF FF         [13] 2534 	ld	a, (_ROM_bank_to_be_mapped_on_slot2+0)
      000F32 4F               [ 4] 2535 	ld	c, a
                                   2536 ;main.c:148: SMS_mapROMBank(3);
      000F33 21 FF FF         [10] 2537 	ld	hl, #_ROM_bank_to_be_mapped_on_slot2
      000F36 36 03            [10] 2538 	ld	(hl), #0x03
                                   2539 ;main.c:149: PSGFrame();
      000F38 C5               [11] 2540 	push	bc
      000F39 CDr00r00         [17] 2541 	call	_PSGFrame
      000F3C CDr00r00         [17] 2542 	call	_PSGSFXFrame
      000F3F C1               [10] 2543 	pop	bc
                                   2544 ;main.c:152: SMS_mapROMBank(banco);
      000F40 21 FF FF         [10] 2545 	ld	hl, #_ROM_bank_to_be_mapped_on_slot2
      000F43 71               [ 7] 2546 	ld	(hl), c
                                   2547 ;main.c:153: }
      000F44 C9               [10] 2548 	ret
                                   2549 ;main.c:155: void dibujaPajaros(void)
                                   2550 ;	---------------------------------
                                   2551 ; Function dibujaPajaros
                                   2552 ; ---------------------------------
      000F45                       2553 _dibujaPajaros::
      000F45 DD E5            [15] 2554 	push	ix
      000F47 DD 21 00 00      [14] 2555 	ld	ix,#0
      000F4B DD 39            [15] 2556 	add	ix,sp
      000F4D 21 F1 FF         [10] 2557 	ld	hl, #-15
      000F50 39               [11] 2558 	add	hl, sp
      000F51 F9               [ 6] 2559 	ld	sp, hl
                                   2560 ;main.c:159: unsigned char initPajaros = pajaros[0].initSprite;
      000F52 3Ar4Cr03         [13] 2561 	ld	a,(#_pajaros + 6)
      000F55 DD 77 F1         [19] 2562 	ld	-15 (ix), a
                                   2563 ;main.c:160: for (i = 0; i < NUM_PAJAROS; i++)
      000F58 DD 36 FF 00      [19] 2564 	ld	-1 (ix), #0x00
      000F5C                       2565 00142$:
                                   2566 ;main.c:162: p = &pajaros[i];
      000F5C DD 4E FF         [19] 2567 	ld	c, -1 (ix)
      000F5F 06 00            [ 7] 2568 	ld	b, #0x00
      000F61 69               [ 4] 2569 	ld	l, c
      000F62 60               [ 4] 2570 	ld	h, b
      000F63 29               [11] 2571 	add	hl, hl
      000F64 09               [11] 2572 	add	hl, bc
      000F65 29               [11] 2573 	add	hl, hl
      000F66 09               [11] 2574 	add	hl, bc
      000F67 29               [11] 2575 	add	hl, hl
      000F68 11r46r03         [10] 2576 	ld	de, #_pajaros
      000F6B 19               [11] 2577 	add	hl, de
      000F6C DD 75 F2         [19] 2578 	ld	-14 (ix), l
      000F6F DD 74 F3         [19] 2579 	ld	-13 (ix), h
                                   2580 ;main.c:163: p->lastChangeFrame++;
      000F72 DD 7E F2         [19] 2581 	ld	a, -14 (ix)
      000F75 C6 03            [ 7] 2582 	add	a, #0x03
      000F77 DD 77 F4         [19] 2583 	ld	-12 (ix), a
      000F7A DD 7E F3         [19] 2584 	ld	a, -13 (ix)
      000F7D CE 00            [ 7] 2585 	adc	a, #0x00
      000F7F DD 77 F5         [19] 2586 	ld	-11 (ix), a
      000F82 DD 6E F4         [19] 2587 	ld	l, -12 (ix)
      000F85 DD 66 F5         [19] 2588 	ld	h, -11 (ix)
      000F88 4E               [ 7] 2589 	ld	c, (hl)
      000F89 0C               [ 4] 2590 	inc	c
      000F8A DD 6E F4         [19] 2591 	ld	l, -12 (ix)
      000F8D DD 66 F5         [19] 2592 	ld	h, -11 (ix)
      000F90 71               [ 7] 2593 	ld	(hl), c
                                   2594 ;main.c:171: for(j=0;j<spritePajaro.alto;j++) {
      000F91 DD 7E F2         [19] 2595 	ld	a, -14 (ix)
      000F94 C6 08            [ 7] 2596 	add	a, #0x08
      000F96 DD 77 F6         [19] 2597 	ld	-10 (ix), a
      000F99 DD 7E F3         [19] 2598 	ld	a, -13 (ix)
      000F9C CE 00            [ 7] 2599 	adc	a, #0x00
      000F9E DD 77 F7         [19] 2600 	ld	-9 (ix), a
                                   2601 ;main.c:164: if (p->lastChangeFrame == 20)
      000FA1 79               [ 4] 2602 	ld	a, c
      000FA2 D6 14            [ 7] 2603 	sub	a, #0x14
      000FA4 C2r65r10         [10] 2604 	jp	NZ,00108$
                                   2605 ;main.c:166: p->frame++;
      000FA7 DD 5E F2         [19] 2606 	ld	e, -14 (ix)
      000FAA DD 56 F3         [19] 2607 	ld	d, -13 (ix)
      000FAD 13               [ 6] 2608 	inc	de
      000FAE 13               [ 6] 2609 	inc	de
      000FAF 1A               [ 7] 2610 	ld	a, (de)
      000FB0 3C               [ 4] 2611 	inc	a
      000FB1 4F               [ 4] 2612 	ld	c, a
      000FB2 12               [ 7] 2613 	ld	(de), a
                                   2614 ;main.c:167: if (p->frame > 1)
      000FB3 3E 01            [ 7] 2615 	ld	a, #0x01
      000FB5 91               [ 4] 2616 	sub	a, c
      000FB6 30 02            [12] 2617 	jr	NC, 00102$
                                   2618 ;main.c:168: p->frame = 0;
      000FB8 AF               [ 4] 2619 	xor	a, a
      000FB9 12               [ 7] 2620 	ld	(de), a
      000FBA                       2621 00102$:
                                   2622 ;main.c:169: p->lastChangeFrame = 0;
      000FBA DD 6E F4         [19] 2623 	ld	l, -12 (ix)
      000FBD DD 66 F5         [19] 2624 	ld	h, -11 (ix)
      000FC0 36 00            [10] 2625 	ld	(hl), #0x00
                                   2626 ;main.c:170: int frame = spritePajaro.tamano*p->frame + spritePajaro.beginVRAM;
      000FC2 21r1Er01         [10] 2627 	ld	hl, #_spritePajaro + 2
      000FC5 66               [ 7] 2628 	ld	h, (hl)
                                   2629 ;	spillPairReg hl
      000FC6 1A               [ 7] 2630 	ld	a, (de)
      000FC7 5F               [ 4] 2631 	ld	e, a
      000FC8 2E 00            [ 7] 2632 	ld	l, #0x00
      000FCA 55               [ 4] 2633 	ld	d, l
      000FCB 06 08            [ 7] 2634 	ld	b, #0x08
      000FCD                       2635 00313$:
      000FCD 29               [11] 2636 	add	hl, hl
      000FCE 30 01            [12] 2637 	jr	NC, 00314$
      000FD0 19               [11] 2638 	add	hl, de
      000FD1                       2639 00314$:
      000FD1 10 FA            [13] 2640 	djnz	00313$
      000FD3 4D               [ 4] 2641 	ld	c, l
      000FD4 3Ar20r01         [13] 2642 	ld	a, (#_spritePajaro + 4)
      000FD7 81               [ 4] 2643 	add	a, c
      000FD8 4F               [ 4] 2644 	ld	c, a
                                   2645 ;main.c:171: for(j=0;j<spritePajaro.alto;j++) {
      000FD9 DD 7E F6         [19] 2646 	ld	a, -10 (ix)
      000FDC DD 77 F8         [19] 2647 	ld	-8 (ix), a
      000FDF DD 7E F7         [19] 2648 	ld	a, -9 (ix)
      000FE2 DD 77 F9         [19] 2649 	ld	-7 (ix), a
      000FE5 1E 00            [ 7] 2650 	ld	e, #0x00
      000FE7                       2651 00140$:
      000FE7 21r1Cr01         [10] 2652 	ld	hl, #_spritePajaro
      000FEA 46               [ 7] 2653 	ld	b, (hl)
                                   2654 ;main.c:172: desplazado = (j<<2);
      000FEB 7B               [ 4] 2655 	ld	a,e
      000FEC B8               [ 4] 2656 	cp	a,b
      000FED 30 76            [12] 2657 	jr	NC, 00108$
      000FEF 87               [ 4] 2658 	add	a, a
      000FF0 87               [ 4] 2659 	add	a, a
                                   2660 ;main.c:173: jCalculated = desplazado + frame;
      000FF1 81               [ 4] 2661 	add	a, c
      000FF2 DD 77 FA         [19] 2662 	ld	-6 (ix), a
                                   2663 ;main.c:175: for(i2=0;i2<spritePajaro.ancho;i2++) {
      000FF5 06 00            [ 7] 2664 	ld	b, #0x00
      000FF7                       2665 00137$:
      000FF7 21r1Dr01         [10] 2666 	ld	hl, #_spritePajaro + 1
      000FFA 56               [ 7] 2667 	ld	d, (hl)
                                   2668 ;main.c:176: SpriteTableXN2[(i2+initPajaros)*2+1] = jCalculated + (i2<<1);
      000FFB 78               [ 4] 2669 	ld	a,b
      000FFC BA               [ 4] 2670 	cp	a,d
      000FFD 30 63            [12] 2671 	jr	NC, 00141$
      000FFF 16 00            [ 7] 2672 	ld	d, #0x00
      001001 DD 6E F1         [19] 2673 	ld	l, -15 (ix)
                                   2674 ;	spillPairReg hl
                                   2675 ;	spillPairReg hl
      001004 26 00            [ 7] 2676 	ld	h, #0x00
                                   2677 ;	spillPairReg hl
                                   2678 ;	spillPairReg hl
      001006 85               [ 4] 2679 	add	a, l
      001007 6F               [ 4] 2680 	ld	l, a
                                   2681 ;	spillPairReg hl
                                   2682 ;	spillPairReg hl
      001008 7A               [ 4] 2683 	ld	a, d
      001009 8C               [ 4] 2684 	adc	a, h
      00100A 67               [ 4] 2685 	ld	h, a
                                   2686 ;	spillPairReg hl
                                   2687 ;	spillPairReg hl
      00100B 29               [11] 2688 	add	hl, hl
      00100C 23               [ 6] 2689 	inc	hl
      00100D DD 75 FB         [19] 2690 	ld	-5 (ix), l
      001010 DD 74 FC         [19] 2691 	ld	-4 (ix), h
      001013 3Ar42r03         [13] 2692 	ld	a, (_SpriteTableXN2+0)
      001016 DD 86 FB         [19] 2693 	add	a, -5 (ix)
      001019 DD 77 FD         [19] 2694 	ld	-3 (ix), a
      00101C 3Ar43r03         [13] 2695 	ld	a, (_SpriteTableXN2+1)
      00101F DD 8E FC         [19] 2696 	adc	a, -4 (ix)
      001022 DD 77 FE         [19] 2697 	ld	-2 (ix), a
      001025 78               [ 4] 2698 	ld	a, b
      001026 87               [ 4] 2699 	add	a, a
      001027 DD 56 FA         [19] 2700 	ld	d, -6 (ix)
      00102A 82               [ 4] 2701 	add	a, d
      00102B DD 6E FD         [19] 2702 	ld	l, -3 (ix)
      00102E DD 66 FE         [19] 2703 	ld	h, -2 (ix)
      001031 77               [ 7] 2704 	ld	(hl), a
                                   2705 ;main.c:177: if(p->vx < 0)
      001032 DD 6E F8         [19] 2706 	ld	l, -8 (ix)
      001035 DD 66 F9         [19] 2707 	ld	h, -7 (ix)
      001038 23               [ 6] 2708 	inc	hl
                                   2709 ;	spillPairReg hl
      001039 CB 7E            [12] 2710 	bit	7, (hl)
      00103B 28 22            [12] 2711 	jr	Z, 00138$
                                   2712 ;main.c:178: SpriteTableXN2[(i2+initPajaros)*2+1] += 12;
      00103D DD 7E FB         [19] 2713 	ld	a, -5 (ix)
      001040 21r42r03         [10] 2714 	ld	hl, #_SpriteTableXN2
      001043 86               [ 7] 2715 	add	a, (hl)
      001044 DD 77 FD         [19] 2716 	ld	-3 (ix), a
      001047 DD 7E FC         [19] 2717 	ld	a, -4 (ix)
      00104A 23               [ 6] 2718 	inc	hl
      00104B 8E               [ 7] 2719 	adc	a, (hl)
      00104C DD 77 FE         [19] 2720 	ld	-2 (ix), a
      00104F DD 6E FD         [19] 2721 	ld	l, -3 (ix)
      001052 DD 66 FE         [19] 2722 	ld	h, -2 (ix)
      001055 7E               [ 7] 2723 	ld	a, (hl)
      001056 C6 0C            [ 7] 2724 	add	a, #0x0c
      001058 DD 6E FD         [19] 2725 	ld	l, -3 (ix)
      00105B DD 66 FE         [19] 2726 	ld	h, -2 (ix)
      00105E 77               [ 7] 2727 	ld	(hl), a
      00105F                       2728 00138$:
                                   2729 ;main.c:175: for(i2=0;i2<spritePajaro.ancho;i2++) {
      00105F 04               [ 4] 2730 	inc	b
      001060 18 95            [12] 2731 	jr	00137$
      001062                       2732 00141$:
                                   2733 ;main.c:171: for(j=0;j<spritePajaro.alto;j++) {
      001062 1C               [ 4] 2734 	inc	e
      001063 18 82            [12] 2735 	jr	00140$
      001065                       2736 00108$:
                                   2737 ;main.c:183: initPajaros +=3;
      001065 DD 7E F1         [19] 2738 	ld	a, -15 (ix)
      001068 C6 03            [ 7] 2739 	add	a, #0x03
      00106A DD 77 F1         [19] 2740 	ld	-15 (ix), a
                                   2741 ;main.c:184: i2 = p->initSprite << 1;
      00106D DD 7E F2         [19] 2742 	ld	a, -14 (ix)
      001070 C6 06            [ 7] 2743 	add	a, #0x06
      001072 DD 77 FA         [19] 2744 	ld	-6 (ix), a
      001075 DD 7E F3         [19] 2745 	ld	a, -13 (ix)
      001078 CE 00            [ 7] 2746 	adc	a, #0x00
      00107A DD 77 FB         [19] 2747 	ld	-5 (ix), a
      00107D DD 6E FA         [19] 2748 	ld	l, -6 (ix)
      001080 DD 66 FB         [19] 2749 	ld	h, -5 (ix)
      001083 7E               [ 7] 2750 	ld	a, (hl)
      001084 87               [ 4] 2751 	add	a, a
      001085 DD 77 FC         [19] 2752 	ld	-4 (ix), a
                                   2753 ;main.c:185: p->x += p->vx;
      001088 DD 6E F2         [19] 2754 	ld	l, -14 (ix)
      00108B DD 66 F3         [19] 2755 	ld	h, -13 (ix)
      00108E 4E               [ 7] 2756 	ld	c, (hl)
      00108F DD 7E F6         [19] 2757 	ld	a, -10 (ix)
      001092 DD 77 FD         [19] 2758 	ld	-3 (ix), a
      001095 DD 7E F7         [19] 2759 	ld	a, -9 (ix)
      001098 DD 77 FE         [19] 2760 	ld	-2 (ix), a
      00109B DD 6E F6         [19] 2761 	ld	l, -10 (ix)
      00109E DD 66 F7         [19] 2762 	ld	h, -9 (ix)
      0010A1 7E               [ 7] 2763 	ld	a, (hl)
      0010A2 81               [ 4] 2764 	add	a, c
      0010A3 DD 6E F2         [19] 2765 	ld	l, -14 (ix)
      0010A6 DD 66 F3         [19] 2766 	ld	h, -13 (ix)
      0010A9 77               [ 7] 2767 	ld	(hl), a
                                   2768 ;main.c:186: if (SpriteTableXN2[i2] >= 230) {
      0010AA 3Ar42r03         [13] 2769 	ld	a, (_SpriteTableXN2+0)
      0010AD DD 86 FC         [19] 2770 	add	a, -4 (ix)
      0010B0 4F               [ 4] 2771 	ld	c, a
      0010B1 3Ar43r03         [13] 2772 	ld	a, (_SpriteTableXN2+1)
      0010B4 CE 00            [ 7] 2773 	adc	a, #0x00
      0010B6 47               [ 4] 2774 	ld	b, a
      0010B7 0A               [ 7] 2775 	ld	a, (bc)
      0010B8 FE E6            [ 7] 2776 	cp	a, #0xe6
      0010BA 38 15            [12] 2777 	jr	C, 00112$
                                   2778 ;main.c:187: p->vx = -1;
      0010BC DD 6E F6         [19] 2779 	ld	l, -10 (ix)
      0010BF DD 66 F7         [19] 2780 	ld	h, -9 (ix)
      0010C2 36 FF            [10] 2781 	ld	(hl), #0xff
      0010C4 23               [ 6] 2782 	inc	hl
      0010C5 36 FF            [10] 2783 	ld	(hl), #0xff
                                   2784 ;main.c:188: p->lastChangeFrame = 19;
      0010C7 DD 6E F4         [19] 2785 	ld	l, -12 (ix)
      0010CA DD 66 F5         [19] 2786 	ld	h, -11 (ix)
      0010CD 36 13            [10] 2787 	ld	(hl), #0x13
      0010CF 18 17            [12] 2788 	jr	00156$
      0010D1                       2789 00112$:
                                   2790 ;main.c:190: else if(SpriteTableXN2[i2] < 10) {
      0010D1 D6 0A            [ 7] 2791 	sub	a, #0x0a
      0010D3 30 13            [12] 2792 	jr	NC, 00156$
                                   2793 ;main.c:191: p->vx = 1;
      0010D5 DD 6E F6         [19] 2794 	ld	l, -10 (ix)
      0010D8 DD 66 F7         [19] 2795 	ld	h, -9 (ix)
      0010DB 36 01            [10] 2796 	ld	(hl), #0x01
      0010DD 23               [ 6] 2797 	inc	hl
      0010DE 36 00            [10] 2798 	ld	(hl), #0x00
                                   2799 ;main.c:192: p->lastChangeFrame = 19;
      0010E0 DD 6E F4         [19] 2800 	ld	l, -12 (ix)
      0010E3 DD 66 F5         [19] 2801 	ld	h, -11 (ix)
      0010E6 36 13            [10] 2802 	ld	(hl), #0x13
                                   2803 ;main.c:194: while(i2<p->len) {
      0010E8                       2804 00156$:
      0010E8 DD 7E F2         [19] 2805 	ld	a, -14 (ix)
      0010EB C6 07            [ 7] 2806 	add	a, #0x07
      0010ED DD 77 F6         [19] 2807 	ld	-10 (ix), a
      0010F0 DD 7E F3         [19] 2808 	ld	a, -13 (ix)
      0010F3 CE 00            [ 7] 2809 	adc	a, #0x00
      0010F5 DD 77 F7         [19] 2810 	ld	-9 (ix), a
      0010F8                       2811 00114$:
      0010F8 DD 6E F6         [19] 2812 	ld	l, -10 (ix)
      0010FB DD 66 F7         [19] 2813 	ld	h, -9 (ix)
      0010FE DD 7E FC         [19] 2814 	ld	a,-4 (ix)
      001101 96               [ 7] 2815 	sub	a,(hl)
      001102 30 31            [12] 2816 	jr	NC, 00116$
                                   2817 ;main.c:195: SpriteTableXN2[i2] += p->vx;
      001104 3Ar42r03         [13] 2818 	ld	a, (_SpriteTableXN2+0)
      001107 DD 86 FC         [19] 2819 	add	a, -4 (ix)
      00110A DD 77 F8         [19] 2820 	ld	-8 (ix), a
      00110D 3Ar43r03         [13] 2821 	ld	a, (_SpriteTableXN2+1)
      001110 CE 00            [ 7] 2822 	adc	a, #0x00
      001112 DD 77 F9         [19] 2823 	ld	-7 (ix), a
      001115 DD 6E F8         [19] 2824 	ld	l, -8 (ix)
      001118 DD 66 F9         [19] 2825 	ld	h, -7 (ix)
      00111B 4E               [ 7] 2826 	ld	c, (hl)
      00111C DD 6E FD         [19] 2827 	ld	l, -3 (ix)
      00111F DD 66 FE         [19] 2828 	ld	h, -2 (ix)
      001122 7E               [ 7] 2829 	ld	a, (hl)
      001123 81               [ 4] 2830 	add	a, c
      001124 DD 6E F8         [19] 2831 	ld	l, -8 (ix)
      001127 DD 66 F9         [19] 2832 	ld	h, -7 (ix)
      00112A 77               [ 7] 2833 	ld	(hl), a
                                   2834 ;main.c:196: i2 +=2;
      00112B DD 7E FC         [19] 2835 	ld	a, -4 (ix)
      00112E C6 02            [ 7] 2836 	add	a, #0x02
      001130 DD 77 FC         [19] 2837 	ld	-4 (ix), a
      001133 18 C3            [12] 2838 	jr	00114$
      001135                       2839 00116$:
                                   2840 ;main.c:199: if (alex.state == PUÑETAZO_SALTANDO) {
      001135 3Ar08r01         [13] 2841 	ld	a, (#(_alex + 5) + 0)
      001138 D6 10            [ 7] 2842 	sub	a, #0x10
      00113A C2r14r12         [10] 2843 	jp	NZ,00143$
                                   2844 ;main.c:200: unsigned char matar = 1;
      00113D 0E 01            [ 7] 2845 	ld	c, #0x01
                                   2846 ;main.c:201: if(SpriteTableXN2[8] > p->x + 24 )
      00113F FD 2Ar42r03      [20] 2847 	ld	iy, (_SpriteTableXN2)
      001143 FD 46 08         [19] 2848 	ld	b, 8 (iy)
                                   2849 ;main.c:185: p->x += p->vx;
      001146 DD 6E F2         [19] 2850 	ld	l, -14 (ix)
      001149 DD 66 F3         [19] 2851 	ld	h, -13 (ix)
      00114C 7E               [ 7] 2852 	ld	a, (hl)
                                   2853 ;main.c:201: if(SpriteTableXN2[8] > p->x + 24 )
      00114D DD 77 FD         [19] 2854 	ld	-3 (ix), a
      001150 DD 36 FE 00      [19] 2855 	ld	-2 (ix), #0x00
      001154 DD 6E FD         [19] 2856 	ld	l, -3 (ix)
                                   2857 ;	spillPairReg hl
                                   2858 ;	spillPairReg hl
      001157 26 00            [ 7] 2859 	ld	h, #0x00
                                   2860 ;	spillPairReg hl
                                   2861 ;	spillPairReg hl
      001159 11 18 00         [10] 2862 	ld	de, #0x0018
      00115C 19               [11] 2863 	add	hl, de
      00115D 58               [ 4] 2864 	ld	e, b
      00115E 16 00            [ 7] 2865 	ld	d, #0x00
      001160 7D               [ 4] 2866 	ld	a, l
      001161 93               [ 4] 2867 	sub	a, e
      001162 7C               [ 4] 2868 	ld	a, h
      001163 9A               [ 4] 2869 	sbc	a, d
      001164 E2r69r11         [10] 2870 	jp	PO, 00317$
      001167 EE 80            [ 7] 2871 	xor	a, #0x80
      001169                       2872 00317$:
      001169 F2r6Er11         [10] 2873 	jp	P, 00118$
                                   2874 ;main.c:202: matar = 0;
      00116C 0E 00            [ 7] 2875 	ld	c, #0x00
      00116E                       2876 00118$:
                                   2877 ;main.c:203: if (matar && (SpriteTableXN2[8] + 16 < p->x))
      00116E 79               [ 4] 2878 	ld	a, c
      00116F B7               [ 4] 2879 	or	a, a
      001170 28 16            [12] 2880 	jr	Z, 00120$
      001172 21 10 00         [10] 2881 	ld	hl, #0x0010
      001175 19               [11] 2882 	add	hl, de
      001176 7D               [ 4] 2883 	ld	a, l
      001177 DD 96 FD         [19] 2884 	sub	a, -3 (ix)
      00117A 7C               [ 4] 2885 	ld	a, h
      00117B DD 9E FE         [19] 2886 	sbc	a, -2 (ix)
      00117E E2r83r11         [10] 2887 	jp	PO, 00318$
      001181 EE 80            [ 7] 2888 	xor	a, #0x80
      001183                       2889 00318$:
      001183 F2r88r11         [10] 2890 	jp	P, 00120$
                                   2891 ;main.c:204: matar = 0;
      001186 0E 00            [ 7] 2892 	ld	c, #0x00
      001188                       2893 00120$:
                                   2894 ;main.c:205: if(matar && (SpriteTableY2[4] > p->y + 16))
      001188 3Ar40r03         [13] 2895 	ld	a, (_SpriteTableY2+0)
      00118B C6 04            [ 7] 2896 	add	a, #0x04
      00118D DD 77 FD         [19] 2897 	ld	-3 (ix), a
      001190 3Ar41r03         [13] 2898 	ld	a, (_SpriteTableY2+1)
      001193 CE 00            [ 7] 2899 	adc	a, #0x00
      001195 DD 77 FE         [19] 2900 	ld	-2 (ix), a
      001198 DD 5E F2         [19] 2901 	ld	e, -14 (ix)
      00119B DD 56 F3         [19] 2902 	ld	d, -13 (ix)
      00119E 13               [ 6] 2903 	inc	de
      00119F 79               [ 4] 2904 	ld	a, c
      0011A0 B7               [ 4] 2905 	or	a, a
      0011A1 28 29            [12] 2906 	jr	Z, 00123$
      0011A3 DD 6E FD         [19] 2907 	ld	l, -3 (ix)
      0011A6 DD 66 FE         [19] 2908 	ld	h, -2 (ix)
      0011A9 46               [ 7] 2909 	ld	b, (hl)
      0011AA 1A               [ 7] 2910 	ld	a, (de)
      0011AB 26 00            [ 7] 2911 	ld	h, #0x00
                                   2912 ;	spillPairReg hl
                                   2913 ;	spillPairReg hl
      0011AD C6 10            [ 7] 2914 	add	a, #0x10
      0011AF 6F               [ 4] 2915 	ld	l, a
                                   2916 ;	spillPairReg hl
                                   2917 ;	spillPairReg hl
      0011B0 30 01            [12] 2918 	jr	NC, 00319$
      0011B2 24               [ 4] 2919 	inc	h
      0011B3                       2920 00319$:
      0011B3 DD 70 F8         [19] 2921 	ld	-8 (ix), b
      0011B6 DD 36 F9 00      [19] 2922 	ld	-7 (ix), #0x00
      0011BA 7D               [ 4] 2923 	ld	a, l
      0011BB DD 96 F8         [19] 2924 	sub	a, -8 (ix)
      0011BE 7C               [ 4] 2925 	ld	a, h
      0011BF DD 9E F9         [19] 2926 	sbc	a, -7 (ix)
      0011C2 E2rC7r11         [10] 2927 	jp	PO, 00320$
      0011C5 EE 80            [ 7] 2928 	xor	a, #0x80
      0011C7                       2929 00320$:
      0011C7 F2rCCr11         [10] 2930 	jp	P, 00123$
                                   2931 ;main.c:206: matar = 0;
      0011CA 0E 00            [ 7] 2932 	ld	c, #0x00
      0011CC                       2933 00123$:
                                   2934 ;main.c:207: if (matar && (SpriteTableY2[4] + 12 < p->y))
      0011CC 79               [ 4] 2935 	ld	a, c
      0011CD B7               [ 4] 2936 	or	a, a
      0011CE 28 21            [12] 2937 	jr	Z, 00126$
      0011D0 DD 6E FD         [19] 2938 	ld	l, -3 (ix)
      0011D3 DD 66 FE         [19] 2939 	ld	h, -2 (ix)
      0011D6 7E               [ 7] 2940 	ld	a, (hl)
      0011D7 2E 00            [ 7] 2941 	ld	l, #0x00
                                   2942 ;	spillPairReg hl
                                   2943 ;	spillPairReg hl
      0011D9 C6 0C            [ 7] 2944 	add	a, #0x0c
      0011DB 47               [ 4] 2945 	ld	b, a
      0011DC 30 01            [12] 2946 	jr	NC, 00321$
      0011DE 2C               [ 4] 2947 	inc	l
      0011DF                       2948 00321$:
      0011DF 1A               [ 7] 2949 	ld	a, (de)
      0011E0 5F               [ 4] 2950 	ld	e, a
      0011E1 16 00            [ 7] 2951 	ld	d, #0x00
      0011E3 78               [ 4] 2952 	ld	a, b
      0011E4 93               [ 4] 2953 	sub	a, e
      0011E5 7D               [ 4] 2954 	ld	a, l
      0011E6 9A               [ 4] 2955 	sbc	a, d
      0011E7 E2rECr11         [10] 2956 	jp	PO, 00322$
      0011EA EE 80            [ 7] 2957 	xor	a, #0x80
      0011EC                       2958 00322$:
      0011EC F2rF1r11         [10] 2959 	jp	P, 00126$
                                   2960 ;main.c:208: matar = 0;
      0011EF 0E 00            [ 7] 2961 	ld	c, #0x00
      0011F1                       2962 00126$:
                                   2963 ;main.c:209: if (matar) {
      0011F1 79               [ 4] 2964 	ld	a, c
      0011F2 B7               [ 4] 2965 	or	a, a
      0011F3 28 1F            [12] 2966 	jr	Z, 00143$
                                   2967 ;main.c:211: i2 = p->initSprite;
      0011F5 DD 6E FA         [19] 2968 	ld	l, -6 (ix)
      0011F8 DD 66 FB         [19] 2969 	ld	h, -5 (ix)
      0011FB 4E               [ 7] 2970 	ld	c, (hl)
                                   2971 ;main.c:212: while(i2<(p->len>>1)) {
      0011FC                       2972 00128$:
      0011FC DD 6E F6         [19] 2973 	ld	l, -10 (ix)
      0011FF DD 66 F7         [19] 2974 	ld	h, -9 (ix)
      001202 46               [ 7] 2975 	ld	b, (hl)
      001203 CB 38            [ 8] 2976 	srl	b
      001205 79               [ 4] 2977 	ld	a, c
      001206 90               [ 4] 2978 	sub	a, b
      001207 30 0B            [12] 2979 	jr	NC, 00143$
                                   2980 ;main.c:213: SpriteTableY2[i2] = 239;
      001209 2Ar40r03         [16] 2981 	ld	hl, (_SpriteTableY2)
      00120C 06 00            [ 7] 2982 	ld	b, #0x00
      00120E 09               [11] 2983 	add	hl, bc
      00120F 36 EF            [10] 2984 	ld	(hl), #0xef
                                   2985 ;main.c:214: i2 ++;
      001211 0C               [ 4] 2986 	inc	c
      001212 18 E8            [12] 2987 	jr	00128$
      001214                       2988 00143$:
                                   2989 ;main.c:160: for (i = 0; i < NUM_PAJAROS; i++)
      001214 DD 34 FF         [23] 2990 	inc	-1 (ix)
      001217 DD 7E FF         [19] 2991 	ld	a, -1 (ix)
      00121A D6 13            [ 7] 2992 	sub	a, #0x13
      00121C DAr5Cr0F         [10] 2993 	jp	C, 00142$
                                   2994 ;main.c:219: }
      00121F DD F9            [10] 2995 	ld	sp, ix
      001221 DD E1            [14] 2996 	pop	ix
      001223 C9               [10] 2997 	ret
                                   2998 ;main.c:222: void loadGrapVRAM(void)
                                   2999 ;	---------------------------------
                                   3000 ; Function loadGrapVRAM
                                   3001 ; ---------------------------------
      001224                       3002 _loadGrapVRAM::
      001224 DD E5            [15] 3003 	push	ix
      001226 DD 21 00 00      [14] 3004 	ld	ix,#0
      00122A DD 39            [15] 3005 	add	ix,sp
      00122C 21 E2 FF         [10] 3006 	ld	hl, #-30
      00122F 39               [11] 3007 	add	hl, sp
      001230 F9               [ 6] 3008 	ld	sp, hl
                                   3009 ;main.c:224: SMS_init();
      001231 CDr00r00         [17] 3010 	call	_SMS_init
                                   3011 ;main.c:227: SMS_setSpriteMode(SPRITEMODE_TALL);
      001234 2E 01            [ 7] 3012 	ld	l, #0x01
                                   3013 ;	spillPairReg hl
                                   3014 ;	spillPairReg hl
      001236 CDr00r00         [17] 3015 	call	_SMS_setSpriteMode
                                   3016 ;main.c:228: SMS_displayOn();
      001239 21 40 01         [10] 3017 	ld	hl, #0x0140
      00123C CDr00r00         [17] 3018 	call	_SMS_VDPturnOnFeature
                                   3019 ;main.c:229: SMS_loadBGPalette(sonicpalette_inc);
      00123F 21r00r00         [10] 3020 	ld	hl, #_sonicpalette_inc
      001242 CDr00r00         [17] 3021 	call	_SMS_loadBGPalette
                                   3022 ;main.c:230: SMS_loadSpritePalette(palleteAlex_inc);
      001245 21r00r00         [10] 3023 	ld	hl, #_palleteAlex_inc
      001248 CDr00r00         [17] 3024 	call	_SMS_loadSpritePalette
                                   3025 ;main.c:232: spriteAlex = generateSpriteNoRAM(2, 2, spriteAlex_inc_size, spriteAlex_inc);
      00124B 21r00r00         [10] 3026 	ld	hl, #_spriteAlex_inc
      00124E E5               [11] 3027 	push	hl
      00124F 21 00 10         [10] 3028 	ld	hl, #0x1000
      001252 E5               [11] 3029 	push	hl
                                   3030 ;	spillPairReg hl
                                   3031 ;	spillPairReg hl
      001253 3E 02            [ 7] 3032 	ld	a,#0x02
      001255 6F               [ 4] 3033 	ld	l,a
      001256 E5               [11] 3034 	push	hl
      001257 21 06 00         [10] 3035 	ld	hl, #0x0006
      00125A 39               [11] 3036 	add	hl, sp
      00125B EB               [ 4] 3037 	ex	de,hl
      00125C E1               [10] 3038 	pop	hl
      00125D D5               [11] 3039 	push	de
      00125E CDr46r02         [17] 3040 	call	_generateSpriteNoRAM
      001261 F1               [10] 3041 	pop	af
      001262 F1               [10] 3042 	pop	af
      001263 F1               [10] 3043 	pop	af
      001264 11r12r01         [10] 3044 	ld	de, #_spriteAlex
      001267 21 00 00         [10] 3045 	ld	hl, #0
      00126A 39               [11] 3046 	add	hl, sp
      00126B 01 0A 00         [10] 3047 	ld	bc, #0x000a
      00126E ED B0            [21] 3048 	ldir
                                   3049 ;main.c:233: spritePuno = generateSprite(1, 2, puno_inc_size, puno_inc);
      001270 21r00r00         [10] 3050 	ld	hl, #_puno_inc
      001273 E5               [11] 3051 	push	hl
      001274 21 80 00         [10] 3052 	ld	hl, #0x0080
      001277 E5               [11] 3053 	push	hl
      001278 2E 02            [ 7] 3054 	ld	l, #0x02
                                   3055 ;	spillPairReg hl
                                   3056 ;	spillPairReg hl
      00127A 3E 01            [ 7] 3057 	ld	a, #0x01
      00127C E5               [11] 3058 	push	hl
      00127D 21 10 00         [10] 3059 	ld	hl, #0x0010
      001280 39               [11] 3060 	add	hl, sp
      001281 EB               [ 4] 3061 	ex	de,hl
      001282 E1               [10] 3062 	pop	hl
      001283 D5               [11] 3063 	push	de
      001284 CDr9Cr01         [17] 3064 	call	_generateSprite
      001287 F1               [10] 3065 	pop	af
      001288 F1               [10] 3066 	pop	af
      001289 F1               [10] 3067 	pop	af
      00128A 11r26r01         [10] 3068 	ld	de, #_spritePuno
      00128D 21 0A 00         [10] 3069 	ld	hl, #10
      001290 39               [11] 3070 	add	hl, sp
      001291 01 0A 00         [10] 3071 	ld	bc, #0x000a
      001294 ED B0            [21] 3072 	ldir
                                   3073 ;main.c:234: spritePajaro = generateSpriteFlip(3, 1, spritePajaro_inc_size, spritePajaro_inc);
      001296 21r00r00         [10] 3074 	ld	hl, #_spritePajaro_inc
      001299 E5               [11] 3075 	push	hl
      00129A 21 80 01         [10] 3076 	ld	hl, #0x0180
      00129D E5               [11] 3077 	push	hl
      00129E 2E 01            [ 7] 3078 	ld	l, #0x01
                                   3079 ;	spillPairReg hl
                                   3080 ;	spillPairReg hl
      0012A0 3E 03            [ 7] 3081 	ld	a, #0x03
      0012A2 E5               [11] 3082 	push	hl
      0012A3 21 1A 00         [10] 3083 	ld	hl, #0x001a
      0012A6 39               [11] 3084 	add	hl, sp
      0012A7 EB               [ 4] 3085 	ex	de,hl
      0012A8 E1               [10] 3086 	pop	hl
      0012A9 D5               [11] 3087 	push	de
      0012AA CDr00r00         [17] 3088 	call	_generateSpriteFlip
      0012AD F1               [10] 3089 	pop	af
      0012AE F1               [10] 3090 	pop	af
      0012AF F1               [10] 3091 	pop	af
      0012B0 11r1Cr01         [10] 3092 	ld	de, #_spritePajaro
      0012B3 21 14 00         [10] 3093 	ld	hl, #20
      0012B6 39               [11] 3094 	add	hl, sp
      0012B7 01 0A 00         [10] 3095 	ld	bc, #0x000a
      0012BA ED B0            [21] 3096 	ldir
                                   3097 ;main.c:235: SMS_initSprites();
      0012BC CDr00r00         [17] 3098 	call	_SMS_initSprites
                                   3099 ;main.c:236: alex.initSprite = 255;
      0012BF 21r09r01         [10] 3100 	ld	hl, #_alex + 6
      0012C2 36 FF            [10] 3101 	ld	(hl), #0xff
                                   3102 ;main.c:237: draw_entidad(&alex, &spriteAlex);
      0012C4 11r12r01         [10] 3103 	ld	de, #_spriteAlex
      0012C7 21r03r01         [10] 3104 	ld	hl, #_alex
      0012CA CDrDCr05         [17] 3105 	call	_draw_entidad
                                   3106 ;main.c:238: SMS_addSprite (0, 0, 9); // puno
      0012CD 11 09 00         [10] 3107 	ld	de, #0x0009
      0012D0 21 00 00         [10] 3108 	ld	hl, #0x0000
      0012D3 CDr00r00         [17] 3109 	call	_SMS_addSprite_f
                                   3110 ;main.c:239: inicializaPajaros();
      0012D6 CDr03r13         [17] 3111 	call	_inicializaPajaros
                                   3112 ;main.c:244: SMS_loadTiles(tiles_de_prueba2_inc, 0, tiles_de_prueba2_inc_size);
      0012D9 21 A0 00         [10] 3113 	ld	hl, #0x00a0
      0012DC E5               [11] 3114 	push	hl
      0012DD 11r00r00         [10] 3115 	ld	de, #_tiles_de_prueba2_inc
      0012E0 21 00 40         [10] 3116 	ld	hl, #0x4000
      0012E3 CDr00r00         [17] 3117 	call	_SMS_VRAMmemcpy
                                   3118 ;main.c:245: SMS_loadTileMap(0, 0, tilemap_de_prueba2_inc, tilemap_de_prueba2_inc_size);
      0012E6 21 80 07         [10] 3119 	ld	hl, #0x0780
      0012E9 E5               [11] 3120 	push	hl
      0012EA 11r00r00         [10] 3121 	ld	de, #_tilemap_de_prueba2_inc
      0012ED 21 00 78         [10] 3122 	ld	hl, #0x7800
      0012F0 CDr00r00         [17] 3123 	call	_SMS_VRAMmemcpy
                                   3124 ;main.c:246: SMS_loadBGPalette(paleta_de_prueba2_inc);
      0012F3 21r00r00         [10] 3125 	ld	hl, #_paleta_de_prueba2_inc
      0012F6 CDr00r00         [17] 3126 	call	_SMS_loadBGPalette
                                   3127 ;main.c:247: SMS_setSpritePaletteColor(0,0);
                                   3128 ;	spillPairReg hl
                                   3129 ;	spillPairReg hl
      0012F9 AF               [ 4] 3130 	xor	a, a
      0012FA 6F               [ 4] 3131 	ld	l, a
      0012FB CDr00r00         [17] 3132 	call	_SMS_setSpritePaletteColor
                                   3133 ;main.c:248: }
      0012FE DD F9            [10] 3134 	ld	sp, ix
      001300 DD E1            [14] 3135 	pop	ix
      001302 C9               [10] 3136 	ret
                                   3137 ;main.c:251: void inicializaPajaros(void)
                                   3138 ;	---------------------------------
                                   3139 ; Function inicializaPajaros
                                   3140 ; ---------------------------------
      001303                       3141 _inicializaPajaros::
      001303 DD E5            [15] 3142 	push	ix
      001305 DD 21 00 00      [14] 3143 	ld	ix,#0
      001309 DD 39            [15] 3144 	add	ix,sp
      00130B 21 F7 FF         [10] 3145 	ld	hl, #-9
      00130E 39               [11] 3146 	add	hl, sp
      00130F F9               [ 6] 3147 	ld	sp, hl
                                   3148 ;main.c:254: for (i = 0; i < NUM_PAJAROS; i++)
      001310 DD 36 FF 00      [19] 3149 	ld	-1 (ix), #0x00
      001314                       3150 00108$:
                                   3151 ;main.c:256: pajaros[i].x = 15 + (32 * i) % 200;
      001314 DD 4E FF         [19] 3152 	ld	c, -1 (ix)
      001317 06 00            [ 7] 3153 	ld	b, #0x00
      001319 69               [ 4] 3154 	ld	l, c
      00131A 60               [ 4] 3155 	ld	h, b
      00131B 29               [11] 3156 	add	hl, hl
      00131C 09               [11] 3157 	add	hl, bc
      00131D 29               [11] 3158 	add	hl, hl
      00131E 09               [11] 3159 	add	hl, bc
      00131F 29               [11] 3160 	add	hl, hl
      001320 11r46r03         [10] 3161 	ld	de, #_pajaros
      001323 19               [11] 3162 	add	hl, de
      001324 E3               [19] 3163 	ex	(sp), hl
      001325 DD 7E FF         [19] 3164 	ld	a, -1 (ix)
      001328 DD 77 F9         [19] 3165 	ld	-7 (ix), a
      00132B DD 36 FA 00      [19] 3166 	ld	-6 (ix), #0x00
      00132F C1               [10] 3167 	pop	bc
      001330 E1               [10] 3168 	pop	hl
      001331 E5               [11] 3169 	push	hl
      001332 C5               [11] 3170 	push	bc
      001333 29               [11] 3171 	add	hl, hl
      001334 29               [11] 3172 	add	hl, hl
      001335 29               [11] 3173 	add	hl, hl
      001336 29               [11] 3174 	add	hl, hl
      001337 29               [11] 3175 	add	hl, hl
      001338 11 C8 00         [10] 3176 	ld	de, #0x00c8
      00133B CDr00r00         [17] 3177 	call	__modsint
      00133E 7B               [ 4] 3178 	ld	a, e
      00133F C6 0F            [ 7] 3179 	add	a, #0x0f
      001341 E1               [10] 3180 	pop	hl
      001342 E5               [11] 3181 	push	hl
      001343 77               [ 7] 3182 	ld	(hl), a
                                   3183 ;main.c:257: pajaros[i].y = 16 * (i / 2);
      001344 DD 7E F7         [19] 3184 	ld	a, -9 (ix)
      001347 C6 01            [ 7] 3185 	add	a, #0x01
      001349 DD 77 FB         [19] 3186 	ld	-5 (ix), a
      00134C DD 7E F8         [19] 3187 	ld	a, -8 (ix)
      00134F CE 00            [ 7] 3188 	adc	a, #0x00
      001351 DD 77 FC         [19] 3189 	ld	-4 (ix), a
      001354 DD 7E F9         [19] 3190 	ld	a, -7 (ix)
      001357 DD 77 FD         [19] 3191 	ld	-3 (ix), a
      00135A DD 7E FA         [19] 3192 	ld	a, -6 (ix)
      00135D DD 77 FE         [19] 3193 	ld	-2 (ix), a
      001360 DD CB FA 7E      [20] 3194 	bit	7, -6 (ix)
      001364 28 10            [12] 3195 	jr	Z, 00112$
      001366 DD 7E F9         [19] 3196 	ld	a, -7 (ix)
      001369 C6 01            [ 7] 3197 	add	a, #0x01
      00136B DD 77 FD         [19] 3198 	ld	-3 (ix), a
      00136E DD 7E FA         [19] 3199 	ld	a, -6 (ix)
      001371 CE 00            [ 7] 3200 	adc	a, #0x00
      001373 DD 77 FE         [19] 3201 	ld	-2 (ix), a
      001376                       3202 00112$:
      001376 DD 4E FD         [19] 3203 	ld	c, -3 (ix)
      001379 DD 46 FE         [19] 3204 	ld	b, -2 (ix)
      00137C CB 28            [ 8] 3205 	sra	b
      00137E CB 19            [ 8] 3206 	rr	c
      001380 79               [ 4] 3207 	ld	a, c
      001381 87               [ 4] 3208 	add	a, a
      001382 87               [ 4] 3209 	add	a, a
      001383 87               [ 4] 3210 	add	a, a
      001384 87               [ 4] 3211 	add	a, a
      001385 DD 6E FB         [19] 3212 	ld	l, -5 (ix)
      001388 DD 66 FC         [19] 3213 	ld	h, -4 (ix)
      00138B 77               [ 7] 3214 	ld	(hl), a
                                   3215 ;main.c:258: pajaros[i].lastChangeFrame = i * 3;
      00138C C1               [10] 3216 	pop	bc
      00138D C5               [11] 3217 	push	bc
      00138E 03               [ 6] 3218 	inc	bc
      00138F 03               [ 6] 3219 	inc	bc
      001390 03               [ 6] 3220 	inc	bc
      001391 DD 7E FF         [19] 3221 	ld	a, -1 (ix)
      001394 5F               [ 4] 3222 	ld	e, a
      001395 87               [ 4] 3223 	add	a, a
      001396 83               [ 4] 3224 	add	a, e
      001397 02               [ 7] 3225 	ld	(bc), a
                                   3226 ;main.c:259: pajaros[i].initSprite = 255;
      001398 DD 7E F7         [19] 3227 	ld	a, -9 (ix)
      00139B C6 06            [ 7] 3228 	add	a, #0x06
      00139D 5F               [ 4] 3229 	ld	e, a
      00139E DD 7E F8         [19] 3230 	ld	a, -8 (ix)
      0013A1 CE 00            [ 7] 3231 	adc	a, #0x00
      0013A3 57               [ 4] 3232 	ld	d, a
      0013A4 3E FF            [ 7] 3233 	ld	a, #0xff
      0013A6 12               [ 7] 3234 	ld	(de), a
                                   3235 ;main.c:261: pajaros[i].x++;
      0013A7 E1               [10] 3236 	pop	hl
      0013A8 E5               [11] 3237 	push	hl
      0013A9 7E               [ 7] 3238 	ld	a, (hl)
      0013AA 3C               [ 4] 3239 	inc	a
      0013AB E1               [10] 3240 	pop	hl
      0013AC E5               [11] 3241 	push	hl
      0013AD 77               [ 7] 3242 	ld	(hl), a
                                   3243 ;main.c:262: pajaros[i].lastChangeFrame++;
      0013AE 0A               [ 7] 3244 	ld	a, (bc)
      0013AF 3C               [ 4] 3245 	inc	a
      0013B0 02               [ 7] 3246 	ld	(bc), a
                                   3247 ;main.c:263: pajaros[i].vx = 1;
      0013B1 DD 7E F7         [19] 3248 	ld	a, -9 (ix)
      0013B4 C6 08            [ 7] 3249 	add	a, #0x08
      0013B6 6F               [ 4] 3250 	ld	l, a
                                   3251 ;	spillPairReg hl
                                   3252 ;	spillPairReg hl
      0013B7 DD 7E F8         [19] 3253 	ld	a, -8 (ix)
      0013BA CE 00            [ 7] 3254 	adc	a, #0x00
      0013BC 67               [ 4] 3255 	ld	h, a
                                   3256 ;	spillPairReg hl
                                   3257 ;	spillPairReg hl
      0013BD 36 01            [10] 3258 	ld	(hl), #0x01
      0013BF 23               [ 6] 3259 	inc	hl
      0013C0 36 00            [10] 3260 	ld	(hl), #0x00
                                   3261 ;main.c:264: pajaros[i].vy = 0;
      0013C2 DD 7E F7         [19] 3262 	ld	a, -9 (ix)
      0013C5 C6 0A            [ 7] 3263 	add	a, #0x0a
      0013C7 6F               [ 4] 3264 	ld	l, a
                                   3265 ;	spillPairReg hl
                                   3266 ;	spillPairReg hl
      0013C8 DD 7E F8         [19] 3267 	ld	a, -8 (ix)
      0013CB CE 00            [ 7] 3268 	adc	a, #0x00
      0013CD 67               [ 4] 3269 	ld	h, a
                                   3270 ;	spillPairReg hl
                                   3271 ;	spillPairReg hl
      0013CE AF               [ 4] 3272 	xor	a, a
      0013CF 77               [ 7] 3273 	ld	(hl), a
      0013D0 23               [ 6] 3274 	inc	hl
      0013D1 77               [ 7] 3275 	ld	(hl), a
                                   3276 ;main.c:265: if (pajaros[i].lastChangeFrame == 20)
      0013D2 0A               [ 7] 3277 	ld	a, (bc)
      0013D3 D6 14            [ 7] 3278 	sub	a, #0x14
      0013D5 20 15            [12] 3279 	jr	NZ, 00104$
                                   3280 ;main.c:267: pajaros[i].frame++;
      0013D7 E1               [10] 3281 	pop	hl
      0013D8 E5               [11] 3282 	push	hl
      0013D9 23               [ 6] 3283 	inc	hl
      0013DA 23               [ 6] 3284 	inc	hl
      0013DB 7E               [ 7] 3285 	ld	a, (hl)
      0013DC 3C               [ 4] 3286 	inc	a
      0013DD DD 77 FE         [19] 3287 	ld	-2 (ix), a
      0013E0 77               [ 7] 3288 	ld	(hl), a
                                   3289 ;main.c:268: if (pajaros[i].frame > 1)
      0013E1 3E 01            [ 7] 3290 	ld	a, #0x01
      0013E3 DD 96 FE         [19] 3291 	sub	a, -2 (ix)
      0013E6 30 02            [12] 3292 	jr	NC, 00102$
                                   3293 ;main.c:269: pajaros[i].frame = 0;
      0013E8 36 00            [10] 3294 	ld	(hl), #0x00
      0013EA                       3295 00102$:
                                   3296 ;main.c:270: pajaros[i].lastChangeFrame = 0;
      0013EA AF               [ 4] 3297 	xor	a, a
      0013EB 02               [ 7] 3298 	ld	(bc), a
      0013EC                       3299 00104$:
                                   3300 ;main.c:272: if(pajaros[i].initSprite == 255) {
      0013EC 1A               [ 7] 3301 	ld	a, (de)
      0013ED 3C               [ 4] 3302 	inc	a
      0013EE 20 08            [12] 3303 	jr	NZ, 00109$
                                   3304 ;main.c:273: draw_entidad(&(pajaros[i]), &spritePajaro);
      0013F0 11r1Cr01         [10] 3305 	ld	de, #_spritePajaro
      0013F3 E1               [10] 3306 	pop	hl
      0013F4 E5               [11] 3307 	push	hl
      0013F5 CDrDCr05         [17] 3308 	call	_draw_entidad
      0013F8                       3309 00109$:
                                   3310 ;main.c:254: for (i = 0; i < NUM_PAJAROS; i++)
      0013F8 DD 34 FF         [23] 3311 	inc	-1 (ix)
      0013FB DD 7E FF         [19] 3312 	ld	a, -1 (ix)
      0013FE D6 13            [ 7] 3313 	sub	a, #0x13
      001400 DAr14r13         [10] 3314 	jp	C, 00108$
                                   3315 ;main.c:276: }
      001403 DD F9            [10] 3316 	ld	sp, ix
      001405 DD E1            [14] 3317 	pop	ix
      001407 C9               [10] 3318 	ret
                                   3319 	.area _CODE
                                   3320 	.area _INITIALIZER
      000000                       3321 __xinit__nextVRAMsprites:
      000000 00 01                 3322 	.dw #0x0100
      000002                       3323 __xinit__flipArray:
      000002 00                    3324 	.db #0x00	; 0
      000003 80                    3325 	.db #0x80	; 128
      000004 40                    3326 	.db #0x40	; 64
      000005 C0                    3327 	.db #0xc0	; 192
      000006 20                    3328 	.db #0x20	; 32
      000007 A0                    3329 	.db #0xa0	; 160
      000008 60                    3330 	.db #0x60	; 96
      000009 E0                    3331 	.db #0xe0	; 224
      00000A 10                    3332 	.db #0x10	; 16
      00000B 90                    3333 	.db #0x90	; 144
      00000C 50                    3334 	.db #0x50	; 80	'P'
      00000D D0                    3335 	.db #0xd0	; 208
      00000E 30                    3336 	.db #0x30	; 48	'0'
      00000F B0                    3337 	.db #0xb0	; 176
      000010 70                    3338 	.db #0x70	; 112	'p'
      000011 F0                    3339 	.db #0xf0	; 240
      000012 08                    3340 	.db #0x08	; 8
      000013 88                    3341 	.db #0x88	; 136
      000014 48                    3342 	.db #0x48	; 72	'H'
      000015 C8                    3343 	.db #0xc8	; 200
      000016 28                    3344 	.db #0x28	; 40
      000017 A8                    3345 	.db #0xa8	; 168
      000018 68                    3346 	.db #0x68	; 104	'h'
      000019 E8                    3347 	.db #0xe8	; 232
      00001A 18                    3348 	.db #0x18	; 24
      00001B 98                    3349 	.db #0x98	; 152
      00001C 58                    3350 	.db #0x58	; 88	'X'
      00001D D8                    3351 	.db #0xd8	; 216
      00001E 38                    3352 	.db #0x38	; 56	'8'
      00001F B8                    3353 	.db #0xb8	; 184
      000020 78                    3354 	.db #0x78	; 120	'x'
      000021 F8                    3355 	.db #0xf8	; 248
      000022 04                    3356 	.db #0x04	; 4
      000023 84                    3357 	.db #0x84	; 132
      000024 44                    3358 	.db #0x44	; 68	'D'
      000025 C4                    3359 	.db #0xc4	; 196
      000026 24                    3360 	.db #0x24	; 36
      000027 A4                    3361 	.db #0xa4	; 164
      000028 64                    3362 	.db #0x64	; 100	'd'
      000029 E4                    3363 	.db #0xe4	; 228
      00002A 14                    3364 	.db #0x14	; 20
      00002B 94                    3365 	.db #0x94	; 148
      00002C 54                    3366 	.db #0x54	; 84	'T'
      00002D D4                    3367 	.db #0xd4	; 212
      00002E 34                    3368 	.db #0x34	; 52	'4'
      00002F B4                    3369 	.db #0xb4	; 180
      000030 74                    3370 	.db #0x74	; 116	't'
      000031 F4                    3371 	.db #0xf4	; 244
      000032 0C                    3372 	.db #0x0c	; 12
      000033 8C                    3373 	.db #0x8c	; 140
      000034 4C                    3374 	.db #0x4c	; 76	'L'
      000035 CC                    3375 	.db #0xcc	; 204
      000036 2C                    3376 	.db #0x2c	; 44
      000037 AC                    3377 	.db #0xac	; 172
      000038 6C                    3378 	.db #0x6c	; 108	'l'
      000039 EC                    3379 	.db #0xec	; 236
      00003A 1C                    3380 	.db #0x1c	; 28
      00003B 9C                    3381 	.db #0x9c	; 156
      00003C 5C                    3382 	.db #0x5c	; 92
      00003D DC                    3383 	.db #0xdc	; 220
      00003E 3C                    3384 	.db #0x3c	; 60
      00003F BC                    3385 	.db #0xbc	; 188
      000040 7C                    3386 	.db #0x7c	; 124
      000041 FC                    3387 	.db #0xfc	; 252
      000042 02                    3388 	.db #0x02	; 2
      000043 82                    3389 	.db #0x82	; 130
      000044 42                    3390 	.db #0x42	; 66	'B'
      000045 C2                    3391 	.db #0xc2	; 194
      000046 22                    3392 	.db #0x22	; 34
      000047 A2                    3393 	.db #0xa2	; 162
      000048 62                    3394 	.db #0x62	; 98	'b'
      000049 E2                    3395 	.db #0xe2	; 226
      00004A 12                    3396 	.db #0x12	; 18
      00004B 92                    3397 	.db #0x92	; 146
      00004C 52                    3398 	.db #0x52	; 82	'R'
      00004D D2                    3399 	.db #0xd2	; 210
      00004E 32                    3400 	.db #0x32	; 50	'2'
      00004F B2                    3401 	.db #0xb2	; 178
      000050 72                    3402 	.db #0x72	; 114	'r'
      000051 F2                    3403 	.db #0xf2	; 242
      000052 0A                    3404 	.db #0x0a	; 10
      000053 8A                    3405 	.db #0x8a	; 138
      000054 4A                    3406 	.db #0x4a	; 74	'J'
      000055 CA                    3407 	.db #0xca	; 202
      000056 2A                    3408 	.db #0x2a	; 42
      000057 AA                    3409 	.db #0xaa	; 170
      000058 6A                    3410 	.db #0x6a	; 106	'j'
      000059 EA                    3411 	.db #0xea	; 234
      00005A 1A                    3412 	.db #0x1a	; 26
      00005B 9A                    3413 	.db #0x9a	; 154
      00005C 5A                    3414 	.db #0x5a	; 90	'Z'
      00005D DA                    3415 	.db #0xda	; 218
      00005E 3A                    3416 	.db #0x3a	; 58
      00005F BA                    3417 	.db #0xba	; 186
      000060 7A                    3418 	.db #0x7a	; 122	'z'
      000061 FA                    3419 	.db #0xfa	; 250
      000062 06                    3420 	.db #0x06	; 6
      000063 86                    3421 	.db #0x86	; 134
      000064 46                    3422 	.db #0x46	; 70	'F'
      000065 C6                    3423 	.db #0xc6	; 198
      000066 26                    3424 	.db #0x26	; 38
      000067 A6                    3425 	.db #0xa6	; 166
      000068 66                    3426 	.db #0x66	; 102	'f'
      000069 E6                    3427 	.db #0xe6	; 230
      00006A 16                    3428 	.db #0x16	; 22
      00006B 96                    3429 	.db #0x96	; 150
      00006C 56                    3430 	.db #0x56	; 86	'V'
      00006D D6                    3431 	.db #0xd6	; 214
      00006E 36                    3432 	.db #0x36	; 54	'6'
      00006F B6                    3433 	.db #0xb6	; 182
      000070 76                    3434 	.db #0x76	; 118	'v'
      000071 F6                    3435 	.db #0xf6	; 246
      000072 0E                    3436 	.db #0x0e	; 14
      000073 8E                    3437 	.db #0x8e	; 142
      000074 4E                    3438 	.db #0x4e	; 78	'N'
      000075 CE                    3439 	.db #0xce	; 206
      000076 2E                    3440 	.db #0x2e	; 46
      000077 AE                    3441 	.db #0xae	; 174
      000078 6E                    3442 	.db #0x6e	; 110	'n'
      000079 EE                    3443 	.db #0xee	; 238
      00007A 1E                    3444 	.db #0x1e	; 30
      00007B 9E                    3445 	.db #0x9e	; 158
      00007C 5E                    3446 	.db #0x5e	; 94
      00007D DE                    3447 	.db #0xde	; 222
      00007E 3E                    3448 	.db #0x3e	; 62
      00007F BE                    3449 	.db #0xbe	; 190
      000080 7E                    3450 	.db #0x7e	; 126
      000081 FE                    3451 	.db #0xfe	; 254
      000082 01                    3452 	.db #0x01	; 1
      000083 81                    3453 	.db #0x81	; 129
      000084 41                    3454 	.db #0x41	; 65	'A'
      000085 C1                    3455 	.db #0xc1	; 193
      000086 21                    3456 	.db #0x21	; 33
      000087 A1                    3457 	.db #0xa1	; 161
      000088 61                    3458 	.db #0x61	; 97	'a'
      000089 E1                    3459 	.db #0xe1	; 225
      00008A 11                    3460 	.db #0x11	; 17
      00008B 91                    3461 	.db #0x91	; 145
      00008C 51                    3462 	.db #0x51	; 81	'Q'
      00008D D1                    3463 	.db #0xd1	; 209
      00008E 31                    3464 	.db #0x31	; 49	'1'
      00008F B1                    3465 	.db #0xb1	; 177
      000090 71                    3466 	.db #0x71	; 113	'q'
      000091 F1                    3467 	.db #0xf1	; 241
      000092 09                    3468 	.db #0x09	; 9
      000093 89                    3469 	.db #0x89	; 137
      000094 49                    3470 	.db #0x49	; 73	'I'
      000095 C9                    3471 	.db #0xc9	; 201
      000096 29                    3472 	.db #0x29	; 41
      000097 A9                    3473 	.db #0xa9	; 169
      000098 69                    3474 	.db #0x69	; 105	'i'
      000099 E9                    3475 	.db #0xe9	; 233
      00009A 19                    3476 	.db #0x19	; 25
      00009B 99                    3477 	.db #0x99	; 153
      00009C 59                    3478 	.db #0x59	; 89	'Y'
      00009D D9                    3479 	.db #0xd9	; 217
      00009E 39                    3480 	.db #0x39	; 57	'9'
      00009F B9                    3481 	.db #0xb9	; 185
      0000A0 79                    3482 	.db #0x79	; 121	'y'
      0000A1 F9                    3483 	.db #0xf9	; 249
      0000A2 05                    3484 	.db #0x05	; 5
      0000A3 85                    3485 	.db #0x85	; 133
      0000A4 45                    3486 	.db #0x45	; 69	'E'
      0000A5 C5                    3487 	.db #0xc5	; 197
      0000A6 25                    3488 	.db #0x25	; 37
      0000A7 A5                    3489 	.db #0xa5	; 165
      0000A8 65                    3490 	.db #0x65	; 101	'e'
      0000A9 E5                    3491 	.db #0xe5	; 229
      0000AA 15                    3492 	.db #0x15	; 21
      0000AB 95                    3493 	.db #0x95	; 149
      0000AC 55                    3494 	.db #0x55	; 85	'U'
      0000AD D5                    3495 	.db #0xd5	; 213
      0000AE 35                    3496 	.db #0x35	; 53	'5'
      0000AF B5                    3497 	.db #0xb5	; 181
      0000B0 75                    3498 	.db #0x75	; 117	'u'
      0000B1 F5                    3499 	.db #0xf5	; 245
      0000B2 0D                    3500 	.db #0x0d	; 13
      0000B3 8D                    3501 	.db #0x8d	; 141
      0000B4 4D                    3502 	.db #0x4d	; 77	'M'
      0000B5 CD                    3503 	.db #0xcd	; 205
      0000B6 2D                    3504 	.db #0x2d	; 45
      0000B7 AD                    3505 	.db #0xad	; 173
      0000B8 6D                    3506 	.db #0x6d	; 109	'm'
      0000B9 ED                    3507 	.db #0xed	; 237
      0000BA 1D                    3508 	.db #0x1d	; 29
      0000BB 9D                    3509 	.db #0x9d	; 157
      0000BC 5D                    3510 	.db #0x5d	; 93
      0000BD DD                    3511 	.db #0xdd	; 221
      0000BE 3D                    3512 	.db #0x3d	; 61
      0000BF BD                    3513 	.db #0xbd	; 189
      0000C0 7D                    3514 	.db #0x7d	; 125
      0000C1 FD                    3515 	.db #0xfd	; 253
      0000C2 03                    3516 	.db #0x03	; 3
      0000C3 83                    3517 	.db #0x83	; 131
      0000C4 43                    3518 	.db #0x43	; 67	'C'
      0000C5 C3                    3519 	.db #0xc3	; 195
      0000C6 23                    3520 	.db #0x23	; 35
      0000C7 A3                    3521 	.db #0xa3	; 163
      0000C8 63                    3522 	.db #0x63	; 99	'c'
      0000C9 E3                    3523 	.db #0xe3	; 227
      0000CA 13                    3524 	.db #0x13	; 19
      0000CB 93                    3525 	.db #0x93	; 147
      0000CC 53                    3526 	.db #0x53	; 83	'S'
      0000CD D3                    3527 	.db #0xd3	; 211
      0000CE 33                    3528 	.db #0x33	; 51	'3'
      0000CF B3                    3529 	.db #0xb3	; 179
      0000D0 73                    3530 	.db #0x73	; 115	's'
      0000D1 F3                    3531 	.db #0xf3	; 243
      0000D2 0B                    3532 	.db #0x0b	; 11
      0000D3 8B                    3533 	.db #0x8b	; 139
      0000D4 4B                    3534 	.db #0x4b	; 75	'K'
      0000D5 CB                    3535 	.db #0xcb	; 203
      0000D6 2B                    3536 	.db #0x2b	; 43
      0000D7 AB                    3537 	.db #0xab	; 171
      0000D8 6B                    3538 	.db #0x6b	; 107	'k'
      0000D9 EB                    3539 	.db #0xeb	; 235
      0000DA 1B                    3540 	.db #0x1b	; 27
      0000DB 9B                    3541 	.db #0x9b	; 155
      0000DC 5B                    3542 	.db #0x5b	; 91
      0000DD DB                    3543 	.db #0xdb	; 219
      0000DE 3B                    3544 	.db #0x3b	; 59
      0000DF BB                    3545 	.db #0xbb	; 187
      0000E0 7B                    3546 	.db #0x7b	; 123
      0000E1 FB                    3547 	.db #0xfb	; 251
      0000E2 07                    3548 	.db #0x07	; 7
      0000E3 87                    3549 	.db #0x87	; 135
      0000E4 47                    3550 	.db #0x47	; 71	'G'
      0000E5 C7                    3551 	.db #0xc7	; 199
      0000E6 27                    3552 	.db #0x27	; 39
      0000E7 A7                    3553 	.db #0xa7	; 167
      0000E8 67                    3554 	.db #0x67	; 103	'g'
      0000E9 E7                    3555 	.db #0xe7	; 231
      0000EA 17                    3556 	.db #0x17	; 23
      0000EB 97                    3557 	.db #0x97	; 151
      0000EC 57                    3558 	.db #0x57	; 87	'W'
      0000ED D7                    3559 	.db #0xd7	; 215
      0000EE 37                    3560 	.db #0x37	; 55	'7'
      0000EF B7                    3561 	.db #0xb7	; 183
      0000F0 77                    3562 	.db #0x77	; 119	'w'
      0000F1 F7                    3563 	.db #0xf7	; 247
      0000F2 0F                    3564 	.db #0x0f	; 15
      0000F3 8F                    3565 	.db #0x8f	; 143
      0000F4 4F                    3566 	.db #0x4f	; 79	'O'
      0000F5 CF                    3567 	.db #0xcf	; 207
      0000F6 2F                    3568 	.db #0x2f	; 47
      0000F7 AF                    3569 	.db #0xaf	; 175
      0000F8 6F                    3570 	.db #0x6f	; 111	'o'
      0000F9 EF                    3571 	.db #0xef	; 239
      0000FA 1F                    3572 	.db #0x1f	; 31
      0000FB 9F                    3573 	.db #0x9f	; 159
      0000FC 5F                    3574 	.db #0x5f	; 95
      0000FD DF                    3575 	.db #0xdf	; 223
      0000FE 3F                    3576 	.db #0x3f	; 63
      0000FF BF                    3577 	.db #0xbf	; 191
      000100 7F                    3578 	.db #0x7f	; 127
      000101 FF                    3579 	.db #0xff	; 255
      000102                       3580 __xinit__maxSalto:
      000102 FF                    3581 	.db #0xff	; 255
      000103                       3582 __xinit__alex:
      000103 1E                    3583 	.db #0x1e	; 30
      000104 96                    3584 	.db #0x96	; 150
      000105 00                    3585 	.db #0x00	; 0
      000106 00                    3586 	.db #0x00	; 0
      000107 00                    3587 	.db #0x00	; 0
      000108 00                    3588 	.db #0x00	; 0
      000109 FF                    3589 	.db #0xff	; 255
      00010A 00                    3590 	.db #0x00	; 0
      00010B 00 00                 3591 	.dw #0x0000
      00010D 00 00                 3592 	.dw #0x0000
      00010F 00 00                 3593 	.dw #0x0000
      000111                       3594 __xinit__lastFrame:
      000111 FF                    3595 	.db #0xff	; 255
      000112                       3596 __xinit__spriteAlex:
      000112 02                    3597 	.db #0x02	; 2
      000113 02                    3598 	.db #0x02	; 2
      000114 08                    3599 	.db #0x08	; 8
      000115 00                    3600 	.db #0x00	; 0
      000116 00 00                 3601 	.dw #0x0000
      000118 00                    3602 	.db #0x00	; 0
      000119 00 00                 3603 	.dw #0x0000
      00011B 00                    3604 	.db #0x00	; 0
      00011C                       3605 __xinit__spritePajaro:
      00011C 02                    3606 	.db #0x02	; 2
      00011D 02                    3607 	.db #0x02	; 2
      00011E 08                    3608 	.db #0x08	; 8
      00011F 00                    3609 	.db #0x00	; 0
      000120 00 00                 3610 	.dw #0x0000
      000122 00                    3611 	.db #0x00	; 0
      000123 00 00                 3612 	.dw #0x0000
      000125 00                    3613 	.db #0x00	; 0
      000126                       3614 __xinit__spritePuno:
      000126 02                    3615 	.db #0x02	; 2
      000127 02                    3616 	.db #0x02	; 2
      000128 08                    3617 	.db #0x08	; 8
      000129 00                    3618 	.db #0x00	; 0
      00012A 00 00                 3619 	.dw #0x0000
      00012C 00                    3620 	.db #0x00	; 0
      00012D 00 00                 3621 	.dw #0x0000
      00012F 00                    3622 	.db #0x00	; 0
                                   3623 	.area _CABS (ABS)
      007FF0                       3624 	.org 0x7FF0
      007FF0                       3625 ___SMS__SEGA_signature:
      007FF0 54                    3626 	.db #0x54	; 84	'T'
      007FF1 4D                    3627 	.db #0x4d	; 77	'M'
      007FF2 52                    3628 	.db #0x52	; 82	'R'
      007FF3 20                    3629 	.db #0x20	; 32
      007FF4 53                    3630 	.db #0x53	; 83	'S'
      007FF5 45                    3631 	.db #0x45	; 69	'E'
      007FF6 47                    3632 	.db #0x47	; 71	'G'
      007FF7 41                    3633 	.db #0x41	; 65	'A'
      007FF8 FF                    3634 	.db #0xff	; 255
      007FF9 FF                    3635 	.db #0xff	; 255
      007FFA FF                    3636 	.db #0xff	; 255
      007FFB FF                    3637 	.db #0xff	; 255
      007FFC 99                    3638 	.db #0x99	; 153
      007FFD 99                    3639 	.db #0x99	; 153
      007FFE 00                    3640 	.db #0x00	; 0
      007FFF 4C                    3641 	.db #0x4c	; 76	'L'
      007FDB                       3642 	.org 0x7FDB
      007FDB                       3643 ___SMS__SDSC_author:
      007FDB 53 45 47 41           3644 	.ascii "SEGA"
      007FDF 00                    3645 	.db 0x00
      007FCD                       3646 	.org 0x7FCD
      007FCD                       3647 ___SMS__SDSC_name:
      007FCD 62 61 73 69 63 20 65  3648 	.ascii "basic example"
             78 61 6D 70 6C 65
      007FDA 00                    3649 	.db 0x00
      007FBC                       3650 	.org 0x7FBC
      007FBC                       3651 ___SMS__SDSC_descr:
      007FBC 41 20 73 69 6D 70 6C  3652 	.ascii "A simple example"
             65 20 65 78 61 6D 70
             6C 65
      007FCC 00                    3653 	.db 0x00
      007FE0                       3654 	.org 0x7FE0
      007FE0                       3655 ___SMS__SDSC_signature:
      007FE0 53                    3656 	.db #0x53	; 83	'S'
      007FE1 44                    3657 	.db #0x44	; 68	'D'
      007FE2 53                    3658 	.db #0x53	; 83	'S'
      007FE3 43                    3659 	.db #0x43	; 67	'C'
      007FE4 01                    3660 	.db #0x01	; 1
      007FE5 00                    3661 	.db #0x00	; 0
      007FE6 00                    3662 	.db #0x00	; 0
      007FE7 00                    3663 	.db #0x00	; 0
      007FE8 00                    3664 	.db #0x00	; 0
      007FE9 00                    3665 	.db #0x00	; 0
      007FEA DB                    3666 	.db #0xdb	; 219
      007FEB 7F                    3667 	.db #0x7f	; 127
      007FEC CD                    3668 	.db #0xcd	; 205
      007FED 7F                    3669 	.db #0x7f	; 127
      007FEE BC                    3670 	.db #0xbc	; 188
      007FEF 7F                    3671 	.db #0x7f	; 127
