                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14549 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___SMS__SDSC_signature
                                     12 	.globl ___SMS__SDSC_descr
                                     13 	.globl ___SMS__SDSC_name
                                     14 	.globl ___SMS__SDSC_author
                                     15 	.globl ___SMS__SEGA_signature
                                     16 	.globl _main
                                     17 	.globl _draw_main_character
                                     18 	.globl _loadGrapVRAM
                                     19 	.globl _init
                                     20 	.globl _PSGFrame
                                     21 	.globl _PSGPlay
                                     22 	.globl _SMS_VRAMmemsetW
                                     23 	.globl _SMS_VRAMmemcpy
                                     24 	.globl _SMS_resetPauseRequest
                                     25 	.globl _SMS_queryPauseRequested
                                     26 	.globl _SMS_getKeysHeld
                                     27 	.globl _SMS_loadSpritePalette
                                     28 	.globl _SMS_loadBGPalette
                                     29 	.globl _SMS_copySpritestoSAT
                                     30 	.globl _SMS_finalizeSprites
                                     31 	.globl _SMS_addSprite_f
                                     32 	.globl _SMS_initSprites
                                     33 	.globl _SMS_waitForVBlank
                                     34 	.globl _SMS_setSpriteMode
                                     35 	.globl _SMS_setBGScrollY
                                     36 	.globl _SMS_setBGScrollX
                                     37 	.globl _SMS_VDPturnOffFeature
                                     38 	.globl _SMS_VDPturnOnFeature
                                     39 	.globl _SMS_init
                                     40 	.globl _printf
                                     41 	.globl _delay_frame_player
                                     42 	.globl _frame_player
                                     43 	.globl _player_y
                                     44 	.globl _player_v_x
                                     45 	.globl _player_x
                                     46 	.globl _SMS_SRAM
                                     47 	.globl _SRAM_bank_to_be_mapped_on_slot2
                                     48 	.globl _ROM_bank_to_be_mapped_on_slot0
                                     49 	.globl _ROM_bank_to_be_mapped_on_slot1
                                     50 	.globl _ROM_bank_to_be_mapped_on_slot2
                                     51 ;--------------------------------------------------------
                                     52 ; special function registers
                                     53 ;--------------------------------------------------------
                                     54 ;--------------------------------------------------------
                                     55 ; ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area _DATA
                           00FFFF    58 _ROM_bank_to_be_mapped_on_slot2	=	0xffff
                           00FFFE    59 _ROM_bank_to_be_mapped_on_slot1	=	0xfffe
                           00FFFD    60 _ROM_bank_to_be_mapped_on_slot0	=	0xfffd
                           00FFFC    61 _SRAM_bank_to_be_mapped_on_slot2	=	0xfffc
                           008000    62 _SMS_SRAM	=	0x8000
                                     63 ;--------------------------------------------------------
                                     64 ; ram data
                                     65 ;--------------------------------------------------------
                                     66 	.area _INITIALIZED
      000000                         67 _player_x::
      000000                         68 	.ds 2
      000002                         69 _player_v_x::
      000002                         70 	.ds 2
      000004                         71 _player_y::
      000004                         72 	.ds 2
      000006                         73 _frame_player::
      000006                         74 	.ds 2
      000008                         75 _delay_frame_player::
      000008                         76 	.ds 2
                                     77 ;--------------------------------------------------------
                                     78 ; absolute external ram data
                                     79 ;--------------------------------------------------------
                                     80 	.area _DABS (ABS)
                                     81 ;--------------------------------------------------------
                                     82 ; global & static initialisations
                                     83 ;--------------------------------------------------------
                                     84 	.area _HOME
                                     85 	.area _GSINIT
                                     86 	.area _GSFINAL
                                     87 	.area _GSINIT
                                     88 ;--------------------------------------------------------
                                     89 ; Home
                                     90 ;--------------------------------------------------------
                                     91 	.area _HOME
                                     92 	.area _HOME
                                     93 ;--------------------------------------------------------
                                     94 ; code
                                     95 ;--------------------------------------------------------
                                     96 	.area _CODE
                                     97 ;main.c:10: void init(){
                                     98 ;	---------------------------------
                                     99 ; Function init
                                    100 ; ---------------------------------
      000000                        101 _init::
                                    102 ;main.c:11: SMS_init();
                                    103 ;main.c:12: }
      000000 C3r00r00         [10]  104 	jp	_SMS_init
                                    105 ;main.c:14: void loadGrapVRAM(){
                                    106 ;	---------------------------------
                                    107 ; Function loadGrapVRAM
                                    108 ; ---------------------------------
      000003                        109 _loadGrapVRAM::
                                    110 ;main.c:15: SMS_init();
      000003 CDr00r00         [17]  111 	call	_SMS_init
                                    112 ;main.c:16: SMS_setSpriteMode(SPRITEMODE_NORMAL);
      000006 2E 00            [ 7]  113 	ld	l, #0x00
                                    114 ;	spillPairReg hl
                                    115 ;	spillPairReg hl
      000008 CDr00r00         [17]  116 	call	_SMS_setSpriteMode
                                    117 ;main.c:17: SMS_VDPturnOnFeature(VDPFEATURE_LEFTCOLBLANK);
      00000B 21 20 00         [10]  118 	ld	hl, #0x0020
      00000E CDr00r00         [17]  119 	call	_SMS_VDPturnOnFeature
                                    120 ;main.c:18: SMS_displayOn();
      000011 21 40 01         [10]  121 	ld	hl, #0x0140
      000014 CDr00r00         [17]  122 	call	_SMS_VDPturnOnFeature
                                    123 ;main.c:19: SMS_VDPturnOnFeature(VDPFEATURE_LEFTCOLBLANK);
      000017 21 20 00         [10]  124 	ld	hl, #0x0020
      00001A CDr00r00         [17]  125 	call	_SMS_VDPturnOnFeature
                                    126 ;main.c:20: SMS_loadBGPalette(sonicpalette_inc);
      00001D 21r00r00         [10]  127 	ld	hl, #_sonicpalette_inc
      000020 CDr00r00         [17]  128 	call	_SMS_loadBGPalette
                                    129 ;main.c:21: SMS_loadSpritePalette(alexVariosPaleta_inc);
      000023 21r00r00         [10]  130 	ld	hl, #_alexVariosPaleta_inc
      000026 CDr00r00         [17]  131 	call	_SMS_loadSpritePalette
                                    132 ;main.c:22: SMS_loadTiles(sonictiles_inc,0,sonictiles_inc_size);
      000029 21 C0 14         [10]  133 	ld	hl, #0x14c0
      00002C E5               [11]  134 	push	hl
      00002D 11r00r00         [10]  135 	ld	de, #_sonictiles_inc
      000030 21 00 40         [10]  136 	ld	hl, #0x4000
      000033 CDr00r00         [17]  137 	call	_SMS_VRAMmemcpy
                                    138 ;main.c:23: SMS_loadTiles(alexAndando_inc,256/*SPRITE_TILES_POSITION*/,alexAndando_inc_size);
      000036 21 00 03         [10]  139 	ld	hl, #0x0300
      000039 E5               [11]  140 	push	hl
      00003A 11r00r00         [10]  141 	ld	de, #_alexAndando_inc
      00003D 26 60            [ 7]  142 	ld	h, #0x60
      00003F CDr00r00         [17]  143 	call	_SMS_VRAMmemcpy
                                    144 ;main.c:24: SMS_loadTileMap(0,0,sonictilemap_inc,sonictilemap_inc_size);
      000042 21 00 06         [10]  145 	ld	hl, #0x0600
      000045 E5               [11]  146 	push	hl
      000046 11r00r00         [10]  147 	ld	de, #_sonictilemap_inc
      000049 26 78            [ 7]  148 	ld	h, #0x78
      00004B CDr00r00         [17]  149 	call	_SMS_VRAMmemcpy
                                    150 ;main.c:25: }
      00004E C9               [10]  151 	ret
                                    152 ;main.c:33: draw_main_character(){
                                    153 ;	---------------------------------
                                    154 ; Function draw_main_character
                                    155 ; ---------------------------------
      00004F                        156 _draw_main_character::
      00004F DD E5            [15]  157 	push	ix
      000051 DD 21 00 00      [14]  158 	ld	ix,#0
      000055 DD 39            [15]  159 	add	ix,sp
      000057 21 F7 FF         [10]  160 	ld	hl, #-9
      00005A 39               [11]  161 	add	hl, sp
      00005B F9               [ 6]  162 	ld	sp, hl
                                    163 ;main.c:36: for(numSprites=0;numSprites<2;numSprites++){
      00005C DD 36 FF 00      [19]  164 	ld	-1 (ix), #0x00
                                    165 ;main.c:37: for(j=0;j<3;j++) {
      000060                        166 00114$:
      000060 0E 00            [ 7]  167 	ld	c, #0x00
                                    168 ;main.c:38: for(i=0;i<2;i++) {
      000062                        169 00112$:
      000062 06 00            [ 7]  170 	ld	b, #0x00
      000064                        171 00104$:
                                    172 ;main.c:39: SMS_addSprite(player_x+(i<<3),player_y+(j<<3)+numSprites*30,2*frame_player + 8*j + i);  
      000064 DD 70 F7         [19]  173 	ld	-9 (ix), b
      000067 DD 36 F8 00      [19]  174 	ld	-8 (ix), #0x00
      00006B DD 7E F7         [19]  175 	ld	a, -9 (ix)
      00006E DD 77 F9         [19]  176 	ld	-7 (ix), a
      000071 DD 7E F8         [19]  177 	ld	a, -8 (ix)
      000074 DD 77 FA         [19]  178 	ld	-6 (ix), a
      000077 3E 03            [ 7]  179 	ld	a, #0x03
      000079                        180 00150$:
      000079 DD CB F9 26      [23]  181 	sla	-7 (ix)
      00007D DD CB FA 16      [23]  182 	rl	-6 (ix)
      000081 3D               [ 4]  183 	dec	a
      000082 20 F5            [12]  184 	jr	NZ, 00150$
      000084 3Ar00r00         [13]  185 	ld	a, (_player_x+0)
      000087 DD 86 F9         [19]  186 	add	a, -7 (ix)
      00008A 57               [ 4]  187 	ld	d, a
      00008B 3Ar01r00         [13]  188 	ld	a, (_player_x+1)
      00008E DD 8E FA         [19]  189 	adc	a, -6 (ix)
      000091 2Ar06r00         [16]  190 	ld	hl, (_frame_player)
      000094 29               [11]  191 	add	hl, hl
      000095 DD 71 FD         [19]  192 	ld	-3 (ix), c
      000098 DD 36 FE 00      [19]  193 	ld	-2 (ix), #0x00
      00009C DD 7E FD         [19]  194 	ld	a, -3 (ix)
      00009F DD 77 FB         [19]  195 	ld	-5 (ix), a
      0000A2 DD 7E FE         [19]  196 	ld	a, -2 (ix)
      0000A5 DD 77 FC         [19]  197 	ld	-4 (ix), a
      0000A8 3E 03            [ 7]  198 	ld	a, #0x03
      0000AA                        199 00151$:
      0000AA DD CB FB 26      [23]  200 	sla	-5 (ix)
      0000AE DD CB FC 16      [23]  201 	rl	-4 (ix)
      0000B2 3D               [ 4]  202 	dec	a
      0000B3 20 F5            [12]  203 	jr	NZ, 00151$
      0000B5 7D               [ 4]  204 	ld	a, l
      0000B6 DD 86 FB         [19]  205 	add	a, -5 (ix)
      0000B9 6F               [ 4]  206 	ld	l, a
                                    207 ;	spillPairReg hl
                                    208 ;	spillPairReg hl
      0000BA 7C               [ 4]  209 	ld	a, h
      0000BB DD 8E FC         [19]  210 	adc	a, -4 (ix)
      0000BE 67               [ 4]  211 	ld	h, a
                                    212 ;	spillPairReg hl
                                    213 ;	spillPairReg hl
      0000BF 7D               [ 4]  214 	ld	a, l
      0000C0 DD 86 F7         [19]  215 	add	a, -9 (ix)
      0000C3 FD E5            [15]  216 	push	iy
      0000C5 DD 77 F5         [19]  217 	ld	-11 (ix), a
      0000C8 FD E1            [14]  218 	pop	iy
      0000CA 7C               [ 4]  219 	ld	a, h
      0000CB DD 8E F8         [19]  220 	adc	a, -8 (ix)
      0000CE FD E5            [15]  221 	push	iy
      0000D0 DD 72 F6         [19]  222 	ld	-10 (ix), d
      0000D3 FD E1            [14]  223 	pop	iy
      0000D5 3Ar04r00         [13]  224 	ld	a, (_player_y+0)
      0000D8 DD 86 FB         [19]  225 	add	a, -5 (ix)
      0000DB 5F               [ 4]  226 	ld	e, a
      0000DC 3Ar05r00         [13]  227 	ld	a, (_player_y+1)
      0000DF DD 8E FC         [19]  228 	adc	a, -4 (ix)
      0000E2 57               [ 4]  229 	ld	d, a
      0000E3 DD 6E FF         [19]  230 	ld	l, -1 (ix)
                                    231 ;	spillPairReg hl
                                    232 ;	spillPairReg hl
      0000E6 26 00            [ 7]  233 	ld	h, #0x00
                                    234 ;	spillPairReg hl
                                    235 ;	spillPairReg hl
      0000E8 D5               [11]  236 	push	de
      0000E9 5D               [ 4]  237 	ld	e, l
      0000EA 54               [ 4]  238 	ld	d, h
      0000EB 29               [11]  239 	add	hl, hl
      0000EC 19               [11]  240 	add	hl, de
      0000ED 29               [11]  241 	add	hl, hl
      0000EE 19               [11]  242 	add	hl, de
      0000EF 29               [11]  243 	add	hl, hl
      0000F0 19               [11]  244 	add	hl, de
      0000F1 29               [11]  245 	add	hl, hl
      0000F2 D1               [10]  246 	pop	de
      0000F3 DD 75 FD         [19]  247 	ld	-3 (ix), l
      0000F6 DD 74 FE         [19]  248 	ld	-2 (ix), h
      0000F9 DD 6E FD         [19]  249 	ld	l, -3 (ix)
                                    250 ;	spillPairReg hl
                                    251 ;	spillPairReg hl
      0000FC 26 00            [ 7]  252 	ld	h, #0x00
                                    253 ;	spillPairReg hl
                                    254 ;	spillPairReg hl
      0000FE 19               [11]  255 	add	hl, de
      0000FF C5               [11]  256 	push	bc
      000100 FD E5            [15]  257 	push	iy
      000102 D1               [10]  258 	pop	de
      000103 CDr00r00         [17]  259 	call	_SMS_addSprite_f
      000106 C1               [10]  260 	pop	bc
                                    261 ;main.c:40: SMS_addSprite(player_x+(i<<3)+20,player_y+(j<<3)+numSprites*30,2*frame_player + 8*j + i);  
      000107 3Ar00r00         [13]  262 	ld	a, (_player_x+0)
      00010A DD 86 F9         [19]  263 	add	a, -7 (ix)
      00010D 5F               [ 4]  264 	ld	e, a
      00010E 3Ar01r00         [13]  265 	ld	a, (_player_x+1)
      000111 DD 8E FA         [19]  266 	adc	a, -6 (ix)
      000114 57               [ 4]  267 	ld	d, a
      000115 21 14 00         [10]  268 	ld	hl, #0x0014
      000118 19               [11]  269 	add	hl, de
      000119 65               [ 4]  270 	ld	h, l
                                    271 ;	spillPairReg hl
                                    272 ;	spillPairReg hl
                                    273 ;	spillPairReg hl
                                    274 ;	spillPairReg hl
      00011A FD 2Ar06r00      [20]  275 	ld	iy, (_frame_player)
      00011E FD 29            [15]  276 	add	iy, iy
      000120 DD 5E FB         [19]  277 	ld	e, -5 (ix)
      000123 DD 56 FC         [19]  278 	ld	d, -4 (ix)
      000126 FD 19            [15]  279 	add	iy, de
      000128 D1               [10]  280 	pop	de
      000129 D5               [11]  281 	push	de
      00012A FD 19            [15]  282 	add	iy, de
      00012C FD E5            [15]  283 	push	iy
      00012E DD 74 F6         [19]  284 	ld	-10 (ix), h
      000131 FD E1            [14]  285 	pop	iy
      000133 3Ar04r00         [13]  286 	ld	a, (_player_y+0)
      000136 DD 86 FB         [19]  287 	add	a, -5 (ix)
      000139 5F               [ 4]  288 	ld	e, a
      00013A 3Ar05r00         [13]  289 	ld	a, (_player_y+1)
      00013D DD 8E FC         [19]  290 	adc	a, -4 (ix)
      000140 57               [ 4]  291 	ld	d, a
      000141 DD 6E FD         [19]  292 	ld	l, -3 (ix)
                                    293 ;	spillPairReg hl
                                    294 ;	spillPairReg hl
      000144 26 00            [ 7]  295 	ld	h, #0x00
                                    296 ;	spillPairReg hl
                                    297 ;	spillPairReg hl
      000146 19               [11]  298 	add	hl, de
      000147 C5               [11]  299 	push	bc
      000148 FD E5            [15]  300 	push	iy
      00014A D1               [10]  301 	pop	de
      00014B CDr00r00         [17]  302 	call	_SMS_addSprite_f
      00014E C1               [10]  303 	pop	bc
                                    304 ;main.c:41: SMS_addSprite(player_x+(i<<3)+40,player_y+(j<<3)+numSprites*30,2*frame_player + 8*j + i);  
      00014F 3Ar00r00         [13]  305 	ld	a, (_player_x+0)
      000152 DD 86 F9         [19]  306 	add	a, -7 (ix)
      000155 5F               [ 4]  307 	ld	e, a
      000156 3Ar01r00         [13]  308 	ld	a, (_player_x+1)
      000159 DD 8E FA         [19]  309 	adc	a, -6 (ix)
      00015C 57               [ 4]  310 	ld	d, a
      00015D 21 28 00         [10]  311 	ld	hl, #0x0028
      000160 19               [11]  312 	add	hl, de
      000161 65               [ 4]  313 	ld	h, l
                                    314 ;	spillPairReg hl
                                    315 ;	spillPairReg hl
                                    316 ;	spillPairReg hl
                                    317 ;	spillPairReg hl
      000162 FD 2Ar06r00      [20]  318 	ld	iy, (_frame_player)
      000166 FD 29            [15]  319 	add	iy, iy
      000168 DD 5E FB         [19]  320 	ld	e, -5 (ix)
      00016B DD 56 FC         [19]  321 	ld	d, -4 (ix)
      00016E FD 19            [15]  322 	add	iy, de
      000170 D1               [10]  323 	pop	de
      000171 D5               [11]  324 	push	de
      000172 FD 19            [15]  325 	add	iy, de
      000174 FD E5            [15]  326 	push	iy
      000176 DD 74 F6         [19]  327 	ld	-10 (ix), h
      000179 FD E1            [14]  328 	pop	iy
      00017B 3Ar04r00         [13]  329 	ld	a, (_player_y+0)
      00017E DD 86 FB         [19]  330 	add	a, -5 (ix)
      000181 5F               [ 4]  331 	ld	e, a
      000182 3Ar05r00         [13]  332 	ld	a, (_player_y+1)
      000185 DD 8E FC         [19]  333 	adc	a, -4 (ix)
      000188 57               [ 4]  334 	ld	d, a
      000189 DD 6E FD         [19]  335 	ld	l, -3 (ix)
                                    336 ;	spillPairReg hl
                                    337 ;	spillPairReg hl
      00018C 26 00            [ 7]  338 	ld	h, #0x00
                                    339 ;	spillPairReg hl
                                    340 ;	spillPairReg hl
      00018E 19               [11]  341 	add	hl, de
      00018F C5               [11]  342 	push	bc
      000190 FD E5            [15]  343 	push	iy
      000192 D1               [10]  344 	pop	de
      000193 CDr00r00         [17]  345 	call	_SMS_addSprite_f
      000196 C1               [10]  346 	pop	bc
                                    347 ;main.c:42: SMS_addSprite(player_x+(i<<3)+60,player_y+(j<<3)+numSprites*30,2*frame_player + 8*j + i);  
      000197 DD 7E F9         [19]  348 	ld	a, -7 (ix)
      00019A 21r00r00         [10]  349 	ld	hl, #_player_x
      00019D 86               [ 7]  350 	add	a, (hl)
      00019E 5F               [ 4]  351 	ld	e, a
      00019F DD 7E FA         [19]  352 	ld	a, -6 (ix)
      0001A2 23               [ 6]  353 	inc	hl
      0001A3 8E               [ 7]  354 	adc	a, (hl)
      0001A4 57               [ 4]  355 	ld	d, a
      0001A5 21 3C 00         [10]  356 	ld	hl, #0x003c
      0001A8 19               [11]  357 	add	hl, de
      0001A9 55               [ 4]  358 	ld	d, l
      0001AA 2Ar06r00         [16]  359 	ld	hl, (_frame_player)
      0001AD 29               [11]  360 	add	hl, hl
      0001AE 7D               [ 4]  361 	ld	a, l
      0001AF DD 86 FB         [19]  362 	add	a, -5 (ix)
      0001B2 6F               [ 4]  363 	ld	l, a
                                    364 ;	spillPairReg hl
                                    365 ;	spillPairReg hl
      0001B3 7C               [ 4]  366 	ld	a, h
      0001B4 DD 8E FC         [19]  367 	adc	a, -4 (ix)
                                    368 ;	spillPairReg hl
                                    369 ;	spillPairReg hl
      0001B7 DD 7E F7         [19]  370 	ld	a, -9 (ix)
      0001BA 85               [ 4]  371 	add	a, l
                                    372 ;	spillPairReg hl
                                    373 ;	spillPairReg hl
                                    374 ;	spillPairReg hl
                                    375 ;	spillPairReg hl
                                    376 ;	spillPairReg hl
                                    377 ;	spillPairReg hl
      0001BB 5F               [ 4]  378 	ld	e, a
      0001BC DD 7E FB         [19]  379 	ld	a, -5 (ix)
      0001BF 21r04r00         [10]  380 	ld	hl, #_player_y
      0001C2 86               [ 7]  381 	add	a, (hl)
      0001C3 DD 77 F9         [19]  382 	ld	-7 (ix), a
      0001C6 DD 7E FC         [19]  383 	ld	a, -4 (ix)
      0001C9 23               [ 6]  384 	inc	hl
      0001CA 8E               [ 7]  385 	adc	a, (hl)
      0001CB DD 77 FA         [19]  386 	ld	-6 (ix), a
      0001CE DD 7E F9         [19]  387 	ld	a, -7 (ix)
      0001D1 DD 86 FD         [19]  388 	add	a, -3 (ix)
      0001D4 6F               [ 4]  389 	ld	l, a
                                    390 ;	spillPairReg hl
                                    391 ;	spillPairReg hl
      0001D5 DD 7E FA         [19]  392 	ld	a, -6 (ix)
      0001D8 DD 8E FE         [19]  393 	adc	a, -2 (ix)
      0001DB 67               [ 4]  394 	ld	h, a
                                    395 ;	spillPairReg hl
                                    396 ;	spillPairReg hl
      0001DC C5               [11]  397 	push	bc
      0001DD CDr00r00         [17]  398 	call	_SMS_addSprite_f
      0001E0 C1               [10]  399 	pop	bc
                                    400 ;main.c:38: for(i=0;i<2;i++) {
      0001E1 04               [ 4]  401 	inc	b
      0001E2 78               [ 4]  402 	ld	a, b
      0001E3 D6 02            [ 7]  403 	sub	a, #0x02
      0001E5 DAr64r00         [10]  404 	jp	C, 00104$
                                    405 ;main.c:37: for(j=0;j<3;j++) {
      0001E8 0C               [ 4]  406 	inc	c
      0001E9 79               [ 4]  407 	ld	a, c
      0001EA D6 03            [ 7]  408 	sub	a, #0x03
      0001EC DAr62r00         [10]  409 	jp	C, 00112$
                                    410 ;main.c:36: for(numSprites=0;numSprites<2;numSprites++){
      0001EF DD 34 FF         [23]  411 	inc	-1 (ix)
      0001F2 DD 7E FF         [19]  412 	ld	a, -1 (ix)
      0001F5 D6 02            [ 7]  413 	sub	a, #0x02
      0001F7 DAr60r00         [10]  414 	jp	C, 00114$
                                    415 ;main.c:47: }
      0001FA DD F9            [10]  416 	ld	sp, ix
      0001FC DD E1            [14]  417 	pop	ix
      0001FE C9               [10]  418 	ret
                                    419 ;main.c:49: void main(void)
                                    420 ;	---------------------------------
                                    421 ; Function main
                                    422 ; ---------------------------------
      0001FF                        423 _main::
      0001FF DD E5            [15]  424 	push	ix
      000201 DD 21 00 00      [14]  425 	ld	ix,#0
      000205 DD 39            [15]  426 	add	ix,sp
      000207 F5               [11]  427 	push	af
                                    428 ;main.c:54: SMS_VRAMmemsetW(0, 0x0000, 16384);
      000208 DD 36 FF 00      [19]  429 	ld	-1 (ix), #0x00
      00020C DD 36 FE 00      [19]  430 	ld	-2 (ix), #0x00
      000210 21 00 40         [10]  431 	ld	hl, #0x4000
      000213 E5               [11]  432 	push	hl
      000214 11 00 00         [10]  433 	ld	de, #0x0000
      000217 65               [ 4]  434 	ld	h, l
      000218 CDr00r00         [17]  435 	call	_SMS_VRAMmemsetW
                                    436 ;main.c:64: printf("Hello, World! [1/3]");
      00021B 21r22r03         [10]  437 	ld	hl, #___str_0
      00021E E5               [11]  438 	push	hl
      00021F CDr00r00         [17]  439 	call	_printf
      000222 F1               [10]  440 	pop	af
                                    441 ;main.c:75: loadGrapVRAM();
      000223 CDr03r00         [17]  442 	call	_loadGrapVRAM
                                    443 ;main.c:77: SMS_displayOn();
      000226 21 40 01         [10]  444 	ld	hl, #0x0140
      000229 CDr00r00         [17]  445 	call	_SMS_VDPturnOnFeature
                                    446 ;main.c:78: SMS_setBGScrollX(scroll_x);
      00022C 2E 00            [ 7]  447 	ld	l, #0x00
                                    448 ;	spillPairReg hl
                                    449 ;	spillPairReg hl
      00022E CDr00r00         [17]  450 	call	_SMS_setBGScrollX
                                    451 ;main.c:79: SMS_setBGScrollY(scroll_y);
      000231 2E 00            [ 7]  452 	ld	l, #0x00
                                    453 ;	spillPairReg hl
                                    454 ;	spillPairReg hl
      000233 CDr00r00         [17]  455 	call	_SMS_setBGScrollY
                                    456 ;main.c:80: SMS_init();
      000236 CDr00r00         [17]  457 	call	_SMS_init
                                    458 ;main.c:81: SMS_setSpriteMode(SPRITEMODE_NORMAL);
      000239 2E 00            [ 7]  459 	ld	l, #0x00
                                    460 ;	spillPairReg hl
                                    461 ;	spillPairReg hl
      00023B CDr00r00         [17]  462 	call	_SMS_setSpriteMode
                                    463 ;main.c:85: PSGPlay(titulo_psg);
      00023E 21r00r00         [10]  464 	ld	hl, #_titulo_psg
      000241 CDr00r00         [17]  465 	call	_PSGPlay
                                    466 ;main.c:86: SMS_VDPturnOnFeature(VDPFEATURE_LEFTCOLBLANK);
      000244 21 20 00         [10]  467 	ld	hl, #0x0020
      000247 CDr00r00         [17]  468 	call	_SMS_VDPturnOnFeature
      00024A                        469 00124$:
                                    470 ;main.c:88: if(SMS_queryPauseRequested ()){
      00024A CDr00r00         [17]  471 	call	_SMS_queryPauseRequested
      00024D CB 47            [ 8]  472 	bit	0,a
      00024F 28 15            [12]  473 	jr	Z, 00105$
                                    474 ;main.c:89: SMS_resetPauseRequest ();
      000251 CDr00r00         [17]  475 	call	_SMS_resetPauseRequest
                                    476 ;main.c:90: while(!SMS_queryPauseRequested ()){
      000254                        477 00101$:
      000254 CDr00r00         [17]  478 	call	_SMS_queryPauseRequested
      000257 CB 47            [ 8]  479 	bit	0,a
      000259 20 08            [12]  480 	jr	NZ, 00103$
                                    481 ;main.c:91: SMS_waitForVBlank();
      00025B CDr00r00         [17]  482 	call	_SMS_waitForVBlank
                                    483 ;main.c:92: PSGFrame();
      00025E CDr00r00         [17]  484 	call	_PSGFrame
      000261 18 F1            [12]  485 	jr	00101$
      000263                        486 00103$:
                                    487 ;main.c:94: SMS_resetPauseRequest();
      000263 CDr00r00         [17]  488 	call	_SMS_resetPauseRequest
      000266                        489 00105$:
                                    490 ;main.c:98: int keys = SMS_getKeysHeld();
      000266 CDr00r00         [17]  491 	call	_SMS_getKeysHeld
                                    492 ;main.c:99: if(keys & PORT_A_KEY_LEFT){
      000269 CB 53            [ 8]  493 	bit	2, e
      00026B 28 08            [12]  494 	jr	Z, 00110$
                                    495 ;main.c:100: player_v_x=-1; 
      00026D 21 FF FF         [10]  496 	ld	hl, #0xffff
      000270 22r02r00         [16]  497 	ld	(_player_v_x), hl
      000273 18 12            [12]  498 	jr	00111$
      000275                        499 00110$:
                                    500 ;main.c:102: else if(keys & PORT_A_KEY_RIGHT){
      000275 CB 5B            [ 8]  501 	bit	3, e
      000277 28 08            [12]  502 	jr	Z, 00107$
                                    503 ;main.c:103: player_v_x=1; 
      000279 21 01 00         [10]  504 	ld	hl, #0x0001
      00027C 22r02r00         [16]  505 	ld	(_player_v_x), hl
      00027F 18 06            [12]  506 	jr	00111$
      000281                        507 00107$:
                                    508 ;main.c:106: player_v_x=0; 
      000281 21 00 00         [10]  509 	ld	hl, #0x0000
      000284 22r02r00         [16]  510 	ld	(_player_v_x), hl
      000287                        511 00111$:
                                    512 ;main.c:108: player_x = player_x + player_v_x;
      000287 21r02r00         [10]  513 	ld	hl, #_player_v_x
      00028A D5               [11]  514 	push	de
      00028B 11r00r00         [10]  515 	ld	de, #_player_x
      00028E 1A               [ 7]  516 	ld	a, (de)
      00028F 86               [ 7]  517 	add	a, (hl)
      000290 23               [ 6]  518 	inc	hl
      000291 12               [ 7]  519 	ld	(de), a
      000292 13               [ 6]  520 	inc	de
      000293 1A               [ 7]  521 	ld	a, (de)
      000294 8E               [ 7]  522 	adc	a, (hl)
      000295 12               [ 7]  523 	ld	(de), a
      000296 D1               [10]  524 	pop	de
                                    525 ;main.c:109: if(player_v_x != 0)
      000297 3Ar03r00         [13]  526 	ld	a, (_player_v_x+1)
      00029A 21r02r00         [10]  527 	ld	hl, #_player_v_x
      00029D B6               [ 7]  528 	or	a, (hl)
      00029E 28 09            [12]  529 	jr	Z, 00113$
                                    530 ;main.c:110: delay_frame_player++;
      0002A0 2Ar08r00         [16]  531 	ld	hl, (_delay_frame_player)
      0002A3 23               [ 6]  532 	inc	hl
      0002A4 22r08r00         [16]  533 	ld	(_delay_frame_player), hl
      0002A7 18 0B            [12]  534 	jr	00114$
      0002A9                        535 00113$:
                                    536 ;main.c:112: delay_frame_player=15;
      0002A9 21 0F 00         [10]  537 	ld	hl, #0x000f
      0002AC 22r08r00         [16]  538 	ld	(_delay_frame_player), hl
                                    539 ;main.c:113: frame_player=1;
      0002AF 2E 01            [ 7]  540 	ld	l, #0x01
      0002B1 22r06r00         [16]  541 	ld	(_frame_player), hl
      0002B4                        542 00114$:
                                    543 ;main.c:115: if(delay_frame_player%16==0){
      0002B4 11 10 00         [10]  544 	ld	de, #0x0010
      0002B7 2Ar08r00         [16]  545 	ld	hl, (_delay_frame_player)
      0002BA CDr00r00         [17]  546 	call	__modsint
      0002BD 7A               [ 4]  547 	ld	a, d
      0002BE B3               [ 4]  548 	or	a, e
      0002BF 20 23            [12]  549 	jr	NZ, 00118$
                                    550 ;main.c:116: frame_player++;
      0002C1 2Ar06r00         [16]  551 	ld	hl, (_frame_player)
      0002C4 23               [ 6]  552 	inc	hl
      0002C5 22r06r00         [16]  553 	ld	(_frame_player), hl
                                    554 ;main.c:117: if(frame_player>3){
      0002C8 3E 03            [ 7]  555 	ld	a, #0x03
      0002CA FD 21r06r00      [14]  556 	ld	iy, #_frame_player
      0002CE FD BE 00         [19]  557 	cp	a, 0 (iy)
      0002D1 3E 00            [ 7]  558 	ld	a, #0x00
      0002D3 FD 9E 01         [19]  559 	sbc	a, 1 (iy)
      0002D6 E2rDBr02         [10]  560 	jp	PO, 00207$
      0002D9 EE 80            [ 7]  561 	xor	a, #0x80
      0002DB                        562 00207$:
      0002DB F2rE4r02         [10]  563 	jp	P, 00118$
                                    564 ;main.c:118: frame_player=0;
      0002DE 21 00 00         [10]  565 	ld	hl, #0x0000
      0002E1 22r06r00         [16]  566 	ld	(_frame_player), hl
      0002E4                        567 00118$:
                                    568 ;main.c:122: SMS_initSprites();
      0002E4 CDr00r00         [17]  569 	call	_SMS_initSprites
                                    570 ;main.c:123: draw_main_character();
      0002E7 CDr4Fr00         [17]  571 	call	_draw_main_character
                                    572 ;main.c:124: SMS_finalizeSprites();
      0002EA CDr00r00         [17]  573 	call	_SMS_finalizeSprites
                                    574 ;main.c:125: SMS_waitForVBlank();
      0002ED CDr00r00         [17]  575 	call	_SMS_waitForVBlank
                                    576 ;main.c:126: SMS_copySpritestoSAT();
      0002F0 CDr00r00         [17]  577 	call	_SMS_copySpritestoSAT
                                    578 ;main.c:127: PSGFrame();
      0002F3 CDr00r00         [17]  579 	call	_PSGFrame
                                    580 ;main.c:128: SMS_displayOff();
      0002F6 21 40 01         [10]  581 	ld	hl, #0x0140
      0002F9 CDr00r00         [17]  582 	call	_SMS_VDPturnOffFeature
                                    583 ;main.c:129: if(scroll_y%2==0)
      0002FC DD CB FF 46      [20]  584 	bit	0, -1 (ix)
      000300 20 03            [12]  585 	jr	NZ, 00120$
                                    586 ;main.c:130: scroll_x += 1;
      000302 DD 34 FE         [23]  587 	inc	-2 (ix)
      000305                        588 00120$:
                                    589 ;main.c:131: scroll_y++;
      000305 DD 34 FF         [23]  590 	inc	-1 (ix)
                                    591 ;main.c:132: if(scroll_y==224)
      000308 DD 7E FF         [19]  592 	ld	a, -1 (ix)
      00030B D6 E0            [ 7]  593 	sub	a, #0xe0
      00030D 20 04            [12]  594 	jr	NZ, 00122$
                                    595 ;main.c:133: scroll_y=0;
      00030F DD 36 FF 00      [19]  596 	ld	-1 (ix), #0x00
      000313                        597 00122$:
                                    598 ;main.c:135: SMS_setBGScrollX(scroll_x);
      000313 DD 6E FE         [19]  599 	ld	l, -2 (ix)
                                    600 ;	spillPairReg hl
                                    601 ;	spillPairReg hl
      000316 CDr00r00         [17]  602 	call	_SMS_setBGScrollX
                                    603 ;main.c:137: SMS_displayOn();
      000319 21 40 01         [10]  604 	ld	hl, #0x0140
      00031C CDr00r00         [17]  605 	call	_SMS_VDPturnOnFeature
                                    606 ;main.c:139: }
      00031F C3r4Ar02         [10]  607 	jp	00124$
      000322                        608 ___str_0:
      000322 48 65 6C 6C 6F 2C 20   609 	.ascii "Hello, World! [1/3]"
             57 6F 72 6C 64 21 20
             5B 31 2F 33 5D
      000335 00                     610 	.db 0x00
                                    611 	.area _CODE
      000336                        612 __str_1:
      000336 72 61 70 68 6E 65 74   613 	.ascii "raphnet"
      00033D 00                     614 	.db 0x00
      00033E                        615 __str_2:
      00033E 62 61 73 69 63 20 65   616 	.ascii "basic example"
             78 61 6D 70 6C 65
      00034B 00                     617 	.db 0x00
      00034C                        618 __str_3:
      00034C 41 20 73 69 6D 70 6C   619 	.ascii "A simple example"
             65 20 65 78 61 6D 70
             6C 65
      00035C 00                     620 	.db 0x00
                                    621 	.area _INITIALIZER
      000000                        622 __xinit__player_x:
      000000 32 00                  623 	.dw #0x0032
      000002                        624 __xinit__player_v_x:
      000002 00 00                  625 	.dw #0x0000
      000004                        626 __xinit__player_y:
      000004 32 00                  627 	.dw #0x0032
      000006                        628 __xinit__frame_player:
      000006 02 00                  629 	.dw #0x0002
      000008                        630 __xinit__delay_frame_player:
      000008 0F 00                  631 	.dw #0x000f
                                    632 	.area _CABS (ABS)
      007FF0                        633 	.org 0x7FF0
      007FF0                        634 ___SMS__SEGA_signature:
      007FF0 54                     635 	.db #0x54	; 84	'T'
      007FF1 4D                     636 	.db #0x4d	; 77	'M'
      007FF2 52                     637 	.db #0x52	; 82	'R'
      007FF3 20                     638 	.db #0x20	; 32
      007FF4 53                     639 	.db #0x53	; 83	'S'
      007FF5 45                     640 	.db #0x45	; 69	'E'
      007FF6 47                     641 	.db #0x47	; 71	'G'
      007FF7 41                     642 	.db #0x41	; 65	'A'
      007FF8 FF                     643 	.db #0xff	; 255
      007FF9 FF                     644 	.db #0xff	; 255
      007FFA FF                     645 	.db #0xff	; 255
      007FFB FF                     646 	.db #0xff	; 255
      007FFC 99                     647 	.db #0x99	; 153
      007FFD 99                     648 	.db #0x99	; 153
      007FFE 00                     649 	.db #0x00	; 0
      007FFF 4C                     650 	.db #0x4c	; 76	'L'
      007FD8                        651 	.org 0x7FD8
      007FD8                        652 ___SMS__SDSC_author:
      007FD8 72 61 70 68 6E 65 74   653 	.ascii "raphnet"
      007FDF 00                     654 	.db 0x00
      007FCA                        655 	.org 0x7FCA
      007FCA                        656 ___SMS__SDSC_name:
      007FCA 62 61 73 69 63 20 65   657 	.ascii "basic example"
             78 61 6D 70 6C 65
      007FD7 00                     658 	.db 0x00
      007FB9                        659 	.org 0x7FB9
      007FB9                        660 ___SMS__SDSC_descr:
      007FB9 41 20 73 69 6D 70 6C   661 	.ascii "A simple example"
             65 20 65 78 61 6D 70
             6C 65
      007FC9 00                     662 	.db 0x00
      007FE0                        663 	.org 0x7FE0
      007FE0                        664 ___SMS__SDSC_signature:
      007FE0 53                     665 	.db #0x53	; 83	'S'
      007FE1 44                     666 	.db #0x44	; 68	'D'
      007FE2 53                     667 	.db #0x53	; 83	'S'
      007FE3 43                     668 	.db #0x43	; 67	'C'
      007FE4 01                     669 	.db #0x01	; 1
      007FE5 00                     670 	.db #0x00	; 0
      007FE6 00                     671 	.db #0x00	; 0
      007FE7 00                     672 	.db #0x00	; 0
      007FE8 00                     673 	.db #0x00	; 0
      007FE9 00                     674 	.db #0x00	; 0
      007FEA D8                     675 	.db #0xd8	; 216
      007FEB 7F                     676 	.db #0x7f	; 127
      007FEC CA                     677 	.db #0xca	; 202
      007FED 7F                     678 	.db #0x7f	; 127
      007FEE B9                     679 	.db #0xb9	; 185
      007FEF 7F                     680 	.db #0x7f	; 127
