                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14549 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___SMS__SDSC_signature
                                     12 	.globl ___SMS__SDSC_descr
                                     13 	.globl ___SMS__SDSC_name
                                     14 	.globl ___SMS__SDSC_author
                                     15 	.globl ___SMS__SEGA_signature
                                     16 	.globl _main
                                     17 	.globl _disableSprites
                                     18 	.globl _playMusic
                                     19 	.globl _dibujaPajaros
                                     20 	.globl _loadGrapVRAM
                                     21 	.globl _inicializaPajaros
                                     22 	.globl _moveAlex
                                     23 	.globl _moveAlexAire
                                     24 	.globl _moveAlexSuelo
                                     25 	.globl _canRight
                                     26 	.globl _canLeft
                                     27 	.globl _canDown
                                     28 	.globl _canUp
                                     29 	.globl _PSGSFXFrame
                                     30 	.globl _PSGFrame
                                     31 	.globl _PSGSFXPlay
                                     32 	.globl _PSGPlay
                                     33 	.globl _SMS_VRAMmemsetW
                                     34 	.globl _SMS_VRAMmemcpy
                                     35 	.globl _SMS_setFrameInterruptHandler
                                     36 	.globl _SMS_resetPauseRequest
                                     37 	.globl _SMS_queryPauseRequested
                                     38 	.globl _SMS_getKeysHeld
                                     39 	.globl _SMS_getKeysPressed
                                     40 	.globl _SMS_loadSpritePalette
                                     41 	.globl _SMS_loadBGPalette
                                     42 	.globl _SMS_updateSpritePosition
                                     43 	.globl _SMS_addSprite_f
                                     44 	.globl _SMS_waitForVBlank
                                     45 	.globl _SMS_setSpriteMode
                                     46 	.globl _SMS_setBGScrollY
                                     47 	.globl _SMS_setBGScrollX
                                     48 	.globl _SMS_VDPturnOffFeature
                                     49 	.globl _SMS_VDPturnOnFeature
                                     50 	.globl _SMS_init
                                     51 	.globl _copySpritestoSAT
                                     52 	.globl _addHardwareSprite
                                     53 	.globl _generateSpriteNoRAM
                                     54 	.globl _printf
                                     55 	.globl _spritePuno
                                     56 	.globl _spritePajaro
                                     57 	.globl _spriteAlex
                                     58 	.globl _alex
                                     59 	.globl _maxSalto
                                     60 	.globl _nextVRAMsprites
                                     61 	.globl _numSprites
                                     62 	.globl _pajaros
                                     63 	.globl _SMS_SRAM
                                     64 	.globl _SRAM_bank_to_be_mapped_on_slot2
                                     65 	.globl _ROM_bank_to_be_mapped_on_slot0
                                     66 	.globl _ROM_bank_to_be_mapped_on_slot1
                                     67 	.globl _ROM_bank_to_be_mapped_on_slot2
                                     68 	.globl _SpriteNextFree2
                                     69 	.globl _SpriteTableXN2
                                     70 	.globl _SpriteTableY2
                                     71 	.globl _hardwareSprites
                                     72 	.globl _generateSprite
                                     73 	.globl _initSpritesVariables
                                     74 	.globl _draw_entidad
                                     75 ;--------------------------------------------------------
                                     76 ; special function registers
                                     77 ;--------------------------------------------------------
                           0000BF    78 _VDPControlPort	=	0x00bf
                           0000BF    79 _VDPStatusPort	=	0x00bf
                           0000BE    80 _VDPDataPort	=	0x00be
                           00007E    81 _VDPVCounterPort	=	0x007e
                           00007F    82 _VDPHCounterPort	=	0x007f
                                     83 ;--------------------------------------------------------
                                     84 ; ram data
                                     85 ;--------------------------------------------------------
                                     86 	.area _DATA
      000000                         87 _hardwareSprites::
      000000                         88 	.ds 768
      000300                         89 _SpriteTableY2::
      000300                         90 	.ds 2
      000302                         91 _SpriteTableXN2::
      000302                         92 	.ds 2
      000304                         93 _SpriteNextFree2::
      000304                         94 	.ds 2
                           00FFFF    95 _ROM_bank_to_be_mapped_on_slot2	=	0xffff
                           00FFFE    96 _ROM_bank_to_be_mapped_on_slot1	=	0xfffe
                           00FFFD    97 _ROM_bank_to_be_mapped_on_slot0	=	0xfffd
                           00FFFC    98 _SRAM_bank_to_be_mapped_on_slot2	=	0xfffc
                           008000    99 _SMS_SRAM	=	0x8000
      000306                        100 _pajaros::
      000306                        101 	.ds 152
      00039E                        102 _numSprites::
      00039E                        103 	.ds 2
                                    104 ;--------------------------------------------------------
                                    105 ; ram data
                                    106 ;--------------------------------------------------------
                                    107 	.area _INITIALIZED
      000000                        108 _nextVRAMsprites::
      000000                        109 	.ds 2
      000002                        110 _maxSalto::
      000002                        111 	.ds 1
      000003                        112 _alex::
      000003                        113 	.ds 8
      00000B                        114 _spriteAlex::
      00000B                        115 	.ds 10
      000015                        116 _spritePajaro::
      000015                        117 	.ds 10
      00001F                        118 _spritePuno::
      00001F                        119 	.ds 10
                                    120 ;--------------------------------------------------------
                                    121 ; absolute external ram data
                                    122 ;--------------------------------------------------------
                                    123 	.area _DABS (ABS)
                                    124 ;--------------------------------------------------------
                                    125 ; global & static initialisations
                                    126 ;--------------------------------------------------------
                                    127 	.area _HOME
                                    128 	.area _GSINIT
                                    129 	.area _GSFINAL
                                    130 	.area _GSINIT
                                    131 ;--------------------------------------------------------
                                    132 ; Home
                                    133 ;--------------------------------------------------------
                                    134 	.area _HOME
                                    135 	.area _HOME
                                    136 ;--------------------------------------------------------
                                    137 ; code
                                    138 ;--------------------------------------------------------
                                    139 	.area _CODE
                                    140 ;./lib/./sprite.c:20: T_sprite generateSprite(unsigned char ancho, unsigned char alto, int tam,const unsigned char data[]) {
                                    141 ;	---------------------------------
                                    142 ; Function generateSprite
                                    143 ; ---------------------------------
      000000                        144 _generateSprite::
      000000 DD E5            [15]  145 	push	ix
      000002 DD 21 00 00      [14]  146 	ld	ix,#0
      000006 DD 39            [15]  147 	add	ix,sp
      000008 FD 21 F6 FF      [14]  148 	ld	iy, #-10
      00000C FD 39            [15]  149 	add	iy, sp
      00000E FD F9            [10]  150 	ld	sp, iy
      000010 5F               [ 4]  151 	ld	e, a
      000011 55               [ 4]  152 	ld	d, l
                                    153 ;./lib/./sprite.c:21: unsigned char tamano = alto*ancho*2;
      000012 D5               [11]  154 	push	de
      000013 62               [ 4]  155 	ld	h, d
                                    156 ;	spillPairReg hl
                                    157 ;	spillPairReg hl
      000014 2E 00            [ 7]  158 	ld	l, #0x00
      000016 55               [ 4]  159 	ld	d, l
      000017 06 08            [ 7]  160 	ld	b, #0x08
      000019                        161 00103$:
      000019 29               [11]  162 	add	hl, hl
      00001A 30 01            [12]  163 	jr	NC, 00104$
      00001C 19               [11]  164 	add	hl, de
      00001D                        165 00104$:
      00001D 10 FA            [13]  166 	djnz	00103$
      00001F D1               [10]  167 	pop	de
      000020 4D               [ 4]  168 	ld	c, l
      000021 CB 21            [ 8]  169 	sla	c
                                    170 ;./lib/./sprite.c:22: T_sprite sprite = {alto,ancho,tamano,tam/(tamano*32),nextVRAMsprites, 1,0};
      000023 DD 72 F6         [19]  171 	ld	-10 (ix), d
      000026 DD 73 F7         [19]  172 	ld	-9 (ix), e
      000029 DD 71 F8         [19]  173 	ld	-8 (ix), c
      00002C 69               [ 4]  174 	ld	l, c
                                    175 ;	spillPairReg hl
                                    176 ;	spillPairReg hl
      00002D 26 00            [ 7]  177 	ld	h, #0x00
                                    178 ;	spillPairReg hl
                                    179 ;	spillPairReg hl
      00002F 29               [11]  180 	add	hl, hl
      000030 29               [11]  181 	add	hl, hl
      000031 29               [11]  182 	add	hl, hl
      000032 29               [11]  183 	add	hl, hl
      000033 29               [11]  184 	add	hl, hl
      000034 C5               [11]  185 	push	bc
      000035 EB               [ 4]  186 	ex	de, hl
      000036 DD 6E 06         [19]  187 	ld	l, 6 (ix)
                                    188 ;	spillPairReg hl
                                    189 ;	spillPairReg hl
      000039 DD 66 07         [19]  190 	ld	h, 7 (ix)
                                    191 ;	spillPairReg hl
                                    192 ;	spillPairReg hl
      00003C CDr00r00         [17]  193 	call	__divsint
      00003F C1               [10]  194 	pop	bc
      000040 DD 73 F9         [19]  195 	ld	-7 (ix), e
      000043 3Ar00r00         [13]  196 	ld	a, (_nextVRAMsprites+0)
      000046 DD 77 FA         [19]  197 	ld	-6 (ix), a
      000049 3Ar01r00         [13]  198 	ld	a, (_nextVRAMsprites+1)
      00004C DD 77 FB         [19]  199 	ld	-5 (ix), a
      00004F DD 36 FC 01      [19]  200 	ld	-4 (ix), #0x01
      000053 AF               [ 4]  201 	xor	a, a
      000054 DD 77 FD         [19]  202 	ld	-3 (ix), a
      000057 DD 77 FE         [19]  203 	ld	-2 (ix), a
      00005A DD 36 FF 00      [19]  204 	ld	-1 (ix), #0x00
                                    205 ;./lib/./sprite.c:23: SMS_loadTiles(data,nextVRAMsprites,tam);
      00005E DD 5E 08         [19]  206 	ld	e, 8 (ix)
      000061 DD 56 09         [19]  207 	ld	d, 9 (ix)
      000064 2Ar00r00         [16]  208 	ld	hl, (_nextVRAMsprites)
      000067 29               [11]  209 	add	hl, hl
      000068 29               [11]  210 	add	hl, hl
      000069 29               [11]  211 	add	hl, hl
      00006A 29               [11]  212 	add	hl, hl
      00006B 29               [11]  213 	add	hl, hl
      00006C CB F4            [ 8]  214 	set	6, h
      00006E C5               [11]  215 	push	bc
      00006F E5               [11]  216 	push	hl
      000070 DD 6E 06         [19]  217 	ld	l, 6 (ix)
                                    218 ;	spillPairReg hl
                                    219 ;	spillPairReg hl
      000073 DD 66 07         [19]  220 	ld	h, 7 (ix)
                                    221 ;	spillPairReg hl
                                    222 ;	spillPairReg hl
      000076 E3               [19]  223 	ex	(sp), hl
      000077 CDr00r00         [17]  224 	call	_SMS_VRAMmemcpy
      00007A C1               [10]  225 	pop	bc
                                    226 ;./lib/./sprite.c:24: nextVRAMsprites = nextVRAMsprites + (tamano*sprite.numFrames);
      00007B DD 5E F9         [19]  227 	ld	e, -7 (ix)
      00007E 61               [ 4]  228 	ld	h, c
                                    229 ;	spillPairReg hl
                                    230 ;	spillPairReg hl
      00007F 2E 00            [ 7]  231 	ld	l, #0x00
      000081 55               [ 4]  232 	ld	d, l
      000082 06 08            [ 7]  233 	ld	b, #0x08
      000084                        234 00105$:
      000084 29               [11]  235 	add	hl, hl
      000085 30 01            [12]  236 	jr	NC, 00106$
      000087 19               [11]  237 	add	hl, de
      000088                        238 00106$:
      000088 10 FA            [13]  239 	djnz	00105$
      00008A EB               [ 4]  240 	ex	de, hl
      00008B 21r00r00         [10]  241 	ld	hl, #_nextVRAMsprites
      00008E 7E               [ 7]  242 	ld	a, (hl)
      00008F 83               [ 4]  243 	add	a, e
      000090 77               [ 7]  244 	ld	(hl), a
      000091 23               [ 6]  245 	inc	hl
      000092 7E               [ 7]  246 	ld	a, (hl)
      000093 8A               [ 4]  247 	adc	a, d
      000094 77               [ 7]  248 	ld	(hl), a
                                    249 ;./lib/./sprite.c:25: return sprite;
      000095 21 0E 00         [10]  250 	ld	hl, #14
      000098 39               [11]  251 	add	hl, sp
      000099 5E               [ 7]  252 	ld	e, (hl)
      00009A 23               [ 6]  253 	inc	hl
      00009B 56               [ 7]  254 	ld	d, (hl)
      00009C 21 00 00         [10]  255 	ld	hl, #0
      00009F 39               [11]  256 	add	hl, sp
      0000A0 01 0A 00         [10]  257 	ld	bc, #10
      0000A3 ED B0            [21]  258 	ldir
                                    259 ;./lib/./sprite.c:26: }
      0000A5 DD F9            [10]  260 	ld	sp, ix
      0000A7 DD E1            [14]  261 	pop	ix
      0000A9 C9               [10]  262 	ret
                                    263 ;./lib/./sprite.c:29: T_sprite generateSpriteNoRAM(unsigned char ancho, unsigned char alto, int tam,const unsigned char data[]) {
                                    264 ;	---------------------------------
                                    265 ; Function generateSpriteNoRAM
                                    266 ; ---------------------------------
      0000AA                        267 _generateSpriteNoRAM::
      0000AA DD E5            [15]  268 	push	ix
      0000AC DD 21 00 00      [14]  269 	ld	ix,#0
      0000B0 DD 39            [15]  270 	add	ix,sp
      0000B2 FD 21 F4 FF      [14]  271 	ld	iy, #-12
      0000B6 FD 39            [15]  272 	add	iy, sp
      0000B8 FD F9            [10]  273 	ld	sp, iy
      0000BA 5F               [ 4]  274 	ld	e, a
      0000BB 55               [ 4]  275 	ld	d, l
                                    276 ;./lib/./sprite.c:30: unsigned char tamano = alto*ancho*2;
      0000BC D5               [11]  277 	push	de
      0000BD 62               [ 4]  278 	ld	h, d
                                    279 ;	spillPairReg hl
                                    280 ;	spillPairReg hl
      0000BE 2E 00            [ 7]  281 	ld	l, #0x00
      0000C0 55               [ 4]  282 	ld	d, l
      0000C1 06 08            [ 7]  283 	ld	b, #0x08
      0000C3                        284 00103$:
      0000C3 29               [11]  285 	add	hl, hl
      0000C4 30 01            [12]  286 	jr	NC, 00104$
      0000C6 19               [11]  287 	add	hl, de
      0000C7                        288 00104$:
      0000C7 10 FA            [13]  289 	djnz	00103$
      0000C9 D1               [10]  290 	pop	de
      0000CA 4D               [ 4]  291 	ld	c, l
      0000CB CB 21            [ 8]  292 	sla	c
                                    293 ;./lib/./sprite.c:31: T_sprite sprite = {alto,ancho,tamano,tam/(tamano*32),nextVRAMsprites, 0,0};
      0000CD DD 72 F4         [19]  294 	ld	-12 (ix), d
      0000D0 DD 73 F5         [19]  295 	ld	-11 (ix), e
      0000D3 DD 71 F6         [19]  296 	ld	-10 (ix), c
                                    297 ;	spillPairReg hl
                                    298 ;	spillPairReg hl
      0000D6 DD 71 FE         [19]  299 	ld	-2 (ix), c
      0000D9 DD 36 FF 00      [19]  300 	ld	-1 (ix), #0x00
      0000DD 69               [ 4]  301 	ld	l, c
      0000DE 26 00            [ 7]  302 	ld	h, #0x00
                                    303 ;	spillPairReg hl
                                    304 ;	spillPairReg hl
      0000E0 29               [11]  305 	add	hl, hl
      0000E1 29               [11]  306 	add	hl, hl
      0000E2 29               [11]  307 	add	hl, hl
      0000E3 29               [11]  308 	add	hl, hl
      0000E4 29               [11]  309 	add	hl, hl
      0000E5 EB               [ 4]  310 	ex	de,hl
      0000E6 D5               [11]  311 	push	de
      0000E7 DD 6E 06         [19]  312 	ld	l, 6 (ix)
                                    313 ;	spillPairReg hl
                                    314 ;	spillPairReg hl
      0000EA DD 66 07         [19]  315 	ld	h, 7 (ix)
                                    316 ;	spillPairReg hl
                                    317 ;	spillPairReg hl
      0000ED CDr00r00         [17]  318 	call	__divsint
      0000F0 EB               [ 4]  319 	ex	de, hl
      0000F1 D1               [10]  320 	pop	de
      0000F2 DD 75 F7         [19]  321 	ld	-9 (ix), l
      0000F5 3Ar00r00         [13]  322 	ld	a, (_nextVRAMsprites+0)
      0000F8 DD 77 F8         [19]  323 	ld	-8 (ix), a
      0000FB 3Ar01r00         [13]  324 	ld	a, (_nextVRAMsprites+1)
      0000FE DD 77 F9         [19]  325 	ld	-7 (ix), a
      000101 DD 36 FA 00      [19]  326 	ld	-6 (ix), #0x00
      000105 AF               [ 4]  327 	xor	a, a
      000106 DD 77 FB         [19]  328 	ld	-5 (ix), a
      000109 DD 77 FC         [19]  329 	ld	-4 (ix), a
      00010C DD 36 FD 00      [19]  330 	ld	-3 (ix), #0x00
                                    331 ;./lib/./sprite.c:32: sprite.data = data;
      000110 DD 7E 08         [19]  332 	ld	a, 8 (ix)
      000113 DD 77 FB         [19]  333 	ld	-5 (ix), a
      000116 DD 7E 09         [19]  334 	ld	a, 9 (ix)
      000119 DD 77 FC         [19]  335 	ld	-4 (ix), a
                                    336 ;./lib/./sprite.c:33: sprite.frameInVRAM = 0;
      00011C DD 36 FD 00      [19]  337 	ld	-3 (ix), #0x00
                                    338 ;./lib/./sprite.c:34: SMS_loadTiles(data,nextVRAMsprites,tamano*32);
      000120 DD 4E 08         [19]  339 	ld	c, 8 (ix)
      000123 DD 46 09         [19]  340 	ld	b, 9 (ix)
      000126 2Ar00r00         [16]  341 	ld	hl, (_nextVRAMsprites)
      000129 29               [11]  342 	add	hl, hl
      00012A 29               [11]  343 	add	hl, hl
      00012B 29               [11]  344 	add	hl, hl
      00012C 29               [11]  345 	add	hl, hl
      00012D 29               [11]  346 	add	hl, hl
      00012E CB F4            [ 8]  347 	set	6, h
      000130 D5               [11]  348 	push	de
      000131 59               [ 4]  349 	ld	e, c
      000132 50               [ 4]  350 	ld	d, b
      000133 CDr00r00         [17]  351 	call	_SMS_VRAMmemcpy
                                    352 ;./lib/./sprite.c:35: nextVRAMsprites = nextVRAMsprites + (tamano);
      000136 21r00r00         [10]  353 	ld	hl, #_nextVRAMsprites
      000139 7E               [ 7]  354 	ld	a, (hl)
      00013A DD 86 FE         [19]  355 	add	a, -2 (ix)
      00013D 77               [ 7]  356 	ld	(hl), a
      00013E 23               [ 6]  357 	inc	hl
      00013F 7E               [ 7]  358 	ld	a, (hl)
      000140 DD 8E FF         [19]  359 	adc	a, -1 (ix)
      000143 77               [ 7]  360 	ld	(hl), a
                                    361 ;./lib/./sprite.c:36: return sprite;
      000144 21 10 00         [10]  362 	ld	hl, #16
      000147 39               [11]  363 	add	hl, sp
      000148 5E               [ 7]  364 	ld	e, (hl)
      000149 23               [ 6]  365 	inc	hl
      00014A 56               [ 7]  366 	ld	d, (hl)
      00014B 21 00 00         [10]  367 	ld	hl, #0
      00014E 39               [11]  368 	add	hl, sp
      00014F 01 0A 00         [10]  369 	ld	bc, #10
      000152 ED B0            [21]  370 	ldir
                                    371 ;./lib/./sprite.c:37: }
      000154 DD F9            [10]  372 	ld	sp, ix
      000156 DD E1            [14]  373 	pop	ix
      000158 C9               [10]  374 	ret
                                    375 ;./lib/./sprite.c:48: unsigned int addHardwareSprite(unsigned int x,unsigned int y,unsigned int vx,unsigned int vy,unsigned int lx,
                                    376 ;	---------------------------------
                                    377 ; Function addHardwareSprite
                                    378 ; ---------------------------------
      000159                        379 _addHardwareSprite::
      000159 DD E5            [15]  380 	push	ix
      00015B DD 21 00 00      [14]  381 	ld	ix,#0
      00015F DD 39            [15]  382 	add	ix,sp
      000161 FD 21 EA FF      [14]  383 	ld	iy, #-22
      000165 FD 39            [15]  384 	add	iy, sp
      000167 FD F9            [10]  385 	ld	sp, iy
      000169 DD 75 F4         [19]  386 	ld	-12 (ix), l
      00016C DD 74 F5         [19]  387 	ld	-11 (ix), h
      00016F DD 73 F2         [19]  388 	ld	-14 (ix), e
      000172 DD 72 F3         [19]  389 	ld	-13 (ix), d
                                    390 ;./lib/./sprite.c:50: unsigned int i = MAX_HARDWARE_SPRITES;
      000175 21 40 00         [10]  391 	ld	hl, #0x0040
      000178 E3               [19]  392 	ex	(sp), hl
                                    393 ;./lib/./sprite.c:51: while (i) {
      000179 DD 36 FE 40      [19]  394 	ld	-2 (ix), #0x40
      00017D DD 36 FF 00      [19]  395 	ld	-1 (ix), #0
      000181                        396 00109$:
      000181 DD 7E FF         [19]  397 	ld	a, -1 (ix)
      000184 DD B6 FE         [19]  398 	or	a, -2 (ix)
      000187 CArD0r03         [10]  399 	jp	Z, 00111$
                                    400 ;./lib/./sprite.c:52: if (!hardwareSprites[i].len) {
      00018A DD 4E FE         [19]  401 	ld	c, -2 (ix)
      00018D DD 46 FF         [19]  402 	ld	b, -1 (ix)
      000190 69               [ 4]  403 	ld	l, c
      000191 60               [ 4]  404 	ld	h, b
      000192 29               [11]  405 	add	hl, hl
      000193 09               [11]  406 	add	hl, bc
      000194 29               [11]  407 	add	hl, hl
      000195 29               [11]  408 	add	hl, hl
      000196 DD 75 FC         [19]  409 	ld	-4 (ix), l
      000199 DD 74 FD         [19]  410 	ld	-3 (ix), h
      00019C 3Er00            [ 7]  411 	ld	a, #<(_hardwareSprites)
      00019E DD 86 FC         [19]  412 	add	a, -4 (ix)
      0001A1 DD 77 FA         [19]  413 	ld	-6 (ix), a
      0001A4 3Es00            [ 7]  414 	ld	a, #>(_hardwareSprites)
      0001A6 DD 8E FD         [19]  415 	adc	a, -3 (ix)
      0001A9 DD 77 FB         [19]  416 	ld	-5 (ix), a
      0001AC DD 7E FA         [19]  417 	ld	a, -6 (ix)
      0001AF DD 77 FC         [19]  418 	ld	-4 (ix), a
      0001B2 DD 7E FB         [19]  419 	ld	a, -5 (ix)
      0001B5 DD 77 FD         [19]  420 	ld	-3 (ix), a
      0001B8 DD 6E FC         [19]  421 	ld	l, -4 (ix)
      0001BB DD 66 FD         [19]  422 	ld	h, -3 (ix)
      0001BE 11 0A 00         [10]  423 	ld	de, #0x000a
      0001C1 19               [11]  424 	add	hl, de
      0001C2 7E               [ 7]  425 	ld	a, (hl)
      0001C3 DD 77 FC         [19]  426 	ld	-4 (ix), a
      0001C6 23               [ 6]  427 	inc	hl
      0001C7 7E               [ 7]  428 	ld	a, (hl)
      0001C8 DD 77 FD         [19]  429 	ld	-3 (ix), a
      0001CB DD B6 FC         [19]  430 	or	a, -4 (ix)
      0001CE C2rB4r03         [10]  431 	jp	NZ, 00108$
                                    432 ;./lib/./sprite.c:53: T_HardwareSprite *p = &hardwareSprites[i]; 
      0001D1 DD 7E FA         [19]  433 	ld	a, -6 (ix)
      0001D4 DD 77 FE         [19]  434 	ld	-2 (ix), a
      0001D7 DD 7E FB         [19]  435 	ld	a, -5 (ix)
      0001DA DD 77 FF         [19]  436 	ld	-1 (ix), a
      0001DD DD 7E FE         [19]  437 	ld	a, -2 (ix)
      0001E0 DD 77 EC         [19]  438 	ld	-20 (ix), a
      0001E3 DD 7E FF         [19]  439 	ld	a, -1 (ix)
      0001E6 DD 77 ED         [19]  440 	ld	-19 (ix), a
                                    441 ;./lib/./sprite.c:54: p->x = x;
      0001E9 DD 7E EC         [19]  442 	ld	a, -20 (ix)
      0001EC C6 04            [ 7]  443 	add	a, #0x04
      0001EE DD 77 FE         [19]  444 	ld	-2 (ix), a
      0001F1 DD 7E ED         [19]  445 	ld	a, -19 (ix)
      0001F4 CE 00            [ 7]  446 	adc	a, #0x00
      0001F6 DD 77 FF         [19]  447 	ld	-1 (ix), a
      0001F9 DD 6E FE         [19]  448 	ld	l, -2 (ix)
      0001FC DD 66 FF         [19]  449 	ld	h, -1 (ix)
      0001FF DD 7E F4         [19]  450 	ld	a, -12 (ix)
      000202 77               [ 7]  451 	ld	(hl), a
      000203 23               [ 6]  452 	inc	hl
      000204 DD 7E F5         [19]  453 	ld	a, -11 (ix)
      000207 77               [ 7]  454 	ld	(hl), a
                                    455 ;./lib/./sprite.c:55: p->y = y;
      000208 D1               [10]  456 	pop	de
      000209 E1               [10]  457 	pop	hl
      00020A E5               [11]  458 	push	hl
      00020B D5               [11]  459 	push	de
      00020C 11 06 00         [10]  460 	ld	de, #0x0006
      00020F 19               [11]  461 	add	hl, de
      000210 DD 7E F2         [19]  462 	ld	a, -14 (ix)
      000213 77               [ 7]  463 	ld	(hl), a
      000214 23               [ 6]  464 	inc	hl
      000215 DD 7E F3         [19]  465 	ld	a, -13 (ix)
      000218 77               [ 7]  466 	ld	(hl), a
                                    467 ;./lib/./sprite.c:56: p->vx = vx;
      000219 C1               [10]  468 	pop	bc
      00021A E1               [10]  469 	pop	hl
      00021B E5               [11]  470 	push	hl
      00021C C5               [11]  471 	push	bc
      00021D DD 7E 04         [19]  472 	ld	a, 4 (ix)
      000220 77               [ 7]  473 	ld	(hl), a
      000221 23               [ 6]  474 	inc	hl
      000222 DD 7E 05         [19]  475 	ld	a, 5 (ix)
      000225 77               [ 7]  476 	ld	(hl), a
                                    477 ;./lib/./sprite.c:57: p->vy = vy;
      000226 E1               [10]  478 	pop	hl
      000227 C1               [10]  479 	pop	bc
      000228 C5               [11]  480 	push	bc
      000229 E5               [11]  481 	push	hl
      00022A 03               [ 6]  482 	inc	bc
      00022B 03               [ 6]  483 	inc	bc
      00022C DD 7E 06         [19]  484 	ld	a, 6 (ix)
      00022F 02               [ 7]  485 	ld	(bc), a
      000230 03               [ 6]  486 	inc	bc
      000231 DD 7E 07         [19]  487 	ld	a, 7 (ix)
      000234 02               [ 7]  488 	ld	(bc), a
                                    489 ;./lib/./sprite.c:58: unsigned int iTile = 0;
      000235 AF               [ 4]  490 	xor	a, a
      000236 DD 77 FE         [19]  491 	ld	-2 (ix), a
      000239 DD 77 FF         [19]  492 	ld	-1 (ix), a
                                    493 ;./lib/./sprite.c:59: for (int iy=0;iy<ly;iy++) {
      00023C DD 7E F2         [19]  494 	ld	a, -14 (ix)
      00023F DD 77 F6         [19]  495 	ld	-10 (ix), a
      000242 DD 7E F3         [19]  496 	ld	a, -13 (ix)
      000245 DD 77 F7         [19]  497 	ld	-9 (ix), a
      000248 AF               [ 4]  498 	xor	a, a
      000249 DD 77 F8         [19]  499 	ld	-8 (ix), a
      00024C DD 77 F9         [19]  500 	ld	-7 (ix), a
      00024F                        501 00116$:
      00024F DD 7E F8         [19]  502 	ld	a, -8 (ix)
      000252 DD 77 FC         [19]  503 	ld	-4 (ix), a
      000255 DD 7E F9         [19]  504 	ld	a, -7 (ix)
      000258 DD 77 FD         [19]  505 	ld	-3 (ix), a
                                    506 ;./lib/./sprite.c:62: p->initSprite = SMS_addSprite(x,y, tiles[iTile]);
      00025B DD 7E EC         [19]  507 	ld	a, -20 (ix)
      00025E C6 08            [ 7]  508 	add	a, #0x08
      000260 DD 77 EE         [19]  509 	ld	-18 (ix), a
      000263 DD 7E ED         [19]  510 	ld	a, -19 (ix)
      000266 CE 00            [ 7]  511 	adc	a, #0x00
      000268 DD 77 EF         [19]  512 	ld	-17 (ix), a
                                    513 ;./lib/./sprite.c:59: for (int iy=0;iy<ly;iy++) {
      00026B DD 7E FC         [19]  514 	ld	a, -4 (ix)
      00026E DD 96 0A         [19]  515 	sub	a, 10 (ix)
      000271 DD 7E FD         [19]  516 	ld	a, -3 (ix)
      000274 DD 9E 0B         [19]  517 	sbc	a, 11 (ix)
      000277 D2r5Br03         [10]  518 	jp	NC, 00106$
                                    519 ;./lib/./sprite.c:60: for (int ix=0;ix<lx;ix++){
      00027A DD 7E FE         [19]  520 	ld	a, -2 (ix)
      00027D DD 77 FA         [19]  521 	ld	-6 (ix), a
      000280 DD 7E FF         [19]  522 	ld	a, -1 (ix)
      000283 DD 77 FB         [19]  523 	ld	-5 (ix), a
      000286 DD 7E F4         [19]  524 	ld	a, -12 (ix)
      000289 DD 77 FC         [19]  525 	ld	-4 (ix), a
      00028C DD 7E F5         [19]  526 	ld	a, -11 (ix)
      00028F DD 77 FD         [19]  527 	ld	-3 (ix), a
      000292 AF               [ 4]  528 	xor	a, a
      000293 DD 77 FE         [19]  529 	ld	-2 (ix), a
      000296 DD 77 FF         [19]  530 	ld	-1 (ix), a
      000299                        531 00113$:
      000299 DD 7E FE         [19]  532 	ld	a, -2 (ix)
      00029C DD 77 F0         [19]  533 	ld	-16 (ix), a
      00029F DD 7E FF         [19]  534 	ld	a, -1 (ix)
      0002A2 DD 77 F1         [19]  535 	ld	-15 (ix), a
      0002A5 DD 7E F0         [19]  536 	ld	a, -16 (ix)
      0002A8 DD 96 08         [19]  537 	sub	a, 8 (ix)
      0002AB DD 7E F1         [19]  538 	ld	a, -15 (ix)
      0002AE DD 9E 09         [19]  539 	sbc	a, 9 (ix)
      0002B1 30 77            [12]  540 	jr	NC, 00129$
                                    541 ;./lib/./sprite.c:62: p->initSprite = SMS_addSprite(x,y, tiles[iTile]);
      0002B3 DD 46 FC         [19]  542 	ld	b, -4 (ix)
      0002B6 DD 6E FA         [19]  543 	ld	l, -6 (ix)
                                    544 ;	spillPairReg hl
                                    545 ;	spillPairReg hl
      0002B9 DD 66 FB         [19]  546 	ld	h, -5 (ix)
                                    547 ;	spillPairReg hl
                                    548 ;	spillPairReg hl
      0002BC 29               [11]  549 	add	hl, hl
      0002BD EB               [ 4]  550 	ex	de,hl
      0002BE DD 6E 0C         [19]  551 	ld	l, 12 (ix)
                                    552 ;	spillPairReg hl
                                    553 ;	spillPairReg hl
      0002C1 DD 66 0D         [19]  554 	ld	h, 13 (ix)
                                    555 ;	spillPairReg hl
                                    556 ;	spillPairReg hl
      0002C4 19               [11]  557 	add	hl, de
      0002C5 5E               [ 7]  558 	ld	e, (hl)
      0002C6 DD 73 F0         [19]  559 	ld	-16 (ix), e
      0002C9 DD 70 F1         [19]  560 	ld	-15 (ix), b
                                    561 ;./lib/./sprite.c:61: if(ix==0 && iy == 0) {
      0002CC DD 7E FF         [19]  562 	ld	a, -1 (ix)
      0002CF DD B6 FE         [19]  563 	or	a, -2 (ix)
      0002D2 20 26            [12]  564 	jr	NZ, 00102$
      0002D4 DD 7E F9         [19]  565 	ld	a, -7 (ix)
      0002D7 DD B6 F8         [19]  566 	or	a, -8 (ix)
      0002DA 20 1E            [12]  567 	jr	NZ, 00102$
                                    568 ;./lib/./sprite.c:62: p->initSprite = SMS_addSprite(x,y, tiles[iTile]);
      0002DC DD 5E F0         [19]  569 	ld	e, -16 (ix)
      0002DF DD 56 F1         [19]  570 	ld	d, -15 (ix)
      0002E2 DD 6E F6         [19]  571 	ld	l, -10 (ix)
                                    572 ;	spillPairReg hl
                                    573 ;	spillPairReg hl
      0002E5 DD 66 F7         [19]  574 	ld	h, -9 (ix)
                                    575 ;	spillPairReg hl
                                    576 ;	spillPairReg hl
      0002E8 CDr00r00         [17]  577 	call	_SMS_addSprite_f
      0002EB 4F               [ 4]  578 	ld	c, a
      0002EC 07               [ 4]  579 	rlca
      0002ED 9F               [ 4]  580 	sbc	a, a
      0002EE 47               [ 4]  581 	ld	b, a
      0002EF DD 6E EE         [19]  582 	ld	l, -18 (ix)
      0002F2 DD 66 EF         [19]  583 	ld	h, -17 (ix)
      0002F5 71               [ 7]  584 	ld	(hl), c
      0002F6 23               [ 6]  585 	inc	hl
      0002F7 70               [ 7]  586 	ld	(hl), b
      0002F8 18 0F            [12]  587 	jr	00103$
      0002FA                        588 00102$:
                                    589 ;./lib/./sprite.c:65: SMS_addSprite(x,y, tiles[iTile]);
      0002FA DD 5E F0         [19]  590 	ld	e, -16 (ix)
      0002FD DD 56 F1         [19]  591 	ld	d, -15 (ix)
      000300 DD 6E F6         [19]  592 	ld	l, -10 (ix)
                                    593 ;	spillPairReg hl
                                    594 ;	spillPairReg hl
      000303 DD 66 F7         [19]  595 	ld	h, -9 (ix)
                                    596 ;	spillPairReg hl
                                    597 ;	spillPairReg hl
      000306 CDr00r00         [17]  598 	call	_SMS_addSprite_f
      000309                        599 00103$:
                                    600 ;./lib/./sprite.c:67: iTile++;
      000309 DD 34 FA         [23]  601 	inc	-6 (ix)
      00030C 20 03            [12]  602 	jr	NZ, 00185$
      00030E DD 34 FB         [23]  603 	inc	-5 (ix)
      000311                        604 00185$:
                                    605 ;./lib/./sprite.c:68: x += 8;
      000311 DD 7E FC         [19]  606 	ld	a, -4 (ix)
      000314 C6 08            [ 7]  607 	add	a, #0x08
      000316 DD 77 FC         [19]  608 	ld	-4 (ix), a
      000319 30 03            [12]  609 	jr	NC, 00186$
      00031B DD 34 FD         [23]  610 	inc	-3 (ix)
      00031E                        611 00186$:
                                    612 ;./lib/./sprite.c:60: for (int ix=0;ix<lx;ix++){
      00031E DD 34 FE         [23]  613 	inc	-2 (ix)
      000321 C2r99r02         [10]  614 	jp	NZ,00113$
      000324 DD 34 FF         [23]  615 	inc	-1 (ix)
      000327 C3r99r02         [10]  616 	jp	00113$
      00032A                        617 00129$:
      00032A DD 7E FA         [19]  618 	ld	a, -6 (ix)
      00032D DD 77 FE         [19]  619 	ld	-2 (ix), a
      000330 DD 7E FB         [19]  620 	ld	a, -5 (ix)
      000333 DD 77 FF         [19]  621 	ld	-1 (ix), a
      000336 DD 7E FC         [19]  622 	ld	a, -4 (ix)
      000339 DD 77 F4         [19]  623 	ld	-12 (ix), a
      00033C DD 7E FD         [19]  624 	ld	a, -3 (ix)
      00033F DD 77 F5         [19]  625 	ld	-11 (ix), a
                                    626 ;./lib/./sprite.c:70: y += 16;
      000342 DD 7E F6         [19]  627 	ld	a, -10 (ix)
      000345 C6 10            [ 7]  628 	add	a, #0x10
      000347 DD 77 F6         [19]  629 	ld	-10 (ix), a
      00034A 30 03            [12]  630 	jr	NC, 00188$
      00034C DD 34 F7         [23]  631 	inc	-9 (ix)
      00034F                        632 00188$:
                                    633 ;./lib/./sprite.c:59: for (int iy=0;iy<ly;iy++) {
      00034F DD 34 F8         [23]  634 	inc	-8 (ix)
      000352 C2r4Fr02         [10]  635 	jp	NZ,00116$
      000355 DD 34 F9         [23]  636 	inc	-7 (ix)
      000358 C3r4Fr02         [10]  637 	jp	00116$
      00035B                        638 00106$:
                                    639 ;./lib/./sprite.c:72: p->len = p->initSprite + lx*ly;
      00035B DD 7E EC         [19]  640 	ld	a, -20 (ix)
      00035E C6 0A            [ 7]  641 	add	a, #0x0a
      000360 DD 77 FE         [19]  642 	ld	-2 (ix), a
      000363 DD 7E ED         [19]  643 	ld	a, -19 (ix)
      000366 CE 00            [ 7]  644 	adc	a, #0x00
      000368 DD 77 FF         [19]  645 	ld	-1 (ix), a
      00036B DD 6E EE         [19]  646 	ld	l, -18 (ix)
      00036E DD 66 EF         [19]  647 	ld	h, -17 (ix)
      000371 7E               [ 7]  648 	ld	a, (hl)
      000372 DD 77 FC         [19]  649 	ld	-4 (ix), a
      000375 23               [ 6]  650 	inc	hl
      000376 7E               [ 7]  651 	ld	a, (hl)
      000377 DD 77 FD         [19]  652 	ld	-3 (ix), a
      00037A DD 5E 0A         [19]  653 	ld	e, 10 (ix)
      00037D DD 56 0B         [19]  654 	ld	d, 11 (ix)
      000380 DD 6E 08         [19]  655 	ld	l, 8 (ix)
                                    656 ;	spillPairReg hl
                                    657 ;	spillPairReg hl
      000383 DD 66 09         [19]  658 	ld	h, 9 (ix)
                                    659 ;	spillPairReg hl
                                    660 ;	spillPairReg hl
      000386 CDr00r00         [17]  661 	call	__mulint
      000389 DD 73 F8         [19]  662 	ld	-8 (ix), e
      00038C DD 72 F9         [19]  663 	ld	-7 (ix), d
      00038F DD 7E F8         [19]  664 	ld	a, -8 (ix)
      000392 DD 86 FC         [19]  665 	add	a, -4 (ix)
      000395 DD 77 FA         [19]  666 	ld	-6 (ix), a
      000398 DD 7E F9         [19]  667 	ld	a, -7 (ix)
      00039B DD 8E FD         [19]  668 	adc	a, -3 (ix)
      00039E DD 77 FB         [19]  669 	ld	-5 (ix), a
      0003A1 DD 6E FE         [19]  670 	ld	l, -2 (ix)
      0003A4 DD 66 FF         [19]  671 	ld	h, -1 (ix)
      0003A7 DD 7E FA         [19]  672 	ld	a, -6 (ix)
      0003AA 77               [ 7]  673 	ld	(hl), a
      0003AB 23               [ 6]  674 	inc	hl
      0003AC DD 7E FB         [19]  675 	ld	a, -5 (ix)
      0003AF 77               [ 7]  676 	ld	(hl), a
                                    677 ;./lib/./sprite.c:73: return i;
      0003B0 D1               [10]  678 	pop	de
      0003B1 D5               [11]  679 	push	de
      0003B2 18 1E            [12]  680 	jr	00118$
      0003B4                        681 00108$:
                                    682 ;./lib/./sprite.c:75: i--;
      0003B4 DD 6E FE         [19]  683 	ld	l, -2 (ix)
      0003B7 DD 66 FF         [19]  684 	ld	h, -1 (ix)
      0003BA 2B               [ 6]  685 	dec	hl
      0003BB DD 75 FE         [19]  686 	ld	-2 (ix), l
      0003BE DD 74 FF         [19]  687 	ld	-1 (ix), h
      0003C1 DD 7E FE         [19]  688 	ld	a, -2 (ix)
      0003C4 DD 77 EA         [19]  689 	ld	-22 (ix), a
      0003C7 DD 7E FF         [19]  690 	ld	a, -1 (ix)
      0003CA DD 77 EB         [19]  691 	ld	-21 (ix), a
      0003CD C3r81r01         [10]  692 	jp	00109$
      0003D0                        693 00111$:
                                    694 ;./lib/./sprite.c:77: return i;
      0003D0 D1               [10]  695 	pop	de
      0003D1 D5               [11]  696 	push	de
      0003D2                        697 00118$:
                                    698 ;./lib/./sprite.c:78: }
      0003D2 DD F9            [10]  699 	ld	sp, ix
      0003D4 DD E1            [14]  700 	pop	ix
      0003D6 E1               [10]  701 	pop	hl
      0003D7 F1               [10]  702 	pop	af
      0003D8 F1               [10]  703 	pop	af
      0003D9 F1               [10]  704 	pop	af
      0003DA F1               [10]  705 	pop	af
      0003DB F1               [10]  706 	pop	af
      0003DC E9               [ 4]  707 	jp	(hl)
                                    708 ;./lib/./sprite.c:90: void initSpritesVariables (void) {
                                    709 ;	---------------------------------
                                    710 ; Function initSpritesVariables
                                    711 ; ---------------------------------
      0003DD                        712 _initSpritesVariables::
                                    713 ;./lib/./sprite.c:92: while (i) {
      0003DD 01 40 00         [10]  714 	ld	bc, #0x0040
      0003E0                        715 00101$:
      0003E0 78               [ 4]  716 	ld	a, b
      0003E1 B1               [ 4]  717 	or	a, c
      0003E2 28 15            [12]  718 	jr	Z, 00103$
                                    719 ;./lib/./sprite.c:93: hardwareSprites[i].len = 0;
      0003E4 69               [ 4]  720 	ld	l, c
      0003E5 60               [ 4]  721 	ld	h, b
      0003E6 29               [11]  722 	add	hl, hl
      0003E7 09               [11]  723 	add	hl, bc
      0003E8 29               [11]  724 	add	hl, hl
      0003E9 29               [11]  725 	add	hl, hl
      0003EA 11r00r00         [10]  726 	ld	de, #_hardwareSprites
      0003ED 19               [11]  727 	add	hl, de
      0003EE 11 0A 00         [10]  728 	ld	de, #0x000a
      0003F1 19               [11]  729 	add	hl, de
      0003F2 AF               [ 4]  730 	xor	a, a
      0003F3 77               [ 7]  731 	ld	(hl), a
      0003F4 23               [ 6]  732 	inc	hl
      0003F5 77               [ 7]  733 	ld	(hl), a
                                    734 ;./lib/./sprite.c:94: i--;
      0003F6 0B               [ 6]  735 	dec	bc
      0003F7 18 E7            [12]  736 	jr	00101$
      0003F9                        737 00103$:
                                    738 ;./lib/./sprite.c:107: __endasm;
      0003F9 21r00r00         [10]  739 	ld	hl, #_SpriteNextFree
      0003FC 22r04r03         [16]  740 	ld	(#_SpriteNextFree2), hl
      0003FF 21r00r00         [10]  741 	ld	hl, #_SpriteTableY
      000402 22r00r03         [16]  742 	ld	(#_SpriteTableY2), hl
      000405 21r00r00         [10]  743 	ld	hl, #_SpriteTableXN
      000408 22r02r03         [16]  744 	ld	(#_SpriteTableXN2), hl
                                    745 ;./lib/./sprite.c:110: }
      00040B C9               [10]  746 	ret
                                    747 ;./lib/./sprite.c:127: void copySpritestoSAT (void) {
                                    748 ;	---------------------------------
                                    749 ; Function copySpritestoSAT
                                    750 ; ---------------------------------
      00040C                        751 _copySpritestoSAT::
                                    752 ;./lib/./sprite.c:128: SMS_setAddr(SMS_SATAddress);
      00040C 21 00 7F         [10]  753 	ld	hl, #0x7f00
      00040F CF               [11]  754 	rst	#0x08
                                    755 ;./lib/./sprite.c:144: __endasm;
      000410 3Ar00r00         [13]  756 	ld	a,(#_SpriteNextFree)
      000413 B7               [ 4]  757 	or	a
      000414 28 25            [12]  758 	jr	z,_no_sprites
      000416 47               [ 4]  759 	ld	b,a
      000417 0E BE            [ 7]  760 	ld	c,#_VDPDataPort
      000419 21r00r00         [10]  761 	ld	hl,#_SpriteTableY
      00041C                        762 _next_spriteY:
      00041C ED A3            [16]  763 	outi	; 16 cycles
      00041E 20 FC            [12]  764 	jr	nz,_next_spriteY ; 12 cycles = 28 (VRAM safe on GG too)
      000420 FE 40            [ 7]  765 	cp	#64 ; 7 cycles
      000422 28 04            [12]  766 	jr	z,_no_sprite_term ; 7 cycles
      000424 3E D0            [ 7]  767 	ld	a,#0xD0 ; 7 cycles => VRAM safe
      000426 ED 79            [12]  768 	out	(c),a
      000428                        769 _no_sprite_term:
                                    770 ;./lib/./sprite.c:145: SMS_setAddr(SMS_SATAddress+128);
      000428 21 80 7F         [10]  771 	ld	hl, #0x7f80
      00042B CF               [11]  772 	rst	#0x08
                                    773 ;./lib/./sprite.c:160: __endasm;
      00042C 0E BE            [ 7]  774 	ld	c,#_VDPDataPort
      00042E 3Ar00r00         [13]  775 	ld	a,(#_SpriteNextFree)
      000431 87               [ 4]  776 	add	a,a
      000432 47               [ 4]  777 	ld	b,a
      000433 21r00r00         [10]  778 	ld	hl,#_SpriteTableXN
      000436                        779 _next_spriteXN:
      000436 ED A3            [16]  780 	outi	; 16 cycles
      000438 20 FC            [12]  781 	jr	nz,_next_spriteXN ; 12 cycles = 28 (VRAM safe on GG too)
      00043A C9               [10]  782 	ret
      00043B                        783 _no_sprites:
      00043B 3E D0            [ 7]  784 	ld	a,#0xD0
      00043D D3 BE            [11]  785 	out	(#_VDPDataPort),a
                                    786 ;./lib/./sprite.c:161: }
      00043F C9               [10]  787 	ret
                                    788 ;./lib/entities.c:11: void draw_entidad(T_entidad *entidad, T_sprite *sprite){
                                    789 ;	---------------------------------
                                    790 ; Function draw_entidad
                                    791 ; ---------------------------------
      000440                        792 _draw_entidad::
      000440 DD E5            [15]  793 	push	ix
      000442 DD 21 00 00      [14]  794 	ld	ix,#0
      000446 DD 39            [15]  795 	add	ix,sp
      000448 FD 21 E8 FF      [14]  796 	ld	iy, #-24
      00044C FD 39            [15]  797 	add	iy, sp
      00044E FD F9            [10]  798 	ld	sp, iy
      000450 DD 75 FC         [19]  799 	ld	-4 (ix), l
      000453 DD 74 FD         [19]  800 	ld	-3 (ix), h
                                    801 ;./lib/entities.c:13: if (sprite->allInRAM == 1){
      000456 DD 73 FA         [19]  802 	ld	-6 (ix), e
      000459 DD 72 FB         [19]  803 	ld	-5 (ix), d
      00045C 4B               [ 4]  804 	ld	c, e
      00045D 42               [ 4]  805 	ld	b, d
      00045E 21 06 00         [10]  806 	ld	hl, #6
      000461 09               [11]  807 	add	hl, bc
      000462 4E               [ 7]  808 	ld	c, (hl)
                                    809 ;./lib/entities.c:14: if (entidad->initSprite == 255) {
      000463 DD 7E FC         [19]  810 	ld	a, -4 (ix)
      000466 C6 06            [ 7]  811 	add	a, #0x06
      000468 DD 77 ED         [19]  812 	ld	-19 (ix), a
      00046B DD 7E FD         [19]  813 	ld	a, -3 (ix)
      00046E CE 00            [ 7]  814 	adc	a, #0x00
      000470 DD 77 EE         [19]  815 	ld	-18 (ix), a
      000473 DD 6E ED         [19]  816 	ld	l, -19 (ix)
      000476 DD 66 EE         [19]  817 	ld	h, -18 (ix)
      000479 46               [ 7]  818 	ld	b, (hl)
                                    819 ;./lib/entities.c:15: int frame = sprite->tamano*entidad->frame + sprite->beginVRAM;
      00047A DD 7E FA         [19]  820 	ld	a, -6 (ix)
      00047D C6 02            [ 7]  821 	add	a, #0x02
      00047F DD 77 EB         [19]  822 	ld	-21 (ix), a
      000482 DD 7E FB         [19]  823 	ld	a, -5 (ix)
      000485 CE 00            [ 7]  824 	adc	a, #0x00
      000487 DD 77 EC         [19]  825 	ld	-20 (ix), a
      00048A DD 7E FC         [19]  826 	ld	a, -4 (ix)
      00048D C6 02            [ 7]  827 	add	a, #0x02
      00048F DD 77 EF         [19]  828 	ld	-17 (ix), a
      000492 DD 7E FD         [19]  829 	ld	a, -3 (ix)
      000495 CE 00            [ 7]  830 	adc	a, #0x00
      000497 DD 77 F0         [19]  831 	ld	-16 (ix), a
      00049A DD 7E FA         [19]  832 	ld	a, -6 (ix)
      00049D C6 04            [ 7]  833 	add	a, #0x04
      00049F DD 77 F1         [19]  834 	ld	-15 (ix), a
      0004A2 DD 7E FB         [19]  835 	ld	a, -5 (ix)
      0004A5 CE 00            [ 7]  836 	adc	a, #0x00
      0004A7 DD 77 F2         [19]  837 	ld	-14 (ix), a
                                    838 ;./lib/entities.c:16: for(j=0;j<sprite->alto;j++) {
      0004AA DD 7E FC         [19]  839 	ld	a, -4 (ix)
      0004AD C6 01            [ 7]  840 	add	a, #0x01
      0004AF DD 77 F8         [19]  841 	ld	-8 (ix), a
      0004B2 DD 7E FD         [19]  842 	ld	a, -3 (ix)
      0004B5 CE 00            [ 7]  843 	adc	a, #0x00
      0004B7 DD 77 F9         [19]  844 	ld	-7 (ix), a
      0004BA DD 7E FA         [19]  845 	ld	a, -6 (ix)
      0004BD C6 01            [ 7]  846 	add	a, #0x01
      0004BF DD 77 FE         [19]  847 	ld	-2 (ix), a
      0004C2 DD 7E FB         [19]  848 	ld	a, -5 (ix)
      0004C5 CE 00            [ 7]  849 	adc	a, #0x00
      0004C7 DD 77 FF         [19]  850 	ld	-1 (ix), a
                                    851 ;./lib/entities.c:26: entidad->len = (sprite->alto * sprite->ancho + entidad->initSprite)*2;
      0004CA DD 7E FC         [19]  852 	ld	a, -4 (ix)
      0004CD C6 07            [ 7]  853 	add	a, #0x07
      0004CF DD 77 E8         [19]  854 	ld	-24 (ix), a
      0004D2 DD 7E FD         [19]  855 	ld	a, -3 (ix)
      0004D5 CE 00            [ 7]  856 	adc	a, #0x00
      0004D7 DD 77 E9         [19]  857 	ld	-23 (ix), a
                                    858 ;./lib/entities.c:14: if (entidad->initSprite == 255) {
      0004DA 04               [ 4]  859 	inc	b
      0004DB 3E 01            [ 7]  860 	ld	a, #0x01
      0004DD 28 01            [12]  861 	jr	Z, 00253$
      0004DF AF               [ 4]  862 	xor	a, a
      0004E0                        863 00253$:
      0004E0 DD 77 F3         [19]  864 	ld	-13 (ix), a
                                    865 ;./lib/entities.c:13: if (sprite->allInRAM == 1){
      0004E3 0D               [ 4]  866 	dec	c
      0004E4 C2r0Cr06         [10]  867 	jp	NZ,00120$
                                    868 ;./lib/entities.c:14: if (entidad->initSprite == 255) {
      0004E7 DD 7E ED         [19]  869 	ld	a, -19 (ix)
      0004EA DD 77 F6         [19]  870 	ld	-10 (ix), a
      0004ED DD 7E EE         [19]  871 	ld	a, -18 (ix)
      0004F0 DD 77 F7         [19]  872 	ld	-9 (ix), a
      0004F3 DD 7E F3         [19]  873 	ld	a, -13 (ix)
      0004F6 B7               [ 4]  874 	or	a, a
      0004F7 CArD3r07         [10]  875 	jp	Z, 00134$
                                    876 ;./lib/entities.c:15: int frame = sprite->tamano*entidad->frame + sprite->beginVRAM;
      0004FA DD 6E EB         [19]  877 	ld	l, -21 (ix)
      0004FD DD 66 EC         [19]  878 	ld	h, -20 (ix)
      000500 5E               [ 7]  879 	ld	e, (hl)
      000501 DD 6E EF         [19]  880 	ld	l, -17 (ix)
      000504 DD 66 F0         [19]  881 	ld	h, -16 (ix)
      000507 66               [ 7]  882 	ld	h, (hl)
                                    883 ;	spillPairReg hl
      000508 2E 00            [ 7]  884 	ld	l, #0x00
      00050A 55               [ 4]  885 	ld	d, l
      00050B 06 08            [ 7]  886 	ld	b, #0x08
      00050D                        887 00256$:
      00050D 29               [11]  888 	add	hl, hl
      00050E 30 01            [12]  889 	jr	NC, 00257$
      000510 19               [11]  890 	add	hl, de
      000511                        891 00257$:
      000511 10 FA            [13]  892 	djnz	00256$
      000513 4D               [ 4]  893 	ld	c, l
      000514 DD 6E F1         [19]  894 	ld	l, -15 (ix)
      000517 DD 66 F2         [19]  895 	ld	h, -14 (ix)
      00051A 7E               [ 7]  896 	ld	a, (hl)
      00051B 81               [ 4]  897 	add	a, c
      00051C DD 77 F5         [19]  898 	ld	-11 (ix), a
                                    899 ;./lib/entities.c:16: for(j=0;j<sprite->alto;j++) {
      00051F DD 7E FE         [19]  900 	ld	a, -2 (ix)
      000522 DD 77 F3         [19]  901 	ld	-13 (ix), a
      000525 DD 7E FF         [19]  902 	ld	a, -1 (ix)
      000528 DD 77 F4         [19]  903 	ld	-12 (ix), a
      00052B DD 36 FE 00      [19]  904 	ld	-2 (ix), #0x00
      00052F                        905 00126$:
      00052F DD 6E FA         [19]  906 	ld	l, -6 (ix)
      000532 DD 66 FB         [19]  907 	ld	h, -5 (ix)
      000535 7E               [ 7]  908 	ld	a, (hl)
      000536 DD 77 FF         [19]  909 	ld	-1 (ix), a
      000539 DD 7E FE         [19]  910 	ld	a, -2 (ix)
      00053C DD 96 FF         [19]  911 	sub	a, -1 (ix)
      00053F D2rE7r05         [10]  912 	jp	NC, 00106$
                                    913 ;./lib/entities.c:17: unsigned char desplazado = (j<<2);
      000542 DD 7E FE         [19]  914 	ld	a, -2 (ix)
      000545 87               [ 4]  915 	add	a, a
      000546 87               [ 4]  916 	add	a, a
                                    917 ;./lib/entities.c:18: unsigned char jCalculated = desplazado + frame, y = entidad->y+(desplazado<<2);
      000547 47               [ 4]  918 	ld	b, a
      000548 DD 86 F5         [19]  919 	add	a, -11 (ix)
      00054B DD 77 ED         [19]  920 	ld	-19 (ix), a
      00054E DD 6E F8         [19]  921 	ld	l, -8 (ix)
      000551 DD 66 F9         [19]  922 	ld	h, -7 (ix)
      000554 4E               [ 7]  923 	ld	c, (hl)
      000555 78               [ 4]  924 	ld	a, b
      000556 87               [ 4]  925 	add	a, a
      000557 87               [ 4]  926 	add	a, a
      000558 81               [ 4]  927 	add	a, c
      000559 DD 77 EE         [19]  928 	ld	-18 (ix), a
                                    929 ;./lib/entities.c:19: for(i=0;i<sprite->ancho;i++) {
      00055C DD 36 FF 00      [19]  930 	ld	-1 (ix), #0x00
      000560                        931 00123$:
      000560 DD 6E F3         [19]  932 	ld	l, -13 (ix)
      000563 DD 66 F4         [19]  933 	ld	h, -12 (ix)
      000566 DD 7E FF         [19]  934 	ld	a,-1 (ix)
      000569 96               [ 7]  935 	sub	a,(hl)
      00056A 30 75            [12]  936 	jr	NC, 00127$
                                    937 ;./lib/entities.c:21: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      00056C DD 6E FC         [19]  938 	ld	l, -4 (ix)
      00056F DD 66 FD         [19]  939 	ld	h, -3 (ix)
      000572 5E               [ 7]  940 	ld	e, (hl)
      000573 DD 4E FF         [19]  941 	ld	c, -1 (ix)
      000576 06 00            [ 7]  942 	ld	b, #0x00
      000578 DD 7E ED         [19]  943 	ld	a, -19 (ix)
      00057B DD 77 F1         [19]  944 	ld	-15 (ix), a
      00057E DD 36 F2 00      [19]  945 	ld	-14 (ix), #0x00
      000582 DD 7E EE         [19]  946 	ld	a, -18 (ix)
      000585 DD 77 EF         [19]  947 	ld	-17 (ix), a
      000588 DD 36 F0 00      [19]  948 	ld	-16 (ix), #0x00
      00058C 16 00            [ 7]  949 	ld	d, #0x00
      00058E 69               [ 4]  950 	ld	l, c
      00058F 60               [ 4]  951 	ld	h, b
      000590 29               [11]  952 	add	hl, hl
      000591 29               [11]  953 	add	hl, hl
      000592 29               [11]  954 	add	hl, hl
      000593 CB 21            [ 8]  955 	sla	c
      000595 CB 10            [ 8]  956 	rl	b
      000597 19               [11]  957 	add	hl, de
      000598 EB               [ 4]  958 	ex	de, hl
      000599 DD 6E F1         [19]  959 	ld	l, -15 (ix)
                                    960 ;	spillPairReg hl
                                    961 ;	spillPairReg hl
      00059C 26 00            [ 7]  962 	ld	h, #0x00
                                    963 ;	spillPairReg hl
                                    964 ;	spillPairReg hl
      00059E 09               [11]  965 	add	hl, bc
                                    966 ;	spillPairReg hl
                                    967 ;	spillPairReg hl
      00059F AF               [ 4]  968 	xor	a, a
      0005A0 67               [ 4]  969 	ld	h,a
      0005A1 B5               [ 4]  970 	or	a, l
      0005A2 DD 77 F1         [19]  971 	ld	-15 (ix), a
      0005A5 7B               [ 4]  972 	ld	a, e
      0005A6 B4               [ 4]  973 	or	a, h
      0005A7 DD 77 F2         [19]  974 	ld	-14 (ix), a
                                    975 ;./lib/entities.c:20: if(i==0 && j==0)
      0005AA DD 7E FF         [19]  976 	ld	a, -1 (ix)
      0005AD B7               [ 4]  977 	or	a, a
      0005AE 20 1D            [12]  978 	jr	NZ, 00102$
      0005B0 DD 7E FE         [19]  979 	ld	a, -2 (ix)
      0005B3 B7               [ 4]  980 	or	a, a
      0005B4 20 17            [12]  981 	jr	NZ, 00102$
                                    982 ;./lib/entities.c:21: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      0005B6 DD 5E F1         [19]  983 	ld	e, -15 (ix)
      0005B9 DD 56 F2         [19]  984 	ld	d, -14 (ix)
      0005BC DD 6E EF         [19]  985 	ld	l, -17 (ix)
                                    986 ;	spillPairReg hl
                                    987 ;	spillPairReg hl
      0005BF 26 00            [ 7]  988 	ld	h, #0x00
                                    989 ;	spillPairReg hl
                                    990 ;	spillPairReg hl
      0005C1 CDr00r00         [17]  991 	call	_SMS_addSprite_f
      0005C4 DD 6E F6         [19]  992 	ld	l, -10 (ix)
      0005C7 DD 66 F7         [19]  993 	ld	h, -9 (ix)
      0005CA 77               [ 7]  994 	ld	(hl), a
      0005CB 18 0E            [12]  995 	jr	00124$
      0005CD                        996 00102$:
                                    997 ;./lib/entities.c:23: SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      0005CD DD 5E F1         [19]  998 	ld	e, -15 (ix)
      0005D0 DD 56 F2         [19]  999 	ld	d, -14 (ix)
      0005D3 DD 6E EF         [19] 1000 	ld	l, -17 (ix)
                                   1001 ;	spillPairReg hl
                                   1002 ;	spillPairReg hl
      0005D6 26 00            [ 7] 1003 	ld	h, #0x00
                                   1004 ;	spillPairReg hl
                                   1005 ;	spillPairReg hl
      0005D8 CDr00r00         [17] 1006 	call	_SMS_addSprite_f
      0005DB                       1007 00124$:
                                   1008 ;./lib/entities.c:19: for(i=0;i<sprite->ancho;i++) {
      0005DB DD 34 FF         [23] 1009 	inc	-1 (ix)
      0005DE C3r60r05         [10] 1010 	jp	00123$
      0005E1                       1011 00127$:
                                   1012 ;./lib/entities.c:16: for(j=0;j<sprite->alto;j++) {
      0005E1 DD 34 FE         [23] 1013 	inc	-2 (ix)
      0005E4 C3r2Fr05         [10] 1014 	jp	00126$
      0005E7                       1015 00106$:
                                   1016 ;./lib/entities.c:26: entidad->len = (sprite->alto * sprite->ancho + entidad->initSprite)*2;
      0005E7 DD 6E F3         [19] 1017 	ld	l, -13 (ix)
      0005EA DD 66 F4         [19] 1018 	ld	h, -12 (ix)
      0005ED 5E               [ 7] 1019 	ld	e, (hl)
      0005EE DD 66 FF         [19] 1020 	ld	h, -1 (ix)
                                   1021 ;	spillPairReg hl
                                   1022 ;	spillPairReg hl
      0005F1 2E 00            [ 7] 1023 	ld	l, #0x00
      0005F3 55               [ 4] 1024 	ld	d, l
      0005F4 06 08            [ 7] 1025 	ld	b, #0x08
      0005F6                       1026 00259$:
      0005F6 29               [11] 1027 	add	hl, hl
      0005F7 30 01            [12] 1028 	jr	NC, 00260$
      0005F9 19               [11] 1029 	add	hl, de
      0005FA                       1030 00260$:
      0005FA 10 FA            [13] 1031 	djnz	00259$
      0005FC 4D               [ 4] 1032 	ld	c, l
      0005FD DD 6E F6         [19] 1033 	ld	l, -10 (ix)
      000600 DD 66 F7         [19] 1034 	ld	h, -9 (ix)
      000603 7E               [ 7] 1035 	ld	a, (hl)
      000604 81               [ 4] 1036 	add	a, c
      000605 87               [ 4] 1037 	add	a, a
      000606 E1               [10] 1038 	pop	hl
      000607 E5               [11] 1039 	push	hl
      000608 77               [ 7] 1040 	ld	(hl), a
      000609 C3rD3r07         [10] 1041 	jp	00134$
      00060C                       1042 00120$:
                                   1043 ;./lib/entities.c:30: int frame = sprite->tamano*entidad->frame*32;
      00060C DD 6E EB         [19] 1044 	ld	l, -21 (ix)
      00060F DD 66 EC         [19] 1045 	ld	h, -20 (ix)
      000612 7E               [ 7] 1046 	ld	a, (hl)
      000613 DD 77 F4         [19] 1047 	ld	-12 (ix), a
      000616 DD 6E EF         [19] 1048 	ld	l, -17 (ix)
      000619 DD 66 F0         [19] 1049 	ld	h, -16 (ix)
      00061C 7E               [ 7] 1050 	ld	a, (hl)
      00061D DD 77 F5         [19] 1051 	ld	-11 (ix), a
      000620 5F               [ 4] 1052 	ld	e, a
      000621 DD 66 F4         [19] 1053 	ld	h, -12 (ix)
                                   1054 ;	spillPairReg hl
                                   1055 ;	spillPairReg hl
      000624 2E 00            [ 7] 1056 	ld	l, #0x00
      000626 55               [ 4] 1057 	ld	d, l
      000627 06 08            [ 7] 1058 	ld	b, #0x08
      000629                       1059 00261$:
      000629 29               [11] 1060 	add	hl, hl
      00062A 30 01            [12] 1061 	jr	NC, 00262$
      00062C 19               [11] 1062 	add	hl, de
      00062D                       1063 00262$:
      00062D 10 FA            [13] 1064 	djnz	00261$
      00062F 29               [11] 1065 	add	hl, hl
      000630 29               [11] 1066 	add	hl, hl
      000631 29               [11] 1067 	add	hl, hl
      000632 29               [11] 1068 	add	hl, hl
      000633 29               [11] 1069 	add	hl, hl
      000634 DD 75 F6         [19] 1070 	ld	-10 (ix), l
      000637 DD 74 F7         [19] 1071 	ld	-9 (ix), h
                                   1072 ;./lib/entities.c:31: if (entidad->initSprite == 255) {
      00063A DD 7E ED         [19] 1073 	ld	a, -19 (ix)
      00063D DD 77 EA         [19] 1074 	ld	-22 (ix), a
      000640 DD 7E EE         [19] 1075 	ld	a, -18 (ix)
      000643 DD 77 EB         [19] 1076 	ld	-21 (ix), a
      000646 DD 7E F3         [19] 1077 	ld	a, -13 (ix)
      000649 B7               [ 4] 1078 	or	a, a
      00064A CArD3r07         [10] 1079 	jp	Z, 00134$
                                   1080 ;./lib/entities.c:32: if (entidad->frame != sprite->frameInVRAM){
      00064D DD 7E FA         [19] 1081 	ld	a, -6 (ix)
      000650 C6 09            [ 7] 1082 	add	a, #0x09
      000652 DD 77 ED         [19] 1083 	ld	-19 (ix), a
      000655 DD 7E FB         [19] 1084 	ld	a, -5 (ix)
      000658 CE 00            [ 7] 1085 	adc	a, #0x00
      00065A DD 77 EE         [19] 1086 	ld	-18 (ix), a
      00065D DD 6E ED         [19] 1087 	ld	l, -19 (ix)
      000660 DD 66 EE         [19] 1088 	ld	h, -18 (ix)
      000663 DD 7E F5         [19] 1089 	ld	a,-11 (ix)
      000666 96               [ 7] 1090 	sub	a,(hl)
      000667 28 44            [12] 1091 	jr	Z, 00151$
                                   1092 ;./lib/entities.c:33: SMS_loadTiles(sprite->data + frame,sprite->beginVRAM,sprite->tamano<<5);
      000669 DD 6E F4         [19] 1093 	ld	l, -12 (ix)
                                   1094 ;	spillPairReg hl
                                   1095 ;	spillPairReg hl
      00066C 26 00            [ 7] 1096 	ld	h, #0x00
                                   1097 ;	spillPairReg hl
                                   1098 ;	spillPairReg hl
      00066E 29               [11] 1099 	add	hl, hl
      00066F 29               [11] 1100 	add	hl, hl
      000670 29               [11] 1101 	add	hl, hl
      000671 29               [11] 1102 	add	hl, hl
      000672 29               [11] 1103 	add	hl, hl
      000673 4D               [ 4] 1104 	ld	c, l
      000674 44               [ 4] 1105 	ld	b, h
      000675 DD 5E FA         [19] 1106 	ld	e, -6 (ix)
      000678 DD 56 FB         [19] 1107 	ld	d, -5 (ix)
      00067B 21 07 00         [10] 1108 	ld	hl, #7
      00067E 19               [11] 1109 	add	hl, de
      00067F 5E               [ 7] 1110 	ld	e, (hl)
      000680 23               [ 6] 1111 	inc	hl
      000681 56               [ 7] 1112 	ld	d, (hl)
      000682 DD 6E F6         [19] 1113 	ld	l, -10 (ix)
                                   1114 ;	spillPairReg hl
                                   1115 ;	spillPairReg hl
      000685 DD 66 F7         [19] 1116 	ld	h, -9 (ix)
                                   1117 ;	spillPairReg hl
                                   1118 ;	spillPairReg hl
      000688 19               [11] 1119 	add	hl, de
      000689 EB               [ 4] 1120 	ex	de, hl
      00068A DD 6E F1         [19] 1121 	ld	l, -15 (ix)
      00068D DD 66 F2         [19] 1122 	ld	h, -14 (ix)
      000690 7E               [ 7] 1123 	ld	a, (hl)
      000691 23               [ 6] 1124 	inc	hl
      000692 66               [ 7] 1125 	ld	h, (hl)
                                   1126 ;	spillPairReg hl
      000693 6F               [ 4] 1127 	ld	l, a
                                   1128 ;	spillPairReg hl
                                   1129 ;	spillPairReg hl
      000694 29               [11] 1130 	add	hl, hl
      000695 29               [11] 1131 	add	hl, hl
      000696 29               [11] 1132 	add	hl, hl
      000697 29               [11] 1133 	add	hl, hl
      000698 29               [11] 1134 	add	hl, hl
      000699 CB F4            [ 8] 1135 	set	6, h
      00069B C5               [11] 1136 	push	bc
      00069C CDr00r00         [17] 1137 	call	_SMS_VRAMmemcpy
                                   1138 ;./lib/entities.c:34: sprite->frameInVRAM = entidad->frame;
      00069F DD 6E EF         [19] 1139 	ld	l, -17 (ix)
      0006A2 DD 66 F0         [19] 1140 	ld	h, -16 (ix)
      0006A5 7E               [ 7] 1141 	ld	a, (hl)
      0006A6 DD 6E ED         [19] 1142 	ld	l, -19 (ix)
      0006A9 DD 66 EE         [19] 1143 	ld	h, -18 (ix)
      0006AC 77               [ 7] 1144 	ld	(hl), a
                                   1145 ;./lib/entities.c:36: for(j=0;j<sprite->alto;j++) {
      0006AD                       1146 00151$:
      0006AD DD 7E F8         [19] 1147 	ld	a, -8 (ix)
      0006B0 DD 77 EC         [19] 1148 	ld	-20 (ix), a
      0006B3 DD 7E F9         [19] 1149 	ld	a, -7 (ix)
      0006B6 DD 77 ED         [19] 1150 	ld	-19 (ix), a
      0006B9 DD 7E F8         [19] 1151 	ld	a, -8 (ix)
      0006BC DD 77 EE         [19] 1152 	ld	-18 (ix), a
      0006BF DD 7E F9         [19] 1153 	ld	a, -7 (ix)
      0006C2 DD 77 EF         [19] 1154 	ld	-17 (ix), a
      0006C5 DD 7E FE         [19] 1155 	ld	a, -2 (ix)
      0006C8 DD 77 F0         [19] 1156 	ld	-16 (ix), a
      0006CB DD 7E FF         [19] 1157 	ld	a, -1 (ix)
      0006CE DD 77 F1         [19] 1158 	ld	-15 (ix), a
      0006D1 DD 36 FE 00      [19] 1159 	ld	-2 (ix), #0x00
      0006D5                       1160 00132$:
      0006D5 DD 6E FA         [19] 1161 	ld	l, -6 (ix)
      0006D8 DD 66 FB         [19] 1162 	ld	h, -5 (ix)
      0006DB 5E               [ 7] 1163 	ld	e, (hl)
      0006DC DD 7E FE         [19] 1164 	ld	a, -2 (ix)
      0006DF 93               [ 4] 1165 	sub	a, e
      0006E0 D2rB5r07         [10] 1166 	jp	NC, 00116$
                                   1167 ;./lib/entities.c:37: for(i=0;i<sprite->ancho;i++) {
      0006E3 DD 36 FF 00      [19] 1168 	ld	-1 (ix), #0x00
      0006E7                       1169 00129$:
      0006E7 DD 6E F0         [19] 1170 	ld	l, -16 (ix)
      0006EA DD 66 F1         [19] 1171 	ld	h, -15 (ix)
      0006ED DD 7E FF         [19] 1172 	ld	a,-1 (ix)
      0006F0 96               [ 7] 1173 	sub	a,(hl)
      0006F1 D2rAFr07         [10] 1174 	jp	NC, 00133$
                                   1175 ;./lib/entities.c:21: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      0006F4 DD 6E FC         [19] 1176 	ld	l, -4 (ix)
      0006F7 DD 66 FD         [19] 1177 	ld	h, -3 (ix)
      0006FA 7E               [ 7] 1178 	ld	a, (hl)
                                   1179 ;./lib/entities.c:39: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),entidad->y+(j<<4), (j<<2) + (i<<1) );  
      0006FB DD 4E FF         [19] 1180 	ld	c, -1 (ix)
      0006FE 06 00            [ 7] 1181 	ld	b, #0x00
      000700 DD 5E FE         [19] 1182 	ld	e, -2 (ix)
      000703 16 00            [ 7] 1183 	ld	d, #0x00
                                   1184 ;./lib/entities.c:21: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      000705 DD 77 F6         [19] 1185 	ld	-10 (ix), a
      000708 DD 36 F7 00      [19] 1186 	ld	-9 (ix), #0x00
                                   1187 ;./lib/entities.c:39: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),entidad->y+(j<<4), (j<<2) + (i<<1) );  
      00070C DD 71 F8         [19] 1188 	ld	-8 (ix), c
      00070F DD 70 F9         [19] 1189 	ld	-7 (ix), b
      000712 3E 03            [ 7] 1190 	ld	a, #0x03
      000714                       1191 00264$:
      000714 DD CB F8 26      [23] 1192 	sla	-8 (ix)
      000718 DD CB F9 16      [23] 1193 	rl	-7 (ix)
      00071C 3D               [ 4] 1194 	dec	a
      00071D 20 F5            [12] 1195 	jr	NZ, 00264$
      00071F 6B               [ 4] 1196 	ld	l, e
      000720 62               [ 4] 1197 	ld	h, d
      000721 29               [11] 1198 	add	hl, hl
      000722 29               [11] 1199 	add	hl, hl
      000723 CB 21            [ 8] 1200 	sla	c
      000725 CB 10            [ 8] 1201 	rl	b
      000727 EB               [ 4] 1202 	ex	de, hl
      000728 29               [11] 1203 	add	hl, hl
      000729 29               [11] 1204 	add	hl, hl
      00072A 29               [11] 1205 	add	hl, hl
      00072B 29               [11] 1206 	add	hl, hl
      00072C EB               [ 4] 1207 	ex	de, hl
      00072D DD 73 F2         [19] 1208 	ld	-14 (ix), e
      000730 DD 72 F3         [19] 1209 	ld	-13 (ix), d
      000733 DD 7E F6         [19] 1210 	ld	a, -10 (ix)
      000736 DD 86 F8         [19] 1211 	add	a, -8 (ix)
      000739 5F               [ 4] 1212 	ld	e, a
      00073A 3E 00            [ 7] 1213 	ld	a, #0x00
      00073C DD 8E F9         [19] 1214 	adc	a, -7 (ix)
      00073F 09               [11] 1215 	add	hl, bc
                                   1216 ;	spillPairReg hl
                                   1217 ;	spillPairReg hl
      000740 AF               [ 4] 1218 	xor	a, a
      000741 67               [ 4] 1219 	ld	h,a
      000742 B5               [ 4] 1220 	or	a, l
      000743 DD 77 F4         [19] 1221 	ld	-12 (ix), a
      000746 7B               [ 4] 1222 	ld	a, e
      000747 B4               [ 4] 1223 	or	a, h
      000748 DD 77 F5         [19] 1224 	ld	-11 (ix), a
                                   1225 ;./lib/entities.c:38: if(i==0 && j==0)
      00074B DD 7E FF         [19] 1226 	ld	a, -1 (ix)
      00074E B7               [ 4] 1227 	or	a, a
      00074F 20 3F            [12] 1228 	jr	NZ, 00112$
      000751 DD 7E FE         [19] 1229 	ld	a, -2 (ix)
      000754 B7               [ 4] 1230 	or	a, a
      000755 20 39            [12] 1231 	jr	NZ, 00112$
                                   1232 ;./lib/entities.c:39: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),entidad->y+(j<<4), (j<<2) + (i<<1) );  
      000757 DD 6E EE         [19] 1233 	ld	l, -18 (ix)
      00075A DD 66 EF         [19] 1234 	ld	h, -17 (ix)
      00075D 7E               [ 7] 1235 	ld	a, (hl)
      00075E DD 77 F9         [19] 1236 	ld	-7 (ix), a
      000761 DD 77 F6         [19] 1237 	ld	-10 (ix), a
      000764 DD 36 F7 00      [19] 1238 	ld	-9 (ix), #0x00
      000768 DD 7E F2         [19] 1239 	ld	a, -14 (ix)
      00076B DD 86 F6         [19] 1240 	add	a, -10 (ix)
      00076E DD 77 F8         [19] 1241 	ld	-8 (ix), a
      000771 DD 7E F3         [19] 1242 	ld	a, -13 (ix)
      000774 DD 8E F7         [19] 1243 	adc	a, -9 (ix)
      000777 DD 77 F9         [19] 1244 	ld	-7 (ix), a
      00077A DD 5E F4         [19] 1245 	ld	e, -12 (ix)
      00077D DD 56 F5         [19] 1246 	ld	d, -11 (ix)
      000780 DD 6E F8         [19] 1247 	ld	l, -8 (ix)
                                   1248 ;	spillPairReg hl
                                   1249 ;	spillPairReg hl
      000783 DD 66 F9         [19] 1250 	ld	h, -7 (ix)
                                   1251 ;	spillPairReg hl
                                   1252 ;	spillPairReg hl
      000786 CDr00r00         [17] 1253 	call	_SMS_addSprite_f
      000789 C1               [10] 1254 	pop	bc
      00078A E1               [10] 1255 	pop	hl
      00078B E5               [11] 1256 	push	hl
      00078C C5               [11] 1257 	push	bc
      00078D 77               [ 7] 1258 	ld	(hl), a
      00078E 18 19            [12] 1259 	jr	00130$
      000790                       1260 00112$:
                                   1261 ;./lib/entities.c:41: SMS_addSprite(entidad->x+(i<<3),entidad->y+(j<<4), (j<<2) + (i<<1) );  
      000790 DD 6E EC         [19] 1262 	ld	l, -20 (ix)
      000793 DD 66 ED         [19] 1263 	ld	h, -19 (ix)
      000796 4E               [ 7] 1264 	ld	c, (hl)
      000797 06 00            [ 7] 1265 	ld	b, #0x00
      000799 DD 6E F2         [19] 1266 	ld	l, -14 (ix)
                                   1267 ;	spillPairReg hl
                                   1268 ;	spillPairReg hl
      00079C DD 66 F3         [19] 1269 	ld	h, -13 (ix)
                                   1270 ;	spillPairReg hl
                                   1271 ;	spillPairReg hl
      00079F 09               [11] 1272 	add	hl, bc
      0007A0 DD 5E F4         [19] 1273 	ld	e, -12 (ix)
      0007A3 DD 56 F5         [19] 1274 	ld	d, -11 (ix)
      0007A6 CDr00r00         [17] 1275 	call	_SMS_addSprite_f
      0007A9                       1276 00130$:
                                   1277 ;./lib/entities.c:37: for(i=0;i<sprite->ancho;i++) {
      0007A9 DD 34 FF         [23] 1278 	inc	-1 (ix)
      0007AC C3rE7r06         [10] 1279 	jp	00129$
      0007AF                       1280 00133$:
                                   1281 ;./lib/entities.c:36: for(j=0;j<sprite->alto;j++) {
      0007AF DD 34 FE         [23] 1282 	inc	-2 (ix)
      0007B2 C3rD5r06         [10] 1283 	jp	00132$
      0007B5                       1284 00116$:
                                   1285 ;./lib/entities.c:44: entidad->len = sprite->alto * sprite->ancho + entidad->initSprite;
      0007B5 DD 6E F0         [19] 1286 	ld	l, -16 (ix)
      0007B8 DD 66 F1         [19] 1287 	ld	h, -15 (ix)
      0007BB 66               [ 7] 1288 	ld	h, (hl)
                                   1289 ;	spillPairReg hl
      0007BC 2E 00            [ 7] 1290 	ld	l, #0x00
      0007BE 55               [ 4] 1291 	ld	d, l
      0007BF 06 08            [ 7] 1292 	ld	b, #0x08
      0007C1                       1293 00266$:
      0007C1 29               [11] 1294 	add	hl, hl
      0007C2 30 01            [12] 1295 	jr	NC, 00267$
      0007C4 19               [11] 1296 	add	hl, de
      0007C5                       1297 00267$:
      0007C5 10 FA            [13] 1298 	djnz	00266$
      0007C7 4D               [ 4] 1299 	ld	c, l
      0007C8 DD 6E EA         [19] 1300 	ld	l, -22 (ix)
      0007CB DD 66 EB         [19] 1301 	ld	h, -21 (ix)
      0007CE 7E               [ 7] 1302 	ld	a, (hl)
      0007CF 81               [ 4] 1303 	add	a, c
      0007D0 E1               [10] 1304 	pop	hl
      0007D1 E5               [11] 1305 	push	hl
      0007D2 77               [ 7] 1306 	ld	(hl), a
      0007D3                       1307 00134$:
                                   1308 ;./lib/entities.c:50: }
      0007D3 DD F9            [10] 1309 	ld	sp, ix
      0007D5 DD E1            [14] 1310 	pop	ix
      0007D7 C9               [10] 1311 	ret
                                   1312 ;./alex.c:20: unsigned char canUp(){
                                   1313 ;	---------------------------------
                                   1314 ; Function canUp
                                   1315 ; ---------------------------------
      0007D8                       1316 _canUp::
                                   1317 ;./alex.c:21: if (alex.x < 2)
      0007D8 3Ar03r00         [13] 1318 	ld	a, (#_alex + 0)
      0007DB D6 02            [ 7] 1319 	sub	a, #0x02
      0007DD 30 02            [12] 1320 	jr	NC, 00102$
                                   1321 ;./alex.c:22: return 0;
      0007DF AF               [ 4] 1322 	xor	a, a
      0007E0 C9               [10] 1323 	ret
      0007E1                       1324 00102$:
                                   1325 ;./alex.c:23: return 1;
      0007E1 3E 01            [ 7] 1326 	ld	a, #0x01
                                   1327 ;./alex.c:24: }
      0007E3 C9               [10] 1328 	ret
                                   1329 ;./alex.c:26: unsigned char canDown() {
                                   1330 ;	---------------------------------
                                   1331 ; Function canDown
                                   1332 ; ---------------------------------
      0007E4                       1333 _canDown::
                                   1334 ;./alex.c:27: if (alex.y > 155)
      0007E4 21r04r00         [10] 1335 	ld	hl, #_alex+1
      0007E7 4E               [ 7] 1336 	ld	c, (hl)
      0007E8 3E 9B            [ 7] 1337 	ld	a, #0x9b
      0007EA 91               [ 4] 1338 	sub	a, c
      0007EB 30 02            [12] 1339 	jr	NC, 00102$
                                   1340 ;./alex.c:28: return 0;
      0007ED AF               [ 4] 1341 	xor	a, a
      0007EE C9               [10] 1342 	ret
      0007EF                       1343 00102$:
                                   1344 ;./alex.c:29: return 1;
      0007EF 3E 01            [ 7] 1345 	ld	a, #0x01
                                   1346 ;./alex.c:30: }
      0007F1 C9               [10] 1347 	ret
                                   1348 ;./alex.c:32: unsigned char canLeft() {
                                   1349 ;	---------------------------------
                                   1350 ; Function canLeft
                                   1351 ; ---------------------------------
      0007F2                       1352 _canLeft::
                                   1353 ;./alex.c:33: if (alex.x < 9)
      0007F2 3Ar03r00         [13] 1354 	ld	a, (#_alex + 0)
      0007F5 D6 09            [ 7] 1355 	sub	a, #0x09
      0007F7 30 02            [12] 1356 	jr	NC, 00102$
                                   1357 ;./alex.c:34: return 0;
      0007F9 AF               [ 4] 1358 	xor	a, a
      0007FA C9               [10] 1359 	ret
      0007FB                       1360 00102$:
                                   1361 ;./alex.c:35: return 1;
      0007FB 3E 01            [ 7] 1362 	ld	a, #0x01
                                   1363 ;./alex.c:36: }
      0007FD C9               [10] 1364 	ret
                                   1365 ;./alex.c:38: unsigned char canRight() {
                                   1366 ;	---------------------------------
                                   1367 ; Function canRight
                                   1368 ; ---------------------------------
      0007FE                       1369 _canRight::
                                   1370 ;./alex.c:39: if (alex.x > 238)
      0007FE 21r03r00         [10] 1371 	ld	hl, #_alex+0
      000801 4E               [ 7] 1372 	ld	c, (hl)
      000802 3E EE            [ 7] 1373 	ld	a, #0xee
      000804 91               [ 4] 1374 	sub	a, c
      000805 30 02            [12] 1375 	jr	NC, 00102$
                                   1376 ;./alex.c:40: return 0;
      000807 AF               [ 4] 1377 	xor	a, a
      000808 C9               [10] 1378 	ret
      000809                       1379 00102$:
                                   1380 ;./alex.c:41: return 1;
      000809 3E 01            [ 7] 1381 	ld	a, #0x01
                                   1382 ;./alex.c:42: }
      00080B C9               [10] 1383 	ret
                                   1384 ;./alex.c:44: void moveAlexSuelo(int keys) {
                                   1385 ;	---------------------------------
                                   1386 ; Function moveAlexSuelo
                                   1387 ; ---------------------------------
      00080C                       1388 _moveAlexSuelo::
      00080C DD E5            [15] 1389 	push	ix
      00080E DD 21 00 00      [14] 1390 	ld	ix,#0
      000812 DD 39            [15] 1391 	add	ix,sp
      000814 F5               [11] 1392 	push	af
      000815 F5               [11] 1393 	push	af
      000816 F5               [11] 1394 	push	af
      000817 DD 75 FE         [19] 1395 	ld	-2 (ix), l
      00081A DD 74 FF         [19] 1396 	ld	-1 (ix), h
                                   1397 ;./alex.c:46: if (keys & PORT_A_KEY_LEFT)
      00081D DD 7E FE         [19] 1398 	ld	a, -2 (ix)
      000820 E6 04            [ 7] 1399 	and	a, #0x04
      000822 DD 77 FA         [19] 1400 	ld	-6 (ix), a
      000825 DD 36 FB 00      [19] 1401 	ld	-5 (ix), #0x00
                                   1402 ;./alex.c:48: if (keys & PORT_A_KEY_RIGHT)
      000829 DD 7E FE         [19] 1403 	ld	a, -2 (ix)
      00082C E6 08            [ 7] 1404 	and	a, #0x08
      00082E DD 77 FC         [19] 1405 	ld	-4 (ix), a
      000831 DD 36 FD 00      [19] 1406 	ld	-3 (ix), #0x00
                                   1407 ;./alex.c:45: if ((keys & PORT_A_KEY_DOWN)){
      000835 DD CB FE 4E      [20] 1408 	bit	1, -2 (ix)
      000839 28 33            [12] 1409 	jr	Z, 00109$
                                   1410 ;./alex.c:46: if (keys & PORT_A_KEY_LEFT)
      00083B AF               [ 4] 1411 	xor	a, a
      00083C DD B6 FA         [19] 1412 	or	a, -6 (ix)
      00083F 28 05            [12] 1413 	jr	Z, 00102$
                                   1414 ;./alex.c:47: alex.oriented = 1;
      000841 21r07r00         [10] 1415 	ld	hl, #_alex+4
      000844 36 01            [10] 1416 	ld	(hl), #0x01
      000846                       1417 00102$:
                                   1418 ;./alex.c:48: if (keys & PORT_A_KEY_RIGHT)
      000846 AF               [ 4] 1419 	xor	a, a
      000847 DD B6 FC         [19] 1420 	or	a, -4 (ix)
      00084A 28 05            [12] 1421 	jr	Z, 00104$
                                   1422 ;./alex.c:49: alex.oriented = 0;
      00084C 21r07r00         [10] 1423 	ld	hl, #_alex+4
      00084F 36 00            [10] 1424 	ld	(hl), #0x00
      000851                       1425 00104$:
                                   1426 ;./alex.c:50: if (!alex.oriented)
      000851 3Ar07r00         [13] 1427 	ld	a,(#_alex + 4)
                                   1428 ;./alex.c:51: alex.frame = 7;
                                   1429 ;./alex.c:50: if (!alex.oriented)
      000854 DD 77 FD         [19] 1430 	ld	-3 (ix), a
      000857 B7               [ 4] 1431 	or	a, a
      000858 20 07            [12] 1432 	jr	NZ, 00106$
                                   1433 ;./alex.c:51: alex.frame = 7;
      00085A 21r05r00         [10] 1434 	ld	hl, #(_alex + 2)
      00085D 36 07            [10] 1435 	ld	(hl), #0x07
      00085F 18 05            [12] 1436 	jr	00107$
      000861                       1437 00106$:
                                   1438 ;./alex.c:53: alex.frame = 15;
      000861 21r05r00         [10] 1439 	ld	hl, #(_alex + 2)
      000864 36 0F            [10] 1440 	ld	(hl), #0x0f
      000866                       1441 00107$:
                                   1442 ;./alex.c:54: alex.lastChangeFrame = 15;
      000866 21r06r00         [10] 1443 	ld	hl, #_alex + 3
      000869 36 0F            [10] 1444 	ld	(hl), #0x0f
                                   1445 ;./alex.c:55: return; // not move
      00086B C3r84r09         [10] 1446 	jp	00146$
      00086E                       1447 00109$:
                                   1448 ;./alex.c:58: if (keys & PORT_A_KEY_2) {
      00086E DD CB FE 6E      [20] 1449 	bit	5, -2 (ix)
      000872 28 2A            [12] 1450 	jr	Z, 00116$
                                   1451 ;./alex.c:59: if (alex.y > 100)
      000874 01r04r00         [10] 1452 	ld	bc, #_alex+1
      000877 0A               [ 7] 1453 	ld	a, (bc)
      000878 5F               [ 4] 1454 	ld	e, a
      000879 3E 64            [ 7] 1455 	ld	a, #0x64
      00087B 93               [ 4] 1456 	sub	a, e
      00087C 30 09            [12] 1457 	jr	NC, 00111$
                                   1458 ;./alex.c:60: maxSalto = alex.y - 100;
      00087E 7B               [ 4] 1459 	ld	a, e
      00087F 21r02r00         [10] 1460 	ld	hl, #_maxSalto
      000882 C6 9C            [ 7] 1461 	add	a, #0x9c
      000884 77               [ 7] 1462 	ld	(hl), a
      000885 18 05            [12] 1463 	jr	00112$
      000887                       1464 00111$:
                                   1465 ;./alex.c:62: maxSalto = 0;
      000887 21r02r00         [10] 1466 	ld	hl, #_maxSalto
      00088A 36 00            [10] 1467 	ld	(hl), #0x00
      00088C                       1468 00112$:
                                   1469 ;./alex.c:63: alex.y--;
      00088C 0A               [ 7] 1470 	ld	a, (bc)
      00088D 3D               [ 4] 1471 	dec	a
      00088E 02               [ 7] 1472 	ld	(bc), a
                                   1473 ;./alex.c:64: alex.y--;
      00088F 3D               [ 4] 1474 	dec	a
      000890 02               [ 7] 1475 	ld	(bc), a
                                   1476 ;./alex.c:65: PSGSFXPlay(salto_psg, SFX_CHANNEL1);
      000891 3E 08            [ 7] 1477 	ld	a, #0x08
      000893 F5               [11] 1478 	push	af
      000894 33               [ 6] 1479 	inc	sp
      000895 21r00r00         [10] 1480 	ld	hl, #_salto_psg
      000898 CDr00r00         [17] 1481 	call	_PSGSFXPlay
                                   1482 ;./alex.c:66: return;
      00089B C3r84r09         [10] 1483 	jp	00146$
      00089E                       1484 00116$:
                                   1485 ;./alex.c:68: else if (keys & PORT_A_KEY_1) {
      00089E DD CB FE 66      [20] 1486 	bit	4, -2 (ix)
      0008A2 28 0A            [12] 1487 	jr	Z, 00117$
                                   1488 ;./alex.c:69: alex.state = PUÑETAZO_SUELO;
      0008A4 21r08r00         [10] 1489 	ld	hl, #_alex + 5
      0008A7 36 20            [10] 1490 	ld	(hl), #0x20
                                   1491 ;./alex.c:70: alex.lastChangeFrame = 15;
      0008A9 21r06r00         [10] 1492 	ld	hl, #_alex + 3
      0008AC 36 0F            [10] 1493 	ld	(hl), #0x0f
      0008AE                       1494 00117$:
                                   1495 ;./alex.c:72: if(alex.state != PUÑETAZO_SUELO) {
      0008AE 21r08r00         [10] 1496 	ld	hl, #(_alex + 5)
      0008B1 6E               [ 7] 1497 	ld	l, (hl)
                                   1498 ;	spillPairReg hl
                                   1499 ;./alex.c:76: alex.oriented = 1;
                                   1500 ;./alex.c:77: alex.lastChangeFrame++;
      0008B2 01r06r00         [10] 1501 	ld	bc, #_alex + 3
                                   1502 ;./alex.c:80: alex.frame++;
      0008B5 11r05r00         [10] 1503 	ld	de, #_alex + 2
                                   1504 ;./alex.c:72: if(alex.state != PUÑETAZO_SUELO) {
      0008B8 7D               [ 4] 1505 	ld	a, l
      0008B9 D6 20            [ 7] 1506 	sub	a, #0x20
      0008BB 28 76            [12] 1507 	jr	Z, 00144$
                                   1508 ;./alex.c:73: if ((keys & PORT_A_KEY_LEFT) && alex.x > 8 )
      0008BD AF               [ 4] 1509 	xor	a, a
      0008BE DD B6 FA         [19] 1510 	or	a, -6 (ix)
      0008C1 28 32            [12] 1511 	jr	Z, 00135$
      0008C3 21r03r00         [10] 1512 	ld	hl, #_alex
      0008C6 6E               [ 7] 1513 	ld	l, (hl)
                                   1514 ;	spillPairReg hl
      0008C7 3E 08            [ 7] 1515 	ld	a, #0x08
      0008C9 95               [ 4] 1516 	sub	a, l
      0008CA 30 29            [12] 1517 	jr	NC, 00135$
                                   1518 ;./alex.c:75: alex.x -= 1;
      0008CC 7D               [ 4] 1519 	ld	a, l
      0008CD 3D               [ 4] 1520 	dec	a
      0008CE 32r03r00         [13] 1521 	ld	(#_alex),a
                                   1522 ;./alex.c:76: alex.oriented = 1;
      0008D1 21r07r00         [10] 1523 	ld	hl, #(_alex + 4)
      0008D4 36 01            [10] 1524 	ld	(hl), #0x01
                                   1525 ;./alex.c:77: alex.lastChangeFrame++;
      0008D6 0A               [ 7] 1526 	ld	a, (bc)
      0008D7 3C               [ 4] 1527 	inc	a
      0008D8 02               [ 7] 1528 	ld	(bc), a
                                   1529 ;./alex.c:78: if (alex.lastChangeFrame == 11) {
      0008D9 D6 0B            [ 7] 1530 	sub	a, #0x0b
      0008DB 20 05            [12] 1531 	jr	NZ, 00119$
                                   1532 ;./alex.c:79: alex.lastChangeFrame = 0;
      0008DD AF               [ 4] 1533 	xor	a, a
      0008DE 02               [ 7] 1534 	ld	(bc), a
                                   1535 ;./alex.c:80: alex.frame++;
      0008DF 1A               [ 7] 1536 	ld	a, (de)
      0008E0 3C               [ 4] 1537 	inc	a
      0008E1 12               [ 7] 1538 	ld	(de), a
      0008E2                       1539 00119$:
                                   1540 ;./alex.c:82: if (alex.frame > 11 || alex.frame < 8)
      0008E2 1A               [ 7] 1541 	ld	a, (de)
      0008E3 4F               [ 4] 1542 	ld	c, a
      0008E4 3E 0B            [ 7] 1543 	ld	a, #0x0b
      0008E6 91               [ 4] 1544 	sub	a, c
      0008E7 38 06            [12] 1545 	jr	C, 00120$
      0008E9 79               [ 4] 1546 	ld	a, c
      0008EA D6 08            [ 7] 1547 	sub	a, #0x08
      0008EC D2r84r09         [10] 1548 	jp	NC, 00146$
      0008EF                       1549 00120$:
                                   1550 ;./alex.c:83: alex.frame = 8;
      0008EF 3E 08            [ 7] 1551 	ld	a, #0x08
      0008F1 12               [ 7] 1552 	ld	(de), a
      0008F2 C3r84r09         [10] 1553 	jp	00146$
      0008F5                       1554 00135$:
                                   1555 ;./alex.c:85: else if ((keys & PORT_A_KEY_RIGHT) && alex.x <240)
      0008F5 AF               [ 4] 1556 	xor	a, a
      0008F6 DD B6 FC         [19] 1557 	or	a, -4 (ix)
      0008F9 28 27            [12] 1558 	jr	Z, 00131$
      0008FB 3Ar03r00         [13] 1559 	ld	a, (#_alex + 0)
      0008FE FE F0            [ 7] 1560 	cp	a, #0xf0
      000900 30 20            [12] 1561 	jr	NC, 00131$
                                   1562 ;./alex.c:87: alex.x += 1;
      000902 3C               [ 4] 1563 	inc	a
      000903 32r03r00         [13] 1564 	ld	(#_alex),a
                                   1565 ;./alex.c:88: alex.oriented = 0;
      000906 21r07r00         [10] 1566 	ld	hl, #(_alex + 4)
      000909 36 00            [10] 1567 	ld	(hl), #0x00
                                   1568 ;./alex.c:89: alex.lastChangeFrame++;
      00090B 0A               [ 7] 1569 	ld	a, (bc)
      00090C 3C               [ 4] 1570 	inc	a
      00090D 02               [ 7] 1571 	ld	(bc), a
                                   1572 ;./alex.c:90: if (alex.lastChangeFrame == 11) {
      00090E D6 0B            [ 7] 1573 	sub	a, #0x0b
      000910 20 05            [12] 1574 	jr	NZ, 00124$
                                   1575 ;./alex.c:91: alex.lastChangeFrame = 0;
      000912 AF               [ 4] 1576 	xor	a, a
      000913 02               [ 7] 1577 	ld	(bc), a
                                   1578 ;./alex.c:92: alex.frame++;
      000914 1A               [ 7] 1579 	ld	a, (de)
      000915 3C               [ 4] 1580 	inc	a
      000916 12               [ 7] 1581 	ld	(de), a
      000917                       1582 00124$:
                                   1583 ;./alex.c:94: if (alex.frame > 3 || alex.frame < 0)
      000917 1A               [ 7] 1584 	ld	a, (de)
      000918 4F               [ 4] 1585 	ld	c, a
      000919 3E 03            [ 7] 1586 	ld	a, #0x03
      00091B 91               [ 4] 1587 	sub	a, c
      00091C 30 66            [12] 1588 	jr	NC, 00146$
                                   1589 ;./alex.c:95: alex.frame = 0;
      00091E AF               [ 4] 1590 	xor	a, a
      00091F 12               [ 7] 1591 	ld	(de), a
      000920 18 62            [12] 1592 	jr	00146$
      000922                       1593 00131$:
                                   1594 ;./alex.c:99: alex.frame = 4;
      000922 3E 04            [ 7] 1595 	ld	a, #0x04
      000924 12               [ 7] 1596 	ld	(de), a
                                   1597 ;./alex.c:100: if (alex.oriented)
      000925 3Ar07r00         [13] 1598 	ld	a, (#(_alex + 4) + 0)
      000928 B7               [ 4] 1599 	or	a, a
      000929 28 03            [12] 1600 	jr	Z, 00129$
                                   1601 ;./alex.c:101: alex.frame = 12;
      00092B 3E 0C            [ 7] 1602 	ld	a, #0x0c
      00092D 12               [ 7] 1603 	ld	(de), a
      00092E                       1604 00129$:
                                   1605 ;./alex.c:102: alex.lastChangeFrame = 10;
      00092E 3E 0A            [ 7] 1606 	ld	a, #0x0a
      000930 02               [ 7] 1607 	ld	(bc), a
      000931 18 51            [12] 1608 	jr	00146$
      000933                       1609 00144$:
                                   1610 ;./alex.c:106: if (!alex.oriented) {
      000933 3Ar07r00         [13] 1611 	ld	a, (#(_alex + 4) + 0)
                                   1612 ;./alex.c:108: SMS_addSprite (alex.x + 16, alex.y + 9, 9);
                                   1613 ;./alex.c:106: if (!alex.oriented) {
      000936 DD 77 FD         [19] 1614 	ld	-3 (ix), a
      000939 B7               [ 4] 1615 	or	a, a
      00093A 20 22            [12] 1616 	jr	NZ, 00139$
                                   1617 ;./alex.c:107: alex.frame = 5;
      00093C 3E 05            [ 7] 1618 	ld	a, #0x05
      00093E 12               [ 7] 1619 	ld	(de), a
                                   1620 ;./alex.c:108: SMS_addSprite (alex.x + 16, alex.y + 9, 9);
      00093F 21r03r00         [10] 1621 	ld	hl, #_alex
      000942 5E               [ 7] 1622 	ld	e, (hl)
      000943 16 00            [ 7] 1623 	ld	d, #0x00
      000945 21 10 00         [10] 1624 	ld	hl, #0x0010
      000948 19               [11] 1625 	add	hl, de
      000949 55               [ 4] 1626 	ld	d, l
      00094A 1E 09            [ 7] 1627 	ld	e, #0x09
      00094C 3Ar04r00         [13] 1628 	ld	a, (#(_alex + 1) + 0)
      00094F 26 00            [ 7] 1629 	ld	h, #0x00
                                   1630 ;	spillPairReg hl
                                   1631 ;	spillPairReg hl
      000951 C6 09            [ 7] 1632 	add	a, #0x09
      000953 6F               [ 4] 1633 	ld	l, a
                                   1634 ;	spillPairReg hl
                                   1635 ;	spillPairReg hl
      000954 30 01            [12] 1636 	jr	NC, 00289$
      000956 24               [ 4] 1637 	inc	h
      000957                       1638 00289$:
      000957 C5               [11] 1639 	push	bc
      000958 CDr00r00         [17] 1640 	call	_SMS_addSprite_f
      00095B C1               [10] 1641 	pop	bc
      00095C 18 1B            [12] 1642 	jr	00140$
      00095E                       1643 00139$:
                                   1644 ;./alex.c:111: alex.frame = 13;
      00095E 3E 0D            [ 7] 1645 	ld	a, #0x0d
      000960 12               [ 7] 1646 	ld	(de), a
                                   1647 ;./alex.c:112: SMS_addSprite (alex.x - 8,  alex.y + 9, 11);
      000961 3Ar03r00         [13] 1648 	ld	a, (#_alex + 0)
      000964 C6 F8            [ 7] 1649 	add	a, #0xf8
                                   1650 ;	spillPairReg hl
                                   1651 ;	spillPairReg hl
      000966 57               [ 4] 1652 	ld	d, a
      000967 1E 0B            [ 7] 1653 	ld	e, #0x0b
      000969 3Ar04r00         [13] 1654 	ld	a, (#(_alex + 1) + 0)
      00096C 26 00            [ 7] 1655 	ld	h, #0x00
                                   1656 ;	spillPairReg hl
                                   1657 ;	spillPairReg hl
      00096E C6 09            [ 7] 1658 	add	a, #0x09
      000970 6F               [ 4] 1659 	ld	l, a
                                   1660 ;	spillPairReg hl
                                   1661 ;	spillPairReg hl
      000971 30 01            [12] 1662 	jr	NC, 00290$
      000973 24               [ 4] 1663 	inc	h
      000974                       1664 00290$:
      000974 C5               [11] 1665 	push	bc
      000975 CDr00r00         [17] 1666 	call	_SMS_addSprite_f
      000978 C1               [10] 1667 	pop	bc
      000979                       1668 00140$:
                                   1669 ;./alex.c:114: alex.lastChangeFrame--;
      000979 0A               [ 7] 1670 	ld	a, (bc)
      00097A 3D               [ 4] 1671 	dec	a
      00097B 02               [ 7] 1672 	ld	(bc), a
                                   1673 ;./alex.c:115: if(!alex.lastChangeFrame) {
      00097C B7               [ 4] 1674 	or	a, a
      00097D 20 05            [12] 1675 	jr	NZ, 00146$
                                   1676 ;./alex.c:116: alex.state = 0;
      00097F 21r08r00         [10] 1677 	ld	hl, #(_alex + 5)
      000982 36 00            [10] 1678 	ld	(hl), #0x00
      000984                       1679 00146$:
                                   1680 ;./alex.c:119: }
      000984 DD F9            [10] 1681 	ld	sp, ix
      000986 DD E1            [14] 1682 	pop	ix
      000988 C9               [10] 1683 	ret
                                   1684 ;./alex.c:121: void moveAlexAire(int keys, unsigned char puedeSubir, unsigned char puedeDerecha, unsigned char puedeIzquieda) {
                                   1685 ;	---------------------------------
                                   1686 ; Function moveAlexAire
                                   1687 ; ---------------------------------
      000989                       1688 _moveAlexAire::
      000989 DD E5            [15] 1689 	push	ix
      00098B DD 21 00 00      [14] 1690 	ld	ix,#0
      00098F DD 39            [15] 1691 	add	ix,sp
      000991 F5               [11] 1692 	push	af
      000992 3B               [ 6] 1693 	dec	sp
      000993 DD 75 FE         [19] 1694 	ld	-2 (ix), l
      000996 DD 74 FF         [19] 1695 	ld	-1 (ix), h
                                   1696 ;./alex.c:122: if (alex.y > maxSalto) {
      000999 21r04r00         [10] 1697 	ld	hl, #(_alex + 1)
      00099C 46               [ 7] 1698 	ld	b, (hl)
                                   1699 ;./alex.c:123: alex.y -= 2;
      00099D 48               [ 4] 1700 	ld	c, b
                                   1701 ;./alex.c:122: if (alex.y > maxSalto) {
      00099E 3Ar02r00         [13] 1702 	ld	a, (_maxSalto+0)
      0009A1 90               [ 4] 1703 	sub	a, b
      0009A2 30 08            [12] 1704 	jr	NC, 00102$
                                   1705 ;./alex.c:123: alex.y -= 2;
      0009A4 0D               [ 4] 1706 	dec	c
      0009A5 0D               [ 4] 1707 	dec	c
      0009A6 21r04r00         [10] 1708 	ld	hl, #(_alex + 1)
      0009A9 71               [ 7] 1709 	ld	(hl), c
      0009AA 18 0E            [12] 1710 	jr	00103$
      0009AC                       1711 00102$:
                                   1712 ;./alex.c:126: alex.y += 2; // bajando
      0009AC 0C               [ 4] 1713 	inc	c
      0009AD 0C               [ 4] 1714 	inc	c
      0009AE 21r04r00         [10] 1715 	ld	hl, #(_alex + 1)
      0009B1 71               [ 7] 1716 	ld	(hl), c
                                   1717 ;./alex.c:127: maxSalto = 255;
      0009B2 FD 21r02r00      [14] 1718 	ld	iy, #_maxSalto
      0009B6 FD 36 00 FF      [19] 1719 	ld	0 (iy), #0xff
      0009BA                       1720 00103$:
                                   1721 ;./alex.c:130: if (alex.state != PUÑETAZO_SALTANDO)
                                   1722 ;./alex.c:131: alex.oriented = 1;
                                   1723 ;./alex.c:129: if (keys & PORT_A_KEY_LEFT) {
      0009BA DD CB FE 56      [20] 1724 	bit	2, -2 (ix)
      0009BE 28 1A            [12] 1725 	jr	Z, 00109$
                                   1726 ;./alex.c:130: if (alex.state != PUÑETAZO_SALTANDO)
      0009C0 3Ar08r00         [13] 1727 	ld	a, (#(_alex + 5) + 0)
      0009C3 D6 10            [ 7] 1728 	sub	a, #0x10
      0009C5 28 05            [12] 1729 	jr	Z, 00105$
                                   1730 ;./alex.c:131: alex.oriented = 1;
      0009C7 21r07r00         [10] 1731 	ld	hl, #(_alex + 4)
      0009CA 36 01            [10] 1732 	ld	(hl), #0x01
      0009CC                       1733 00105$:
                                   1734 ;./alex.c:132: if (puedeIzquieda)
      0009CC DD 7E 06         [19] 1735 	ld	a, 6 (ix)
      0009CF B7               [ 4] 1736 	or	a, a
      0009D0 28 08            [12] 1737 	jr	Z, 00109$
                                   1738 ;./alex.c:133: alex.x -= 2;
      0009D2 3Ar03r00         [13] 1739 	ld	a, (#_alex + 0)
      0009D5 3D               [ 4] 1740 	dec	a
      0009D6 3D               [ 4] 1741 	dec	a
      0009D7 32r03r00         [13] 1742 	ld	(#_alex),a
      0009DA                       1743 00109$:
                                   1744 ;./alex.c:135: if (keys & PORT_A_KEY_RIGHT) {
      0009DA DD CB FE 5E      [20] 1745 	bit	3, -2 (ix)
      0009DE 28 1A            [12] 1746 	jr	Z, 00115$
                                   1747 ;./alex.c:136: if (alex.state != PUÑETAZO_SALTANDO)
      0009E0 3Ar08r00         [13] 1748 	ld	a, (#(_alex + 5) + 0)
      0009E3 D6 10            [ 7] 1749 	sub	a, #0x10
      0009E5 28 05            [12] 1750 	jr	Z, 00111$
                                   1751 ;./alex.c:137: alex.oriented = 0;
      0009E7 21r07r00         [10] 1752 	ld	hl, #(_alex + 4)
      0009EA 36 00            [10] 1753 	ld	(hl), #0x00
      0009EC                       1754 00111$:
                                   1755 ;./alex.c:138: if (puedeDerecha)
      0009EC DD 7E 05         [19] 1756 	ld	a, 5 (ix)
      0009EF B7               [ 4] 1757 	or	a, a
      0009F0 28 08            [12] 1758 	jr	Z, 00115$
                                   1759 ;./alex.c:139: alex.x += 2;
      0009F2 3Ar03r00         [13] 1760 	ld	a, (#_alex + 0)
      0009F5 C6 02            [ 7] 1761 	add	a, #0x02
      0009F7 32r03r00         [13] 1762 	ld	(#_alex),a
      0009FA                       1763 00115$:
                                   1764 ;./alex.c:141: if (alex.state == PUÑETAZO_SALTANDO) {
      0009FA 21r08r00         [10] 1765 	ld	hl, #(_alex + 5)
      0009FD 4E               [ 7] 1766 	ld	c, (hl)
                                   1767 ;./alex.c:142: alex.lastChangeFrame--;
                                   1768 ;./alex.c:147: alex.frame = 5;
                                   1769 ;./alex.c:141: if (alex.state == PUÑETAZO_SALTANDO) {
      0009FE 79               [ 4] 1770 	ld	a, c
      0009FF D6 10            [ 7] 1771 	sub	a, #0x10
      000A01 20 55            [12] 1772 	jr	NZ, 00127$
                                   1773 ;./alex.c:142: alex.lastChangeFrame--;
      000A03 21r06r00         [10] 1774 	ld	hl, #(_alex + 3)
      000A06 4E               [ 7] 1775 	ld	c, (hl)
      000A07 0D               [ 4] 1776 	dec	c
      000A08 21r06r00         [10] 1777 	ld	hl, #(_alex + 3)
                                   1778 ;./alex.c:143: if  (!alex.lastChangeFrame) {
      000A0B 79               [ 4] 1779 	ld	a,c
      000A0C 77               [ 7] 1780 	ld	(hl),a
      000A0D B7               [ 4] 1781 	or	a, a
      000A0E 20 05            [12] 1782 	jr	NZ, 00117$
                                   1783 ;./alex.c:144: alex.state = 0;
      000A10 21r08r00         [10] 1784 	ld	hl, #(_alex + 5)
      000A13 36 00            [10] 1785 	ld	(hl), #0x00
      000A15                       1786 00117$:
                                   1787 ;./alex.c:146: if (!alex.oriented) {
      000A15 3Ar07r00         [13] 1788 	ld	a, (#(_alex + 4) + 0)
      000A18 B7               [ 4] 1789 	or	a, a
      000A19 20 21            [12] 1790 	jr	NZ, 00119$
                                   1791 ;./alex.c:147: alex.frame = 5;
      000A1B 21r05r00         [10] 1792 	ld	hl, #(_alex + 2)
      000A1E 36 05            [10] 1793 	ld	(hl), #0x05
                                   1794 ;./alex.c:148: SMS_addSprite (alex.x + 16, alex.y + 9, 9);
      000A20 21r03r00         [10] 1795 	ld	hl, #_alex
      000A23 4E               [ 7] 1796 	ld	c, (hl)
      000A24 06 00            [ 7] 1797 	ld	b, #0x00
      000A26 21 10 00         [10] 1798 	ld	hl, #0x0010
      000A29 09               [11] 1799 	add	hl, bc
      000A2A 55               [ 4] 1800 	ld	d, l
      000A2B 1E 09            [ 7] 1801 	ld	e, #0x09
      000A2D 21r04r00         [10] 1802 	ld	hl, #(_alex + 1)
      000A30 4E               [ 7] 1803 	ld	c, (hl)
      000A31 06 00            [ 7] 1804 	ld	b, #0x00
      000A33 21 09 00         [10] 1805 	ld	hl, #0x0009
      000A36 09               [11] 1806 	add	hl, bc
      000A37 CDr00r00         [17] 1807 	call	_SMS_addSprite_f
      000A3A 18 41            [12] 1808 	jr	00129$
      000A3C                       1809 00119$:
                                   1810 ;./alex.c:151: alex.frame = 13;
      000A3C 21r05r00         [10] 1811 	ld	hl, #(_alex + 2)
      000A3F 36 0D            [10] 1812 	ld	(hl), #0x0d
                                   1813 ;./alex.c:152: SMS_addSprite (alex.x - 8,  alex.y + 9, 11);
      000A41 3Ar03r00         [13] 1814 	ld	a, (#_alex + 0)
      000A44 C6 F8            [ 7] 1815 	add	a, #0xf8
      000A46 57               [ 4] 1816 	ld	d, a
      000A47 1E 0B            [ 7] 1817 	ld	e, #0x0b
      000A49 21r04r00         [10] 1818 	ld	hl, #(_alex + 1)
      000A4C 4E               [ 7] 1819 	ld	c, (hl)
      000A4D 06 00            [ 7] 1820 	ld	b, #0x00
      000A4F 21 09 00         [10] 1821 	ld	hl, #0x0009
      000A52 09               [11] 1822 	add	hl, bc
      000A53 CDr00r00         [17] 1823 	call	_SMS_addSprite_f
      000A56 18 25            [12] 1824 	jr	00129$
      000A58                       1825 00127$:
                                   1826 ;./alex.c:156: if (!alex.oriented)
      000A58 3Ar07r00         [13] 1827 	ld	a, (#(_alex + 4) + 0)
      000A5B DD 77 FD         [19] 1828 	ld	-3 (ix), a
      000A5E B7               [ 4] 1829 	or	a, a
      000A5F 20 07            [12] 1830 	jr	NZ, 00122$
                                   1831 ;./alex.c:157: alex.frame = 6;
      000A61 21r05r00         [10] 1832 	ld	hl, #(_alex + 2)
      000A64 36 06            [10] 1833 	ld	(hl), #0x06
      000A66 18 05            [12] 1834 	jr	00123$
      000A68                       1835 00122$:
                                   1836 ;./alex.c:159: alex.frame = 14;
      000A68 21r05r00         [10] 1837 	ld	hl, #(_alex + 2)
      000A6B 36 0E            [10] 1838 	ld	(hl), #0x0e
      000A6D                       1839 00123$:
                                   1840 ;./alex.c:160: if (keys & PORT_A_KEY_1) {
      000A6D DD CB FE 66      [20] 1841 	bit	4, -2 (ix)
      000A71 28 0A            [12] 1842 	jr	Z, 00129$
                                   1843 ;./alex.c:161: alex.state = PUÑETAZO_SALTANDO;
      000A73 21r08r00         [10] 1844 	ld	hl, #(_alex + 5)
      000A76 36 10            [10] 1845 	ld	(hl), #0x10
                                   1846 ;./alex.c:162: alex.lastChangeFrame = 20;
      000A78 21r06r00         [10] 1847 	ld	hl, #(_alex + 3)
      000A7B 36 14            [10] 1848 	ld	(hl), #0x14
      000A7D                       1849 00129$:
                                   1850 ;./alex.c:166: }
      000A7D DD F9            [10] 1851 	ld	sp, ix
      000A7F DD E1            [14] 1852 	pop	ix
      000A81 E1               [10] 1853 	pop	hl
      000A82 F1               [10] 1854 	pop	af
      000A83 33               [ 6] 1855 	inc	sp
      000A84 E9               [ 4] 1856 	jp	(hl)
                                   1857 ;./alex.c:169: void moveAlex(int keys) {
                                   1858 ;	---------------------------------
                                   1859 ; Function moveAlex
                                   1860 ; ---------------------------------
      000A85                       1861 _moveAlex::
      000A85 DD E5            [15] 1862 	push	ix
      000A87 DD 21 00 00      [14] 1863 	ld	ix,#0
      000A8B DD 39            [15] 1864 	add	ix,sp
      000A8D 3B               [ 6] 1865 	dec	sp
                                   1866 ;./alex.c:170: unsigned char puedeBajar = canDown();
      000A8E E5               [11] 1867 	push	hl
      000A8F CDrE4r07         [17] 1868 	call	_canDown
      000A92 4F               [ 4] 1869 	ld	c, a
      000A93 C5               [11] 1870 	push	bc
      000A94 CDrD8r07         [17] 1871 	call	_canUp
      000A97 DD 77 FF         [19] 1872 	ld	-1 (ix), a
      000A9A CDrFEr07         [17] 1873 	call	_canRight
      000A9D 5F               [ 4] 1874 	ld	e, a
      000A9E D5               [11] 1875 	push	de
      000A9F CDrF2r07         [17] 1876 	call	_canLeft
      000AA2 D1               [10] 1877 	pop	de
      000AA3 C1               [10] 1878 	pop	bc
      000AA4 E1               [10] 1879 	pop	hl
                                   1880 ;./alex.c:174: if (puedeBajar)
      000AA5 0C               [ 4] 1881 	inc	c
      000AA6 0D               [ 4] 1882 	dec	c
      000AA7 28 0C            [12] 1883 	jr	Z, 00102$
                                   1884 ;./alex.c:175: moveAlexAire(keys, puedeSubir, puedeDerecha, puedeIzquierda);
      000AA9 57               [ 4] 1885 	ld	d,a
      000AAA D5               [11] 1886 	push	de
      000AAB DD 7E FF         [19] 1887 	ld	a, -1 (ix)
      000AAE F5               [11] 1888 	push	af
      000AAF 33               [ 6] 1889 	inc	sp
      000AB0 CDr89r09         [17] 1890 	call	_moveAlexAire
      000AB3 18 03            [12] 1891 	jr	00104$
      000AB5                       1892 00102$:
                                   1893 ;./alex.c:177: moveAlexSuelo(keys);
      000AB5 CDr0Cr08         [17] 1894 	call	_moveAlexSuelo
      000AB8                       1895 00104$:
                                   1896 ;./alex.c:178: }
      000AB8 33               [ 6] 1897 	inc	sp
      000AB9 DD E1            [14] 1898 	pop	ix
      000ABB C9               [10] 1899 	ret
                                   1900 ;main.c:20: void inicializaPajaros()
                                   1901 ;	---------------------------------
                                   1902 ; Function inicializaPajaros
                                   1903 ; ---------------------------------
      000ABC                       1904 _inicializaPajaros::
      000ABC DD E5            [15] 1905 	push	ix
      000ABE DD 21 00 00      [14] 1906 	ld	ix,#0
      000AC2 DD 39            [15] 1907 	add	ix,sp
      000AC4 21 F9 FF         [10] 1908 	ld	hl, #-7
      000AC7 39               [11] 1909 	add	hl, sp
      000AC8 F9               [ 6] 1910 	ld	sp, hl
                                   1911 ;main.c:23: for (i = 0; i < NUM_PAJAROS; i++)
      000AC9 DD 36 FF 00      [19] 1912 	ld	-1 (ix), #0x00
      000ACD                       1913 00108$:
                                   1914 ;main.c:25: pajaros[i].x = 15 + 32 * i;
      000ACD DD 4E FF         [19] 1915 	ld	c, -1 (ix)
      000AD0 06 00            [ 7] 1916 	ld	b, #0x00
      000AD2 69               [ 4] 1917 	ld	l, c
      000AD3 60               [ 4] 1918 	ld	h, b
      000AD4 29               [11] 1919 	add	hl, hl
      000AD5 29               [11] 1920 	add	hl, hl
      000AD6 29               [11] 1921 	add	hl, hl
      000AD7 7D               [ 4] 1922 	ld	a, l
      000AD8 C6r06            [ 7] 1923 	add	a, #<(_pajaros)
      000ADA DD 77 F9         [19] 1924 	ld	-7 (ix), a
      000ADD 7C               [ 4] 1925 	ld	a, h
      000ADE CEs03            [ 7] 1926 	adc	a, #>(_pajaros)
      000AE0 DD 77 FA         [19] 1927 	ld	-6 (ix), a
      000AE3 DD 7E FF         [19] 1928 	ld	a, -1 (ix)
      000AE6 0F               [ 4] 1929 	rrca
      000AE7 0F               [ 4] 1930 	rrca
      000AE8 0F               [ 4] 1931 	rrca
      000AE9 E6 E0            [ 7] 1932 	and	a, #0xe0
      000AEB C6 0F            [ 7] 1933 	add	a, #0x0f
      000AED E1               [10] 1934 	pop	hl
      000AEE E5               [11] 1935 	push	hl
      000AEF 77               [ 7] 1936 	ld	(hl), a
                                   1937 ;main.c:26: pajaros[i].y = 16 * (i / 2);
      000AF0 DD 7E F9         [19] 1938 	ld	a, -7 (ix)
      000AF3 C6 01            [ 7] 1939 	add	a, #0x01
      000AF5 DD 77 FB         [19] 1940 	ld	-5 (ix), a
      000AF8 DD 7E FA         [19] 1941 	ld	a, -6 (ix)
      000AFB CE 00            [ 7] 1942 	adc	a, #0x00
      000AFD DD 77 FC         [19] 1943 	ld	-4 (ix), a
      000B00 DD 71 FD         [19] 1944 	ld	-3 (ix), c
      000B03 DD 70 FE         [19] 1945 	ld	-2 (ix), b
      000B06 CB 78            [ 8] 1946 	bit	7, b
      000B08 28 08            [12] 1947 	jr	Z, 00112$
      000B0A DD 36 FD 01      [19] 1948 	ld	-3 (ix), #0x01
      000B0E DD 36 FE 00      [19] 1949 	ld	-2 (ix), #0
      000B12                       1950 00112$:
      000B12 DD 4E FD         [19] 1951 	ld	c, -3 (ix)
      000B15 1E 00            [ 7] 1952 	ld	e, #0x00
      000B17 CB 2B            [ 8] 1953 	sra	e
      000B19 CB 19            [ 8] 1954 	rr	c
      000B1B 79               [ 4] 1955 	ld	a, c
      000B1C 87               [ 4] 1956 	add	a, a
      000B1D 87               [ 4] 1957 	add	a, a
      000B1E 87               [ 4] 1958 	add	a, a
      000B1F 87               [ 4] 1959 	add	a, a
      000B20 C1               [10] 1960 	pop	bc
      000B21 E1               [10] 1961 	pop	hl
      000B22 E5               [11] 1962 	push	hl
      000B23 C5               [11] 1963 	push	bc
      000B24 77               [ 7] 1964 	ld	(hl), a
                                   1965 ;main.c:27: pajaros[i].lastChangeFrame = i * 3;
      000B25 C1               [10] 1966 	pop	bc
      000B26 C5               [11] 1967 	push	bc
      000B27 03               [ 6] 1968 	inc	bc
      000B28 03               [ 6] 1969 	inc	bc
      000B29 03               [ 6] 1970 	inc	bc
      000B2A DD 7E FF         [19] 1971 	ld	a, -1 (ix)
      000B2D 5F               [ 4] 1972 	ld	e, a
      000B2E 87               [ 4] 1973 	add	a, a
      000B2F 83               [ 4] 1974 	add	a, e
      000B30 02               [ 7] 1975 	ld	(bc), a
                                   1976 ;main.c:28: pajaros[i].initSprite = 255;
      000B31 DD 7E F9         [19] 1977 	ld	a, -7 (ix)
      000B34 C6 06            [ 7] 1978 	add	a, #0x06
      000B36 5F               [ 4] 1979 	ld	e, a
      000B37 DD 7E FA         [19] 1980 	ld	a, -6 (ix)
      000B3A CE 00            [ 7] 1981 	adc	a, #0x00
      000B3C 57               [ 4] 1982 	ld	d, a
      000B3D 3E FF            [ 7] 1983 	ld	a, #0xff
      000B3F 12               [ 7] 1984 	ld	(de), a
                                   1985 ;main.c:30: pajaros[i].x++;
      000B40 E1               [10] 1986 	pop	hl
      000B41 E5               [11] 1987 	push	hl
      000B42 7E               [ 7] 1988 	ld	a, (hl)
      000B43 3C               [ 4] 1989 	inc	a
      000B44 E1               [10] 1990 	pop	hl
      000B45 E5               [11] 1991 	push	hl
      000B46 77               [ 7] 1992 	ld	(hl), a
                                   1993 ;main.c:31: pajaros[i].lastChangeFrame++;
      000B47 0A               [ 7] 1994 	ld	a, (bc)
      000B48 3C               [ 4] 1995 	inc	a
      000B49 02               [ 7] 1996 	ld	(bc), a
                                   1997 ;main.c:32: if (pajaros[i].lastChangeFrame == 20)
      000B4A D6 14            [ 7] 1998 	sub	a, #0x14
      000B4C 20 15            [12] 1999 	jr	NZ, 00104$
                                   2000 ;main.c:34: pajaros[i].frame++;
      000B4E E1               [10] 2001 	pop	hl
      000B4F E5               [11] 2002 	push	hl
      000B50 23               [ 6] 2003 	inc	hl
      000B51 23               [ 6] 2004 	inc	hl
      000B52 7E               [ 7] 2005 	ld	a, (hl)
      000B53 3C               [ 4] 2006 	inc	a
      000B54 DD 77 FE         [19] 2007 	ld	-2 (ix), a
      000B57 77               [ 7] 2008 	ld	(hl), a
                                   2009 ;main.c:35: if (pajaros[i].frame > 1)
      000B58 3E 01            [ 7] 2010 	ld	a, #0x01
      000B5A DD 96 FE         [19] 2011 	sub	a, -2 (ix)
      000B5D 30 02            [12] 2012 	jr	NC, 00102$
                                   2013 ;main.c:36: pajaros[i].frame = 0;
      000B5F 36 00            [10] 2014 	ld	(hl), #0x00
      000B61                       2015 00102$:
                                   2016 ;main.c:37: pajaros[i].lastChangeFrame = 0;
      000B61 AF               [ 4] 2017 	xor	a, a
      000B62 02               [ 7] 2018 	ld	(bc), a
      000B63                       2019 00104$:
                                   2020 ;main.c:39: if(pajaros[i].initSprite == 255) {
      000B63 1A               [ 7] 2021 	ld	a, (de)
      000B64 3C               [ 4] 2022 	inc	a
      000B65 20 08            [12] 2023 	jr	NZ, 00109$
                                   2024 ;main.c:40: draw_entidad(&(pajaros[i]), &spritePajaro);
      000B67 11r15r00         [10] 2025 	ld	de, #_spritePajaro
      000B6A E1               [10] 2026 	pop	hl
      000B6B E5               [11] 2027 	push	hl
      000B6C CDr40r04         [17] 2028 	call	_draw_entidad
      000B6F                       2029 00109$:
                                   2030 ;main.c:23: for (i = 0; i < NUM_PAJAROS; i++)
      000B6F DD 34 FF         [23] 2031 	inc	-1 (ix)
      000B72 DD 7E FF         [19] 2032 	ld	a, -1 (ix)
      000B75 D6 13            [ 7] 2033 	sub	a, #0x13
      000B77 DArCDr0A         [10] 2034 	jp	C, 00108$
                                   2035 ;main.c:43: }
      000B7A DD F9            [10] 2036 	ld	sp, ix
      000B7C DD E1            [14] 2037 	pop	ix
      000B7E C9               [10] 2038 	ret
                                   2039 ;main.c:45: void loadGrapVRAM()
                                   2040 ;	---------------------------------
                                   2041 ; Function loadGrapVRAM
                                   2042 ; ---------------------------------
      000B7F                       2043 _loadGrapVRAM::
      000B7F DD E5            [15] 2044 	push	ix
      000B81 DD 21 00 00      [14] 2045 	ld	ix,#0
      000B85 DD 39            [15] 2046 	add	ix,sp
      000B87 21 E2 FF         [10] 2047 	ld	hl, #-30
      000B8A 39               [11] 2048 	add	hl, sp
      000B8B F9               [ 6] 2049 	ld	sp, hl
                                   2050 ;main.c:47: SMS_init();
      000B8C CDr00r00         [17] 2051 	call	_SMS_init
                                   2052 ;main.c:50: SMS_setSpriteMode(SPRITEMODE_TALL);
      000B8F 2E 01            [ 7] 2053 	ld	l, #0x01
                                   2054 ;	spillPairReg hl
                                   2055 ;	spillPairReg hl
      000B91 CDr00r00         [17] 2056 	call	_SMS_setSpriteMode
                                   2057 ;main.c:51: SMS_displayOn();
      000B94 21 40 01         [10] 2058 	ld	hl, #0x0140
      000B97 CDr00r00         [17] 2059 	call	_SMS_VDPturnOnFeature
                                   2060 ;main.c:52: SMS_loadBGPalette(sonicpalette_inc);
      000B9A 21r00r00         [10] 2061 	ld	hl, #_sonicpalette_inc
      000B9D CDr00r00         [17] 2062 	call	_SMS_loadBGPalette
                                   2063 ;main.c:53: SMS_loadSpritePalette(palleteAlex_inc);
      000BA0 21r00r00         [10] 2064 	ld	hl, #_palleteAlex_inc
      000BA3 CDr00r00         [17] 2065 	call	_SMS_loadSpritePalette
                                   2066 ;main.c:55: spriteAlex = generateSpriteNoRAM(2, 2, spriteAlex_inc_size, spriteAlex_inc);
      000BA6 21r00r00         [10] 2067 	ld	hl, #_spriteAlex_inc
      000BA9 E5               [11] 2068 	push	hl
      000BAA 21 00 10         [10] 2069 	ld	hl, #0x1000
      000BAD E5               [11] 2070 	push	hl
                                   2071 ;	spillPairReg hl
                                   2072 ;	spillPairReg hl
      000BAE 3E 02            [ 7] 2073 	ld	a,#0x02
      000BB0 6F               [ 4] 2074 	ld	l,a
      000BB1 E5               [11] 2075 	push	hl
      000BB2 21 06 00         [10] 2076 	ld	hl, #0x0006
      000BB5 39               [11] 2077 	add	hl, sp
      000BB6 EB               [ 4] 2078 	ex	de,hl
      000BB7 E1               [10] 2079 	pop	hl
      000BB8 D5               [11] 2080 	push	de
      000BB9 CDrAAr00         [17] 2081 	call	_generateSpriteNoRAM
      000BBC F1               [10] 2082 	pop	af
      000BBD F1               [10] 2083 	pop	af
      000BBE F1               [10] 2084 	pop	af
      000BBF 11r0Br00         [10] 2085 	ld	de, #_spriteAlex
      000BC2 21 00 00         [10] 2086 	ld	hl, #0
      000BC5 39               [11] 2087 	add	hl, sp
      000BC6 01 0A 00         [10] 2088 	ld	bc, #0x000a
      000BC9 ED B0            [21] 2089 	ldir
                                   2090 ;main.c:56: spritePuno = generateSprite(1, 2, puno_inc_size, puno_inc);
      000BCB 21r00r00         [10] 2091 	ld	hl, #_puno_inc
      000BCE E5               [11] 2092 	push	hl
      000BCF 21 80 00         [10] 2093 	ld	hl, #0x0080
      000BD2 E5               [11] 2094 	push	hl
      000BD3 2E 02            [ 7] 2095 	ld	l, #0x02
                                   2096 ;	spillPairReg hl
                                   2097 ;	spillPairReg hl
      000BD5 3E 01            [ 7] 2098 	ld	a, #0x01
      000BD7 E5               [11] 2099 	push	hl
      000BD8 21 10 00         [10] 2100 	ld	hl, #0x0010
      000BDB 39               [11] 2101 	add	hl, sp
      000BDC EB               [ 4] 2102 	ex	de,hl
      000BDD E1               [10] 2103 	pop	hl
      000BDE D5               [11] 2104 	push	de
      000BDF CDr00r00         [17] 2105 	call	_generateSprite
      000BE2 F1               [10] 2106 	pop	af
      000BE3 F1               [10] 2107 	pop	af
      000BE4 F1               [10] 2108 	pop	af
      000BE5 11r1Fr00         [10] 2109 	ld	de, #_spritePuno
      000BE8 21 0A 00         [10] 2110 	ld	hl, #10
      000BEB 39               [11] 2111 	add	hl, sp
      000BEC 01 0A 00         [10] 2112 	ld	bc, #0x000a
      000BEF ED B0            [21] 2113 	ldir
                                   2114 ;main.c:57: spritePajaro = generateSprite(3, 1, spritePajaro_inc_size, spritePajaro_inc);
      000BF1 21r00r00         [10] 2115 	ld	hl, #_spritePajaro_inc
      000BF4 E5               [11] 2116 	push	hl
      000BF5 21 80 01         [10] 2117 	ld	hl, #0x0180
      000BF8 E5               [11] 2118 	push	hl
      000BF9 2E 01            [ 7] 2119 	ld	l, #0x01
                                   2120 ;	spillPairReg hl
                                   2121 ;	spillPairReg hl
      000BFB 3E 03            [ 7] 2122 	ld	a, #0x03
      000BFD E5               [11] 2123 	push	hl
      000BFE 21 1A 00         [10] 2124 	ld	hl, #0x001a
      000C01 39               [11] 2125 	add	hl, sp
      000C02 EB               [ 4] 2126 	ex	de,hl
      000C03 E1               [10] 2127 	pop	hl
      000C04 D5               [11] 2128 	push	de
      000C05 CDr00r00         [17] 2129 	call	_generateSprite
      000C08 F1               [10] 2130 	pop	af
      000C09 F1               [10] 2131 	pop	af
      000C0A F1               [10] 2132 	pop	af
      000C0B 11r15r00         [10] 2133 	ld	de, #_spritePajaro
      000C0E 21 14 00         [10] 2134 	ld	hl, #20
      000C11 39               [11] 2135 	add	hl, sp
      000C12 01 0A 00         [10] 2136 	ld	bc, #0x000a
      000C15 ED B0            [21] 2137 	ldir
                                   2138 ;main.c:58: inicializaPajaros();
      000C17 CDrBCr0A         [17] 2139 	call	_inicializaPajaros
                                   2140 ;main.c:63: SMS_loadTiles(tiles_de_prueba2_inc, 0, tiles_de_prueba2_inc_size);
      000C1A 21 A0 00         [10] 2141 	ld	hl, #0x00a0
      000C1D E5               [11] 2142 	push	hl
      000C1E 11r00r00         [10] 2143 	ld	de, #_tiles_de_prueba2_inc
      000C21 21 00 40         [10] 2144 	ld	hl, #0x4000
      000C24 CDr00r00         [17] 2145 	call	_SMS_VRAMmemcpy
                                   2146 ;main.c:64: SMS_loadTileMap(0, 0, tilemap_de_prueba2_inc, tilemap_de_prueba2_inc_size);
      000C27 21 80 07         [10] 2147 	ld	hl, #0x0780
      000C2A E5               [11] 2148 	push	hl
      000C2B 11r00r00         [10] 2149 	ld	de, #_tilemap_de_prueba2_inc
      000C2E 21 00 78         [10] 2150 	ld	hl, #0x7800
      000C31 CDr00r00         [17] 2151 	call	_SMS_VRAMmemcpy
                                   2152 ;main.c:65: SMS_loadBGPalette(paleta_de_prueba2_inc);
      000C34 21r00r00         [10] 2153 	ld	hl, #_paleta_de_prueba2_inc
      000C37 CDr00r00         [17] 2154 	call	_SMS_loadBGPalette
                                   2155 ;main.c:67: }
      000C3A DD F9            [10] 2156 	ld	sp, ix
      000C3C DD E1            [14] 2157 	pop	ix
      000C3E C9               [10] 2158 	ret
                                   2159 ;main.c:69: void dibujaPajaros()
                                   2160 ;	---------------------------------
                                   2161 ; Function dibujaPajaros
                                   2162 ; ---------------------------------
      000C3F                       2163 _dibujaPajaros::
      000C3F DD E5            [15] 2164 	push	ix
      000C41 DD 21 00 00      [14] 2165 	ld	ix,#0
      000C45 DD 39            [15] 2166 	add	ix,sp
      000C47 21 F5 FF         [10] 2167 	ld	hl, #-11
      000C4A 39               [11] 2168 	add	hl, sp
      000C4B F9               [ 6] 2169 	ld	sp, hl
                                   2170 ;main.c:72: for (i = 0; i < NUM_PAJAROS; i++)
      000C4C DD 36 FE 00      [19] 2171 	ld	-2 (ix), #0x00
      000C50                       2172 00117$:
                                   2173 ;main.c:74: T_entidad *p = &pajaros[i];
      000C50 DD 7E FE         [19] 2174 	ld	a, -2 (ix)
      000C53 DD 77 F9         [19] 2175 	ld	-7 (ix), a
      000C56 DD 36 FA 00      [19] 2176 	ld	-6 (ix), #0x00
      000C5A 6F               [ 4] 2177 	ld	l, a
      000C5B 26 00            [ 7] 2178 	ld	h, #0x00
      000C5D 29               [11] 2179 	add	hl, hl
      000C5E 29               [11] 2180 	add	hl, hl
      000C5F 29               [11] 2181 	add	hl, hl
      000C60 11r06r03         [10] 2182 	ld	de, #_pajaros
      000C63 19               [11] 2183 	add	hl, de
                                   2184 ;main.c:75: p->x++;
      000C64 DD 75 FB         [19] 2185 	ld	-5 (ix), l
      000C67 DD 74 FC         [19] 2186 	ld	-4 (ix), h
      000C6A 7E               [ 7] 2187 	ld	a, (hl)
      000C6B 3C               [ 4] 2188 	inc	a
      000C6C DD 6E FB         [19] 2189 	ld	l, -5 (ix)
      000C6F DD 66 FC         [19] 2190 	ld	h, -4 (ix)
      000C72 77               [ 7] 2191 	ld	(hl), a
                                   2192 ;main.c:76: p->lastChangeFrame++;
      000C73 DD 7E FB         [19] 2193 	ld	a, -5 (ix)
      000C76 C6 03            [ 7] 2194 	add	a, #0x03
      000C78 DD 77 F5         [19] 2195 	ld	-11 (ix), a
      000C7B DD 7E FC         [19] 2196 	ld	a, -4 (ix)
      000C7E CE 00            [ 7] 2197 	adc	a, #0x00
      000C80 DD 77 F6         [19] 2198 	ld	-10 (ix), a
      000C83 E1               [10] 2199 	pop	hl
      000C84 E5               [11] 2200 	push	hl
      000C85 7E               [ 7] 2201 	ld	a, (hl)
      000C86 3C               [ 4] 2202 	inc	a
      000C87 E1               [10] 2203 	pop	hl
      000C88 E5               [11] 2204 	push	hl
      000C89 77               [ 7] 2205 	ld	(hl), a
                                   2206 ;main.c:77: if (p->lastChangeFrame == 20)
      000C8A D6 14            [ 7] 2207 	sub	a, #0x14
      000C8C C2r28r0D         [10] 2208 	jp	NZ,00106$
                                   2209 ;main.c:79: p->frame++;
      000C8F DD 7E FB         [19] 2210 	ld	a, -5 (ix)
      000C92 C6 02            [ 7] 2211 	add	a, #0x02
      000C94 DD 77 F7         [19] 2212 	ld	-9 (ix), a
      000C97 DD 7E FC         [19] 2213 	ld	a, -4 (ix)
      000C9A CE 00            [ 7] 2214 	adc	a, #0x00
      000C9C DD 77 F8         [19] 2215 	ld	-8 (ix), a
      000C9F DD 6E F7         [19] 2216 	ld	l, -9 (ix)
      000CA2 DD 66 F8         [19] 2217 	ld	h, -8 (ix)
      000CA5 4E               [ 7] 2218 	ld	c, (hl)
      000CA6 0C               [ 4] 2219 	inc	c
      000CA7 D1               [10] 2220 	pop	de
      000CA8 E1               [10] 2221 	pop	hl
      000CA9 E5               [11] 2222 	push	hl
      000CAA D5               [11] 2223 	push	de
      000CAB 71               [ 7] 2224 	ld	(hl), c
                                   2225 ;main.c:80: if (p->frame > 1)
      000CAC 3E 01            [ 7] 2226 	ld	a, #0x01
      000CAE 91               [ 4] 2227 	sub	a, c
      000CAF 30 06            [12] 2228 	jr	NC, 00102$
                                   2229 ;main.c:81: p->frame = 0;
      000CB1 C1               [10] 2230 	pop	bc
      000CB2 E1               [10] 2231 	pop	hl
      000CB3 E5               [11] 2232 	push	hl
      000CB4 C5               [11] 2233 	push	bc
      000CB5 36 00            [10] 2234 	ld	(hl), #0x00
      000CB7                       2235 00102$:
                                   2236 ;main.c:82: p->lastChangeFrame = 0;
      000CB7 E1               [10] 2237 	pop	hl
      000CB8 36 00            [10] 2238 	ld	(hl), #0x00
      000CBA E5               [11] 2239 	push	hl
                                   2240 ;main.c:83: int frame = spritePajaro.tamano*p->frame + spritePajaro.beginVRAM;
      000CBB 21r17r00         [10] 2241 	ld	hl, #_spritePajaro + 2
      000CBE 5E               [ 7] 2242 	ld	e, (hl)
      000CBF DD 6E F7         [19] 2243 	ld	l, -9 (ix)
      000CC2 DD 66 F8         [19] 2244 	ld	h, -8 (ix)
      000CC5 66               [ 7] 2245 	ld	h, (hl)
                                   2246 ;	spillPairReg hl
      000CC6 2E 00            [ 7] 2247 	ld	l, #0x00
      000CC8 55               [ 4] 2248 	ld	d, l
      000CC9 06 08            [ 7] 2249 	ld	b, #0x08
      000CCB                       2250 00189$:
      000CCB 29               [11] 2251 	add	hl, hl
      000CCC 30 01            [12] 2252 	jr	NC, 00190$
      000CCE 19               [11] 2253 	add	hl, de
      000CCF                       2254 00190$:
      000CCF 10 FA            [13] 2255 	djnz	00189$
      000CD1 4D               [ 4] 2256 	ld	c, l
      000CD2 3Ar19r00         [13] 2257 	ld	a, (#_spritePajaro + 4)
      000CD5 81               [ 4] 2258 	add	a, c
      000CD6 DD 77 FD         [19] 2259 	ld	-3 (ix), a
                                   2260 ;main.c:84: for(j=0;j<spritePajaro.alto;j++) {
      000CD9 DD 36 FF 00      [19] 2261 	ld	-1 (ix), #0x00
      000CDD                       2262 00115$:
      000CDD 21r15r00         [10] 2263 	ld	hl, #_spritePajaro
      000CE0 DD 7E FF         [19] 2264 	ld	a,-1 (ix)
      000CE3 96               [ 7] 2265 	sub	a,(hl)
      000CE4 30 42            [12] 2266 	jr	NC, 00106$
                                   2267 ;main.c:85: unsigned char desplazado = (j<<2);
      000CE6 DD 7E FF         [19] 2268 	ld	a, -1 (ix)
      000CE9 87               [ 4] 2269 	add	a, a
      000CEA 87               [ 4] 2270 	add	a, a
                                   2271 ;main.c:86: unsigned char jCalculated = desplazado + frame, y = p->y+(desplazado<<2);
      000CEB DD 86 FD         [19] 2272 	add	a, -3 (ix)
      000CEE 5F               [ 4] 2273 	ld	e, a
                                   2274 ;main.c:87: for(i2=0;i2<spritePajaro.ancho;i2++) {
      000CEF 16 00            [ 7] 2275 	ld	d, #0x00
      000CF1                       2276 00112$:
      000CF1 21r16r00         [10] 2277 	ld	hl, #_spritePajaro + 1
      000CF4 4E               [ 7] 2278 	ld	c, (hl)
      000CF5 7A               [ 4] 2279 	ld	a, d
      000CF6 91               [ 4] 2280 	sub	a, c
      000CF7 30 2A            [12] 2281 	jr	NC, 00116$
                                   2282 ;main.c:88: SpriteTableXN2[(i2+i*3)*2+1] = jCalculated + (i2<<1);
      000CF9 4A               [ 4] 2283 	ld	c, d
      000CFA 06 00            [ 7] 2284 	ld	b, #0x00
      000CFC D5               [11] 2285 	push	de
      000CFD DD 5E F9         [19] 2286 	ld	e, -7 (ix)
      000D00 DD 56 FA         [19] 2287 	ld	d, -6 (ix)
      000D03 6B               [ 4] 2288 	ld	l, e
      000D04 62               [ 4] 2289 	ld	h, d
      000D05 29               [11] 2290 	add	hl, hl
      000D06 19               [11] 2291 	add	hl, de
      000D07 D1               [10] 2292 	pop	de
      000D08 09               [11] 2293 	add	hl, bc
      000D09 29               [11] 2294 	add	hl, hl
      000D0A 23               [ 6] 2295 	inc	hl
      000D0B 4D               [ 4] 2296 	ld	c, l
      000D0C 44               [ 4] 2297 	ld	b, h
      000D0D 79               [ 4] 2298 	ld	a, c
      000D0E FD 21r02r03      [14] 2299 	ld	iy, #_SpriteTableXN2
      000D12 FD 86 00         [19] 2300 	add	a, 0 (iy)
      000D15 4F               [ 4] 2301 	ld	c, a
      000D16 78               [ 4] 2302 	ld	a, b
      000D17 FD 8E 01         [19] 2303 	adc	a, 1 (iy)
      000D1A 47               [ 4] 2304 	ld	b, a
      000D1B 7A               [ 4] 2305 	ld	a, d
      000D1C 87               [ 4] 2306 	add	a, a
      000D1D 6B               [ 4] 2307 	ld	l, e
                                   2308 ;	spillPairReg hl
                                   2309 ;	spillPairReg hl
      000D1E 85               [ 4] 2310 	add	a, l
      000D1F 02               [ 7] 2311 	ld	(bc), a
                                   2312 ;main.c:87: for(i2=0;i2<spritePajaro.ancho;i2++) {
      000D20 14               [ 4] 2313 	inc	d
      000D21 18 CE            [12] 2314 	jr	00112$
      000D23                       2315 00116$:
                                   2316 ;main.c:84: for(j=0;j<spritePajaro.alto;j++) {
      000D23 DD 34 FF         [23] 2317 	inc	-1 (ix)
      000D26 18 B5            [12] 2318 	jr	00115$
      000D28                       2319 00106$:
                                   2320 ;main.c:92: end = p->len;
      000D28 DD 4E FB         [19] 2321 	ld	c, -5 (ix)
      000D2B DD 46 FC         [19] 2322 	ld	b, -4 (ix)
      000D2E 21 07 00         [10] 2323 	ld	hl, #7
      000D31 09               [11] 2324 	add	hl, bc
      000D32 4E               [ 7] 2325 	ld	c, (hl)
                                   2326 ;main.c:93: i2 = p->initSprite << 1;
      000D33 DD 5E FB         [19] 2327 	ld	e, -5 (ix)
      000D36 DD 56 FC         [19] 2328 	ld	d, -4 (ix)
      000D39 21 06 00         [10] 2329 	ld	hl, #6
      000D3C 19               [11] 2330 	add	hl, de
      000D3D 7E               [ 7] 2331 	ld	a, (hl)
      000D3E 87               [ 4] 2332 	add	a, a
      000D3F 47               [ 4] 2333 	ld	b, a
                                   2334 ;main.c:94: while(i2<end) {
      000D40                       2335 00107$:
                                   2336 ;main.c:95: SpriteTableXN2[i2] += 1;
      000D40 78               [ 4] 2337 	ld	a,b
      000D41 B9               [ 4] 2338 	cp	a,c
      000D42 30 11            [12] 2339 	jr	NC, 00118$
      000D44 21r02r03         [10] 2340 	ld	hl, #_SpriteTableXN2
      000D47 86               [ 7] 2341 	add	a, (hl)
      000D48 23               [ 6] 2342 	inc	hl
      000D49 5F               [ 4] 2343 	ld	e, a
      000D4A 3E 00            [ 7] 2344 	ld	a, #0x00
      000D4C 8E               [ 7] 2345 	adc	a, (hl)
      000D4D 57               [ 4] 2346 	ld	d, a
      000D4E 1A               [ 7] 2347 	ld	a, (de)
      000D4F 3C               [ 4] 2348 	inc	a
      000D50 12               [ 7] 2349 	ld	(de), a
                                   2350 ;main.c:96: i2 +=2;
      000D51 04               [ 4] 2351 	inc	b
      000D52 04               [ 4] 2352 	inc	b
      000D53 18 EB            [12] 2353 	jr	00107$
      000D55                       2354 00118$:
                                   2355 ;main.c:72: for (i = 0; i < NUM_PAJAROS; i++)
      000D55 DD 34 FE         [23] 2356 	inc	-2 (ix)
      000D58 DD 7E FE         [19] 2357 	ld	a, -2 (ix)
      000D5B D6 13            [ 7] 2358 	sub	a, #0x13
      000D5D DAr50r0C         [10] 2359 	jp	C, 00117$
                                   2360 ;main.c:101: }
      000D60 DD F9            [10] 2361 	ld	sp, ix
      000D62 DD E1            [14] 2362 	pop	ix
      000D64 C9               [10] 2363 	ret
                                   2364 ;main.c:103: void playMusic() {
                                   2365 ;	---------------------------------
                                   2366 ; Function playMusic
                                   2367 ; ---------------------------------
      000D65                       2368 _playMusic::
                                   2369 ;main.c:104: PSGFrame();
      000D65 CDr00r00         [17] 2370 	call	_PSGFrame
                                   2371 ;main.c:105: PSGSFXFrame();
                                   2372 ;main.c:106: }
      000D68 C3r00r00         [10] 2373 	jp	_PSGSFXFrame
                                   2374 ;main.c:108: void disableSprites() {
                                   2375 ;	---------------------------------
                                   2376 ; Function disableSprites
                                   2377 ; ---------------------------------
      000D6B                       2378 _disableSprites::
                                   2379 ;main.c:111: while (i < 64) {
      000D6B 0E 00            [ 7] 2380 	ld	c, #0x00
      000D6D                       2381 00101$:
      000D6D 79               [ 4] 2382 	ld	a, c
      000D6E D6 40            [ 7] 2383 	sub	a, #0x40
      000D70 30 10            [12] 2384 	jr	NC, 00103$
                                   2385 ;main.c:112: SMS_updateSpritePosition(i,10,240); 
      000D72 41               [ 4] 2386 	ld	b, c
      000D73 C5               [11] 2387 	push	bc
      000D74 3E F0            [ 7] 2388 	ld	a, #0xf0
      000D76 F5               [11] 2389 	push	af
      000D77 33               [ 6] 2390 	inc	sp
      000D78 2E 0A            [ 7] 2391 	ld	l, #0x0a
                                   2392 ;	spillPairReg hl
                                   2393 ;	spillPairReg hl
      000D7A 78               [ 4] 2394 	ld	a, b
      000D7B CDr00r00         [17] 2395 	call	_SMS_updateSpritePosition
      000D7E C1               [10] 2396 	pop	bc
                                   2397 ;main.c:113: i++;
      000D7F 0C               [ 4] 2398 	inc	c
      000D80 18 EB            [12] 2399 	jr	00101$
      000D82                       2400 00103$:
                                   2401 ;main.c:115: numSprites = 0;
      000D82 21 00 00         [10] 2402 	ld	hl, #0x0000
      000D85 22r9Er03         [16] 2403 	ld	(_numSprites), hl
                                   2404 ;main.c:116: }
      000D88 C9               [10] 2405 	ret
                                   2406 ;main.c:118: void main(void)
                                   2407 ;	---------------------------------
                                   2408 ; Function main
                                   2409 ; ---------------------------------
      000D89                       2410 _main::
      000D89 DD E5            [15] 2411 	push	ix
      000D8B DD 21 00 00      [14] 2412 	ld	ix,#0
      000D8F DD 39            [15] 2413 	add	ix,sp
      000D91 F5               [11] 2414 	push	af
                                   2415 ;main.c:123: SMS_VRAMmemsetW(0, 0x0000, 16384);
      000D92 DD 36 FF 00      [19] 2416 	ld	-1 (ix), #0x00
      000D96 DD 36 FE 00      [19] 2417 	ld	-2 (ix), #0x00
      000D9A 21 00 40         [10] 2418 	ld	hl, #0x4000
      000D9D E5               [11] 2419 	push	hl
      000D9E 11 00 00         [10] 2420 	ld	de, #0x0000
      000DA1 65               [ 4] 2421 	ld	h, l
      000DA2 CDr00r00         [17] 2422 	call	_SMS_VRAMmemsetW
                                   2423 ;main.c:133: printf("Hello, World! [1/3]");
      000DA5 21r5Cr0E         [10] 2424 	ld	hl, #___str_0
      000DA8 E5               [11] 2425 	push	hl
      000DA9 CDr00r00         [17] 2426 	call	_printf
      000DAC F1               [10] 2427 	pop	af
                                   2428 ;main.c:138: SMS_displayOn();
      000DAD 21 40 01         [10] 2429 	ld	hl, #0x0140
      000DB0 CDr00r00         [17] 2430 	call	_SMS_VDPturnOnFeature
                                   2431 ;main.c:139: SMS_setBGScrollX(scroll_x);
      000DB3 2E 00            [ 7] 2432 	ld	l, #0x00
                                   2433 ;	spillPairReg hl
                                   2434 ;	spillPairReg hl
      000DB5 CDr00r00         [17] 2435 	call	_SMS_setBGScrollX
                                   2436 ;main.c:140: SMS_setBGScrollY(scroll_y);
      000DB8 2E 00            [ 7] 2437 	ld	l, #0x00
                                   2438 ;	spillPairReg hl
                                   2439 ;	spillPairReg hl
      000DBA CDr00r00         [17] 2440 	call	_SMS_setBGScrollY
                                   2441 ;main.c:141: SMS_init();
      000DBD CDr00r00         [17] 2442 	call	_SMS_init
                                   2443 ;main.c:142: initSpritesVariables();
      000DC0 CDrDDr03         [17] 2444 	call	_initSpritesVariables
                                   2445 ;main.c:143: loadGrapVRAM();
      000DC3 CDr7Fr0B         [17] 2446 	call	_loadGrapVRAM
                                   2447 ;main.c:149: PSGPlay(special_psg);
      000DC6 21r00r00         [10] 2448 	ld	hl, #_special_psg
      000DC9 CDr00r00         [17] 2449 	call	_PSGPlay
                                   2450 ;main.c:150: SMS_VDPturnOnFeature(VDPFEATURE_LEFTCOLBLANK);
      000DCC 21 20 00         [10] 2451 	ld	hl, #0x0020
      000DCF CDr00r00         [17] 2452 	call	_SMS_VDPturnOnFeature
                                   2453 ;main.c:154: SMS_setFrameInterruptHandler(playMusic);
      000DD2 21r65r0D         [10] 2454 	ld	hl, #_playMusic
      000DD5 CDr00r00         [17] 2455 	call	_SMS_setFrameInterruptHandler
      000DD8                       2456 00115$:
                                   2457 ;main.c:159: if (SMS_queryPauseRequested())
      000DD8 CDr00r00         [17] 2458 	call	_SMS_queryPauseRequested
      000DDB CB 47            [ 8] 2459 	bit	0,a
      000DDD 28 1E            [12] 2460 	jr	Z, 00105$
                                   2461 ;main.c:161: PSGPlay(emeraldhill_psg);
      000DDF 21r00r00         [10] 2462 	ld	hl, #_emeraldhill_psg
      000DE2 CDr00r00         [17] 2463 	call	_PSGPlay
                                   2464 ;main.c:162: SMS_resetPauseRequest();
      000DE5 CDr00r00         [17] 2465 	call	_SMS_resetPauseRequest
                                   2466 ;main.c:163: while (!SMS_queryPauseRequested())
      000DE8                       2467 00101$:
      000DE8 CDr00r00         [17] 2468 	call	_SMS_queryPauseRequested
      000DEB CB 47            [ 8] 2469 	bit	0,a
      000DED 20 05            [12] 2470 	jr	NZ, 00103$
                                   2471 ;main.c:165: SMS_waitForVBlank();
      000DEF CDr00r00         [17] 2472 	call	_SMS_waitForVBlank
      000DF2 18 F4            [12] 2473 	jr	00101$
      000DF4                       2474 00103$:
                                   2475 ;main.c:169: SMS_resetPauseRequest();
      000DF4 CDr00r00         [17] 2476 	call	_SMS_resetPauseRequest
                                   2477 ;main.c:170: PSGPlay(titulo_psg);
      000DF7 21r00r00         [10] 2478 	ld	hl, #_titulo_psg
      000DFA CDr00r00         [17] 2479 	call	_PSGPlay
      000DFD                       2480 00105$:
                                   2481 ;main.c:174: int keys = SMS_getKeysHeld();
      000DFD CDr00r00         [17] 2482 	call	_SMS_getKeysHeld
      000E00 EB               [ 4] 2483 	ex	de, hl
                                   2484 ;main.c:175: if(keys & PORT_A_KEY_2)
      000E01 CB 6D            [ 8] 2485 	bit	5, l
      000E03 28 04            [12] 2486 	jr	Z, 00107$
                                   2487 ;main.c:176: keys = keys  ^ PORT_A_KEY_2;
      000E05 7D               [ 4] 2488 	ld	a, l
      000E06 EE 20            [ 7] 2489 	xor	a, #0x20
      000E08 6F               [ 4] 2490 	ld	l, a
                                   2491 ;	spillPairReg hl
                                   2492 ;	spillPairReg hl
      000E09                       2493 00107$:
                                   2494 ;main.c:177: if(keys & PORT_A_KEY_1)
      000E09 CB 65            [ 8] 2495 	bit	4, l
      000E0B 28 04            [12] 2496 	jr	Z, 00109$
                                   2497 ;main.c:178: keys = keys  ^ PORT_A_KEY_1;
      000E0D 7D               [ 4] 2498 	ld	a, l
      000E0E EE 10            [ 7] 2499 	xor	a, #0x10
      000E10 6F               [ 4] 2500 	ld	l, a
                                   2501 ;	spillPairReg hl
                                   2502 ;	spillPairReg hl
      000E11                       2503 00109$:
                                   2504 ;main.c:180: keys = keys | (SMS_getKeysPressed() & (PORT_A_KEY_2 | PORT_A_KEY_1));
      000E11 E5               [11] 2505 	push	hl
      000E12 CDr00r00         [17] 2506 	call	_SMS_getKeysPressed
      000E15 E1               [10] 2507 	pop	hl
      000E16 7B               [ 4] 2508 	ld	a, e
      000E17 E6 30            [ 7] 2509 	and	a, #0x30
      000E19 B5               [ 4] 2510 	or	a, l
      000E1A 6F               [ 4] 2511 	ld	l, a
                                   2512 ;	spillPairReg hl
                                   2513 ;	spillPairReg hl
                                   2514 ;main.c:183: moveAlex(keys);
      000E1B CDr85r0A         [17] 2515 	call	_moveAlex
                                   2516 ;main.c:184: draw_entidad(&alex, &spriteAlex);
      000E1E 11r0Br00         [10] 2517 	ld	de, #_spriteAlex
      000E21 21r03r00         [10] 2518 	ld	hl, #_alex
      000E24 CDr40r04         [17] 2519 	call	_draw_entidad
                                   2520 ;main.c:185: dibujaPajaros();
      000E27 CDr3Fr0C         [17] 2521 	call	_dibujaPajaros
                                   2522 ;main.c:190: SMS_waitForVBlank();
      000E2A CDr00r00         [17] 2523 	call	_SMS_waitForVBlank
                                   2524 ;main.c:193: SMS_displayOff();
      000E2D 21 40 01         [10] 2525 	ld	hl, #0x0140
      000E30 CDr00r00         [17] 2526 	call	_SMS_VDPturnOffFeature
                                   2527 ;main.c:196: copySpritestoSAT();
      000E33 CDr0Cr04         [17] 2528 	call	_copySpritestoSAT
                                   2529 ;main.c:203: if (scroll_y % 2 == 0)
      000E36 DD CB FF 46      [20] 2530 	bit	0, -1 (ix)
      000E3A 20 03            [12] 2531 	jr	NZ, 00111$
                                   2532 ;main.c:204: scroll_x += 1;
      000E3C DD 34 FE         [23] 2533 	inc	-2 (ix)
      000E3F                       2534 00111$:
                                   2535 ;main.c:205: scroll_y++;
      000E3F DD 34 FF         [23] 2536 	inc	-1 (ix)
                                   2537 ;main.c:206: if (scroll_y == 224)
      000E42 DD 7E FF         [19] 2538 	ld	a, -1 (ix)
      000E45 D6 E0            [ 7] 2539 	sub	a, #0xe0
      000E47 20 04            [12] 2540 	jr	NZ, 00113$
                                   2541 ;main.c:207: scroll_y = 0;
      000E49 DD 36 FF 00      [19] 2542 	ld	-1 (ix), #0x00
      000E4D                       2543 00113$:
                                   2544 ;main.c:209: SMS_setBGScrollX(scroll_x);
      000E4D DD 6E FE         [19] 2545 	ld	l, -2 (ix)
                                   2546 ;	spillPairReg hl
                                   2547 ;	spillPairReg hl
      000E50 CDr00r00         [17] 2548 	call	_SMS_setBGScrollX
                                   2549 ;main.c:211: SMS_displayOn();
      000E53 21 40 01         [10] 2550 	ld	hl, #0x0140
      000E56 CDr00r00         [17] 2551 	call	_SMS_VDPturnOnFeature
                                   2552 ;main.c:213: }
      000E59 C3rD8r0D         [10] 2553 	jp	00115$
      000E5C                       2554 ___str_0:
      000E5C 48 65 6C 6C 6F 2C 20  2555 	.ascii "Hello, World! [1/3]"
             57 6F 72 6C 64 21 20
             5B 31 2F 33 5D
      000E6F 00                    2556 	.db 0x00
                                   2557 	.area _CODE
      000E70                       2558 __str_1:
      000E70 53 45 47 41           2559 	.ascii "SEGA"
      000E74 00                    2560 	.db 0x00
      000E75                       2561 __str_2:
      000E75 62 61 73 69 63 20 65  2562 	.ascii "basic example"
             78 61 6D 70 6C 65
      000E82 00                    2563 	.db 0x00
      000E83                       2564 __str_3:
      000E83 41 20 73 69 6D 70 6C  2565 	.ascii "A simple example"
             65 20 65 78 61 6D 70
             6C 65
      000E93 00                    2566 	.db 0x00
                                   2567 	.area _INITIALIZER
      000000                       2568 __xinit__nextVRAMsprites:
      000000 00 01                 2569 	.dw #0x0100
      000002                       2570 __xinit__maxSalto:
      000002 FF                    2571 	.db #0xff	; 255
      000003                       2572 __xinit__alex:
      000003 1E                    2573 	.db #0x1e	; 30
      000004 A0                    2574 	.db #0xa0	; 160
      000005 00                    2575 	.db #0x00	; 0
      000006 00                    2576 	.db #0x00	; 0
      000007 00                    2577 	.db #0x00	; 0
      000008 00                    2578 	.db #0x00	; 0
      000009 FF                    2579 	.db #0xff	; 255
      00000A 00                    2580 	.db #0x00	; 0
      00000B                       2581 __xinit__spriteAlex:
      00000B 02                    2582 	.db #0x02	; 2
      00000C 02                    2583 	.db #0x02	; 2
      00000D 08                    2584 	.db #0x08	; 8
      00000E 00                    2585 	.db #0x00	; 0
      00000F 00 00                 2586 	.dw #0x0000
      000011 00                    2587 	.db #0x00	; 0
      000012 00 00                 2588 	.dw #0x0000
      000014 00                    2589 	.db #0x00	; 0
      000015                       2590 __xinit__spritePajaro:
      000015 02                    2591 	.db #0x02	; 2
      000016 02                    2592 	.db #0x02	; 2
      000017 08                    2593 	.db #0x08	; 8
      000018 00                    2594 	.db #0x00	; 0
      000019 00 00                 2595 	.dw #0x0000
      00001B 00                    2596 	.db #0x00	; 0
      00001C 00 00                 2597 	.dw #0x0000
      00001E 00                    2598 	.db #0x00	; 0
      00001F                       2599 __xinit__spritePuno:
      00001F 02                    2600 	.db #0x02	; 2
      000020 02                    2601 	.db #0x02	; 2
      000021 08                    2602 	.db #0x08	; 8
      000022 00                    2603 	.db #0x00	; 0
      000023 00 00                 2604 	.dw #0x0000
      000025 00                    2605 	.db #0x00	; 0
      000026 00 00                 2606 	.dw #0x0000
      000028 00                    2607 	.db #0x00	; 0
                                   2608 	.area _CABS (ABS)
      007FF0                       2609 	.org 0x7FF0
      007FF0                       2610 ___SMS__SEGA_signature:
      007FF0 54                    2611 	.db #0x54	; 84	'T'
      007FF1 4D                    2612 	.db #0x4d	; 77	'M'
      007FF2 52                    2613 	.db #0x52	; 82	'R'
      007FF3 20                    2614 	.db #0x20	; 32
      007FF4 53                    2615 	.db #0x53	; 83	'S'
      007FF5 45                    2616 	.db #0x45	; 69	'E'
      007FF6 47                    2617 	.db #0x47	; 71	'G'
      007FF7 41                    2618 	.db #0x41	; 65	'A'
      007FF8 FF                    2619 	.db #0xff	; 255
      007FF9 FF                    2620 	.db #0xff	; 255
      007FFA FF                    2621 	.db #0xff	; 255
      007FFB FF                    2622 	.db #0xff	; 255
      007FFC 99                    2623 	.db #0x99	; 153
      007FFD 09                    2624 	.db #0x09	; 9
      007FFE 00                    2625 	.db #0x00	; 0
      007FFF 4C                    2626 	.db #0x4c	; 76	'L'
      007FDB                       2627 	.org 0x7FDB
      007FDB                       2628 ___SMS__SDSC_author:
      007FDB 53 45 47 41           2629 	.ascii "SEGA"
      007FDF 00                    2630 	.db 0x00
      007FCD                       2631 	.org 0x7FCD
      007FCD                       2632 ___SMS__SDSC_name:
      007FCD 62 61 73 69 63 20 65  2633 	.ascii "basic example"
             78 61 6D 70 6C 65
      007FDA 00                    2634 	.db 0x00
      007FBC                       2635 	.org 0x7FBC
      007FBC                       2636 ___SMS__SDSC_descr:
      007FBC 41 20 73 69 6D 70 6C  2637 	.ascii "A simple example"
             65 20 65 78 61 6D 70
             6C 65
      007FCC 00                    2638 	.db 0x00
      007FE0                       2639 	.org 0x7FE0
      007FE0                       2640 ___SMS__SDSC_signature:
      007FE0 53                    2641 	.db #0x53	; 83	'S'
      007FE1 44                    2642 	.db #0x44	; 68	'D'
      007FE2 53                    2643 	.db #0x53	; 83	'S'
      007FE3 43                    2644 	.db #0x43	; 67	'C'
      007FE4 01                    2645 	.db #0x01	; 1
      007FE5 00                    2646 	.db #0x00	; 0
      007FE6 00                    2647 	.db #0x00	; 0
      007FE7 00                    2648 	.db #0x00	; 0
      007FE8 00                    2649 	.db #0x00	; 0
      007FE9 00                    2650 	.db #0x00	; 0
      007FEA DB                    2651 	.db #0xdb	; 219
      007FEB 7F                    2652 	.db #0x7f	; 127
      007FEC CD                    2653 	.db #0xcd	; 205
      007FED 7F                    2654 	.db #0x7f	; 127
      007FEE BC                    2655 	.db #0xbc	; 188
      007FEF 7F                    2656 	.db #0x7f	; 127
