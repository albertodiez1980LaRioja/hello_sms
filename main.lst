                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14549 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___SMS__SDSC_signature
                                     12 	.globl ___SMS__SDSC_descr
                                     13 	.globl ___SMS__SDSC_name
                                     14 	.globl ___SMS__SDSC_author
                                     15 	.globl ___SMS__SEGA_signature
                                     16 	.globl _main
                                     17 	.globl _draw_main_character
                                     18 	.globl _loadGrapVRAM
                                     19 	.globl _init
                                     20 	.globl _PSGFrame
                                     21 	.globl _PSGPlay
                                     22 	.globl _SMS_VRAMmemsetW
                                     23 	.globl _SMS_VRAMmemcpy
                                     24 	.globl _SMS_resetPauseRequest
                                     25 	.globl _SMS_queryPauseRequested
                                     26 	.globl _SMS_getKeysHeld
                                     27 	.globl _SMS_loadSpritePalette
                                     28 	.globl _SMS_loadBGPalette
                                     29 	.globl _SMS_copySpritestoSAT
                                     30 	.globl _SMS_finalizeSprites
                                     31 	.globl _SMS_addSprite_f
                                     32 	.globl _SMS_initSprites
                                     33 	.globl _SMS_waitForVBlank
                                     34 	.globl _SMS_setSpriteMode
                                     35 	.globl _SMS_setBGScrollY
                                     36 	.globl _SMS_setBGScrollX
                                     37 	.globl _SMS_VDPturnOffFeature
                                     38 	.globl _SMS_VDPturnOnFeature
                                     39 	.globl _SMS_init
                                     40 	.globl _printf
                                     41 	.globl _delay_frame_player
                                     42 	.globl _frame_player
                                     43 	.globl _player_y
                                     44 	.globl _player_v_x
                                     45 	.globl _player_x
                                     46 	.globl _SMS_SRAM
                                     47 	.globl _SRAM_bank_to_be_mapped_on_slot2
                                     48 	.globl _ROM_bank_to_be_mapped_on_slot0
                                     49 	.globl _ROM_bank_to_be_mapped_on_slot1
                                     50 	.globl _ROM_bank_to_be_mapped_on_slot2
                                     51 ;--------------------------------------------------------
                                     52 ; special function registers
                                     53 ;--------------------------------------------------------
                                     54 ;--------------------------------------------------------
                                     55 ; ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area _DATA
                           00FFFF    58 _ROM_bank_to_be_mapped_on_slot2	=	0xffff
                           00FFFE    59 _ROM_bank_to_be_mapped_on_slot1	=	0xfffe
                           00FFFD    60 _ROM_bank_to_be_mapped_on_slot0	=	0xfffd
                           00FFFC    61 _SRAM_bank_to_be_mapped_on_slot2	=	0xfffc
                           008000    62 _SMS_SRAM	=	0x8000
                                     63 ;--------------------------------------------------------
                                     64 ; ram data
                                     65 ;--------------------------------------------------------
                                     66 	.area _INITIALIZED
      000000                         67 _player_x::
      000000                         68 	.ds 2
      000002                         69 _player_v_x::
      000002                         70 	.ds 2
      000004                         71 _player_y::
      000004                         72 	.ds 2
      000006                         73 _frame_player::
      000006                         74 	.ds 1
      000007                         75 _delay_frame_player::
      000007                         76 	.ds 2
                                     77 ;--------------------------------------------------------
                                     78 ; absolute external ram data
                                     79 ;--------------------------------------------------------
                                     80 	.area _DABS (ABS)
                                     81 ;--------------------------------------------------------
                                     82 ; global & static initialisations
                                     83 ;--------------------------------------------------------
                                     84 	.area _HOME
                                     85 	.area _GSINIT
                                     86 	.area _GSFINAL
                                     87 	.area _GSINIT
                                     88 ;--------------------------------------------------------
                                     89 ; Home
                                     90 ;--------------------------------------------------------
                                     91 	.area _HOME
                                     92 	.area _HOME
                                     93 ;--------------------------------------------------------
                                     94 ; code
                                     95 ;--------------------------------------------------------
                                     96 	.area _CODE
                                     97 ;main.c:10: void init(){
                                     98 ;	---------------------------------
                                     99 ; Function init
                                    100 ; ---------------------------------
      000000                        101 _init::
                                    102 ;main.c:11: SMS_init();
                                    103 ;main.c:12: }
      000000 C3r00r00         [10]  104 	jp	_SMS_init
                                    105 ;main.c:14: void loadGrapVRAM(){
                                    106 ;	---------------------------------
                                    107 ; Function loadGrapVRAM
                                    108 ; ---------------------------------
      000003                        109 _loadGrapVRAM::
                                    110 ;main.c:15: SMS_init();
      000003 CDr00r00         [17]  111 	call	_SMS_init
                                    112 ;main.c:17: SMS_setSpriteMode(SPRITEMODE_TALL);
      000006 2E 01            [ 7]  113 	ld	l, #0x01
                                    114 ;	spillPairReg hl
                                    115 ;	spillPairReg hl
      000008 CDr00r00         [17]  116 	call	_SMS_setSpriteMode
                                    117 ;main.c:18: SMS_VDPturnOnFeature(VDPFEATURE_LEFTCOLBLANK);
      00000B 21 20 00         [10]  118 	ld	hl, #0x0020
      00000E CDr00r00         [17]  119 	call	_SMS_VDPturnOnFeature
                                    120 ;main.c:19: SMS_displayOn();
      000011 21 40 01         [10]  121 	ld	hl, #0x0140
      000014 CDr00r00         [17]  122 	call	_SMS_VDPturnOnFeature
                                    123 ;main.c:20: SMS_VDPturnOnFeature(VDPFEATURE_LEFTCOLBLANK);
      000017 21 20 00         [10]  124 	ld	hl, #0x0020
      00001A CDr00r00         [17]  125 	call	_SMS_VDPturnOnFeature
                                    126 ;main.c:21: SMS_loadBGPalette(sonicpalette_inc);
      00001D 21r00r00         [10]  127 	ld	hl, #_sonicpalette_inc
      000020 CDr00r00         [17]  128 	call	_SMS_loadBGPalette
                                    129 ;main.c:23: SMS_loadSpritePalette(palleteAlex_inc);
      000023 21r00r00         [10]  130 	ld	hl, #_palleteAlex_inc
      000026 CDr00r00         [17]  131 	call	_SMS_loadSpritePalette
                                    132 ;main.c:24: SMS_loadTiles(sonictiles_inc,0,sonictiles_inc_size);
      000029 21 C0 14         [10]  133 	ld	hl, #0x14c0
      00002C E5               [11]  134 	push	hl
      00002D 11r00r00         [10]  135 	ld	de, #_sonictiles_inc
      000030 21 00 40         [10]  136 	ld	hl, #0x4000
      000033 CDr00r00         [17]  137 	call	_SMS_VRAMmemcpy
                                    138 ;main.c:26: SMS_loadTiles(spriteAlex_inc,256/*SPRITE_TILES_POSITION*/,spriteAlex_inc_size);
      000036 21 00 04         [10]  139 	ld	hl, #0x0400
      000039 E5               [11]  140 	push	hl
      00003A 11r00r00         [10]  141 	ld	de, #_spriteAlex_inc
      00003D 26 60            [ 7]  142 	ld	h, #0x60
      00003F CDr00r00         [17]  143 	call	_SMS_VRAMmemcpy
                                    144 ;main.c:27: SMS_loadTileMap(0,0,sonictilemap_inc,sonictilemap_inc_size);
      000042 21 00 06         [10]  145 	ld	hl, #0x0600
      000045 E5               [11]  146 	push	hl
      000046 11r00r00         [10]  147 	ld	de, #_sonictilemap_inc
      000049 26 78            [ 7]  148 	ld	h, #0x78
      00004B CDr00r00         [17]  149 	call	_SMS_VRAMmemcpy
                                    150 ;main.c:28: }
      00004E C9               [10]  151 	ret
                                    152 ;main.c:36: draw_main_character(){
                                    153 ;	---------------------------------
                                    154 ; Function draw_main_character
                                    155 ; ---------------------------------
      00004F                        156 _draw_main_character::
      00004F DD E5            [15]  157 	push	ix
      000051 DD 21 00 00      [14]  158 	ld	ix,#0
      000055 DD 39            [15]  159 	add	ix,sp
      000057 21 F2 FF         [10]  160 	ld	hl, #-14
      00005A 39               [11]  161 	add	hl, sp
      00005B F9               [ 6]  162 	ld	sp, hl
                                    163 ;main.c:39: unsigned char sumy=0;
      00005C DD 36 F2 00      [19]  164 	ld	-14 (ix), #0x00
                                    165 ;main.c:40: for(numSprites=0;numSprites<4;numSprites++){
      000060 DD 36 FF 00      [19]  166 	ld	-1 (ix), #0x00
                                    167 ;main.c:41: for(j=0;j<2;j++) {
      000064                        168 00114$:
      000064 0E 00            [ 7]  169 	ld	c, #0x00
                                    170 ;main.c:42: for(i=0;i<2;i++) {
      000066                        171 00112$:
      000066 06 00            [ 7]  172 	ld	b, #0x00
      000068                        173 00104$:
                                    174 ;main.c:43: SMS_addSprite(player_x+(i<<3),player_y+(j<<4)+sumy, (frame_player<<3) + (j<<2) + (i<<1) );  
      000068 50               [ 4]  175 	ld	d, b
      000069 1E 00            [ 7]  176 	ld	e, #0x00
      00006B DD 72 F3         [19]  177 	ld	-13 (ix), d
      00006E DD 73 F4         [19]  178 	ld	-12 (ix), e
      000071 3E 03            [ 7]  179 	ld	a, #0x03
      000073                        180 00150$:
      000073 DD CB F3 26      [23]  181 	sla	-13 (ix)
      000077 DD CB F4 16      [23]  182 	rl	-12 (ix)
      00007B 3D               [ 4]  183 	dec	a
      00007C 20 F5            [12]  184 	jr	NZ, 00150$
      00007E 3Ar00r00         [13]  185 	ld	a, (_player_x+0)
      000081 DD 86 F3         [19]  186 	add	a, -13 (ix)
      000084 DD 77 FD         [19]  187 	ld	-3 (ix), a
      000087 3Ar01r00         [13]  188 	ld	a, (_player_x+1)
      00008A DD 8E F4         [19]  189 	adc	a, -12 (ix)
      00008D DD 77 FE         [19]  190 	ld	-2 (ix), a
      000090 DD 6E FD         [19]  191 	ld	l, -3 (ix)
                                    192 ;	spillPairReg hl
                                    193 ;	spillPairReg hl
      000093 DD 75 FE         [19]  194 	ld	-2 (ix), l
      000096 DD 36 FD 00      [19]  195 	ld	-3 (ix), #0x00
      00009A 3Ar06r00         [13]  196 	ld	a, (_frame_player+0)
      00009D 6F               [ 4]  197 	ld	l, a
                                    198 ;	spillPairReg hl
                                    199 ;	spillPairReg hl
      00009E 26 00            [ 7]  200 	ld	h, #0x00
                                    201 ;	spillPairReg hl
                                    202 ;	spillPairReg hl
      0000A0 29               [11]  203 	add	hl, hl
      0000A1 29               [11]  204 	add	hl, hl
      0000A2 29               [11]  205 	add	hl, hl
      0000A3 E5               [11]  206 	push	hl
      0000A4 FD E1            [14]  207 	pop	iy
      0000A6 69               [ 4]  208 	ld	l, c
                                    209 ;	spillPairReg hl
                                    210 ;	spillPairReg hl
      0000A7 26 00            [ 7]  211 	ld	h, #0x00
                                    212 ;	spillPairReg hl
                                    213 ;	spillPairReg hl
      0000A9 DD 75 F5         [19]  214 	ld	-11 (ix), l
      0000AC DD 74 F6         [19]  215 	ld	-10 (ix), h
      0000AF 3E 02            [ 7]  216 	ld	a, #0x02
      0000B1                        217 00151$:
      0000B1 DD CB F5 26      [23]  218 	sla	-11 (ix)
      0000B5 DD CB F6 16      [23]  219 	rl	-10 (ix)
      0000B9 3D               [ 4]  220 	dec	a
      0000BA 20 F5            [12]  221 	jr	NZ, 00151$
      0000BC C5               [11]  222 	push	bc
      0000BD DD 4E F5         [19]  223 	ld	c, -11 (ix)
      0000C0 DD 46 F6         [19]  224 	ld	b, -10 (ix)
      0000C3 FD 09            [15]  225 	add	iy, bc
      0000C5 C1               [10]  226 	pop	bc
      0000C6 CB 22            [ 8]  227 	sla	d
      0000C8 CB 13            [ 8]  228 	rl	e
      0000CA DD 72 F7         [19]  229 	ld	-9 (ix), d
      0000CD DD 73 F8         [19]  230 	ld	-8 (ix), e
      0000D0 DD 5E F7         [19]  231 	ld	e, -9 (ix)
      0000D3 DD 56 F8         [19]  232 	ld	d, -8 (ix)
      0000D6 FD 19            [15]  233 	add	iy, de
      0000D8 1E 00            [ 7]  234 	ld	e, #0x00
      0000DA DD 7E FE         [19]  235 	ld	a, -2 (ix)
      0000DD B3               [ 4]  236 	or	a, e
      0000DE FD E5            [15]  237 	push	iy
      0000E0 DD 77 F1         [19]  238 	ld	-15 (ix), a
      0000E3 FD E1            [14]  239 	pop	iy
      0000E5 29               [11]  240 	add	hl, hl
      0000E6 29               [11]  241 	add	hl, hl
      0000E7 29               [11]  242 	add	hl, hl
      0000E8 29               [11]  243 	add	hl, hl
      0000E9 DD 75 F9         [19]  244 	ld	-7 (ix), l
      0000EC DD 74 FA         [19]  245 	ld	-6 (ix), h
      0000EF 3Ar04r00         [13]  246 	ld	a, (_player_y+0)
      0000F2 DD 86 F9         [19]  247 	add	a, -7 (ix)
      0000F5 5F               [ 4]  248 	ld	e, a
      0000F6 3Ar05r00         [13]  249 	ld	a, (_player_y+1)
      0000F9 DD 8E FA         [19]  250 	adc	a, -6 (ix)
      0000FC 57               [ 4]  251 	ld	d, a
      0000FD DD 7E F2         [19]  252 	ld	a, -14 (ix)
      000100 DD 77 FB         [19]  253 	ld	-5 (ix), a
      000103 DD 36 FC 00      [19]  254 	ld	-4 (ix), #0x00
      000107 DD 6E FB         [19]  255 	ld	l, -5 (ix)
                                    256 ;	spillPairReg hl
                                    257 ;	spillPairReg hl
      00010A 26 00            [ 7]  258 	ld	h, #0x00
                                    259 ;	spillPairReg hl
                                    260 ;	spillPairReg hl
      00010C 19               [11]  261 	add	hl, de
      00010D C5               [11]  262 	push	bc
      00010E FD E5            [15]  263 	push	iy
      000110 D1               [10]  264 	pop	de
      000111 CDr00r00         [17]  265 	call	_SMS_addSprite_f
      000114 C1               [10]  266 	pop	bc
                                    267 ;main.c:44: SMS_addSprite(player_x+(i<<3)+20,player_y+(j<<4)+sumy, (frame_player<<3) + (j<<2) + (i<<1) );  
      000115 3Ar00r00         [13]  268 	ld	a, (_player_x+0)
      000118 DD 86 F3         [19]  269 	add	a, -13 (ix)
      00011B 5F               [ 4]  270 	ld	e, a
      00011C 3Ar01r00         [13]  271 	ld	a, (_player_x+1)
      00011F DD 8E F4         [19]  272 	adc	a, -12 (ix)
      000122 57               [ 4]  273 	ld	d, a
      000123 21 14 00         [10]  274 	ld	hl, #0x0014
      000126 19               [11]  275 	add	hl, de
      000127 55               [ 4]  276 	ld	d, l
      000128 3Ar06r00         [13]  277 	ld	a, (_frame_player+0)
      00012B 26 00            [ 7]  278 	ld	h, #0x00
                                    279 ;	spillPairReg hl
                                    280 ;	spillPairReg hl
      00012D 6F               [ 4]  281 	ld	l, a
      00012E 29               [11]  282 	add	hl, hl
      00012F 29               [11]  283 	add	hl, hl
      000130 29               [11]  284 	add	hl, hl
      000131 7D               [ 4]  285 	ld	a, l
      000132 DD 86 F5         [19]  286 	add	a, -11 (ix)
      000135 6F               [ 4]  287 	ld	l, a
                                    288 ;	spillPairReg hl
                                    289 ;	spillPairReg hl
      000136 7C               [ 4]  290 	ld	a, h
      000137 DD 8E F6         [19]  291 	adc	a, -10 (ix)
      00013A 67               [ 4]  292 	ld	h, a
                                    293 ;	spillPairReg hl
                                    294 ;	spillPairReg hl
      00013B 7D               [ 4]  295 	ld	a, l
      00013C DD 86 F7         [19]  296 	add	a, -9 (ix)
      00013F 6F               [ 4]  297 	ld	l, a
                                    298 ;	spillPairReg hl
                                    299 ;	spillPairReg hl
      000140 7C               [ 4]  300 	ld	a, h
      000141 DD 8E F8         [19]  301 	adc	a, -8 (ix)
      000144 26 00            [ 7]  302 	ld	h, #0x00
                                    303 ;	spillPairReg hl
                                    304 ;	spillPairReg hl
      000146 DD 75 FD         [19]  305 	ld	-3 (ix), l
      000149 7A               [ 4]  306 	ld	a, d
      00014A B4               [ 4]  307 	or	a, h
      00014B DD 77 FE         [19]  308 	ld	-2 (ix), a
      00014E 3Ar04r00         [13]  309 	ld	a, (_player_y+0)
      000151 DD 86 F9         [19]  310 	add	a, -7 (ix)
      000154 5F               [ 4]  311 	ld	e, a
      000155 3Ar05r00         [13]  312 	ld	a, (_player_y+1)
      000158 DD 8E FA         [19]  313 	adc	a, -6 (ix)
      00015B 57               [ 4]  314 	ld	d, a
      00015C DD 6E FB         [19]  315 	ld	l, -5 (ix)
                                    316 ;	spillPairReg hl
                                    317 ;	spillPairReg hl
      00015F 26 00            [ 7]  318 	ld	h, #0x00
                                    319 ;	spillPairReg hl
                                    320 ;	spillPairReg hl
      000161 19               [11]  321 	add	hl, de
      000162 C5               [11]  322 	push	bc
      000163 DD 5E FD         [19]  323 	ld	e, -3 (ix)
      000166 DD 56 FE         [19]  324 	ld	d, -2 (ix)
      000169 CDr00r00         [17]  325 	call	_SMS_addSprite_f
      00016C C1               [10]  326 	pop	bc
                                    327 ;main.c:45: SMS_addSprite(player_x+(i<<3)+40,player_y+(j<<4)+sumy, (frame_player<<3) + (j<<2) + (i<<1) );  
      00016D 3Ar00r00         [13]  328 	ld	a, (_player_x+0)
      000170 DD 86 F3         [19]  329 	add	a, -13 (ix)
      000173 5F               [ 4]  330 	ld	e, a
      000174 3Ar01r00         [13]  331 	ld	a, (_player_x+1)
      000177 DD 8E F4         [19]  332 	adc	a, -12 (ix)
      00017A 57               [ 4]  333 	ld	d, a
      00017B 21 28 00         [10]  334 	ld	hl, #0x0028
      00017E 19               [11]  335 	add	hl, de
      00017F 55               [ 4]  336 	ld	d, l
      000180 3Ar06r00         [13]  337 	ld	a, (_frame_player+0)
      000183 6F               [ 4]  338 	ld	l, a
                                    339 ;	spillPairReg hl
                                    340 ;	spillPairReg hl
      000184 26 00            [ 7]  341 	ld	h, #0x00
                                    342 ;	spillPairReg hl
                                    343 ;	spillPairReg hl
      000186 29               [11]  344 	add	hl, hl
      000187 29               [11]  345 	add	hl, hl
      000188 29               [11]  346 	add	hl, hl
      000189 7D               [ 4]  347 	ld	a, l
      00018A DD 86 F5         [19]  348 	add	a, -11 (ix)
      00018D 6F               [ 4]  349 	ld	l, a
                                    350 ;	spillPairReg hl
                                    351 ;	spillPairReg hl
      00018E 7C               [ 4]  352 	ld	a, h
      00018F DD 8E F6         [19]  353 	adc	a, -10 (ix)
      000192 67               [ 4]  354 	ld	h, a
                                    355 ;	spillPairReg hl
                                    356 ;	spillPairReg hl
      000193 7D               [ 4]  357 	ld	a, l
      000194 DD 86 F7         [19]  358 	add	a, -9 (ix)
      000197 6F               [ 4]  359 	ld	l, a
                                    360 ;	spillPairReg hl
                                    361 ;	spillPairReg hl
      000198 7C               [ 4]  362 	ld	a, h
      000199 DD 8E F8         [19]  363 	adc	a, -8 (ix)
      00019C 26 00            [ 7]  364 	ld	h, #0x00
                                    365 ;	spillPairReg hl
                                    366 ;	spillPairReg hl
      00019E DD 75 FD         [19]  367 	ld	-3 (ix), l
      0001A1 7A               [ 4]  368 	ld	a, d
      0001A2 B4               [ 4]  369 	or	a, h
      0001A3 DD 77 FE         [19]  370 	ld	-2 (ix), a
      0001A6 3Ar04r00         [13]  371 	ld	a, (_player_y+0)
      0001A9 DD 86 F9         [19]  372 	add	a, -7 (ix)
      0001AC 5F               [ 4]  373 	ld	e, a
      0001AD 3Ar05r00         [13]  374 	ld	a, (_player_y+1)
      0001B0 DD 8E FA         [19]  375 	adc	a, -6 (ix)
      0001B3 57               [ 4]  376 	ld	d, a
      0001B4 DD 6E FB         [19]  377 	ld	l, -5 (ix)
                                    378 ;	spillPairReg hl
                                    379 ;	spillPairReg hl
      0001B7 26 00            [ 7]  380 	ld	h, #0x00
                                    381 ;	spillPairReg hl
                                    382 ;	spillPairReg hl
      0001B9 19               [11]  383 	add	hl, de
      0001BA C5               [11]  384 	push	bc
      0001BB DD 5E FD         [19]  385 	ld	e, -3 (ix)
      0001BE DD 56 FE         [19]  386 	ld	d, -2 (ix)
      0001C1 CDr00r00         [17]  387 	call	_SMS_addSprite_f
      0001C4 C1               [10]  388 	pop	bc
                                    389 ;main.c:46: SMS_addSprite(player_x+(i<<3)+60,player_y+(j<<4)+sumy, (frame_player<<3) + (j<<2) + (i<<1) );  
      0001C5 DD 7E F3         [19]  390 	ld	a, -13 (ix)
      0001C8 21r00r00         [10]  391 	ld	hl, #_player_x
      0001CB 86               [ 7]  392 	add	a, (hl)
      0001CC 5F               [ 4]  393 	ld	e, a
      0001CD DD 7E F4         [19]  394 	ld	a, -12 (ix)
      0001D0 23               [ 6]  395 	inc	hl
      0001D1 8E               [ 7]  396 	adc	a, (hl)
      0001D2 57               [ 4]  397 	ld	d, a
      0001D3 21 3C 00         [10]  398 	ld	hl, #0x003c
      0001D6 19               [11]  399 	add	hl, de
                                    400 ;	spillPairReg hl
                                    401 ;	spillPairReg hl
      0001D7 65               [ 4]  402 	ld	h, l
                                    403 ;	spillPairReg hl
                                    404 ;	spillPairReg hl
                                    405 ;	spillPairReg hl
                                    406 ;	spillPairReg hl
      0001D8 3Ar06r00         [13]  407 	ld	a, (_frame_player+0)
      0001DB 16 00            [ 7]  408 	ld	d, #0x00
      0001DD 87               [ 4]  409 	add	a, a
      0001DE CB 12            [ 8]  410 	rl	d
      0001E0 87               [ 4]  411 	add	a, a
      0001E1 CB 12            [ 8]  412 	rl	d
      0001E3 87               [ 4]  413 	add	a, a
      0001E4 CB 12            [ 8]  414 	rl	d
      0001E6 DD 86 F5         [19]  415 	add	a, -11 (ix)
      0001E9 5F               [ 4]  416 	ld	e, a
      0001EA 7A               [ 4]  417 	ld	a, d
      0001EB DD 8E F6         [19]  418 	adc	a, -10 (ix)
      0001EE DD 7E F7         [19]  419 	ld	a, -9 (ix)
      0001F1 83               [ 4]  420 	add	a, e
      0001F2 5F               [ 4]  421 	ld	e, a
      0001F3 AF               [ 4]  422 	xor	a, a
      0001F4 B4               [ 4]  423 	or	a, h
      0001F5 57               [ 4]  424 	ld	d, a
      0001F6 DD 7E F9         [19]  425 	ld	a, -7 (ix)
      0001F9 21r04r00         [10]  426 	ld	hl, #_player_y
      0001FC 86               [ 7]  427 	add	a, (hl)
      0001FD DD 77 FD         [19]  428 	ld	-3 (ix), a
      000200 DD 7E FA         [19]  429 	ld	a, -6 (ix)
      000203 23               [ 6]  430 	inc	hl
      000204 8E               [ 7]  431 	adc	a, (hl)
      000205 DD 77 FE         [19]  432 	ld	-2 (ix), a
      000208 DD 7E FB         [19]  433 	ld	a, -5 (ix)
      00020B DD 86 FD         [19]  434 	add	a, -3 (ix)
      00020E 6F               [ 4]  435 	ld	l, a
                                    436 ;	spillPairReg hl
                                    437 ;	spillPairReg hl
      00020F 3E 00            [ 7]  438 	ld	a, #0x00
      000211 DD 8E FE         [19]  439 	adc	a, -2 (ix)
      000214 67               [ 4]  440 	ld	h, a
                                    441 ;	spillPairReg hl
                                    442 ;	spillPairReg hl
      000215 C5               [11]  443 	push	bc
      000216 CDr00r00         [17]  444 	call	_SMS_addSprite_f
      000219 C1               [10]  445 	pop	bc
                                    446 ;main.c:42: for(i=0;i<2;i++) {
      00021A 04               [ 4]  447 	inc	b
      00021B 78               [ 4]  448 	ld	a, b
      00021C D6 02            [ 7]  449 	sub	a, #0x02
      00021E DAr68r00         [10]  450 	jp	C, 00104$
                                    451 ;main.c:41: for(j=0;j<2;j++) {
      000221 0C               [ 4]  452 	inc	c
      000222 79               [ 4]  453 	ld	a, c
      000223 D6 02            [ 7]  454 	sub	a, #0x02
      000225 DAr66r00         [10]  455 	jp	C, 00112$
                                    456 ;main.c:49: sumy = numSprites*30;
      000228 DD 7E FF         [19]  457 	ld	a, -1 (ix)
      00022B 4F               [ 4]  458 	ld	c, a
      00022C 87               [ 4]  459 	add	a, a
      00022D 87               [ 4]  460 	add	a, a
      00022E 87               [ 4]  461 	add	a, a
      00022F 87               [ 4]  462 	add	a, a
      000230 91               [ 4]  463 	sub	a, c
      000231 87               [ 4]  464 	add	a, a
      000232 DD 77 F2         [19]  465 	ld	-14 (ix), a
                                    466 ;main.c:40: for(numSprites=0;numSprites<4;numSprites++){
      000235 DD 34 FF         [23]  467 	inc	-1 (ix)
      000238 DD 7E FF         [19]  468 	ld	a, -1 (ix)
      00023B D6 04            [ 7]  469 	sub	a, #0x04
      00023D DAr64r00         [10]  470 	jp	C, 00114$
                                    471 ;main.c:51: }
      000240 DD F9            [10]  472 	ld	sp, ix
      000242 DD E1            [14]  473 	pop	ix
      000244 C9               [10]  474 	ret
                                    475 ;main.c:53: void main(void)
                                    476 ;	---------------------------------
                                    477 ; Function main
                                    478 ; ---------------------------------
      000245                        479 _main::
      000245 DD E5            [15]  480 	push	ix
      000247 DD 21 00 00      [14]  481 	ld	ix,#0
      00024B DD 39            [15]  482 	add	ix,sp
      00024D F5               [11]  483 	push	af
                                    484 ;main.c:58: SMS_VRAMmemsetW(0, 0x0000, 16384);
      00024E DD 36 FF 00      [19]  485 	ld	-1 (ix), #0x00
      000252 DD 36 FE 00      [19]  486 	ld	-2 (ix), #0x00
      000256 21 00 40         [10]  487 	ld	hl, #0x4000
      000259 E5               [11]  488 	push	hl
      00025A 11 00 00         [10]  489 	ld	de, #0x0000
      00025D 65               [ 4]  490 	ld	h, l
      00025E CDr00r00         [17]  491 	call	_SMS_VRAMmemsetW
                                    492 ;main.c:68: printf("Hello, World! [1/3]");
      000261 21r52r03         [10]  493 	ld	hl, #___str_0
      000264 E5               [11]  494 	push	hl
      000265 CDr00r00         [17]  495 	call	_printf
      000268 F1               [10]  496 	pop	af
                                    497 ;main.c:79: loadGrapVRAM();
      000269 CDr03r00         [17]  498 	call	_loadGrapVRAM
                                    499 ;main.c:81: SMS_displayOn();
      00026C 21 40 01         [10]  500 	ld	hl, #0x0140
      00026F CDr00r00         [17]  501 	call	_SMS_VDPturnOnFeature
                                    502 ;main.c:82: SMS_setBGScrollX(scroll_x);
      000272 2E 00            [ 7]  503 	ld	l, #0x00
                                    504 ;	spillPairReg hl
                                    505 ;	spillPairReg hl
      000274 CDr00r00         [17]  506 	call	_SMS_setBGScrollX
                                    507 ;main.c:83: SMS_setBGScrollY(scroll_y);
      000277 2E 00            [ 7]  508 	ld	l, #0x00
                                    509 ;	spillPairReg hl
                                    510 ;	spillPairReg hl
      000279 CDr00r00         [17]  511 	call	_SMS_setBGScrollY
                                    512 ;main.c:84: SMS_init();
      00027C CDr00r00         [17]  513 	call	_SMS_init
                                    514 ;main.c:90: PSGPlay(titulo_psg);
      00027F 21r00r00         [10]  515 	ld	hl, #_titulo_psg
      000282 CDr00r00         [17]  516 	call	_PSGPlay
                                    517 ;main.c:91: SMS_VDPturnOnFeature(VDPFEATURE_LEFTCOLBLANK);
      000285 21 20 00         [10]  518 	ld	hl, #0x0020
      000288 CDr00r00         [17]  519 	call	_SMS_VDPturnOnFeature
      00028B                        520 00124$:
                                    521 ;main.c:93: if(SMS_queryPauseRequested ()){
      00028B CDr00r00         [17]  522 	call	_SMS_queryPauseRequested
      00028E CB 47            [ 8]  523 	bit	0,a
      000290 28 15            [12]  524 	jr	Z, 00105$
                                    525 ;main.c:94: SMS_resetPauseRequest ();
      000292 CDr00r00         [17]  526 	call	_SMS_resetPauseRequest
                                    527 ;main.c:95: while(!SMS_queryPauseRequested ()){
      000295                        528 00101$:
      000295 CDr00r00         [17]  529 	call	_SMS_queryPauseRequested
      000298 CB 47            [ 8]  530 	bit	0,a
      00029A 20 08            [12]  531 	jr	NZ, 00103$
                                    532 ;main.c:96: SMS_waitForVBlank();
      00029C CDr00r00         [17]  533 	call	_SMS_waitForVBlank
                                    534 ;main.c:97: PSGFrame();
      00029F CDr00r00         [17]  535 	call	_PSGFrame
      0002A2 18 F1            [12]  536 	jr	00101$
      0002A4                        537 00103$:
                                    538 ;main.c:99: SMS_resetPauseRequest();
      0002A4 CDr00r00         [17]  539 	call	_SMS_resetPauseRequest
      0002A7                        540 00105$:
                                    541 ;main.c:103: int keys = SMS_getKeysHeld();
      0002A7 CDr00r00         [17]  542 	call	_SMS_getKeysHeld
                                    543 ;main.c:104: if(keys & PORT_A_KEY_LEFT){
      0002AA CB 53            [ 8]  544 	bit	2, e
      0002AC 28 08            [12]  545 	jr	Z, 00110$
                                    546 ;main.c:105: player_v_x=-1; 
      0002AE 21 FF FF         [10]  547 	ld	hl, #0xffff
      0002B1 22r02r00         [16]  548 	ld	(_player_v_x), hl
      0002B4 18 12            [12]  549 	jr	00111$
      0002B6                        550 00110$:
                                    551 ;main.c:107: else if(keys & PORT_A_KEY_RIGHT){
      0002B6 CB 5B            [ 8]  552 	bit	3, e
      0002B8 28 08            [12]  553 	jr	Z, 00107$
                                    554 ;main.c:108: player_v_x=1; 
      0002BA 21 01 00         [10]  555 	ld	hl, #0x0001
      0002BD 22r02r00         [16]  556 	ld	(_player_v_x), hl
      0002C0 18 06            [12]  557 	jr	00111$
      0002C2                        558 00107$:
                                    559 ;main.c:111: player_v_x=0; 
      0002C2 21 00 00         [10]  560 	ld	hl, #0x0000
      0002C5 22r02r00         [16]  561 	ld	(_player_v_x), hl
      0002C8                        562 00111$:
                                    563 ;main.c:113: player_x = player_x + player_v_x;
      0002C8 21r02r00         [10]  564 	ld	hl, #_player_v_x
      0002CB D5               [11]  565 	push	de
      0002CC 11r00r00         [10]  566 	ld	de, #_player_x
      0002CF 1A               [ 7]  567 	ld	a, (de)
      0002D0 86               [ 7]  568 	add	a, (hl)
      0002D1 23               [ 6]  569 	inc	hl
      0002D2 12               [ 7]  570 	ld	(de), a
      0002D3 13               [ 6]  571 	inc	de
      0002D4 1A               [ 7]  572 	ld	a, (de)
      0002D5 8E               [ 7]  573 	adc	a, (hl)
      0002D6 12               [ 7]  574 	ld	(de), a
      0002D7 D1               [10]  575 	pop	de
                                    576 ;main.c:114: if(player_v_x != 0)
      0002D8 3Ar03r00         [13]  577 	ld	a, (_player_v_x+1)
      0002DB 21r02r00         [10]  578 	ld	hl, #_player_v_x
      0002DE B6               [ 7]  579 	or	a, (hl)
      0002DF 28 09            [12]  580 	jr	Z, 00113$
                                    581 ;main.c:115: delay_frame_player++;
      0002E1 2Ar07r00         [16]  582 	ld	hl, (_delay_frame_player)
      0002E4 23               [ 6]  583 	inc	hl
      0002E5 22r07r00         [16]  584 	ld	(_delay_frame_player), hl
      0002E8 18 0B            [12]  585 	jr	00114$
      0002EA                        586 00113$:
                                    587 ;main.c:117: delay_frame_player=15;
      0002EA 21 0F 00         [10]  588 	ld	hl, #0x000f
      0002ED 22r07r00         [16]  589 	ld	(_delay_frame_player), hl
                                    590 ;main.c:118: frame_player=1;
      0002F0 21r06r00         [10]  591 	ld	hl, #_frame_player
      0002F3 36 01            [10]  592 	ld	(hl), #0x01
      0002F5                        593 00114$:
                                    594 ;main.c:120: if(delay_frame_player%16==0){
      0002F5 11 10 00         [10]  595 	ld	de, #0x0010
      0002F8 2Ar07r00         [16]  596 	ld	hl, (_delay_frame_player)
      0002FB CDr00r00         [17]  597 	call	__modsint
      0002FE 7A               [ 4]  598 	ld	a, d
      0002FF B3               [ 4]  599 	or	a, e
      000300 20 12            [12]  600 	jr	NZ, 00118$
                                    601 ;main.c:121: frame_player++;
      000302 FD 21r06r00      [14]  602 	ld	iy, #_frame_player
      000306 FD 34 00         [23]  603 	inc	0 (iy)
                                    604 ;main.c:122: if(frame_player>3){
      000309 3E 03            [ 7]  605 	ld	a, #0x03
      00030B FD 96 00         [19]  606 	sub	a, 0 (iy)
      00030E 30 04            [12]  607 	jr	NC, 00118$
                                    608 ;main.c:123: frame_player=0;
      000310 FD 36 00 00      [19]  609 	ld	0 (iy), #0x00
      000314                        610 00118$:
                                    611 ;main.c:127: SMS_initSprites();
      000314 CDr00r00         [17]  612 	call	_SMS_initSprites
                                    613 ;main.c:128: draw_main_character();
      000317 CDr4Fr00         [17]  614 	call	_draw_main_character
                                    615 ;main.c:129: SMS_finalizeSprites();
      00031A CDr00r00         [17]  616 	call	_SMS_finalizeSprites
                                    617 ;main.c:130: SMS_waitForVBlank();
      00031D CDr00r00         [17]  618 	call	_SMS_waitForVBlank
                                    619 ;main.c:131: SMS_copySpritestoSAT();
      000320 CDr00r00         [17]  620 	call	_SMS_copySpritestoSAT
                                    621 ;main.c:132: PSGFrame();
      000323 CDr00r00         [17]  622 	call	_PSGFrame
                                    623 ;main.c:133: SMS_displayOff();
      000326 21 40 01         [10]  624 	ld	hl, #0x0140
      000329 CDr00r00         [17]  625 	call	_SMS_VDPturnOffFeature
                                    626 ;main.c:134: if(scroll_y%2==0)
      00032C DD CB FF 46      [20]  627 	bit	0, -1 (ix)
      000330 20 03            [12]  628 	jr	NZ, 00120$
                                    629 ;main.c:135: scroll_x += 1;
      000332 DD 34 FE         [23]  630 	inc	-2 (ix)
      000335                        631 00120$:
                                    632 ;main.c:136: scroll_y++;
      000335 DD 34 FF         [23]  633 	inc	-1 (ix)
                                    634 ;main.c:137: if(scroll_y==224)
      000338 DD 7E FF         [19]  635 	ld	a, -1 (ix)
      00033B D6 E0            [ 7]  636 	sub	a, #0xe0
      00033D 20 04            [12]  637 	jr	NZ, 00122$
                                    638 ;main.c:138: scroll_y=0;
      00033F DD 36 FF 00      [19]  639 	ld	-1 (ix), #0x00
      000343                        640 00122$:
                                    641 ;main.c:140: SMS_setBGScrollX(scroll_x);
      000343 DD 6E FE         [19]  642 	ld	l, -2 (ix)
                                    643 ;	spillPairReg hl
                                    644 ;	spillPairReg hl
      000346 CDr00r00         [17]  645 	call	_SMS_setBGScrollX
                                    646 ;main.c:142: SMS_displayOn();
      000349 21 40 01         [10]  647 	ld	hl, #0x0140
      00034C CDr00r00         [17]  648 	call	_SMS_VDPturnOnFeature
                                    649 ;main.c:144: }
      00034F C3r8Br02         [10]  650 	jp	00124$
      000352                        651 ___str_0:
      000352 48 65 6C 6C 6F 2C 20   652 	.ascii "Hello, World! [1/3]"
             57 6F 72 6C 64 21 20
             5B 31 2F 33 5D
      000365 00                     653 	.db 0x00
                                    654 	.area _CODE
      000366                        655 __str_1:
      000366 72 61 70 68 6E 65 74   656 	.ascii "raphnet"
      00036D 00                     657 	.db 0x00
      00036E                        658 __str_2:
      00036E 62 61 73 69 63 20 65   659 	.ascii "basic example"
             78 61 6D 70 6C 65
      00037B 00                     660 	.db 0x00
      00037C                        661 __str_3:
      00037C 41 20 73 69 6D 70 6C   662 	.ascii "A simple example"
             65 20 65 78 61 6D 70
             6C 65
      00038C 00                     663 	.db 0x00
                                    664 	.area _INITIALIZER
      000000                        665 __xinit__player_x:
      000000 32 00                  666 	.dw #0x0032
      000002                        667 __xinit__player_v_x:
      000002 00 00                  668 	.dw #0x0000
      000004                        669 __xinit__player_y:
      000004 14 00                  670 	.dw #0x0014
      000006                        671 __xinit__frame_player:
      000006 00                     672 	.db #0x00	; 0
      000007                        673 __xinit__delay_frame_player:
      000007 0F 00                  674 	.dw #0x000f
                                    675 	.area _CABS (ABS)
      007FF0                        676 	.org 0x7FF0
      007FF0                        677 ___SMS__SEGA_signature:
      007FF0 54                     678 	.db #0x54	; 84	'T'
      007FF1 4D                     679 	.db #0x4d	; 77	'M'
      007FF2 52                     680 	.db #0x52	; 82	'R'
      007FF3 20                     681 	.db #0x20	; 32
      007FF4 53                     682 	.db #0x53	; 83	'S'
      007FF5 45                     683 	.db #0x45	; 69	'E'
      007FF6 47                     684 	.db #0x47	; 71	'G'
      007FF7 41                     685 	.db #0x41	; 65	'A'
      007FF8 FF                     686 	.db #0xff	; 255
      007FF9 FF                     687 	.db #0xff	; 255
      007FFA FF                     688 	.db #0xff	; 255
      007FFB FF                     689 	.db #0xff	; 255
      007FFC 99                     690 	.db #0x99	; 153
      007FFD 99                     691 	.db #0x99	; 153
      007FFE 00                     692 	.db #0x00	; 0
      007FFF 4C                     693 	.db #0x4c	; 76	'L'
      007FD8                        694 	.org 0x7FD8
      007FD8                        695 ___SMS__SDSC_author:
      007FD8 72 61 70 68 6E 65 74   696 	.ascii "raphnet"
      007FDF 00                     697 	.db 0x00
      007FCA                        698 	.org 0x7FCA
      007FCA                        699 ___SMS__SDSC_name:
      007FCA 62 61 73 69 63 20 65   700 	.ascii "basic example"
             78 61 6D 70 6C 65
      007FD7 00                     701 	.db 0x00
      007FB9                        702 	.org 0x7FB9
      007FB9                        703 ___SMS__SDSC_descr:
      007FB9 41 20 73 69 6D 70 6C   704 	.ascii "A simple example"
             65 20 65 78 61 6D 70
             6C 65
      007FC9 00                     705 	.db 0x00
      007FE0                        706 	.org 0x7FE0
      007FE0                        707 ___SMS__SDSC_signature:
      007FE0 53                     708 	.db #0x53	; 83	'S'
      007FE1 44                     709 	.db #0x44	; 68	'D'
      007FE2 53                     710 	.db #0x53	; 83	'S'
      007FE3 43                     711 	.db #0x43	; 67	'C'
      007FE4 01                     712 	.db #0x01	; 1
      007FE5 00                     713 	.db #0x00	; 0
      007FE6 00                     714 	.db #0x00	; 0
      007FE7 00                     715 	.db #0x00	; 0
      007FE8 00                     716 	.db #0x00	; 0
      007FE9 00                     717 	.db #0x00	; 0
      007FEA D8                     718 	.db #0xd8	; 216
      007FEB 7F                     719 	.db #0x7f	; 127
      007FEC CA                     720 	.db #0xca	; 202
      007FED 7F                     721 	.db #0x7f	; 127
      007FEE B9                     722 	.db #0xb9	; 185
      007FEF 7F                     723 	.db #0x7f	; 127
