                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14549 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___SMS__SDSC_signature
                                     12 	.globl ___SMS__SDSC_descr
                                     13 	.globl ___SMS__SDSC_name
                                     14 	.globl ___SMS__SDSC_author
                                     15 	.globl ___SMS__SEGA_signature
                                     16 	.globl _main
                                     17 	.globl _disableSprites
                                     18 	.globl _playMusic
                                     19 	.globl _dibujaPajaros
                                     20 	.globl _loadGrapVRAM
                                     21 	.globl _inicializaPajaros
                                     22 	.globl _moveAlex
                                     23 	.globl _drawAlex
                                     24 	.globl _moveAlexAire
                                     25 	.globl _moveAlexSuelo
                                     26 	.globl _canRight
                                     27 	.globl _canLeft
                                     28 	.globl _canDown
                                     29 	.globl _canUp
                                     30 	.globl _PSGSFXFrame
                                     31 	.globl _PSGFrame
                                     32 	.globl _PSGSFXPlay
                                     33 	.globl _PSGPlay
                                     34 	.globl _SMS_VRAMmemsetW
                                     35 	.globl _SMS_VRAMmemcpy
                                     36 	.globl _SMS_setFrameInterruptHandler
                                     37 	.globl _SMS_resetPauseRequest
                                     38 	.globl _SMS_queryPauseRequested
                                     39 	.globl _SMS_getKeysHeld
                                     40 	.globl _SMS_getKeysPressed
                                     41 	.globl _SMS_loadSpritePalette
                                     42 	.globl _SMS_loadBGPalette
                                     43 	.globl _SMS_setSpritePaletteColor
                                     44 	.globl _SMS_updateSpritePosition
                                     45 	.globl _SMS_addSprite_f
                                     46 	.globl _SMS_initSprites
                                     47 	.globl _SMS_waitForVBlank
                                     48 	.globl _SMS_setSpriteMode
                                     49 	.globl _SMS_setBGScrollY
                                     50 	.globl _SMS_setBGScrollX
                                     51 	.globl _SMS_VDPturnOnFeature
                                     52 	.globl _SMS_init
                                     53 	.globl _copySpritestoSAT
                                     54 	.globl _addHardwareSprite
                                     55 	.globl _generateSpriteNoRAM
                                     56 	.globl _generateSpriteFlip
                                     57 	.globl _printf
                                     58 	.globl _spritePuno
                                     59 	.globl _spritePajaro
                                     60 	.globl _spriteAlex
                                     61 	.globl _lastFrame
                                     62 	.globl _alex
                                     63 	.globl _maxSalto
                                     64 	.globl _flipArray
                                     65 	.globl _nextVRAMsprites
                                     66 	.globl _numSprites
                                     67 	.globl _pajaros
                                     68 	.globl _SMS_SRAM
                                     69 	.globl _SRAM_bank_to_be_mapped_on_slot2
                                     70 	.globl _ROM_bank_to_be_mapped_on_slot0
                                     71 	.globl _ROM_bank_to_be_mapped_on_slot1
                                     72 	.globl _ROM_bank_to_be_mapped_on_slot2
                                     73 	.globl _SpriteNextFree2
                                     74 	.globl _SpriteTableXN2
                                     75 	.globl _SpriteTableY2
                                     76 	.globl _hardwareSprites
                                     77 	.globl _buffer64
                                     78 	.globl _generateSprite
                                     79 	.globl _initSpritesVariables
                                     80 	.globl _draw_entidad
                                     81 ;--------------------------------------------------------
                                     82 ; special function registers
                                     83 ;--------------------------------------------------------
                           0000BF    84 _VDPControlPort	=	0x00bf
                           0000BF    85 _VDPStatusPort	=	0x00bf
                           0000BE    86 _VDPDataPort	=	0x00be
                           00007E    87 _VDPVCounterPort	=	0x007e
                           00007F    88 _VDPHCounterPort	=	0x007f
                                     89 ;--------------------------------------------------------
                                     90 ; ram data
                                     91 ;--------------------------------------------------------
                                     92 	.area _DATA
      000000                         93 _buffer64::
      000000                         94 	.ds 64
      000040                         95 _hardwareSprites::
      000040                         96 	.ds 768
      000340                         97 _SpriteTableY2::
      000340                         98 	.ds 2
      000342                         99 _SpriteTableXN2::
      000342                        100 	.ds 2
      000344                        101 _SpriteNextFree2::
      000344                        102 	.ds 2
                           00FFFF   103 _ROM_bank_to_be_mapped_on_slot2	=	0xffff
                           00FFFE   104 _ROM_bank_to_be_mapped_on_slot1	=	0xfffe
                           00FFFD   105 _ROM_bank_to_be_mapped_on_slot0	=	0xfffd
                           00FFFC   106 _SRAM_bank_to_be_mapped_on_slot2	=	0xfffc
                           008000   107 _SMS_SRAM	=	0x8000
      000346                        108 _pajaros::
      000346                        109 	.ds 190
      000404                        110 _numSprites::
      000404                        111 	.ds 2
                                    112 ;--------------------------------------------------------
                                    113 ; ram data
                                    114 ;--------------------------------------------------------
                                    115 	.area _INITIALIZED
      000000                        116 _nextVRAMsprites::
      000000                        117 	.ds 2
      000002                        118 _flipArray::
      000002                        119 	.ds 256
      000102                        120 _maxSalto::
      000102                        121 	.ds 1
      000103                        122 _alex::
      000103                        123 	.ds 10
      00010D                        124 _lastFrame::
      00010D                        125 	.ds 1
      00010E                        126 _spriteAlex::
      00010E                        127 	.ds 10
      000118                        128 _spritePajaro::
      000118                        129 	.ds 10
      000122                        130 _spritePuno::
      000122                        131 	.ds 10
                                    132 ;--------------------------------------------------------
                                    133 ; absolute external ram data
                                    134 ;--------------------------------------------------------
                                    135 	.area _DABS (ABS)
                                    136 ;--------------------------------------------------------
                                    137 ; global & static initialisations
                                    138 ;--------------------------------------------------------
                                    139 	.area _HOME
                                    140 	.area _GSINIT
                                    141 	.area _GSFINAL
                                    142 	.area _GSINIT
                                    143 ;--------------------------------------------------------
                                    144 ; Home
                                    145 ;--------------------------------------------------------
                                    146 	.area _HOME
                                    147 	.area _HOME
                                    148 ;--------------------------------------------------------
                                    149 ; code
                                    150 ;--------------------------------------------------------
                                    151 	.area _CODE
                                    152 ;./lib/./sprite.c:24: T_sprite generateSpriteFlip(unsigned char ancho, unsigned char alto, int tam,const unsigned char data[]) {
                                    153 ;	---------------------------------
                                    154 ; Function generateSpriteFlip
                                    155 ; ---------------------------------
      000000                        156 _generateSpriteFlip::
      000000 DD E5            [15]  157 	push	ix
      000002 DD 21 00 00      [14]  158 	ld	ix,#0
      000006 DD 39            [15]  159 	add	ix,sp
      000008 FD 21 EB FF      [14]  160 	ld	iy, #-21
      00000C FD 39            [15]  161 	add	iy, sp
      00000E FD F9            [10]  162 	ld	sp, iy
                                    163 ;./lib/./sprite.c:25: unsigned char tamano = alto*ancho*2;
      000010 DD 77 F8         [19]  164 	ld	-8 (ix), a
      000013 DD 75 F7         [19]  165 	ld	-9 (ix), l
      000016 5F               [ 4]  166 	ld	e, a
      000017 65               [ 4]  167 	ld	h, l
                                    168 ;	spillPairReg hl
                                    169 ;	spillPairReg hl
      000018 2E 00            [ 7]  170 	ld	l, #0x00
      00001A 55               [ 4]  171 	ld	d, l
      00001B 06 08            [ 7]  172 	ld	b, #0x08
      00001D                        173 00175$:
      00001D 29               [11]  174 	add	hl, hl
      00001E 30 01            [12]  175 	jr	NC, 00176$
      000020 19               [11]  176 	add	hl, de
      000021                        177 00176$:
      000021 10 FA            [13]  178 	djnz	00175$
      000023 4D               [ 4]  179 	ld	c, l
      000024 CB 21            [ 8]  180 	sla	c
                                    181 ;./lib/./sprite.c:26: T_sprite sprite = {alto,ancho,tamano,tam/(tamano*32),nextVRAMsprites, 1,0};
      000026 DD 7E F7         [19]  182 	ld	a, -9 (ix)
      000029 DD 77 ED         [19]  183 	ld	-19 (ix), a
      00002C DD 7E F8         [19]  184 	ld	a, -8 (ix)
      00002F DD 77 EE         [19]  185 	ld	-18 (ix), a
      000032 DD 71 EF         [19]  186 	ld	-17 (ix), c
      000035 DD 71 FE         [19]  187 	ld	-2 (ix), c
      000038 DD 36 FF 00      [19]  188 	ld	-1 (ix), #0x00
      00003C 69               [ 4]  189 	ld	l, c
      00003D 26 00            [ 7]  190 	ld	h, #0x00
      00003F 29               [11]  191 	add	hl, hl
      000040 29               [11]  192 	add	hl, hl
      000041 29               [11]  193 	add	hl, hl
      000042 29               [11]  194 	add	hl, hl
      000043 29               [11]  195 	add	hl, hl
      000044 C5               [11]  196 	push	bc
      000045 EB               [ 4]  197 	ex	de, hl
      000046 DD 6E 06         [19]  198 	ld	l, 6 (ix)
                                    199 ;	spillPairReg hl
                                    200 ;	spillPairReg hl
      000049 DD 66 07         [19]  201 	ld	h, 7 (ix)
                                    202 ;	spillPairReg hl
                                    203 ;	spillPairReg hl
      00004C CDr00r00         [17]  204 	call	__divsint
      00004F C1               [10]  205 	pop	bc
      000050 DD 73 F0         [19]  206 	ld	-16 (ix), e
      000053 3Ar00r00         [13]  207 	ld	a, (_nextVRAMsprites+0)
      000056 DD 77 F1         [19]  208 	ld	-15 (ix), a
      000059 3Ar01r00         [13]  209 	ld	a, (_nextVRAMsprites+1)
      00005C DD 77 F2         [19]  210 	ld	-14 (ix), a
      00005F DD 36 F3 01      [19]  211 	ld	-13 (ix), #0x01
      000063 AF               [ 4]  212 	xor	a, a
      000064 DD 77 F4         [19]  213 	ld	-12 (ix), a
      000067 DD 77 F5         [19]  214 	ld	-11 (ix), a
      00006A DD 36 F6 00      [19]  215 	ld	-10 (ix), #0x00
                                    216 ;./lib/./sprite.c:27: SMS_loadTiles(data,nextVRAMsprites,tam);
      00006E DD 5E 08         [19]  217 	ld	e, 8 (ix)
      000071 DD 56 09         [19]  218 	ld	d, 9 (ix)
      000074 2Ar00r00         [16]  219 	ld	hl, (_nextVRAMsprites)
      000077 29               [11]  220 	add	hl, hl
      000078 29               [11]  221 	add	hl, hl
      000079 29               [11]  222 	add	hl, hl
      00007A 29               [11]  223 	add	hl, hl
      00007B 29               [11]  224 	add	hl, hl
      00007C CB F4            [ 8]  225 	set	6, h
      00007E C5               [11]  226 	push	bc
      00007F E5               [11]  227 	push	hl
      000080 DD 6E 06         [19]  228 	ld	l, 6 (ix)
                                    229 ;	spillPairReg hl
                                    230 ;	spillPairReg hl
      000083 DD 66 07         [19]  231 	ld	h, 7 (ix)
                                    232 ;	spillPairReg hl
                                    233 ;	spillPairReg hl
      000086 E3               [19]  234 	ex	(sp), hl
      000087 CDr00r00         [17]  235 	call	_SMS_VRAMmemcpy
      00008A C1               [10]  236 	pop	bc
                                    237 ;./lib/./sprite.c:28: nextVRAMsprites = nextVRAMsprites + (tamano*sprite.numFrames);
      00008B DD 5E F0         [19]  238 	ld	e, -16 (ix)
      00008E 61               [ 4]  239 	ld	h, c
                                    240 ;	spillPairReg hl
                                    241 ;	spillPairReg hl
      00008F 2E 00            [ 7]  242 	ld	l, #0x00
      000091 55               [ 4]  243 	ld	d, l
      000092 06 08            [ 7]  244 	ld	b, #0x08
      000094                        245 00177$:
      000094 29               [11]  246 	add	hl, hl
      000095 30 01            [12]  247 	jr	NC, 00178$
      000097 19               [11]  248 	add	hl, de
      000098                        249 00178$:
      000098 10 FA            [13]  250 	djnz	00177$
      00009A EB               [ 4]  251 	ex	de, hl
      00009B 21r00r00         [10]  252 	ld	hl, #_nextVRAMsprites
      00009E 7E               [ 7]  253 	ld	a, (hl)
      00009F 83               [ 4]  254 	add	a, e
      0000A0 77               [ 7]  255 	ld	(hl), a
      0000A1 23               [ 6]  256 	inc	hl
      0000A2 7E               [ 7]  257 	ld	a, (hl)
      0000A3 8A               [ 4]  258 	adc	a, d
      0000A4 77               [ 7]  259 	ld	(hl), a
                                    260 ;./lib/./sprite.c:30: unsigned char x, y, numFrames = tamano/(alto*ancho);
      0000A5 DD 5E F8         [19]  261 	ld	e, -8 (ix)
      0000A8 DD 66 F7         [19]  262 	ld	h, -9 (ix)
                                    263 ;	spillPairReg hl
                                    264 ;	spillPairReg hl
      0000AB 2E 00            [ 7]  265 	ld	l, #0x00
      0000AD 55               [ 4]  266 	ld	d, l
      0000AE 06 08            [ 7]  267 	ld	b, #0x08
      0000B0                        268 00179$:
      0000B0 29               [11]  269 	add	hl, hl
      0000B1 30 01            [12]  270 	jr	NC, 00180$
      0000B3 19               [11]  271 	add	hl, de
      0000B4                        272 00180$:
      0000B4 10 FA            [13]  273 	djnz	00179$
      0000B6 EB               [ 4]  274 	ex	de, hl
      0000B7 DD 6E FE         [19]  275 	ld	l, -2 (ix)
                                    276 ;	spillPairReg hl
                                    277 ;	spillPairReg hl
      0000BA DD 66 FF         [19]  278 	ld	h, -1 (ix)
                                    279 ;	spillPairReg hl
                                    280 ;	spillPairReg hl
      0000BD CDr00r00         [17]  281 	call	__divsint
      0000C0 DD 73 F9         [19]  282 	ld	-7 (ix), e
                                    283 ;./lib/./sprite.c:31: int offset = 0;
      0000C3 AF               [ 4]  284 	xor	a, a
      0000C4 DD 77 FC         [19]  285 	ld	-4 (ix), a
      0000C7 DD 77 FD         [19]  286 	ld	-3 (ix), a
                                    287 ;./lib/./sprite.c:32: while(numFrames) {
      0000CA                        288 00110$:
      0000CA DD 7E F9         [19]  289 	ld	a, -7 (ix)
      0000CD B7               [ 4]  290 	or	a, a
      0000CE CArECr01         [10]  291 	jp	Z, 00112$
                                    292 ;./lib/./sprite.c:34: while (y) {
      0000D1 DD 7E F7         [19]  293 	ld	a, -9 (ix)
      0000D4 DD 77 FA         [19]  294 	ld	-6 (ix), a
      0000D7                        295 00107$:
      0000D7 DD 7E FA         [19]  296 	ld	a, -6 (ix)
      0000DA B7               [ 4]  297 	or	a, a
      0000DB CArE6r01         [10]  298 	jp	Z, 00109$
                                    299 ;./lib/./sprite.c:36: offset = offset + x*64 - 64; // voy al principio del último tile
      0000DE DD 7E F8         [19]  300 	ld	a, -8 (ix)
      0000E1 DD 77 FE         [19]  301 	ld	-2 (ix), a
      0000E4 DD 36 FF 00      [19]  302 	ld	-1 (ix), #0x00
      0000E8 DD 7E FE         [19]  303 	ld	a, -2 (ix)
      0000EB DD 77 EB         [19]  304 	ld	-21 (ix), a
      0000EE DD 36 EC 00      [19]  305 	ld	-20 (ix), #0x00
      0000F2 06 06            [ 7]  306 	ld	b, #0x06
      0000F4                        307 00181$:
      0000F4 DD CB EB 26      [23]  308 	sla	-21 (ix)
      0000F8 DD CB EC 16      [23]  309 	rl	-20 (ix)
      0000FC 10 F6            [13]  310 	djnz	00181$
      0000FE DD 7E EB         [19]  311 	ld	a, -21 (ix)
      000101 DD 86 FC         [19]  312 	add	a, -4 (ix)
      000104 DD 77 FE         [19]  313 	ld	-2 (ix), a
      000107 DD 7E EC         [19]  314 	ld	a, -20 (ix)
      00010A DD 8E FD         [19]  315 	adc	a, -3 (ix)
      00010D DD 77 FF         [19]  316 	ld	-1 (ix), a
      000110 DD 7E FE         [19]  317 	ld	a, -2 (ix)
      000113 C6 C0            [ 7]  318 	add	a, #0xc0
      000115 DD 77 FB         [19]  319 	ld	-5 (ix), a
      000118 DD 7E FF         [19]  320 	ld	a, -1 (ix)
      00011B CE FF            [ 7]  321 	adc	a, #0xff
      00011D DD 77 FC         [19]  322 	ld	-4 (ix), a
                                    323 ;./lib/./sprite.c:37: while(x) {
      000120 DD 7E F8         [19]  324 	ld	a, -8 (ix)
      000123 DD 77 FD         [19]  325 	ld	-3 (ix), a
      000126                        326 00104$:
      000126 DD 7E FD         [19]  327 	ld	a, -3 (ix)
      000129 B7               [ 4]  328 	or	a, a
      00012A 28 7C            [12]  329 	jr	Z, 00106$
                                    330 ;./lib/./sprite.c:40: while(i<64){
      00012C DD 7E FB         [19]  331 	ld	a, -5 (ix)
      00012F DD 77 FE         [19]  332 	ld	-2 (ix), a
      000132 DD 7E FC         [19]  333 	ld	a, -4 (ix)
      000135 DD 77 FF         [19]  334 	ld	-1 (ix), a
      000138 0E 00            [ 7]  335 	ld	c, #0x00
      00013A                        336 00101$:
      00013A 79               [ 4]  337 	ld	a, c
      00013B D6 40            [ 7]  338 	sub	a, #0x40
      00013D 30 2A            [12]  339 	jr	NC, 00103$
                                    340 ;./lib/./sprite.c:41: buffer64[i] = flipArray[data[offset2]];
      00013F 21r00r00         [10]  341 	ld	hl, #_buffer64
      000142 06 00            [ 7]  342 	ld	b, #0x00
      000144 09               [11]  343 	add	hl, bc
      000145 DD 7E 08         [19]  344 	ld	a, 8 (ix)
      000148 DD 86 FE         [19]  345 	add	a, -2 (ix)
      00014B 5F               [ 4]  346 	ld	e, a
      00014C DD 7E 09         [19]  347 	ld	a, 9 (ix)
      00014F DD 8E FF         [19]  348 	adc	a, -1 (ix)
      000152 57               [ 4]  349 	ld	d, a
      000153 1A               [ 7]  350 	ld	a, (de)
      000154 C6r02            [ 7]  351 	add	a, #<(_flipArray)
      000156 5F               [ 4]  352 	ld	e, a
      000157 3E 00            [ 7]  353 	ld	a, #0x00
      000159 CEs00            [ 7]  354 	adc	a, #>(_flipArray)
      00015B 57               [ 4]  355 	ld	d, a
      00015C 1A               [ 7]  356 	ld	a, (de)
      00015D 77               [ 7]  357 	ld	(hl), a
                                    358 ;./lib/./sprite.c:42: offset2++;
      00015E DD 34 FE         [23]  359 	inc	-2 (ix)
      000161 20 03            [12]  360 	jr	NZ, 00182$
      000163 DD 34 FF         [23]  361 	inc	-1 (ix)
      000166                        362 00182$:
                                    363 ;./lib/./sprite.c:43: i++;
      000166 0C               [ 4]  364 	inc	c
      000167 18 D1            [12]  365 	jr	00101$
      000169                        366 00103$:
                                    367 ;./lib/./sprite.c:45: SMS_loadTiles(&buffer64,nextVRAMsprites,64);
      000169 2Ar00r00         [16]  368 	ld	hl, (_nextVRAMsprites)
      00016C 29               [11]  369 	add	hl, hl
      00016D 29               [11]  370 	add	hl, hl
      00016E 29               [11]  371 	add	hl, hl
      00016F 29               [11]  372 	add	hl, hl
      000170 29               [11]  373 	add	hl, hl
      000171 DD 75 FE         [19]  374 	ld	-2 (ix), l
      000174 7C               [ 4]  375 	ld	a, h
      000175 F6 40            [ 7]  376 	or	a, #0x40
      000177 DD 77 FF         [19]  377 	ld	-1 (ix), a
      00017A 21 40 00         [10]  378 	ld	hl, #0x0040
      00017D E5               [11]  379 	push	hl
      00017E 11r00r00         [10]  380 	ld	de, #_buffer64
      000181 DD 6E FE         [19]  381 	ld	l, -2 (ix)
                                    382 ;	spillPairReg hl
                                    383 ;	spillPairReg hl
      000184 DD 66 FF         [19]  384 	ld	h, -1 (ix)
                                    385 ;	spillPairReg hl
                                    386 ;	spillPairReg hl
      000187 CDr00r00         [17]  387 	call	_SMS_VRAMmemcpy
                                    388 ;./lib/./sprite.c:46: offset = offset - 64; // voy al anterior tile
      00018A DD 7E FB         [19]  389 	ld	a, -5 (ix)
      00018D C6 C0            [ 7]  390 	add	a, #0xc0
      00018F DD 77 FB         [19]  391 	ld	-5 (ix), a
      000192 DD 7E FC         [19]  392 	ld	a, -4 (ix)
      000195 CE FF            [ 7]  393 	adc	a, #0xff
      000197 DD 77 FC         [19]  394 	ld	-4 (ix), a
                                    395 ;./lib/./sprite.c:47: nextVRAMsprites += 2;
      00019A 2Ar00r00         [16]  396 	ld	hl, (_nextVRAMsprites)
      00019D 23               [ 6]  397 	inc	hl
      00019E 23               [ 6]  398 	inc	hl
      00019F 22r00r00         [16]  399 	ld	(_nextVRAMsprites), hl
                                    400 ;./lib/./sprite.c:48: x--;
      0001A2 DD 35 FD         [23]  401 	dec	-3 (ix)
      0001A5 C3r26r01         [10]  402 	jp	00104$
      0001A8                        403 00106$:
                                    404 ;./lib/./sprite.c:50: offset = offset + x*64 + 64;
      0001A8 DD 7E FD         [19]  405 	ld	a, -3 (ix)
      0001AB DD 77 FE         [19]  406 	ld	-2 (ix), a
      0001AE DD 36 FF 00      [19]  407 	ld	-1 (ix), #0x00
      0001B2 06 06            [ 7]  408 	ld	b, #0x06
      0001B4                        409 00183$:
      0001B4 DD CB FE 26      [23]  410 	sla	-2 (ix)
      0001B8 DD CB FF 16      [23]  411 	rl	-1 (ix)
      0001BC 10 F6            [13]  412 	djnz	00183$
      0001BE DD 7E FE         [19]  413 	ld	a, -2 (ix)
      0001C1 DD 86 FB         [19]  414 	add	a, -5 (ix)
      0001C4 DD 77 EB         [19]  415 	ld	-21 (ix), a
      0001C7 DD 7E FF         [19]  416 	ld	a, -1 (ix)
      0001CA DD 8E FC         [19]  417 	adc	a, -4 (ix)
      0001CD DD 77 EC         [19]  418 	ld	-20 (ix), a
      0001D0 DD 7E EB         [19]  419 	ld	a, -21 (ix)
      0001D3 C6 40            [ 7]  420 	add	a, #0x40
      0001D5 DD 77 FC         [19]  421 	ld	-4 (ix), a
      0001D8 DD 7E EC         [19]  422 	ld	a, -20 (ix)
      0001DB CE 00            [ 7]  423 	adc	a, #0x00
      0001DD DD 77 FD         [19]  424 	ld	-3 (ix), a
                                    425 ;./lib/./sprite.c:51: y--;
      0001E0 DD 35 FA         [23]  426 	dec	-6 (ix)
      0001E3 C3rD7r00         [10]  427 	jp	00107$
      0001E6                        428 00109$:
                                    429 ;./lib/./sprite.c:53: numFrames--;
      0001E6 DD 35 F9         [23]  430 	dec	-7 (ix)
      0001E9 C3rCAr00         [10]  431 	jp	00110$
      0001EC                        432 00112$:
                                    433 ;./lib/./sprite.c:55: return sprite;
      0001EC 21 19 00         [10]  434 	ld	hl, #25
      0001EF 39               [11]  435 	add	hl, sp
      0001F0 5E               [ 7]  436 	ld	e, (hl)
      0001F1 23               [ 6]  437 	inc	hl
      0001F2 56               [ 7]  438 	ld	d, (hl)
      0001F3 21 02 00         [10]  439 	ld	hl, #2
      0001F6 39               [11]  440 	add	hl, sp
      0001F7 01 0A 00         [10]  441 	ld	bc, #10
      0001FA ED B0            [21]  442 	ldir
                                    443 ;./lib/./sprite.c:56: }
      0001FC DD F9            [10]  444 	ld	sp, ix
      0001FE DD E1            [14]  445 	pop	ix
      000200 C9               [10]  446 	ret
                                    447 ;./lib/./sprite.c:60: T_sprite generateSprite(unsigned char ancho, unsigned char alto, int tam,const unsigned char data[]) {
                                    448 ;	---------------------------------
                                    449 ; Function generateSprite
                                    450 ; ---------------------------------
      000201                        451 _generateSprite::
      000201 DD E5            [15]  452 	push	ix
      000203 DD 21 00 00      [14]  453 	ld	ix,#0
      000207 DD 39            [15]  454 	add	ix,sp
      000209 FD 21 F6 FF      [14]  455 	ld	iy, #-10
      00020D FD 39            [15]  456 	add	iy, sp
      00020F FD F9            [10]  457 	ld	sp, iy
      000211 5F               [ 4]  458 	ld	e, a
      000212 55               [ 4]  459 	ld	d, l
                                    460 ;./lib/./sprite.c:61: unsigned char tamano = alto*ancho*2;
      000213 D5               [11]  461 	push	de
      000214 62               [ 4]  462 	ld	h, d
                                    463 ;	spillPairReg hl
                                    464 ;	spillPairReg hl
      000215 2E 00            [ 7]  465 	ld	l, #0x00
      000217 55               [ 4]  466 	ld	d, l
      000218 06 08            [ 7]  467 	ld	b, #0x08
      00021A                        468 00103$:
      00021A 29               [11]  469 	add	hl, hl
      00021B 30 01            [12]  470 	jr	NC, 00104$
      00021D 19               [11]  471 	add	hl, de
      00021E                        472 00104$:
      00021E 10 FA            [13]  473 	djnz	00103$
      000220 D1               [10]  474 	pop	de
      000221 4D               [ 4]  475 	ld	c, l
      000222 CB 21            [ 8]  476 	sla	c
                                    477 ;./lib/./sprite.c:62: T_sprite sprite = {alto,ancho,tamano,tam/(tamano*32),nextVRAMsprites, 1,0};
      000224 DD 72 F6         [19]  478 	ld	-10 (ix), d
      000227 DD 73 F7         [19]  479 	ld	-9 (ix), e
      00022A DD 71 F8         [19]  480 	ld	-8 (ix), c
      00022D 69               [ 4]  481 	ld	l, c
                                    482 ;	spillPairReg hl
                                    483 ;	spillPairReg hl
      00022E 26 00            [ 7]  484 	ld	h, #0x00
                                    485 ;	spillPairReg hl
                                    486 ;	spillPairReg hl
      000230 29               [11]  487 	add	hl, hl
      000231 29               [11]  488 	add	hl, hl
      000232 29               [11]  489 	add	hl, hl
      000233 29               [11]  490 	add	hl, hl
      000234 29               [11]  491 	add	hl, hl
      000235 C5               [11]  492 	push	bc
      000236 EB               [ 4]  493 	ex	de, hl
      000237 DD 6E 06         [19]  494 	ld	l, 6 (ix)
                                    495 ;	spillPairReg hl
                                    496 ;	spillPairReg hl
      00023A DD 66 07         [19]  497 	ld	h, 7 (ix)
                                    498 ;	spillPairReg hl
                                    499 ;	spillPairReg hl
      00023D CDr00r00         [17]  500 	call	__divsint
      000240 C1               [10]  501 	pop	bc
      000241 DD 73 F9         [19]  502 	ld	-7 (ix), e
      000244 3Ar00r00         [13]  503 	ld	a, (_nextVRAMsprites+0)
      000247 DD 77 FA         [19]  504 	ld	-6 (ix), a
      00024A 3Ar01r00         [13]  505 	ld	a, (_nextVRAMsprites+1)
      00024D DD 77 FB         [19]  506 	ld	-5 (ix), a
      000250 DD 36 FC 01      [19]  507 	ld	-4 (ix), #0x01
      000254 AF               [ 4]  508 	xor	a, a
      000255 DD 77 FD         [19]  509 	ld	-3 (ix), a
      000258 DD 77 FE         [19]  510 	ld	-2 (ix), a
      00025B DD 36 FF 00      [19]  511 	ld	-1 (ix), #0x00
                                    512 ;./lib/./sprite.c:63: SMS_loadTiles(data,nextVRAMsprites,tam);
      00025F DD 5E 08         [19]  513 	ld	e, 8 (ix)
      000262 DD 56 09         [19]  514 	ld	d, 9 (ix)
      000265 2Ar00r00         [16]  515 	ld	hl, (_nextVRAMsprites)
      000268 29               [11]  516 	add	hl, hl
      000269 29               [11]  517 	add	hl, hl
      00026A 29               [11]  518 	add	hl, hl
      00026B 29               [11]  519 	add	hl, hl
      00026C 29               [11]  520 	add	hl, hl
      00026D CB F4            [ 8]  521 	set	6, h
      00026F C5               [11]  522 	push	bc
      000270 E5               [11]  523 	push	hl
      000271 DD 6E 06         [19]  524 	ld	l, 6 (ix)
                                    525 ;	spillPairReg hl
                                    526 ;	spillPairReg hl
      000274 DD 66 07         [19]  527 	ld	h, 7 (ix)
                                    528 ;	spillPairReg hl
                                    529 ;	spillPairReg hl
      000277 E3               [19]  530 	ex	(sp), hl
      000278 CDr00r00         [17]  531 	call	_SMS_VRAMmemcpy
      00027B C1               [10]  532 	pop	bc
                                    533 ;./lib/./sprite.c:64: nextVRAMsprites = nextVRAMsprites + (tamano*sprite.numFrames);
      00027C DD 5E F9         [19]  534 	ld	e, -7 (ix)
      00027F 61               [ 4]  535 	ld	h, c
                                    536 ;	spillPairReg hl
                                    537 ;	spillPairReg hl
      000280 2E 00            [ 7]  538 	ld	l, #0x00
      000282 55               [ 4]  539 	ld	d, l
      000283 06 08            [ 7]  540 	ld	b, #0x08
      000285                        541 00105$:
      000285 29               [11]  542 	add	hl, hl
      000286 30 01            [12]  543 	jr	NC, 00106$
      000288 19               [11]  544 	add	hl, de
      000289                        545 00106$:
      000289 10 FA            [13]  546 	djnz	00105$
      00028B EB               [ 4]  547 	ex	de, hl
      00028C 21r00r00         [10]  548 	ld	hl, #_nextVRAMsprites
      00028F 7E               [ 7]  549 	ld	a, (hl)
      000290 83               [ 4]  550 	add	a, e
      000291 77               [ 7]  551 	ld	(hl), a
      000292 23               [ 6]  552 	inc	hl
      000293 7E               [ 7]  553 	ld	a, (hl)
      000294 8A               [ 4]  554 	adc	a, d
      000295 77               [ 7]  555 	ld	(hl), a
                                    556 ;./lib/./sprite.c:65: return sprite;
      000296 21 0E 00         [10]  557 	ld	hl, #14
      000299 39               [11]  558 	add	hl, sp
      00029A 5E               [ 7]  559 	ld	e, (hl)
      00029B 23               [ 6]  560 	inc	hl
      00029C 56               [ 7]  561 	ld	d, (hl)
      00029D 21 00 00         [10]  562 	ld	hl, #0
      0002A0 39               [11]  563 	add	hl, sp
      0002A1 01 0A 00         [10]  564 	ld	bc, #10
      0002A4 ED B0            [21]  565 	ldir
                                    566 ;./lib/./sprite.c:66: }
      0002A6 DD F9            [10]  567 	ld	sp, ix
      0002A8 DD E1            [14]  568 	pop	ix
      0002AA C9               [10]  569 	ret
                                    570 ;./lib/./sprite.c:69: T_sprite generateSpriteNoRAM(unsigned char ancho, unsigned char alto, int tam,const unsigned char data[]) {
                                    571 ;	---------------------------------
                                    572 ; Function generateSpriteNoRAM
                                    573 ; ---------------------------------
      0002AB                        574 _generateSpriteNoRAM::
      0002AB DD E5            [15]  575 	push	ix
      0002AD DD 21 00 00      [14]  576 	ld	ix,#0
      0002B1 DD 39            [15]  577 	add	ix,sp
      0002B3 FD 21 F4 FF      [14]  578 	ld	iy, #-12
      0002B7 FD 39            [15]  579 	add	iy, sp
      0002B9 FD F9            [10]  580 	ld	sp, iy
      0002BB 5F               [ 4]  581 	ld	e, a
      0002BC 55               [ 4]  582 	ld	d, l
                                    583 ;./lib/./sprite.c:70: unsigned char tamano = alto*ancho*2;
      0002BD D5               [11]  584 	push	de
      0002BE 62               [ 4]  585 	ld	h, d
                                    586 ;	spillPairReg hl
                                    587 ;	spillPairReg hl
      0002BF 2E 00            [ 7]  588 	ld	l, #0x00
      0002C1 55               [ 4]  589 	ld	d, l
      0002C2 06 08            [ 7]  590 	ld	b, #0x08
      0002C4                        591 00103$:
      0002C4 29               [11]  592 	add	hl, hl
      0002C5 30 01            [12]  593 	jr	NC, 00104$
      0002C7 19               [11]  594 	add	hl, de
      0002C8                        595 00104$:
      0002C8 10 FA            [13]  596 	djnz	00103$
      0002CA D1               [10]  597 	pop	de
      0002CB 4D               [ 4]  598 	ld	c, l
      0002CC CB 21            [ 8]  599 	sla	c
                                    600 ;./lib/./sprite.c:71: T_sprite sprite = {alto,ancho,tamano,tam/(tamano*32),nextVRAMsprites, 0,0};
      0002CE DD 72 F4         [19]  601 	ld	-12 (ix), d
      0002D1 DD 73 F5         [19]  602 	ld	-11 (ix), e
      0002D4 DD 71 F6         [19]  603 	ld	-10 (ix), c
                                    604 ;	spillPairReg hl
                                    605 ;	spillPairReg hl
      0002D7 DD 71 FE         [19]  606 	ld	-2 (ix), c
      0002DA DD 36 FF 00      [19]  607 	ld	-1 (ix), #0x00
      0002DE 69               [ 4]  608 	ld	l, c
      0002DF 26 00            [ 7]  609 	ld	h, #0x00
                                    610 ;	spillPairReg hl
                                    611 ;	spillPairReg hl
      0002E1 29               [11]  612 	add	hl, hl
      0002E2 29               [11]  613 	add	hl, hl
      0002E3 29               [11]  614 	add	hl, hl
      0002E4 29               [11]  615 	add	hl, hl
      0002E5 29               [11]  616 	add	hl, hl
      0002E6 EB               [ 4]  617 	ex	de,hl
      0002E7 D5               [11]  618 	push	de
      0002E8 DD 6E 06         [19]  619 	ld	l, 6 (ix)
                                    620 ;	spillPairReg hl
                                    621 ;	spillPairReg hl
      0002EB DD 66 07         [19]  622 	ld	h, 7 (ix)
                                    623 ;	spillPairReg hl
                                    624 ;	spillPairReg hl
      0002EE CDr00r00         [17]  625 	call	__divsint
      0002F1 EB               [ 4]  626 	ex	de, hl
      0002F2 D1               [10]  627 	pop	de
      0002F3 DD 75 F7         [19]  628 	ld	-9 (ix), l
      0002F6 3Ar00r00         [13]  629 	ld	a, (_nextVRAMsprites+0)
      0002F9 DD 77 F8         [19]  630 	ld	-8 (ix), a
      0002FC 3Ar01r00         [13]  631 	ld	a, (_nextVRAMsprites+1)
      0002FF DD 77 F9         [19]  632 	ld	-7 (ix), a
      000302 DD 36 FA 00      [19]  633 	ld	-6 (ix), #0x00
      000306 AF               [ 4]  634 	xor	a, a
      000307 DD 77 FB         [19]  635 	ld	-5 (ix), a
      00030A DD 77 FC         [19]  636 	ld	-4 (ix), a
      00030D DD 36 FD 00      [19]  637 	ld	-3 (ix), #0x00
                                    638 ;./lib/./sprite.c:72: sprite.data = data;
      000311 DD 7E 08         [19]  639 	ld	a, 8 (ix)
      000314 DD 77 FB         [19]  640 	ld	-5 (ix), a
      000317 DD 7E 09         [19]  641 	ld	a, 9 (ix)
      00031A DD 77 FC         [19]  642 	ld	-4 (ix), a
                                    643 ;./lib/./sprite.c:73: sprite.frameInVRAM = 0;
      00031D DD 36 FD 00      [19]  644 	ld	-3 (ix), #0x00
                                    645 ;./lib/./sprite.c:74: SMS_loadTiles(data,nextVRAMsprites,tamano*32);
      000321 DD 4E 08         [19]  646 	ld	c, 8 (ix)
      000324 DD 46 09         [19]  647 	ld	b, 9 (ix)
      000327 2Ar00r00         [16]  648 	ld	hl, (_nextVRAMsprites)
      00032A 29               [11]  649 	add	hl, hl
      00032B 29               [11]  650 	add	hl, hl
      00032C 29               [11]  651 	add	hl, hl
      00032D 29               [11]  652 	add	hl, hl
      00032E 29               [11]  653 	add	hl, hl
      00032F CB F4            [ 8]  654 	set	6, h
      000331 D5               [11]  655 	push	de
      000332 59               [ 4]  656 	ld	e, c
      000333 50               [ 4]  657 	ld	d, b
      000334 CDr00r00         [17]  658 	call	_SMS_VRAMmemcpy
                                    659 ;./lib/./sprite.c:75: nextVRAMsprites = nextVRAMsprites + (tamano);
      000337 21r00r00         [10]  660 	ld	hl, #_nextVRAMsprites
      00033A 7E               [ 7]  661 	ld	a, (hl)
      00033B DD 86 FE         [19]  662 	add	a, -2 (ix)
      00033E 77               [ 7]  663 	ld	(hl), a
      00033F 23               [ 6]  664 	inc	hl
      000340 7E               [ 7]  665 	ld	a, (hl)
      000341 DD 8E FF         [19]  666 	adc	a, -1 (ix)
      000344 77               [ 7]  667 	ld	(hl), a
                                    668 ;./lib/./sprite.c:76: return sprite;
      000345 21 10 00         [10]  669 	ld	hl, #16
      000348 39               [11]  670 	add	hl, sp
      000349 5E               [ 7]  671 	ld	e, (hl)
      00034A 23               [ 6]  672 	inc	hl
      00034B 56               [ 7]  673 	ld	d, (hl)
      00034C 21 00 00         [10]  674 	ld	hl, #0
      00034F 39               [11]  675 	add	hl, sp
      000350 01 0A 00         [10]  676 	ld	bc, #10
      000353 ED B0            [21]  677 	ldir
                                    678 ;./lib/./sprite.c:77: }
      000355 DD F9            [10]  679 	ld	sp, ix
      000357 DD E1            [14]  680 	pop	ix
      000359 C9               [10]  681 	ret
                                    682 ;./lib/./sprite.c:88: unsigned int addHardwareSprite(unsigned int x,unsigned int y,unsigned int vx,unsigned int vy,unsigned int lx,
                                    683 ;	---------------------------------
                                    684 ; Function addHardwareSprite
                                    685 ; ---------------------------------
      00035A                        686 _addHardwareSprite::
      00035A DD E5            [15]  687 	push	ix
      00035C DD 21 00 00      [14]  688 	ld	ix,#0
      000360 DD 39            [15]  689 	add	ix,sp
      000362 FD 21 EA FF      [14]  690 	ld	iy, #-22
      000366 FD 39            [15]  691 	add	iy, sp
      000368 FD F9            [10]  692 	ld	sp, iy
      00036A DD 75 F4         [19]  693 	ld	-12 (ix), l
      00036D DD 74 F5         [19]  694 	ld	-11 (ix), h
      000370 DD 73 F2         [19]  695 	ld	-14 (ix), e
      000373 DD 72 F3         [19]  696 	ld	-13 (ix), d
                                    697 ;./lib/./sprite.c:90: unsigned int i = MAX_HARDWARE_SPRITES;
      000376 21 40 00         [10]  698 	ld	hl, #0x0040
      000379 E3               [19]  699 	ex	(sp), hl
                                    700 ;./lib/./sprite.c:91: while (i) {
      00037A DD 36 FE 40      [19]  701 	ld	-2 (ix), #0x40
      00037E DD 36 FF 00      [19]  702 	ld	-1 (ix), #0
      000382                        703 00109$:
      000382 DD 7E FF         [19]  704 	ld	a, -1 (ix)
      000385 DD B6 FE         [19]  705 	or	a, -2 (ix)
      000388 CArD1r05         [10]  706 	jp	Z, 00111$
                                    707 ;./lib/./sprite.c:92: if (!hardwareSprites[i].len) {
      00038B DD 4E FE         [19]  708 	ld	c, -2 (ix)
      00038E DD 46 FF         [19]  709 	ld	b, -1 (ix)
      000391 69               [ 4]  710 	ld	l, c
      000392 60               [ 4]  711 	ld	h, b
      000393 29               [11]  712 	add	hl, hl
      000394 09               [11]  713 	add	hl, bc
      000395 29               [11]  714 	add	hl, hl
      000396 29               [11]  715 	add	hl, hl
      000397 DD 75 FC         [19]  716 	ld	-4 (ix), l
      00039A DD 74 FD         [19]  717 	ld	-3 (ix), h
      00039D 3Er40            [ 7]  718 	ld	a, #<(_hardwareSprites)
      00039F DD 86 FC         [19]  719 	add	a, -4 (ix)
      0003A2 DD 77 FA         [19]  720 	ld	-6 (ix), a
      0003A5 3Es00            [ 7]  721 	ld	a, #>(_hardwareSprites)
      0003A7 DD 8E FD         [19]  722 	adc	a, -3 (ix)
      0003AA DD 77 FB         [19]  723 	ld	-5 (ix), a
      0003AD DD 7E FA         [19]  724 	ld	a, -6 (ix)
      0003B0 DD 77 FC         [19]  725 	ld	-4 (ix), a
      0003B3 DD 7E FB         [19]  726 	ld	a, -5 (ix)
      0003B6 DD 77 FD         [19]  727 	ld	-3 (ix), a
      0003B9 DD 6E FC         [19]  728 	ld	l, -4 (ix)
      0003BC DD 66 FD         [19]  729 	ld	h, -3 (ix)
      0003BF 11 0A 00         [10]  730 	ld	de, #0x000a
      0003C2 19               [11]  731 	add	hl, de
      0003C3 7E               [ 7]  732 	ld	a, (hl)
      0003C4 DD 77 FC         [19]  733 	ld	-4 (ix), a
      0003C7 23               [ 6]  734 	inc	hl
      0003C8 7E               [ 7]  735 	ld	a, (hl)
      0003C9 DD 77 FD         [19]  736 	ld	-3 (ix), a
      0003CC DD B6 FC         [19]  737 	or	a, -4 (ix)
      0003CF C2rB5r05         [10]  738 	jp	NZ, 00108$
                                    739 ;./lib/./sprite.c:93: T_HardwareSprite *p = &hardwareSprites[i]; 
      0003D2 DD 7E FA         [19]  740 	ld	a, -6 (ix)
      0003D5 DD 77 FE         [19]  741 	ld	-2 (ix), a
      0003D8 DD 7E FB         [19]  742 	ld	a, -5 (ix)
      0003DB DD 77 FF         [19]  743 	ld	-1 (ix), a
      0003DE DD 7E FE         [19]  744 	ld	a, -2 (ix)
      0003E1 DD 77 EC         [19]  745 	ld	-20 (ix), a
      0003E4 DD 7E FF         [19]  746 	ld	a, -1 (ix)
      0003E7 DD 77 ED         [19]  747 	ld	-19 (ix), a
                                    748 ;./lib/./sprite.c:94: p->x = x;
      0003EA DD 7E EC         [19]  749 	ld	a, -20 (ix)
      0003ED C6 04            [ 7]  750 	add	a, #0x04
      0003EF DD 77 FE         [19]  751 	ld	-2 (ix), a
      0003F2 DD 7E ED         [19]  752 	ld	a, -19 (ix)
      0003F5 CE 00            [ 7]  753 	adc	a, #0x00
      0003F7 DD 77 FF         [19]  754 	ld	-1 (ix), a
      0003FA DD 6E FE         [19]  755 	ld	l, -2 (ix)
      0003FD DD 66 FF         [19]  756 	ld	h, -1 (ix)
      000400 DD 7E F4         [19]  757 	ld	a, -12 (ix)
      000403 77               [ 7]  758 	ld	(hl), a
      000404 23               [ 6]  759 	inc	hl
      000405 DD 7E F5         [19]  760 	ld	a, -11 (ix)
      000408 77               [ 7]  761 	ld	(hl), a
                                    762 ;./lib/./sprite.c:95: p->y = y;
      000409 D1               [10]  763 	pop	de
      00040A E1               [10]  764 	pop	hl
      00040B E5               [11]  765 	push	hl
      00040C D5               [11]  766 	push	de
      00040D 11 06 00         [10]  767 	ld	de, #0x0006
      000410 19               [11]  768 	add	hl, de
      000411 DD 7E F2         [19]  769 	ld	a, -14 (ix)
      000414 77               [ 7]  770 	ld	(hl), a
      000415 23               [ 6]  771 	inc	hl
      000416 DD 7E F3         [19]  772 	ld	a, -13 (ix)
      000419 77               [ 7]  773 	ld	(hl), a
                                    774 ;./lib/./sprite.c:96: p->vx = vx;
      00041A C1               [10]  775 	pop	bc
      00041B E1               [10]  776 	pop	hl
      00041C E5               [11]  777 	push	hl
      00041D C5               [11]  778 	push	bc
      00041E DD 7E 04         [19]  779 	ld	a, 4 (ix)
      000421 77               [ 7]  780 	ld	(hl), a
      000422 23               [ 6]  781 	inc	hl
      000423 DD 7E 05         [19]  782 	ld	a, 5 (ix)
      000426 77               [ 7]  783 	ld	(hl), a
                                    784 ;./lib/./sprite.c:97: p->vy = vy;
      000427 E1               [10]  785 	pop	hl
      000428 C1               [10]  786 	pop	bc
      000429 C5               [11]  787 	push	bc
      00042A E5               [11]  788 	push	hl
      00042B 03               [ 6]  789 	inc	bc
      00042C 03               [ 6]  790 	inc	bc
      00042D DD 7E 06         [19]  791 	ld	a, 6 (ix)
      000430 02               [ 7]  792 	ld	(bc), a
      000431 03               [ 6]  793 	inc	bc
      000432 DD 7E 07         [19]  794 	ld	a, 7 (ix)
      000435 02               [ 7]  795 	ld	(bc), a
                                    796 ;./lib/./sprite.c:98: unsigned int iTile = 0;
      000436 AF               [ 4]  797 	xor	a, a
      000437 DD 77 FE         [19]  798 	ld	-2 (ix), a
      00043A DD 77 FF         [19]  799 	ld	-1 (ix), a
                                    800 ;./lib/./sprite.c:99: for (int iy=0;iy<ly;iy++) {
      00043D DD 7E F2         [19]  801 	ld	a, -14 (ix)
      000440 DD 77 F6         [19]  802 	ld	-10 (ix), a
      000443 DD 7E F3         [19]  803 	ld	a, -13 (ix)
      000446 DD 77 F7         [19]  804 	ld	-9 (ix), a
      000449 AF               [ 4]  805 	xor	a, a
      00044A DD 77 F8         [19]  806 	ld	-8 (ix), a
      00044D DD 77 F9         [19]  807 	ld	-7 (ix), a
      000450                        808 00116$:
      000450 DD 7E F8         [19]  809 	ld	a, -8 (ix)
      000453 DD 77 FC         [19]  810 	ld	-4 (ix), a
      000456 DD 7E F9         [19]  811 	ld	a, -7 (ix)
      000459 DD 77 FD         [19]  812 	ld	-3 (ix), a
                                    813 ;./lib/./sprite.c:102: p->initSprite = SMS_addSprite(x,y, tiles[iTile]);
      00045C DD 7E EC         [19]  814 	ld	a, -20 (ix)
      00045F C6 08            [ 7]  815 	add	a, #0x08
      000461 DD 77 EE         [19]  816 	ld	-18 (ix), a
      000464 DD 7E ED         [19]  817 	ld	a, -19 (ix)
      000467 CE 00            [ 7]  818 	adc	a, #0x00
      000469 DD 77 EF         [19]  819 	ld	-17 (ix), a
                                    820 ;./lib/./sprite.c:99: for (int iy=0;iy<ly;iy++) {
      00046C DD 7E FC         [19]  821 	ld	a, -4 (ix)
      00046F DD 96 0A         [19]  822 	sub	a, 10 (ix)
      000472 DD 7E FD         [19]  823 	ld	a, -3 (ix)
      000475 DD 9E 0B         [19]  824 	sbc	a, 11 (ix)
      000478 D2r5Cr05         [10]  825 	jp	NC, 00106$
                                    826 ;./lib/./sprite.c:100: for (int ix=0;ix<lx;ix++){
      00047B DD 7E FE         [19]  827 	ld	a, -2 (ix)
      00047E DD 77 FA         [19]  828 	ld	-6 (ix), a
      000481 DD 7E FF         [19]  829 	ld	a, -1 (ix)
      000484 DD 77 FB         [19]  830 	ld	-5 (ix), a
      000487 DD 7E F4         [19]  831 	ld	a, -12 (ix)
      00048A DD 77 FC         [19]  832 	ld	-4 (ix), a
      00048D DD 7E F5         [19]  833 	ld	a, -11 (ix)
      000490 DD 77 FD         [19]  834 	ld	-3 (ix), a
      000493 AF               [ 4]  835 	xor	a, a
      000494 DD 77 FE         [19]  836 	ld	-2 (ix), a
      000497 DD 77 FF         [19]  837 	ld	-1 (ix), a
      00049A                        838 00113$:
      00049A DD 7E FE         [19]  839 	ld	a, -2 (ix)
      00049D DD 77 F0         [19]  840 	ld	-16 (ix), a
      0004A0 DD 7E FF         [19]  841 	ld	a, -1 (ix)
      0004A3 DD 77 F1         [19]  842 	ld	-15 (ix), a
      0004A6 DD 7E F0         [19]  843 	ld	a, -16 (ix)
      0004A9 DD 96 08         [19]  844 	sub	a, 8 (ix)
      0004AC DD 7E F1         [19]  845 	ld	a, -15 (ix)
      0004AF DD 9E 09         [19]  846 	sbc	a, 9 (ix)
      0004B2 30 77            [12]  847 	jr	NC, 00129$
                                    848 ;./lib/./sprite.c:102: p->initSprite = SMS_addSprite(x,y, tiles[iTile]);
      0004B4 DD 46 FC         [19]  849 	ld	b, -4 (ix)
      0004B7 DD 6E FA         [19]  850 	ld	l, -6 (ix)
                                    851 ;	spillPairReg hl
                                    852 ;	spillPairReg hl
      0004BA DD 66 FB         [19]  853 	ld	h, -5 (ix)
                                    854 ;	spillPairReg hl
                                    855 ;	spillPairReg hl
      0004BD 29               [11]  856 	add	hl, hl
      0004BE EB               [ 4]  857 	ex	de,hl
      0004BF DD 6E 0C         [19]  858 	ld	l, 12 (ix)
                                    859 ;	spillPairReg hl
                                    860 ;	spillPairReg hl
      0004C2 DD 66 0D         [19]  861 	ld	h, 13 (ix)
                                    862 ;	spillPairReg hl
                                    863 ;	spillPairReg hl
      0004C5 19               [11]  864 	add	hl, de
      0004C6 5E               [ 7]  865 	ld	e, (hl)
      0004C7 DD 73 F0         [19]  866 	ld	-16 (ix), e
      0004CA DD 70 F1         [19]  867 	ld	-15 (ix), b
                                    868 ;./lib/./sprite.c:101: if(ix==0 && iy == 0) {
      0004CD DD 7E FF         [19]  869 	ld	a, -1 (ix)
      0004D0 DD B6 FE         [19]  870 	or	a, -2 (ix)
      0004D3 20 26            [12]  871 	jr	NZ, 00102$
      0004D5 DD 7E F9         [19]  872 	ld	a, -7 (ix)
      0004D8 DD B6 F8         [19]  873 	or	a, -8 (ix)
      0004DB 20 1E            [12]  874 	jr	NZ, 00102$
                                    875 ;./lib/./sprite.c:102: p->initSprite = SMS_addSprite(x,y, tiles[iTile]);
      0004DD DD 5E F0         [19]  876 	ld	e, -16 (ix)
      0004E0 DD 56 F1         [19]  877 	ld	d, -15 (ix)
      0004E3 DD 6E F6         [19]  878 	ld	l, -10 (ix)
                                    879 ;	spillPairReg hl
                                    880 ;	spillPairReg hl
      0004E6 DD 66 F7         [19]  881 	ld	h, -9 (ix)
                                    882 ;	spillPairReg hl
                                    883 ;	spillPairReg hl
      0004E9 CDr00r00         [17]  884 	call	_SMS_addSprite_f
      0004EC 4F               [ 4]  885 	ld	c, a
      0004ED 07               [ 4]  886 	rlca
      0004EE 9F               [ 4]  887 	sbc	a, a
      0004EF 47               [ 4]  888 	ld	b, a
      0004F0 DD 6E EE         [19]  889 	ld	l, -18 (ix)
      0004F3 DD 66 EF         [19]  890 	ld	h, -17 (ix)
      0004F6 71               [ 7]  891 	ld	(hl), c
      0004F7 23               [ 6]  892 	inc	hl
      0004F8 70               [ 7]  893 	ld	(hl), b
      0004F9 18 0F            [12]  894 	jr	00103$
      0004FB                        895 00102$:
                                    896 ;./lib/./sprite.c:105: SMS_addSprite(x,y, tiles[iTile]);
      0004FB DD 5E F0         [19]  897 	ld	e, -16 (ix)
      0004FE DD 56 F1         [19]  898 	ld	d, -15 (ix)
      000501 DD 6E F6         [19]  899 	ld	l, -10 (ix)
                                    900 ;	spillPairReg hl
                                    901 ;	spillPairReg hl
      000504 DD 66 F7         [19]  902 	ld	h, -9 (ix)
                                    903 ;	spillPairReg hl
                                    904 ;	spillPairReg hl
      000507 CDr00r00         [17]  905 	call	_SMS_addSprite_f
      00050A                        906 00103$:
                                    907 ;./lib/./sprite.c:107: iTile++;
      00050A DD 34 FA         [23]  908 	inc	-6 (ix)
      00050D 20 03            [12]  909 	jr	NZ, 00185$
      00050F DD 34 FB         [23]  910 	inc	-5 (ix)
      000512                        911 00185$:
                                    912 ;./lib/./sprite.c:108: x += 8;
      000512 DD 7E FC         [19]  913 	ld	a, -4 (ix)
      000515 C6 08            [ 7]  914 	add	a, #0x08
      000517 DD 77 FC         [19]  915 	ld	-4 (ix), a
      00051A 30 03            [12]  916 	jr	NC, 00186$
      00051C DD 34 FD         [23]  917 	inc	-3 (ix)
      00051F                        918 00186$:
                                    919 ;./lib/./sprite.c:100: for (int ix=0;ix<lx;ix++){
      00051F DD 34 FE         [23]  920 	inc	-2 (ix)
      000522 C2r9Ar04         [10]  921 	jp	NZ,00113$
      000525 DD 34 FF         [23]  922 	inc	-1 (ix)
      000528 C3r9Ar04         [10]  923 	jp	00113$
      00052B                        924 00129$:
      00052B DD 7E FA         [19]  925 	ld	a, -6 (ix)
      00052E DD 77 FE         [19]  926 	ld	-2 (ix), a
      000531 DD 7E FB         [19]  927 	ld	a, -5 (ix)
      000534 DD 77 FF         [19]  928 	ld	-1 (ix), a
      000537 DD 7E FC         [19]  929 	ld	a, -4 (ix)
      00053A DD 77 F4         [19]  930 	ld	-12 (ix), a
      00053D DD 7E FD         [19]  931 	ld	a, -3 (ix)
      000540 DD 77 F5         [19]  932 	ld	-11 (ix), a
                                    933 ;./lib/./sprite.c:110: y += 16;
      000543 DD 7E F6         [19]  934 	ld	a, -10 (ix)
      000546 C6 10            [ 7]  935 	add	a, #0x10
      000548 DD 77 F6         [19]  936 	ld	-10 (ix), a
      00054B 30 03            [12]  937 	jr	NC, 00188$
      00054D DD 34 F7         [23]  938 	inc	-9 (ix)
      000550                        939 00188$:
                                    940 ;./lib/./sprite.c:99: for (int iy=0;iy<ly;iy++) {
      000550 DD 34 F8         [23]  941 	inc	-8 (ix)
      000553 C2r50r04         [10]  942 	jp	NZ,00116$
      000556 DD 34 F9         [23]  943 	inc	-7 (ix)
      000559 C3r50r04         [10]  944 	jp	00116$
      00055C                        945 00106$:
                                    946 ;./lib/./sprite.c:112: p->len = p->initSprite + lx*ly;
      00055C DD 7E EC         [19]  947 	ld	a, -20 (ix)
      00055F C6 0A            [ 7]  948 	add	a, #0x0a
      000561 DD 77 FE         [19]  949 	ld	-2 (ix), a
      000564 DD 7E ED         [19]  950 	ld	a, -19 (ix)
      000567 CE 00            [ 7]  951 	adc	a, #0x00
      000569 DD 77 FF         [19]  952 	ld	-1 (ix), a
      00056C DD 6E EE         [19]  953 	ld	l, -18 (ix)
      00056F DD 66 EF         [19]  954 	ld	h, -17 (ix)
      000572 7E               [ 7]  955 	ld	a, (hl)
      000573 DD 77 FC         [19]  956 	ld	-4 (ix), a
      000576 23               [ 6]  957 	inc	hl
      000577 7E               [ 7]  958 	ld	a, (hl)
      000578 DD 77 FD         [19]  959 	ld	-3 (ix), a
      00057B DD 5E 0A         [19]  960 	ld	e, 10 (ix)
      00057E DD 56 0B         [19]  961 	ld	d, 11 (ix)
      000581 DD 6E 08         [19]  962 	ld	l, 8 (ix)
                                    963 ;	spillPairReg hl
                                    964 ;	spillPairReg hl
      000584 DD 66 09         [19]  965 	ld	h, 9 (ix)
                                    966 ;	spillPairReg hl
                                    967 ;	spillPairReg hl
      000587 CDr00r00         [17]  968 	call	__mulint
      00058A DD 73 F8         [19]  969 	ld	-8 (ix), e
      00058D DD 72 F9         [19]  970 	ld	-7 (ix), d
      000590 DD 7E F8         [19]  971 	ld	a, -8 (ix)
      000593 DD 86 FC         [19]  972 	add	a, -4 (ix)
      000596 DD 77 FA         [19]  973 	ld	-6 (ix), a
      000599 DD 7E F9         [19]  974 	ld	a, -7 (ix)
      00059C DD 8E FD         [19]  975 	adc	a, -3 (ix)
      00059F DD 77 FB         [19]  976 	ld	-5 (ix), a
      0005A2 DD 6E FE         [19]  977 	ld	l, -2 (ix)
      0005A5 DD 66 FF         [19]  978 	ld	h, -1 (ix)
      0005A8 DD 7E FA         [19]  979 	ld	a, -6 (ix)
      0005AB 77               [ 7]  980 	ld	(hl), a
      0005AC 23               [ 6]  981 	inc	hl
      0005AD DD 7E FB         [19]  982 	ld	a, -5 (ix)
      0005B0 77               [ 7]  983 	ld	(hl), a
                                    984 ;./lib/./sprite.c:113: return i;
      0005B1 D1               [10]  985 	pop	de
      0005B2 D5               [11]  986 	push	de
      0005B3 18 1E            [12]  987 	jr	00118$
      0005B5                        988 00108$:
                                    989 ;./lib/./sprite.c:115: i--;
      0005B5 DD 6E FE         [19]  990 	ld	l, -2 (ix)
      0005B8 DD 66 FF         [19]  991 	ld	h, -1 (ix)
      0005BB 2B               [ 6]  992 	dec	hl
      0005BC DD 75 FE         [19]  993 	ld	-2 (ix), l
      0005BF DD 74 FF         [19]  994 	ld	-1 (ix), h
      0005C2 DD 7E FE         [19]  995 	ld	a, -2 (ix)
      0005C5 DD 77 EA         [19]  996 	ld	-22 (ix), a
      0005C8 DD 7E FF         [19]  997 	ld	a, -1 (ix)
      0005CB DD 77 EB         [19]  998 	ld	-21 (ix), a
      0005CE C3r82r03         [10]  999 	jp	00109$
      0005D1                       1000 00111$:
                                   1001 ;./lib/./sprite.c:117: return i;
      0005D1 D1               [10] 1002 	pop	de
      0005D2 D5               [11] 1003 	push	de
      0005D3                       1004 00118$:
                                   1005 ;./lib/./sprite.c:118: }
      0005D3 DD F9            [10] 1006 	ld	sp, ix
      0005D5 DD E1            [14] 1007 	pop	ix
      0005D7 E1               [10] 1008 	pop	hl
      0005D8 F1               [10] 1009 	pop	af
      0005D9 F1               [10] 1010 	pop	af
      0005DA F1               [10] 1011 	pop	af
      0005DB F1               [10] 1012 	pop	af
      0005DC F1               [10] 1013 	pop	af
      0005DD E9               [ 4] 1014 	jp	(hl)
                                   1015 ;./lib/./sprite.c:130: void initSpritesVariables (void) {
                                   1016 ;	---------------------------------
                                   1017 ; Function initSpritesVariables
                                   1018 ; ---------------------------------
      0005DE                       1019 _initSpritesVariables::
                                   1020 ;./lib/./sprite.c:132: while (i) {
      0005DE 01 40 00         [10] 1021 	ld	bc, #0x0040
      0005E1                       1022 00101$:
      0005E1 78               [ 4] 1023 	ld	a, b
      0005E2 B1               [ 4] 1024 	or	a, c
      0005E3 28 15            [12] 1025 	jr	Z, 00103$
                                   1026 ;./lib/./sprite.c:133: hardwareSprites[i].len = 0;
      0005E5 69               [ 4] 1027 	ld	l, c
      0005E6 60               [ 4] 1028 	ld	h, b
      0005E7 29               [11] 1029 	add	hl, hl
      0005E8 09               [11] 1030 	add	hl, bc
      0005E9 29               [11] 1031 	add	hl, hl
      0005EA 29               [11] 1032 	add	hl, hl
      0005EB 11r40r00         [10] 1033 	ld	de, #_hardwareSprites
      0005EE 19               [11] 1034 	add	hl, de
      0005EF 11 0A 00         [10] 1035 	ld	de, #0x000a
      0005F2 19               [11] 1036 	add	hl, de
      0005F3 AF               [ 4] 1037 	xor	a, a
      0005F4 77               [ 7] 1038 	ld	(hl), a
      0005F5 23               [ 6] 1039 	inc	hl
      0005F6 77               [ 7] 1040 	ld	(hl), a
                                   1041 ;./lib/./sprite.c:134: i--;
      0005F7 0B               [ 6] 1042 	dec	bc
      0005F8 18 E7            [12] 1043 	jr	00101$
      0005FA                       1044 00103$:
                                   1045 ;./lib/./sprite.c:147: __endasm;
      0005FA 21r00r00         [10] 1046 	ld	hl, #_SpriteNextFree
      0005FD 22r44r03         [16] 1047 	ld	(#_SpriteNextFree2), hl
      000600 21r00r00         [10] 1048 	ld	hl, #_SpriteTableY
      000603 22r40r03         [16] 1049 	ld	(#_SpriteTableY2), hl
      000606 21r00r00         [10] 1050 	ld	hl, #_SpriteTableXN
      000609 22r42r03         [16] 1051 	ld	(#_SpriteTableXN2), hl
                                   1052 ;./lib/./sprite.c:150: }
      00060C C9               [10] 1053 	ret
                                   1054 ;./lib/./sprite.c:167: void copySpritestoSAT (void) {
                                   1055 ;	---------------------------------
                                   1056 ; Function copySpritestoSAT
                                   1057 ; ---------------------------------
      00060D                       1058 _copySpritestoSAT::
                                   1059 ;./lib/./sprite.c:168: SMS_setAddr(SMS_SATAddress);
      00060D 21 00 7F         [10] 1060 	ld	hl, #0x7f00
      000610 CF               [11] 1061 	rst	#0x08
                                   1062 ;./lib/./sprite.c:184: __endasm;
      000611 3Ar00r00         [13] 1063 	ld	a,(#_SpriteNextFree)
      000614 B7               [ 4] 1064 	or	a
      000615 28 25            [12] 1065 	jr	z,_no_sprites
      000617 47               [ 4] 1066 	ld	b,a
      000618 0E BE            [ 7] 1067 	ld	c,#_VDPDataPort
      00061A 21r00r00         [10] 1068 	ld	hl,#_SpriteTableY
      00061D                       1069 _next_spriteY:
      00061D ED A3            [16] 1070 	outi	; 16 cycles
      00061F 20 FC            [12] 1071 	jr	nz,_next_spriteY ; 12 cycles = 28 (VRAM safe on GG too)
      000621 FE 40            [ 7] 1072 	cp	#64 ; 7 cycles
      000623 28 04            [12] 1073 	jr	z,_no_sprite_term ; 7 cycles
      000625 3E D0            [ 7] 1074 	ld	a,#0xD0 ; 7 cycles => VRAM safe
      000627 ED 79            [12] 1075 	out	(c),a
      000629                       1076 _no_sprite_term:
                                   1077 ;./lib/./sprite.c:185: SMS_setAddr(SMS_SATAddress+128);
      000629 21 80 7F         [10] 1078 	ld	hl, #0x7f80
      00062C CF               [11] 1079 	rst	#0x08
                                   1080 ;./lib/./sprite.c:200: __endasm;
      00062D 0E BE            [ 7] 1081 	ld	c,#_VDPDataPort
      00062F 3Ar00r00         [13] 1082 	ld	a,(#_SpriteNextFree)
      000632 87               [ 4] 1083 	add	a,a
      000633 47               [ 4] 1084 	ld	b,a
      000634 21r00r00         [10] 1085 	ld	hl,#_SpriteTableXN
      000637                       1086 _next_spriteXN:
      000637 ED A3            [16] 1087 	outi	; 16 cycles
      000639 20 FC            [12] 1088 	jr	nz,_next_spriteXN ; 12 cycles = 28 (VRAM safe on GG too)
      00063B C9               [10] 1089 	ret
      00063C                       1090 _no_sprites:
      00063C 3E D0            [ 7] 1091 	ld	a,#0xD0
      00063E D3 BE            [11] 1092 	out	(#_VDPDataPort),a
                                   1093 ;./lib/./sprite.c:201: }
      000640 C9               [10] 1094 	ret
                                   1095 ;./lib/entities.c:12: void draw_entidad(T_entidad *entidad, T_sprite *sprite){
                                   1096 ;	---------------------------------
                                   1097 ; Function draw_entidad
                                   1098 ; ---------------------------------
      000641                       1099 _draw_entidad::
      000641 DD E5            [15] 1100 	push	ix
      000643 DD 21 00 00      [14] 1101 	ld	ix,#0
      000647 DD 39            [15] 1102 	add	ix,sp
      000649 FD 21 E3 FF      [14] 1103 	ld	iy, #-29
      00064D FD 39            [15] 1104 	add	iy, sp
      00064F FD F9            [10] 1105 	ld	sp, iy
      000651 DD 75 FC         [19] 1106 	ld	-4 (ix), l
      000654 DD 74 FD         [19] 1107 	ld	-3 (ix), h
                                   1108 ;./lib/entities.c:14: if (sprite->allInRAM == 1){
      000657 DD 73 FA         [19] 1109 	ld	-6 (ix), e
      00065A DD 72 FB         [19] 1110 	ld	-5 (ix), d
      00065D 4B               [ 4] 1111 	ld	c, e
      00065E 42               [ 4] 1112 	ld	b, d
      00065F 21 06 00         [10] 1113 	ld	hl, #6
      000662 09               [11] 1114 	add	hl, bc
      000663 4E               [ 7] 1115 	ld	c, (hl)
                                   1116 ;./lib/entities.c:15: if (entidad->initSprite == 255) {
      000664 DD 7E FC         [19] 1117 	ld	a, -4 (ix)
      000667 C6 06            [ 7] 1118 	add	a, #0x06
      000669 DD 77 F2         [19] 1119 	ld	-14 (ix), a
      00066C DD 7E FD         [19] 1120 	ld	a, -3 (ix)
      00066F CE 00            [ 7] 1121 	adc	a, #0x00
      000671 DD 77 F3         [19] 1122 	ld	-13 (ix), a
      000674 DD 6E F2         [19] 1123 	ld	l, -14 (ix)
      000677 DD 66 F3         [19] 1124 	ld	h, -13 (ix)
      00067A 46               [ 7] 1125 	ld	b, (hl)
                                   1126 ;./lib/entities.c:16: int frame = sprite->tamano*entidad->frame + sprite->beginVRAM;
      00067B DD 7E FC         [19] 1127 	ld	a, -4 (ix)
      00067E C6 02            [ 7] 1128 	add	a, #0x02
      000680 DD 77 F4         [19] 1129 	ld	-12 (ix), a
      000683 DD 7E FD         [19] 1130 	ld	a, -3 (ix)
      000686 CE 00            [ 7] 1131 	adc	a, #0x00
      000688 DD 77 F5         [19] 1132 	ld	-11 (ix), a
                                   1133 ;./lib/entities.c:17: for(j=0;j<sprite->alto;j++) {
      00068B DD 7E FC         [19] 1134 	ld	a, -4 (ix)
      00068E C6 01            [ 7] 1135 	add	a, #0x01
      000690 DD 77 F8         [19] 1136 	ld	-8 (ix), a
      000693 DD 7E FD         [19] 1137 	ld	a, -3 (ix)
      000696 CE 00            [ 7] 1138 	adc	a, #0x00
      000698 DD 77 F9         [19] 1139 	ld	-7 (ix), a
      00069B DD 7E FA         [19] 1140 	ld	a, -6 (ix)
      00069E C6 01            [ 7] 1141 	add	a, #0x01
      0006A0 DD 77 FE         [19] 1142 	ld	-2 (ix), a
      0006A3 DD 7E FB         [19] 1143 	ld	a, -5 (ix)
      0006A6 CE 00            [ 7] 1144 	adc	a, #0x00
      0006A8 DD 77 FF         [19] 1145 	ld	-1 (ix), a
                                   1146 ;./lib/entities.c:27: entidad->len = (sprite->alto * sprite->ancho + entidad->initSprite)*2;
      0006AB DD 7E FC         [19] 1147 	ld	a, -4 (ix)
      0006AE C6 07            [ 7] 1148 	add	a, #0x07
      0006B0 DD 77 E3         [19] 1149 	ld	-29 (ix), a
      0006B3 DD 7E FD         [19] 1150 	ld	a, -3 (ix)
      0006B6 CE 00            [ 7] 1151 	adc	a, #0x00
      0006B8 DD 77 E4         [19] 1152 	ld	-28 (ix), a
                                   1153 ;./lib/entities.c:15: if (entidad->initSprite == 255) {
      0006BB 04               [ 4] 1154 	inc	b
      0006BC 3E 01            [ 7] 1155 	ld	a, #0x01
      0006BE 28 01            [12] 1156 	jr	Z, 00253$
      0006C0 AF               [ 4] 1157 	xor	a, a
      0006C1                       1158 00253$:
      0006C1 DD 77 F7         [19] 1159 	ld	-9 (ix), a
                                   1160 ;./lib/entities.c:14: if (sprite->allInRAM == 1){
      0006C4 0D               [ 4] 1161 	dec	c
      0006C5 C2rD8r08         [10] 1162 	jp	NZ,00120$
                                   1163 ;./lib/entities.c:15: if (entidad->initSprite == 255) {
      0006C8 DD 7E F2         [19] 1164 	ld	a, -14 (ix)
      0006CB DD 77 E5         [19] 1165 	ld	-27 (ix), a
      0006CE DD 7E F3         [19] 1166 	ld	a, -13 (ix)
      0006D1 DD 77 E6         [19] 1167 	ld	-26 (ix), a
      0006D4 DD 7E F7         [19] 1168 	ld	a, -9 (ix)
      0006D7 B7               [ 4] 1169 	or	a, a
      0006D8 CAr62r0A         [10] 1170 	jp	Z, 00134$
                                   1171 ;./lib/entities.c:16: int frame = sprite->tamano*entidad->frame + sprite->beginVRAM;
      0006DB DD 7E FA         [19] 1172 	ld	a, -6 (ix)
      0006DE DD 77 F2         [19] 1173 	ld	-14 (ix), a
      0006E1 DD 7E FB         [19] 1174 	ld	a, -5 (ix)
      0006E4 DD 77 F3         [19] 1175 	ld	-13 (ix), a
      0006E7 DD 6E F2         [19] 1176 	ld	l, -14 (ix)
      0006EA DD 66 F3         [19] 1177 	ld	h, -13 (ix)
      0006ED 23               [ 6] 1178 	inc	hl
      0006EE 23               [ 6] 1179 	inc	hl
      0006EF 7E               [ 7] 1180 	ld	a, (hl)
      0006F0 DD 77 F6         [19] 1181 	ld	-10 (ix), a
      0006F3 DD 6E F4         [19] 1182 	ld	l, -12 (ix)
      0006F6 DD 66 F5         [19] 1183 	ld	h, -11 (ix)
      0006F9 7E               [ 7] 1184 	ld	a, (hl)
      0006FA DD 77 F7         [19] 1185 	ld	-9 (ix), a
      0006FD DD 7E F6         [19] 1186 	ld	a, -10 (ix)
      000700 DD 77 F5         [19] 1187 	ld	-11 (ix), a
      000703 DD 5E F7         [19] 1188 	ld	e, -9 (ix)
      000706 DD 66 F5         [19] 1189 	ld	h, -11 (ix)
                                   1190 ;	spillPairReg hl
                                   1191 ;	spillPairReg hl
      000709 2E 00            [ 7] 1192 	ld	l, #0x00
      00070B 55               [ 4] 1193 	ld	d, l
      00070C 06 08            [ 7] 1194 	ld	b, #0x08
      00070E                       1195 00256$:
      00070E 29               [11] 1196 	add	hl, hl
      00070F 30 01            [12] 1197 	jr	NC, 00257$
      000711 19               [11] 1198 	add	hl, de
      000712                       1199 00257$:
      000712 10 FA            [13] 1200 	djnz	00256$
      000714 DD 75 F7         [19] 1201 	ld	-9 (ix), l
      000717 DD 7E FA         [19] 1202 	ld	a, -6 (ix)
      00071A DD 77 F5         [19] 1203 	ld	-11 (ix), a
      00071D DD 7E FB         [19] 1204 	ld	a, -5 (ix)
      000720 DD 77 F6         [19] 1205 	ld	-10 (ix), a
      000723 DD 6E F5         [19] 1206 	ld	l, -11 (ix)
      000726 DD 66 F6         [19] 1207 	ld	h, -10 (ix)
      000729 11 04 00         [10] 1208 	ld	de, #0x0004
      00072C 19               [11] 1209 	add	hl, de
      00072D 7E               [ 7] 1210 	ld	a, (hl)
      00072E DD 77 F6         [19] 1211 	ld	-10 (ix), a
      000731 DD 86 F7         [19] 1212 	add	a, -9 (ix)
      000734 DD 77 E7         [19] 1213 	ld	-25 (ix), a
                                   1214 ;./lib/entities.c:17: for(j=0;j<sprite->alto;j++) {
      000737 DD 7E F8         [19] 1215 	ld	a, -8 (ix)
      00073A DD 77 E8         [19] 1216 	ld	-24 (ix), a
      00073D DD 7E F9         [19] 1217 	ld	a, -7 (ix)
      000740 DD 77 E9         [19] 1218 	ld	-23 (ix), a
      000743 DD 7E FE         [19] 1219 	ld	a, -2 (ix)
      000746 DD 77 EA         [19] 1220 	ld	-22 (ix), a
      000749 DD 7E FF         [19] 1221 	ld	a, -1 (ix)
      00074C DD 77 EB         [19] 1222 	ld	-21 (ix), a
      00074F DD 36 FE 00      [19] 1223 	ld	-2 (ix), #0x00
      000753                       1224 00126$:
      000753 DD 6E FA         [19] 1225 	ld	l, -6 (ix)
      000756 DD 66 FB         [19] 1226 	ld	h, -5 (ix)
      000759 7E               [ 7] 1227 	ld	a, (hl)
      00075A DD 77 FF         [19] 1228 	ld	-1 (ix), a
      00075D DD 7E FE         [19] 1229 	ld	a, -2 (ix)
      000760 DD 96 FF         [19] 1230 	sub	a, -1 (ix)
      000763 D2r9Cr08         [10] 1231 	jp	NC, 00106$
                                   1232 ;./lib/entities.c:18: unsigned char desplazado = (j<<2);
      000766 DD 7E FE         [19] 1233 	ld	a, -2 (ix)
      000769 DD 77 FF         [19] 1234 	ld	-1 (ix), a
      00076C DD CB FF 26      [23] 1235 	sla	-1 (ix)
      000770 DD CB FF 26      [23] 1236 	sla	-1 (ix)
                                   1237 ;./lib/entities.c:19: unsigned char jCalculated = desplazado + frame, y = entidad->y+(desplazado<<2);
      000774 DD 7E FF         [19] 1238 	ld	a, -1 (ix)
      000777 DD 77 F9         [19] 1239 	ld	-7 (ix), a
      00077A DD 86 E7         [19] 1240 	add	a, -25 (ix)
      00077D DD 77 FF         [19] 1241 	ld	-1 (ix), a
      000780 DD 77 EC         [19] 1242 	ld	-20 (ix), a
      000783 DD 6E E8         [19] 1243 	ld	l, -24 (ix)
      000786 DD 66 E9         [19] 1244 	ld	h, -23 (ix)
      000789 7E               [ 7] 1245 	ld	a, (hl)
      00078A DD 77 FF         [19] 1246 	ld	-1 (ix), a
      00078D DD CB F9 26      [23] 1247 	sla	-7 (ix)
      000791 DD CB F9 26      [23] 1248 	sla	-7 (ix)
      000795 DD 7E FF         [19] 1249 	ld	a, -1 (ix)
      000798 DD 86 F9         [19] 1250 	add	a, -7 (ix)
      00079B DD 77 FF         [19] 1251 	ld	-1 (ix), a
      00079E DD 77 ED         [19] 1252 	ld	-19 (ix), a
                                   1253 ;./lib/entities.c:20: for(i=0;i<sprite->ancho;i++) {
      0007A1 DD 36 FF 00      [19] 1254 	ld	-1 (ix), #0x00
      0007A5                       1255 00123$:
      0007A5 DD 6E EA         [19] 1256 	ld	l, -22 (ix)
      0007A8 DD 66 EB         [19] 1257 	ld	h, -21 (ix)
      0007AB DD 7E FF         [19] 1258 	ld	a,-1 (ix)
      0007AE 96               [ 7] 1259 	sub	a,(hl)
      0007AF D2r96r08         [10] 1260 	jp	NC, 00127$
                                   1261 ;./lib/entities.c:22: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      0007B2 DD 6E FC         [19] 1262 	ld	l, -4 (ix)
      0007B5 DD 66 FD         [19] 1263 	ld	h, -3 (ix)
      0007B8 7E               [ 7] 1264 	ld	a, (hl)
      0007B9 DD 77 F7         [19] 1265 	ld	-9 (ix), a
      0007BC DD 7E FF         [19] 1266 	ld	a, -1 (ix)
      0007BF DD 77 F8         [19] 1267 	ld	-8 (ix), a
      0007C2 DD 36 F9 00      [19] 1268 	ld	-7 (ix), #0x00
      0007C6 DD 7E EC         [19] 1269 	ld	a, -20 (ix)
      0007C9 DD 77 EE         [19] 1270 	ld	-18 (ix), a
      0007CC DD 36 EF 00      [19] 1271 	ld	-17 (ix), #0x00
      0007D0 DD 7E ED         [19] 1272 	ld	a, -19 (ix)
      0007D3 DD 77 F0         [19] 1273 	ld	-16 (ix), a
      0007D6 DD 36 F1 00      [19] 1274 	ld	-15 (ix), #0x00
      0007DA DD 7E F7         [19] 1275 	ld	a, -9 (ix)
      0007DD DD 77 F2         [19] 1276 	ld	-14 (ix), a
      0007E0 DD 36 F3 00      [19] 1277 	ld	-13 (ix), #0x00
      0007E4 DD 7E F8         [19] 1278 	ld	a, -8 (ix)
      0007E7 DD 77 F4         [19] 1279 	ld	-12 (ix), a
      0007EA DD 7E F9         [19] 1280 	ld	a, -7 (ix)
      0007ED DD 77 F5         [19] 1281 	ld	-11 (ix), a
      0007F0 06 03            [ 7] 1282 	ld	b, #0x03
      0007F2                       1283 00258$:
      0007F2 DD CB F4 26      [23] 1284 	sla	-12 (ix)
      0007F6 DD CB F5 16      [23] 1285 	rl	-11 (ix)
      0007FA 10 F6            [13] 1286 	djnz	00258$
      0007FC DD 7E F8         [19] 1287 	ld	a, -8 (ix)
      0007FF DD 77 F6         [19] 1288 	ld	-10 (ix), a
      000802 DD 7E F9         [19] 1289 	ld	a, -7 (ix)
      000805 DD 77 F7         [19] 1290 	ld	-9 (ix), a
      000808 DD CB F6 26      [23] 1291 	sla	-10 (ix)
      00080C DD CB F7 16      [23] 1292 	rl	-9 (ix)
      000810 DD 7E F4         [19] 1293 	ld	a, -12 (ix)
      000813 DD 86 F2         [19] 1294 	add	a, -14 (ix)
      000816 DD 77 F8         [19] 1295 	ld	-8 (ix), a
      000819 DD 7E F5         [19] 1296 	ld	a, -11 (ix)
      00081C DD 8E F3         [19] 1297 	adc	a, -13 (ix)
      00081F DD 77 F9         [19] 1298 	ld	-7 (ix), a
      000822 DD 7E EE         [19] 1299 	ld	a, -18 (ix)
      000825 DD 86 F6         [19] 1300 	add	a, -10 (ix)
      000828 DD 77 F4         [19] 1301 	ld	-12 (ix), a
      00082B 3E 00            [ 7] 1302 	ld	a, #0x00
      00082D DD 8E F7         [19] 1303 	adc	a, -9 (ix)
      000830 DD 77 F5         [19] 1304 	ld	-11 (ix), a
      000833 DD 7E F8         [19] 1305 	ld	a, -8 (ix)
      000836 DD 77 F6         [19] 1306 	ld	-10 (ix), a
      000839 DD 36 F7 00      [19] 1307 	ld	-9 (ix), #0x00
      00083D DD 7E F4         [19] 1308 	ld	a, -12 (ix)
      000840 DD 77 F8         [19] 1309 	ld	-8 (ix), a
      000843 DD 36 F9 00      [19] 1310 	ld	-7 (ix), #0x00
      000847 DD 7E F6         [19] 1311 	ld	a, -10 (ix)
      00084A DD 77 F7         [19] 1312 	ld	-9 (ix), a
      00084D DD 36 F6 00      [19] 1313 	ld	-10 (ix), #0x00
      000851 AF               [ 4] 1314 	xor	a, a
      000852 DD B6 F8         [19] 1315 	or	a, -8 (ix)
      000855 DD 77 F4         [19] 1316 	ld	-12 (ix), a
      000858 DD 7E F7         [19] 1317 	ld	a, -9 (ix)
      00085B DD B6 F9         [19] 1318 	or	a, -7 (ix)
      00085E DD 77 F5         [19] 1319 	ld	-11 (ix), a
                                   1320 ;./lib/entities.c:21: if(i==0 && j==0)
      000861 DD 7E FF         [19] 1321 	ld	a, -1 (ix)
      000864 B7               [ 4] 1322 	or	a, a
      000865 20 1B            [12] 1323 	jr	NZ, 00102$
      000867 DD 7E FE         [19] 1324 	ld	a, -2 (ix)
      00086A B7               [ 4] 1325 	or	a, a
      00086B 20 15            [12] 1326 	jr	NZ, 00102$
                                   1327 ;./lib/entities.c:22: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      00086D DD 5E F4         [19] 1328 	ld	e, -12 (ix)
      000870 DD 56 F5         [19] 1329 	ld	d, -11 (ix)
      000873 DD 6E F0         [19] 1330 	ld	l, -16 (ix)
                                   1331 ;	spillPairReg hl
                                   1332 ;	spillPairReg hl
      000876 26 00            [ 7] 1333 	ld	h, #0x00
                                   1334 ;	spillPairReg hl
                                   1335 ;	spillPairReg hl
      000878 CDr00r00         [17] 1336 	call	_SMS_addSprite_f
      00087B C1               [10] 1337 	pop	bc
      00087C E1               [10] 1338 	pop	hl
      00087D E5               [11] 1339 	push	hl
      00087E C5               [11] 1340 	push	bc
      00087F 77               [ 7] 1341 	ld	(hl), a
      000880 18 0E            [12] 1342 	jr	00124$
      000882                       1343 00102$:
                                   1344 ;./lib/entities.c:24: SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      000882 DD 5E F4         [19] 1345 	ld	e, -12 (ix)
      000885 DD 56 F5         [19] 1346 	ld	d, -11 (ix)
      000888 DD 6E F0         [19] 1347 	ld	l, -16 (ix)
                                   1348 ;	spillPairReg hl
                                   1349 ;	spillPairReg hl
      00088B 26 00            [ 7] 1350 	ld	h, #0x00
                                   1351 ;	spillPairReg hl
                                   1352 ;	spillPairReg hl
      00088D CDr00r00         [17] 1353 	call	_SMS_addSprite_f
      000890                       1354 00124$:
                                   1355 ;./lib/entities.c:20: for(i=0;i<sprite->ancho;i++) {
      000890 DD 34 FF         [23] 1356 	inc	-1 (ix)
      000893 C3rA5r07         [10] 1357 	jp	00123$
      000896                       1358 00127$:
                                   1359 ;./lib/entities.c:17: for(j=0;j<sprite->alto;j++) {
      000896 DD 34 FE         [23] 1360 	inc	-2 (ix)
      000899 C3r53r07         [10] 1361 	jp	00126$
      00089C                       1362 00106$:
                                   1363 ;./lib/entities.c:27: entidad->len = (sprite->alto * sprite->ancho + entidad->initSprite)*2;
      00089C DD 6E EA         [19] 1364 	ld	l, -22 (ix)
      00089F DD 66 EB         [19] 1365 	ld	h, -21 (ix)
      0008A2 7E               [ 7] 1366 	ld	a, (hl)
      0008A3 DD 77 FE         [19] 1367 	ld	-2 (ix), a
      0008A6 5F               [ 4] 1368 	ld	e, a
      0008A7 DD 66 FF         [19] 1369 	ld	h, -1 (ix)
                                   1370 ;	spillPairReg hl
                                   1371 ;	spillPairReg hl
      0008AA 2E 00            [ 7] 1372 	ld	l, #0x00
      0008AC 55               [ 4] 1373 	ld	d, l
      0008AD 06 08            [ 7] 1374 	ld	b, #0x08
      0008AF                       1375 00260$:
      0008AF 29               [11] 1376 	add	hl, hl
      0008B0 30 01            [12] 1377 	jr	NC, 00261$
      0008B2 19               [11] 1378 	add	hl, de
      0008B3                       1379 00261$:
      0008B3 10 FA            [13] 1380 	djnz	00260$
      0008B5 DD 75 FF         [19] 1381 	ld	-1 (ix), l
      0008B8 DD 6E E5         [19] 1382 	ld	l, -27 (ix)
      0008BB DD 66 E6         [19] 1383 	ld	h, -26 (ix)
      0008BE 7E               [ 7] 1384 	ld	a, (hl)
      0008BF DD 77 FE         [19] 1385 	ld	-2 (ix), a
      0008C2 DD 7E FF         [19] 1386 	ld	a, -1 (ix)
      0008C5 DD 86 FE         [19] 1387 	add	a, -2 (ix)
      0008C8 DD 77 FF         [19] 1388 	ld	-1 (ix), a
      0008CB DD CB FF 26      [23] 1389 	sla	-1 (ix)
      0008CF E1               [10] 1390 	pop	hl
      0008D0 E5               [11] 1391 	push	hl
      0008D1 DD 7E FF         [19] 1392 	ld	a, -1 (ix)
      0008D4 77               [ 7] 1393 	ld	(hl), a
      0008D5 C3r62r0A         [10] 1394 	jp	00134$
      0008D8                       1395 00120$:
                                   1396 ;./lib/entities.c:32: if (entidad->initSprite == 255) {
      0008D8 DD 7E F2         [19] 1397 	ld	a, -14 (ix)
      0008DB DD 77 EC         [19] 1398 	ld	-20 (ix), a
      0008DE DD 7E F3         [19] 1399 	ld	a, -13 (ix)
      0008E1 DD 77 ED         [19] 1400 	ld	-19 (ix), a
      0008E4 DD 7E F7         [19] 1401 	ld	a, -9 (ix)
      0008E7 B7               [ 4] 1402 	or	a, a
      0008E8 CAr62r0A         [10] 1403 	jp	Z, 00134$
                                   1404 ;./lib/entities.c:33: if (entidad->frame != sprite->frameInVRAM){
      0008EB DD 6E F4         [19] 1405 	ld	l, -12 (ix)
      0008EE DD 66 F5         [19] 1406 	ld	h, -11 (ix)
      0008F1 7E               [ 7] 1407 	ld	a, (hl)
      0008F2 DD 77 F7         [19] 1408 	ld	-9 (ix), a
      0008F5 DD 7E FA         [19] 1409 	ld	a, -6 (ix)
      0008F8 C6 09            [ 7] 1410 	add	a, #0x09
      0008FA DD 77 F5         [19] 1411 	ld	-11 (ix), a
      0008FD DD 7E FB         [19] 1412 	ld	a, -5 (ix)
      000900 CE 00            [ 7] 1413 	adc	a, #0x00
      000902 DD 77 F6         [19] 1414 	ld	-10 (ix), a
      000905 DD 6E F5         [19] 1415 	ld	l, -11 (ix)
      000908 DD 66 F6         [19] 1416 	ld	h, -10 (ix)
      00090B DD 7E F7         [19] 1417 	ld	a,-9 (ix)
      00090E 96               [ 7] 1418 	sub	a,(hl)
      00090F 28 0A            [12] 1419 	jr	Z, 00151$
                                   1420 ;./lib/entities.c:35: sprite->frameInVRAM = entidad->frame;
      000911 DD 6E F5         [19] 1421 	ld	l, -11 (ix)
      000914 DD 66 F6         [19] 1422 	ld	h, -10 (ix)
      000917 DD 7E F7         [19] 1423 	ld	a, -9 (ix)
      00091A 77               [ 7] 1424 	ld	(hl), a
                                   1425 ;./lib/entities.c:37: for(j=0;j<sprite->alto;j++) {
      00091B                       1426 00151$:
      00091B DD 7E F8         [19] 1427 	ld	a, -8 (ix)
      00091E DD 77 EE         [19] 1428 	ld	-18 (ix), a
      000921 DD 7E F9         [19] 1429 	ld	a, -7 (ix)
      000924 DD 77 EF         [19] 1430 	ld	-17 (ix), a
      000927 DD 7E F8         [19] 1431 	ld	a, -8 (ix)
      00092A DD 77 F0         [19] 1432 	ld	-16 (ix), a
      00092D DD 7E F9         [19] 1433 	ld	a, -7 (ix)
      000930 DD 77 F1         [19] 1434 	ld	-15 (ix), a
      000933 DD 7E FE         [19] 1435 	ld	a, -2 (ix)
      000936 DD 77 F2         [19] 1436 	ld	-14 (ix), a
      000939 DD 7E FF         [19] 1437 	ld	a, -1 (ix)
      00093C DD 77 F3         [19] 1438 	ld	-13 (ix), a
      00093F DD 36 FE 00      [19] 1439 	ld	-2 (ix), #0x00
      000943                       1440 00132$:
      000943 DD 6E FA         [19] 1441 	ld	l, -6 (ix)
      000946 DD 66 FB         [19] 1442 	ld	h, -5 (ix)
      000949 7E               [ 7] 1443 	ld	a, (hl)
      00094A DD 77 FF         [19] 1444 	ld	-1 (ix), a
      00094D DD 7E FE         [19] 1445 	ld	a, -2 (ix)
      000950 DD 96 FF         [19] 1446 	sub	a, -1 (ix)
      000953 D2r11r0A         [10] 1447 	jp	NC, 00116$
                                   1448 ;./lib/entities.c:38: for(i=0;i<sprite->ancho;i++) {
      000956 DD 36 FF 00      [19] 1449 	ld	-1 (ix), #0x00
      00095A                       1450 00129$:
      00095A DD 6E F2         [19] 1451 	ld	l, -14 (ix)
      00095D DD 66 F3         [19] 1452 	ld	h, -13 (ix)
      000960 DD 7E FF         [19] 1453 	ld	a,-1 (ix)
      000963 96               [ 7] 1454 	sub	a,(hl)
      000964 D2r0Br0A         [10] 1455 	jp	NC, 00133$
                                   1456 ;./lib/entities.c:22: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      000967 DD 6E FC         [19] 1457 	ld	l, -4 (ix)
      00096A DD 66 FD         [19] 1458 	ld	h, -3 (ix)
      00096D 7E               [ 7] 1459 	ld	a, (hl)
                                   1460 ;./lib/entities.c:40: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),entidad->y+(j<<4), (j<<2) + (i<<1) );  
      00096E DD 4E FF         [19] 1461 	ld	c, -1 (ix)
      000971 06 00            [ 7] 1462 	ld	b, #0x00
      000973 DD 5E FE         [19] 1463 	ld	e, -2 (ix)
      000976 16 00            [ 7] 1464 	ld	d, #0x00
                                   1465 ;./lib/entities.c:22: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      000978 DD 77 F4         [19] 1466 	ld	-12 (ix), a
      00097B DD 36 F5 00      [19] 1467 	ld	-11 (ix), #0x00
                                   1468 ;./lib/entities.c:40: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),entidad->y+(j<<4), (j<<2) + (i<<1) );  
      00097F DD 71 F6         [19] 1469 	ld	-10 (ix), c
      000982 DD 70 F7         [19] 1470 	ld	-9 (ix), b
      000985 3E 03            [ 7] 1471 	ld	a, #0x03
      000987                       1472 00263$:
      000987 DD CB F6 26      [23] 1473 	sla	-10 (ix)
      00098B DD CB F7 16      [23] 1474 	rl	-9 (ix)
      00098F 3D               [ 4] 1475 	dec	a
      000990 20 F5            [12] 1476 	jr	NZ, 00263$
      000992 6B               [ 4] 1477 	ld	l, e
      000993 62               [ 4] 1478 	ld	h, d
      000994 29               [11] 1479 	add	hl, hl
      000995 29               [11] 1480 	add	hl, hl
      000996 CB 21            [ 8] 1481 	sla	c
      000998 CB 10            [ 8] 1482 	rl	b
      00099A EB               [ 4] 1483 	ex	de, hl
      00099B 29               [11] 1484 	add	hl, hl
      00099C 29               [11] 1485 	add	hl, hl
      00099D 29               [11] 1486 	add	hl, hl
      00099E 29               [11] 1487 	add	hl, hl
      00099F EB               [ 4] 1488 	ex	de, hl
      0009A0 DD 73 F8         [19] 1489 	ld	-8 (ix), e
      0009A3 DD 72 F9         [19] 1490 	ld	-7 (ix), d
      0009A6 DD 7E F4         [19] 1491 	ld	a, -12 (ix)
      0009A9 DD 86 F6         [19] 1492 	add	a, -10 (ix)
      0009AC 5F               [ 4] 1493 	ld	e, a
      0009AD 3E 00            [ 7] 1494 	ld	a, #0x00
      0009AF DD 8E F7         [19] 1495 	adc	a, -9 (ix)
      0009B2 09               [11] 1496 	add	hl, bc
                                   1497 ;	spillPairReg hl
                                   1498 ;	spillPairReg hl
      0009B3 AF               [ 4] 1499 	xor	a, a
      0009B4 67               [ 4] 1500 	ld	h,a
      0009B5 B5               [ 4] 1501 	or	a, l
      0009B6 DD 77 F6         [19] 1502 	ld	-10 (ix), a
      0009B9 7B               [ 4] 1503 	ld	a, e
      0009BA B4               [ 4] 1504 	or	a, h
      0009BB DD 77 F7         [19] 1505 	ld	-9 (ix), a
                                   1506 ;./lib/entities.c:39: if(i==0 && j==0) {
      0009BE DD 7E FF         [19] 1507 	ld	a, -1 (ix)
      0009C1 B7               [ 4] 1508 	or	a, a
      0009C2 20 28            [12] 1509 	jr	NZ, 00112$
      0009C4 DD 7E FE         [19] 1510 	ld	a, -2 (ix)
      0009C7 B7               [ 4] 1511 	or	a, a
      0009C8 20 22            [12] 1512 	jr	NZ, 00112$
                                   1513 ;./lib/entities.c:40: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),entidad->y+(j<<4), (j<<2) + (i<<1) );  
      0009CA DD 6E F0         [19] 1514 	ld	l, -16 (ix)
      0009CD DD 66 F1         [19] 1515 	ld	h, -15 (ix)
      0009D0 4E               [ 7] 1516 	ld	c, (hl)
      0009D1 06 00            [ 7] 1517 	ld	b, #0x00
      0009D3 DD 6E F8         [19] 1518 	ld	l, -8 (ix)
                                   1519 ;	spillPairReg hl
                                   1520 ;	spillPairReg hl
      0009D6 DD 66 F9         [19] 1521 	ld	h, -7 (ix)
                                   1522 ;	spillPairReg hl
                                   1523 ;	spillPairReg hl
      0009D9 09               [11] 1524 	add	hl, bc
      0009DA DD 5E F6         [19] 1525 	ld	e, -10 (ix)
      0009DD DD 56 F7         [19] 1526 	ld	d, -9 (ix)
      0009E0 CDr00r00         [17] 1527 	call	_SMS_addSprite_f
      0009E3 DD 6E EC         [19] 1528 	ld	l, -20 (ix)
      0009E6 DD 66 ED         [19] 1529 	ld	h, -19 (ix)
      0009E9 77               [ 7] 1530 	ld	(hl), a
      0009EA 18 19            [12] 1531 	jr	00130$
      0009EC                       1532 00112$:
                                   1533 ;./lib/entities.c:43: SMS_addSprite(entidad->x+(i<<3),entidad->y+(j<<4), (j<<2) + (i<<1) );
      0009EC DD 6E EE         [19] 1534 	ld	l, -18 (ix)
      0009EF DD 66 EF         [19] 1535 	ld	h, -17 (ix)
      0009F2 4E               [ 7] 1536 	ld	c, (hl)
      0009F3 06 00            [ 7] 1537 	ld	b, #0x00
      0009F5 DD 6E F8         [19] 1538 	ld	l, -8 (ix)
                                   1539 ;	spillPairReg hl
                                   1540 ;	spillPairReg hl
      0009F8 DD 66 F9         [19] 1541 	ld	h, -7 (ix)
                                   1542 ;	spillPairReg hl
                                   1543 ;	spillPairReg hl
      0009FB 09               [11] 1544 	add	hl, bc
      0009FC DD 5E F6         [19] 1545 	ld	e, -10 (ix)
      0009FF DD 56 F7         [19] 1546 	ld	d, -9 (ix)
      000A02 CDr00r00         [17] 1547 	call	_SMS_addSprite_f
      000A05                       1548 00130$:
                                   1549 ;./lib/entities.c:38: for(i=0;i<sprite->ancho;i++) {
      000A05 DD 34 FF         [23] 1550 	inc	-1 (ix)
      000A08 C3r5Ar09         [10] 1551 	jp	00129$
      000A0B                       1552 00133$:
                                   1553 ;./lib/entities.c:37: for(j=0;j<sprite->alto;j++) {
      000A0B DD 34 FE         [23] 1554 	inc	-2 (ix)
      000A0E C3r43r09         [10] 1555 	jp	00132$
      000A11                       1556 00116$:
                                   1557 ;./lib/entities.c:47: entidad->len = sprite->alto * sprite->ancho + entidad->initSprite;
      000A11 DD 6E F2         [19] 1558 	ld	l, -14 (ix)
      000A14 DD 66 F3         [19] 1559 	ld	h, -13 (ix)
      000A17 7E               [ 7] 1560 	ld	a, (hl)
      000A18 DD 77 FE         [19] 1561 	ld	-2 (ix), a
      000A1B 5F               [ 4] 1562 	ld	e, a
      000A1C DD 66 FF         [19] 1563 	ld	h, -1 (ix)
                                   1564 ;	spillPairReg hl
                                   1565 ;	spillPairReg hl
      000A1F 2E 00            [ 7] 1566 	ld	l, #0x00
      000A21 55               [ 4] 1567 	ld	d, l
      000A22 06 08            [ 7] 1568 	ld	b, #0x08
      000A24                       1569 00265$:
      000A24 29               [11] 1570 	add	hl, hl
      000A25 30 01            [12] 1571 	jr	NC, 00266$
      000A27 19               [11] 1572 	add	hl, de
      000A28                       1573 00266$:
      000A28 10 FA            [13] 1574 	djnz	00265$
      000A2A DD 75 FF         [19] 1575 	ld	-1 (ix), l
      000A2D DD 6E EC         [19] 1576 	ld	l, -20 (ix)
      000A30 DD 66 ED         [19] 1577 	ld	h, -19 (ix)
      000A33 7E               [ 7] 1578 	ld	a, (hl)
      000A34 DD 77 FE         [19] 1579 	ld	-2 (ix), a
      000A37 DD 86 FF         [19] 1580 	add	a, -1 (ix)
      000A3A DD 77 FF         [19] 1581 	ld	-1 (ix), a
      000A3D E1               [10] 1582 	pop	hl
      000A3E E5               [11] 1583 	push	hl
      000A3F DD 7E FF         [19] 1584 	ld	a, -1 (ix)
      000A42 77               [ 7] 1585 	ld	(hl), a
                                   1586 ;./lib/entities.c:48: entidad->sprite = sprite;
      000A43 DD 7E FC         [19] 1587 	ld	a, -4 (ix)
      000A46 C6 08            [ 7] 1588 	add	a, #0x08
      000A48 DD 77 FE         [19] 1589 	ld	-2 (ix), a
      000A4B DD 7E FD         [19] 1590 	ld	a, -3 (ix)
      000A4E CE 00            [ 7] 1591 	adc	a, #0x00
      000A50 DD 77 FF         [19] 1592 	ld	-1 (ix), a
      000A53 DD 6E FE         [19] 1593 	ld	l, -2 (ix)
      000A56 DD 66 FF         [19] 1594 	ld	h, -1 (ix)
      000A59 DD 7E FA         [19] 1595 	ld	a, -6 (ix)
      000A5C 77               [ 7] 1596 	ld	(hl), a
      000A5D 23               [ 6] 1597 	inc	hl
      000A5E DD 7E FB         [19] 1598 	ld	a, -5 (ix)
      000A61 77               [ 7] 1599 	ld	(hl), a
      000A62                       1600 00134$:
                                   1601 ;./lib/entities.c:51: }
      000A62 DD F9            [10] 1602 	ld	sp, ix
      000A64 DD E1            [14] 1603 	pop	ix
      000A66 C9               [10] 1604 	ret
                                   1605 ;./alex.c:20: unsigned char canUp(){
                                   1606 ;	---------------------------------
                                   1607 ; Function canUp
                                   1608 ; ---------------------------------
      000A67                       1609 _canUp::
                                   1610 ;./alex.c:21: if (alex.x < 2)
      000A67 3Ar03r01         [13] 1611 	ld	a, (#_alex + 0)
      000A6A D6 02            [ 7] 1612 	sub	a, #0x02
      000A6C 30 02            [12] 1613 	jr	NC, 00102$
                                   1614 ;./alex.c:22: return 0;
      000A6E AF               [ 4] 1615 	xor	a, a
      000A6F C9               [10] 1616 	ret
      000A70                       1617 00102$:
                                   1618 ;./alex.c:23: return 1;
      000A70 3E 01            [ 7] 1619 	ld	a, #0x01
                                   1620 ;./alex.c:24: }
      000A72 C9               [10] 1621 	ret
                                   1622 ;./alex.c:26: unsigned char canDown() {
                                   1623 ;	---------------------------------
                                   1624 ; Function canDown
                                   1625 ; ---------------------------------
      000A73                       1626 _canDown::
                                   1627 ;./alex.c:27: if (alex.y > 153)
      000A73 21r04r01         [10] 1628 	ld	hl, #_alex+1
      000A76 4E               [ 7] 1629 	ld	c, (hl)
      000A77 3E 99            [ 7] 1630 	ld	a, #0x99
      000A79 91               [ 4] 1631 	sub	a, c
      000A7A 30 02            [12] 1632 	jr	NC, 00102$
                                   1633 ;./alex.c:28: return 0;
      000A7C AF               [ 4] 1634 	xor	a, a
      000A7D C9               [10] 1635 	ret
      000A7E                       1636 00102$:
                                   1637 ;./alex.c:29: return 1;
      000A7E 3E 01            [ 7] 1638 	ld	a, #0x01
                                   1639 ;./alex.c:30: }
      000A80 C9               [10] 1640 	ret
                                   1641 ;./alex.c:32: unsigned char canLeft() {
                                   1642 ;	---------------------------------
                                   1643 ; Function canLeft
                                   1644 ; ---------------------------------
      000A81                       1645 _canLeft::
                                   1646 ;./alex.c:33: if (alex.x < 9)
      000A81 3Ar03r01         [13] 1647 	ld	a, (#_alex + 0)
      000A84 D6 09            [ 7] 1648 	sub	a, #0x09
      000A86 30 02            [12] 1649 	jr	NC, 00102$
                                   1650 ;./alex.c:34: return 0;
      000A88 AF               [ 4] 1651 	xor	a, a
      000A89 C9               [10] 1652 	ret
      000A8A                       1653 00102$:
                                   1654 ;./alex.c:35: return 1;
      000A8A 3E 01            [ 7] 1655 	ld	a, #0x01
                                   1656 ;./alex.c:36: }
      000A8C C9               [10] 1657 	ret
                                   1658 ;./alex.c:38: unsigned char canRight() {
                                   1659 ;	---------------------------------
                                   1660 ; Function canRight
                                   1661 ; ---------------------------------
      000A8D                       1662 _canRight::
                                   1663 ;./alex.c:39: if (alex.x > 238)
      000A8D 21r03r01         [10] 1664 	ld	hl, #_alex+0
      000A90 4E               [ 7] 1665 	ld	c, (hl)
      000A91 3E EE            [ 7] 1666 	ld	a, #0xee
      000A93 91               [ 4] 1667 	sub	a, c
      000A94 30 02            [12] 1668 	jr	NC, 00102$
                                   1669 ;./alex.c:40: return 0;
      000A96 AF               [ 4] 1670 	xor	a, a
      000A97 C9               [10] 1671 	ret
      000A98                       1672 00102$:
                                   1673 ;./alex.c:41: return 1;
      000A98 3E 01            [ 7] 1674 	ld	a, #0x01
                                   1675 ;./alex.c:42: }
      000A9A C9               [10] 1676 	ret
                                   1677 ;./alex.c:44: void moveAlexSuelo(int keys) {
                                   1678 ;	---------------------------------
                                   1679 ; Function moveAlexSuelo
                                   1680 ; ---------------------------------
      000A9B                       1681 _moveAlexSuelo::
      000A9B DD E5            [15] 1682 	push	ix
      000A9D DD 21 00 00      [14] 1683 	ld	ix,#0
      000AA1 DD 39            [15] 1684 	add	ix,sp
      000AA3 F5               [11] 1685 	push	af
      000AA4 F5               [11] 1686 	push	af
      000AA5 F5               [11] 1687 	push	af
      000AA6 DD 75 FE         [19] 1688 	ld	-2 (ix), l
      000AA9 DD 74 FF         [19] 1689 	ld	-1 (ix), h
                                   1690 ;./alex.c:46: if (keys & PORT_A_KEY_LEFT)
      000AAC DD 7E FE         [19] 1691 	ld	a, -2 (ix)
      000AAF E6 04            [ 7] 1692 	and	a, #0x04
      000AB1 DD 77 FA         [19] 1693 	ld	-6 (ix), a
      000AB4 DD 36 FB 00      [19] 1694 	ld	-5 (ix), #0x00
                                   1695 ;./alex.c:48: if (keys & PORT_A_KEY_RIGHT)
      000AB8 DD 7E FE         [19] 1696 	ld	a, -2 (ix)
      000ABB E6 08            [ 7] 1697 	and	a, #0x08
      000ABD DD 77 FC         [19] 1698 	ld	-4 (ix), a
      000AC0 DD 36 FD 00      [19] 1699 	ld	-3 (ix), #0x00
                                   1700 ;./alex.c:45: if ((keys & PORT_A_KEY_DOWN)){
      000AC4 DD CB FE 4E      [20] 1701 	bit	1, -2 (ix)
      000AC8 28 33            [12] 1702 	jr	Z, 00109$
                                   1703 ;./alex.c:46: if (keys & PORT_A_KEY_LEFT)
      000ACA AF               [ 4] 1704 	xor	a, a
      000ACB DD B6 FA         [19] 1705 	or	a, -6 (ix)
      000ACE 28 05            [12] 1706 	jr	Z, 00102$
                                   1707 ;./alex.c:47: alex.oriented = 1;
      000AD0 21r07r01         [10] 1708 	ld	hl, #_alex+4
      000AD3 36 01            [10] 1709 	ld	(hl), #0x01
      000AD5                       1710 00102$:
                                   1711 ;./alex.c:48: if (keys & PORT_A_KEY_RIGHT)
      000AD5 AF               [ 4] 1712 	xor	a, a
      000AD6 DD B6 FC         [19] 1713 	or	a, -4 (ix)
      000AD9 28 05            [12] 1714 	jr	Z, 00104$
                                   1715 ;./alex.c:49: alex.oriented = 0;
      000ADB 21r07r01         [10] 1716 	ld	hl, #_alex+4
      000ADE 36 00            [10] 1717 	ld	(hl), #0x00
      000AE0                       1718 00104$:
                                   1719 ;./alex.c:50: if (!alex.oriented)
      000AE0 3Ar07r01         [13] 1720 	ld	a,(#_alex + 4)
                                   1721 ;./alex.c:51: alex.frame = 7;
                                   1722 ;./alex.c:50: if (!alex.oriented)
      000AE3 DD 77 FD         [19] 1723 	ld	-3 (ix), a
      000AE6 B7               [ 4] 1724 	or	a, a
      000AE7 20 07            [12] 1725 	jr	NZ, 00106$
                                   1726 ;./alex.c:51: alex.frame = 7;
      000AE9 21r05r01         [10] 1727 	ld	hl, #(_alex + 2)
      000AEC 36 07            [10] 1728 	ld	(hl), #0x07
      000AEE 18 05            [12] 1729 	jr	00107$
      000AF0                       1730 00106$:
                                   1731 ;./alex.c:53: alex.frame = 15;
      000AF0 21r05r01         [10] 1732 	ld	hl, #(_alex + 2)
      000AF3 36 0F            [10] 1733 	ld	(hl), #0x0f
      000AF5                       1734 00107$:
                                   1735 ;./alex.c:54: alex.lastChangeFrame = 15;
      000AF5 21r06r01         [10] 1736 	ld	hl, #_alex + 3
      000AF8 36 0F            [10] 1737 	ld	(hl), #0x0f
                                   1738 ;./alex.c:55: return; // not move
      000AFA C3r5Er0C         [10] 1739 	jp	00146$
      000AFD                       1740 00109$:
                                   1741 ;./alex.c:58: if (keys & PORT_A_KEY_2) {
      000AFD DD CB FE 6E      [20] 1742 	bit	5, -2 (ix)
      000B01 28 2A            [12] 1743 	jr	Z, 00116$
                                   1744 ;./alex.c:59: if (alex.y > 100)
      000B03 01r04r01         [10] 1745 	ld	bc, #_alex+1
      000B06 0A               [ 7] 1746 	ld	a, (bc)
      000B07 5F               [ 4] 1747 	ld	e, a
      000B08 3E 64            [ 7] 1748 	ld	a, #0x64
      000B0A 93               [ 4] 1749 	sub	a, e
      000B0B 30 09            [12] 1750 	jr	NC, 00111$
                                   1751 ;./alex.c:60: maxSalto = alex.y - 100;
      000B0D 7B               [ 4] 1752 	ld	a, e
      000B0E 21r02r01         [10] 1753 	ld	hl, #_maxSalto
      000B11 C6 9C            [ 7] 1754 	add	a, #0x9c
      000B13 77               [ 7] 1755 	ld	(hl), a
      000B14 18 05            [12] 1756 	jr	00112$
      000B16                       1757 00111$:
                                   1758 ;./alex.c:62: maxSalto = 0;
      000B16 21r02r01         [10] 1759 	ld	hl, #_maxSalto
      000B19 36 00            [10] 1760 	ld	(hl), #0x00
      000B1B                       1761 00112$:
                                   1762 ;./alex.c:63: alex.y--;
      000B1B 0A               [ 7] 1763 	ld	a, (bc)
      000B1C 3D               [ 4] 1764 	dec	a
      000B1D 02               [ 7] 1765 	ld	(bc), a
                                   1766 ;./alex.c:64: alex.y--;
      000B1E 3D               [ 4] 1767 	dec	a
      000B1F 02               [ 7] 1768 	ld	(bc), a
                                   1769 ;./alex.c:65: PSGSFXPlay(salto_psg, SFX_CHANNEL1);
      000B20 3E 08            [ 7] 1770 	ld	a, #0x08
      000B22 F5               [11] 1771 	push	af
      000B23 33               [ 6] 1772 	inc	sp
      000B24 21r00r00         [10] 1773 	ld	hl, #_salto_psg
      000B27 CDr00r00         [17] 1774 	call	_PSGSFXPlay
                                   1775 ;./alex.c:66: return;
      000B2A C3r5Er0C         [10] 1776 	jp	00146$
      000B2D                       1777 00116$:
                                   1778 ;./alex.c:68: else if (keys & PORT_A_KEY_1) {
      000B2D DD CB FE 66      [20] 1779 	bit	4, -2 (ix)
      000B31 28 0A            [12] 1780 	jr	Z, 00117$
                                   1781 ;./alex.c:69: alex.state = PUÑETAZO_SUELO;
      000B33 21r08r01         [10] 1782 	ld	hl, #_alex + 5
      000B36 36 20            [10] 1783 	ld	(hl), #0x20
                                   1784 ;./alex.c:70: alex.lastChangeFrame = 15;
      000B38 21r06r01         [10] 1785 	ld	hl, #_alex + 3
      000B3B 36 0F            [10] 1786 	ld	(hl), #0x0f
      000B3D                       1787 00117$:
                                   1788 ;./alex.c:72: if(alex.state != PUÑETAZO_SUELO) {
      000B3D 21r08r01         [10] 1789 	ld	hl, #(_alex + 5)
      000B40 5E               [ 7] 1790 	ld	e, (hl)
                                   1791 ;./alex.c:77: alex.oriented = 1;
                                   1792 ;./alex.c:78: alex.lastChangeFrame++;
      000B41 01r06r01         [10] 1793 	ld	bc, #_alex + 3
                                   1794 ;./alex.c:81: alex.frame++;
                                   1795 ;./alex.c:72: if(alex.state != PUÑETAZO_SUELO) {
      000B44 7B               [ 4] 1796 	ld	a, e
      000B45 D6 20            [ 7] 1797 	sub	a, #0x20
      000B47 CArDEr0B         [10] 1798 	jp	Z,00144$
                                   1799 ;./alex.c:73: SpriteTableY2[4] = 234;
      000B4A 2Ar40r03         [16] 1800 	ld	hl, (_SpriteTableY2)
      000B4D 11 04 00         [10] 1801 	ld	de, #0x0004
      000B50 19               [11] 1802 	add	hl, de
      000B51 36 EA            [10] 1803 	ld	(hl), #0xea
                                   1804 ;./alex.c:74: if ((keys & PORT_A_KEY_LEFT) && alex.x > 8 )
      000B53 AF               [ 4] 1805 	xor	a, a
      000B54 DD B6 FA         [19] 1806 	or	a, -6 (ix)
      000B57 28 3A            [12] 1807 	jr	Z, 00135$
      000B59 21r03r01         [10] 1808 	ld	hl, #_alex
      000B5C 5E               [ 7] 1809 	ld	e, (hl)
      000B5D 3E 08            [ 7] 1810 	ld	a, #0x08
      000B5F 93               [ 4] 1811 	sub	a, e
      000B60 30 31            [12] 1812 	jr	NC, 00135$
                                   1813 ;./alex.c:76: alex.x -= 1;
      000B62 1D               [ 4] 1814 	dec	e
      000B63 21r03r01         [10] 1815 	ld	hl, #_alex
      000B66 73               [ 7] 1816 	ld	(hl), e
                                   1817 ;./alex.c:77: alex.oriented = 1;
      000B67 21r07r01         [10] 1818 	ld	hl, #(_alex + 4)
      000B6A 36 01            [10] 1819 	ld	(hl), #0x01
                                   1820 ;./alex.c:78: alex.lastChangeFrame++;
      000B6C 0A               [ 7] 1821 	ld	a, (bc)
      000B6D 3C               [ 4] 1822 	inc	a
      000B6E 02               [ 7] 1823 	ld	(bc), a
                                   1824 ;./alex.c:79: if (alex.lastChangeFrame == 11) {
      000B6F D6 0B            [ 7] 1825 	sub	a, #0x0b
      000B71 20 09            [12] 1826 	jr	NZ, 00119$
                                   1827 ;./alex.c:80: alex.lastChangeFrame = 0;
      000B73 AF               [ 4] 1828 	xor	a, a
      000B74 02               [ 7] 1829 	ld	(bc), a
                                   1830 ;./alex.c:81: alex.frame++;
      000B75 3Ar05r01         [13] 1831 	ld	a, (#(_alex + 2) + 0)
      000B78 3C               [ 4] 1832 	inc	a
      000B79 32r05r01         [13] 1833 	ld	(#(_alex + 2)),a
      000B7C                       1834 00119$:
                                   1835 ;./alex.c:83: if (alex.frame > 11 || alex.frame < 8)
      000B7C 21r05r01         [10] 1836 	ld	hl, #(_alex + 2)
      000B7F 4E               [ 7] 1837 	ld	c, (hl)
      000B80 3E 0B            [ 7] 1838 	ld	a, #0x0b
      000B82 91               [ 4] 1839 	sub	a, c
      000B83 38 06            [12] 1840 	jr	C, 00120$
      000B85 79               [ 4] 1841 	ld	a, c
      000B86 D6 08            [ 7] 1842 	sub	a, #0x08
      000B88 D2r5Er0C         [10] 1843 	jp	NC, 00146$
      000B8B                       1844 00120$:
                                   1845 ;./alex.c:84: alex.frame = 8;
      000B8B 21r05r01         [10] 1846 	ld	hl, #(_alex + 2)
      000B8E 36 08            [10] 1847 	ld	(hl), #0x08
      000B90 C3r5Er0C         [10] 1848 	jp	00146$
      000B93                       1849 00135$:
                                   1850 ;./alex.c:86: else if ((keys & PORT_A_KEY_RIGHT) && alex.x <240)
      000B93 AF               [ 4] 1851 	xor	a, a
      000B94 DD B6 FC         [19] 1852 	or	a, -4 (ix)
      000B97 28 32            [12] 1853 	jr	Z, 00131$
      000B99 3Ar03r01         [13] 1854 	ld	a, (#_alex + 0)
      000B9C FE F0            [ 7] 1855 	cp	a, #0xf0
      000B9E 30 2B            [12] 1856 	jr	NC, 00131$
                                   1857 ;./alex.c:88: alex.x += 1;
      000BA0 3C               [ 4] 1858 	inc	a
      000BA1 32r03r01         [13] 1859 	ld	(#_alex),a
                                   1860 ;./alex.c:89: alex.oriented = 0;
      000BA4 21r07r01         [10] 1861 	ld	hl, #(_alex + 4)
      000BA7 36 00            [10] 1862 	ld	(hl), #0x00
                                   1863 ;./alex.c:90: alex.lastChangeFrame++;
      000BA9 0A               [ 7] 1864 	ld	a, (bc)
      000BAA 3C               [ 4] 1865 	inc	a
      000BAB 02               [ 7] 1866 	ld	(bc), a
                                   1867 ;./alex.c:91: if (alex.lastChangeFrame == 11) {
      000BAC D6 0B            [ 7] 1868 	sub	a, #0x0b
      000BAE 20 09            [12] 1869 	jr	NZ, 00124$
                                   1870 ;./alex.c:92: alex.lastChangeFrame = 0;
      000BB0 AF               [ 4] 1871 	xor	a, a
      000BB1 02               [ 7] 1872 	ld	(bc), a
                                   1873 ;./alex.c:93: alex.frame++;
      000BB2 3Ar05r01         [13] 1874 	ld	a, (#(_alex + 2) + 0)
      000BB5 3C               [ 4] 1875 	inc	a
      000BB6 32r05r01         [13] 1876 	ld	(#(_alex + 2)),a
      000BB9                       1877 00124$:
                                   1878 ;./alex.c:95: if (alex.frame > 3 || alex.frame < 0)
      000BB9 21r05r01         [10] 1879 	ld	hl, #(_alex + 2)
      000BBC 4E               [ 7] 1880 	ld	c, (hl)
      000BBD 3E 03            [ 7] 1881 	ld	a, #0x03
      000BBF 91               [ 4] 1882 	sub	a, c
      000BC0 D2r5Er0C         [10] 1883 	jp	NC, 00146$
                                   1884 ;./alex.c:96: alex.frame = 0;
      000BC3 21r05r01         [10] 1885 	ld	hl, #(_alex + 2)
      000BC6 36 00            [10] 1886 	ld	(hl), #0x00
      000BC8 C3r5Er0C         [10] 1887 	jp	00146$
      000BCB                       1888 00131$:
                                   1889 ;./alex.c:100: alex.frame = 4;
      000BCB 21r05r01         [10] 1890 	ld	hl, #(_alex + 2)
      000BCE 36 04            [10] 1891 	ld	(hl), #0x04
                                   1892 ;./alex.c:101: if (alex.oriented)
      000BD0 3Ar07r01         [13] 1893 	ld	a, (#(_alex + 4) + 0)
      000BD3 B7               [ 4] 1894 	or	a, a
      000BD4 28 02            [12] 1895 	jr	Z, 00129$
                                   1896 ;./alex.c:102: alex.frame = 12;
      000BD6 36 0C            [10] 1897 	ld	(hl), #0x0c
      000BD8                       1898 00129$:
                                   1899 ;./alex.c:103: alex.lastChangeFrame = 10;
      000BD8 3E 0A            [ 7] 1900 	ld	a, #0x0a
      000BDA 02               [ 7] 1901 	ld	(bc), a
      000BDB C3r5Er0C         [10] 1902 	jp	00146$
      000BDE                       1903 00144$:
                                   1904 ;./alex.c:107: if (!alex.oriented) {
                                   1905 ;./alex.c:112: SpriteTableY2[4] = alex.y + 9;
                                   1906 ;./alex.c:107: if (!alex.oriented) {
      000BDE 3Ar07r01         [13] 1907 	ld	a, (#(_alex + 4) + 0)
      000BE1 B7               [ 4] 1908 	or	a, a
      000BE2 20 34            [12] 1909 	jr	NZ, 00139$
                                   1910 ;./alex.c:108: alex.frame = 5;
      000BE4 21r05r01         [10] 1911 	ld	hl, #(_alex + 2)
      000BE7 36 05            [10] 1912 	ld	(hl), #0x05
                                   1913 ;./alex.c:110: SpriteTableXN2[8] = alex.x + 16;
      000BE9 3Ar42r03         [13] 1914 	ld	a, (_SpriteTableXN2+0)
      000BEC C6 08            [ 7] 1915 	add	a, #0x08
      000BEE 5F               [ 4] 1916 	ld	e, a
      000BEF 3Ar43r03         [13] 1917 	ld	a, (_SpriteTableXN2+1)
      000BF2 CE 00            [ 7] 1918 	adc	a, #0x00
      000BF4 57               [ 4] 1919 	ld	d, a
      000BF5 3Ar03r01         [13] 1920 	ld	a, (#_alex + 0)
      000BF8 C6 10            [ 7] 1921 	add	a, #0x10
      000BFA 12               [ 7] 1922 	ld	(de), a
                                   1923 ;./alex.c:111: SpriteTableXN2[9] = 9;
      000BFB 2Ar42r03         [16] 1924 	ld	hl, (_SpriteTableXN2)
      000BFE 11 09 00         [10] 1925 	ld	de, #0x0009
      000C01 19               [11] 1926 	add	hl, de
      000C02 36 09            [10] 1927 	ld	(hl), #0x09
                                   1928 ;./alex.c:112: SpriteTableY2[4] = alex.y + 9;
      000C04 3Ar40r03         [13] 1929 	ld	a, (_SpriteTableY2+0)
      000C07 C6 04            [ 7] 1930 	add	a, #0x04
      000C09 5F               [ 4] 1931 	ld	e, a
      000C0A 3Ar41r03         [13] 1932 	ld	a, (_SpriteTableY2+1)
      000C0D CE 00            [ 7] 1933 	adc	a, #0x00
      000C0F 57               [ 4] 1934 	ld	d, a
      000C10 3Ar04r01         [13] 1935 	ld	a, (#(_alex + 1) + 0)
      000C13 C6 09            [ 7] 1936 	add	a, #0x09
      000C15 12               [ 7] 1937 	ld	(de), a
      000C16 18 32            [12] 1938 	jr	00140$
      000C18                       1939 00139$:
                                   1940 ;./alex.c:115: alex.frame = 13;
      000C18 21r05r01         [10] 1941 	ld	hl, #(_alex + 2)
      000C1B 36 0D            [10] 1942 	ld	(hl), #0x0d
                                   1943 ;./alex.c:117: SpriteTableXN2[8] = alex.x - 8;
      000C1D 3Ar42r03         [13] 1944 	ld	a, (_SpriteTableXN2+0)
      000C20 C6 08            [ 7] 1945 	add	a, #0x08
      000C22 5F               [ 4] 1946 	ld	e, a
      000C23 3Ar43r03         [13] 1947 	ld	a, (_SpriteTableXN2+1)
      000C26 CE 00            [ 7] 1948 	adc	a, #0x00
      000C28 57               [ 4] 1949 	ld	d, a
      000C29 3Ar03r01         [13] 1950 	ld	a, (#_alex + 0)
      000C2C C6 F8            [ 7] 1951 	add	a, #0xf8
      000C2E 12               [ 7] 1952 	ld	(de), a
                                   1953 ;./alex.c:118: SpriteTableXN2[9] = 11;
      000C2F 2Ar42r03         [16] 1954 	ld	hl, (_SpriteTableXN2)
      000C32 11 09 00         [10] 1955 	ld	de, #0x0009
      000C35 19               [11] 1956 	add	hl, de
      000C36 36 0B            [10] 1957 	ld	(hl), #0x0b
                                   1958 ;./alex.c:119: SpriteTableY2[4] = alex.y + 9;
      000C38 3Ar40r03         [13] 1959 	ld	a, (_SpriteTableY2+0)
      000C3B C6 04            [ 7] 1960 	add	a, #0x04
      000C3D 5F               [ 4] 1961 	ld	e, a
      000C3E 3Ar41r03         [13] 1962 	ld	a, (_SpriteTableY2+1)
      000C41 CE 00            [ 7] 1963 	adc	a, #0x00
      000C43 57               [ 4] 1964 	ld	d, a
      000C44 3Ar04r01         [13] 1965 	ld	a, (#(_alex + 1) + 0)
      000C47 C6 09            [ 7] 1966 	add	a, #0x09
      000C49 12               [ 7] 1967 	ld	(de), a
      000C4A                       1968 00140$:
                                   1969 ;./alex.c:121: alex.lastChangeFrame--;
      000C4A 0A               [ 7] 1970 	ld	a, (bc)
      000C4B 3D               [ 4] 1971 	dec	a
      000C4C 02               [ 7] 1972 	ld	(bc), a
                                   1973 ;./alex.c:122: if(!alex.lastChangeFrame) {
      000C4D B7               [ 4] 1974 	or	a, a
      000C4E 20 0E            [12] 1975 	jr	NZ, 00146$
                                   1976 ;./alex.c:123: alex.state = 0;
      000C50 21r08r01         [10] 1977 	ld	hl, #(_alex + 5)
      000C53 36 00            [10] 1978 	ld	(hl), #0x00
                                   1979 ;./alex.c:124: SpriteTableY2[4] = 234;
      000C55 2Ar40r03         [16] 1980 	ld	hl, (_SpriteTableY2)
      000C58 11 04 00         [10] 1981 	ld	de, #0x0004
      000C5B 19               [11] 1982 	add	hl, de
      000C5C 36 EA            [10] 1983 	ld	(hl), #0xea
      000C5E                       1984 00146$:
                                   1985 ;./alex.c:127: }
      000C5E DD F9            [10] 1986 	ld	sp, ix
      000C60 DD E1            [14] 1987 	pop	ix
      000C62 C9               [10] 1988 	ret
                                   1989 ;./alex.c:129: void moveAlexAire(int keys, unsigned char puedeSubir, unsigned char puedeDerecha, unsigned char puedeIzquieda) {
                                   1990 ;	---------------------------------
                                   1991 ; Function moveAlexAire
                                   1992 ; ---------------------------------
      000C63                       1993 _moveAlexAire::
      000C63 DD E5            [15] 1994 	push	ix
      000C65 DD 21 00 00      [14] 1995 	ld	ix,#0
      000C69 DD 39            [15] 1996 	add	ix,sp
      000C6B F5               [11] 1997 	push	af
      000C6C 3B               [ 6] 1998 	dec	sp
      000C6D DD 75 FE         [19] 1999 	ld	-2 (ix), l
      000C70 DD 74 FF         [19] 2000 	ld	-1 (ix), h
                                   2001 ;./alex.c:130: if (alex.y > maxSalto) {
      000C73 21r04r01         [10] 2002 	ld	hl, #(_alex + 1)
      000C76 46               [ 7] 2003 	ld	b, (hl)
                                   2004 ;./alex.c:131: alex.y -= 2;
      000C77 48               [ 4] 2005 	ld	c, b
                                   2006 ;./alex.c:130: if (alex.y > maxSalto) {
      000C78 3Ar02r01         [13] 2007 	ld	a, (_maxSalto+0)
      000C7B 90               [ 4] 2008 	sub	a, b
      000C7C 30 08            [12] 2009 	jr	NC, 00102$
                                   2010 ;./alex.c:131: alex.y -= 2;
      000C7E 0D               [ 4] 2011 	dec	c
      000C7F 0D               [ 4] 2012 	dec	c
      000C80 21r04r01         [10] 2013 	ld	hl, #(_alex + 1)
      000C83 71               [ 7] 2014 	ld	(hl), c
      000C84 18 0E            [12] 2015 	jr	00103$
      000C86                       2016 00102$:
                                   2017 ;./alex.c:134: alex.y += 2; // bajando
      000C86 0C               [ 4] 2018 	inc	c
      000C87 0C               [ 4] 2019 	inc	c
      000C88 21r04r01         [10] 2020 	ld	hl, #(_alex + 1)
      000C8B 71               [ 7] 2021 	ld	(hl), c
                                   2022 ;./alex.c:135: maxSalto = 255;
      000C8C FD 21r02r01      [14] 2023 	ld	iy, #_maxSalto
      000C90 FD 36 00 FF      [19] 2024 	ld	0 (iy), #0xff
      000C94                       2025 00103$:
                                   2026 ;./alex.c:138: if (alex.state != PUÑETAZO_SALTANDO)
                                   2027 ;./alex.c:139: alex.oriented = 1;
                                   2028 ;./alex.c:137: if (keys & PORT_A_KEY_LEFT) {
      000C94 DD CB FE 56      [20] 2029 	bit	2, -2 (ix)
      000C98 28 1A            [12] 2030 	jr	Z, 00109$
                                   2031 ;./alex.c:138: if (alex.state != PUÑETAZO_SALTANDO)
      000C9A 3Ar08r01         [13] 2032 	ld	a, (#(_alex + 5) + 0)
      000C9D D6 10            [ 7] 2033 	sub	a, #0x10
      000C9F 28 05            [12] 2034 	jr	Z, 00105$
                                   2035 ;./alex.c:139: alex.oriented = 1;
      000CA1 21r07r01         [10] 2036 	ld	hl, #(_alex + 4)
      000CA4 36 01            [10] 2037 	ld	(hl), #0x01
      000CA6                       2038 00105$:
                                   2039 ;./alex.c:140: if (puedeIzquieda)
      000CA6 DD 7E 06         [19] 2040 	ld	a, 6 (ix)
      000CA9 B7               [ 4] 2041 	or	a, a
      000CAA 28 08            [12] 2042 	jr	Z, 00109$
                                   2043 ;./alex.c:141: alex.x -= 2;
      000CAC 3Ar03r01         [13] 2044 	ld	a, (#_alex + 0)
      000CAF 3D               [ 4] 2045 	dec	a
      000CB0 3D               [ 4] 2046 	dec	a
      000CB1 32r03r01         [13] 2047 	ld	(#_alex),a
      000CB4                       2048 00109$:
                                   2049 ;./alex.c:143: if (keys & PORT_A_KEY_RIGHT) {
      000CB4 DD CB FE 5E      [20] 2050 	bit	3, -2 (ix)
      000CB8 28 1A            [12] 2051 	jr	Z, 00115$
                                   2052 ;./alex.c:144: if (alex.state != PUÑETAZO_SALTANDO)
      000CBA 3Ar08r01         [13] 2053 	ld	a, (#(_alex + 5) + 0)
      000CBD D6 10            [ 7] 2054 	sub	a, #0x10
      000CBF 28 05            [12] 2055 	jr	Z, 00111$
                                   2056 ;./alex.c:145: alex.oriented = 0;
      000CC1 21r07r01         [10] 2057 	ld	hl, #(_alex + 4)
      000CC4 36 00            [10] 2058 	ld	(hl), #0x00
      000CC6                       2059 00111$:
                                   2060 ;./alex.c:146: if (puedeDerecha)
      000CC6 DD 7E 05         [19] 2061 	ld	a, 5 (ix)
      000CC9 B7               [ 4] 2062 	or	a, a
      000CCA 28 08            [12] 2063 	jr	Z, 00115$
                                   2064 ;./alex.c:147: alex.x += 2;
      000CCC 3Ar03r01         [13] 2065 	ld	a, (#_alex + 0)
      000CCF C6 02            [ 7] 2066 	add	a, #0x02
      000CD1 32r03r01         [13] 2067 	ld	(#_alex),a
      000CD4                       2068 00115$:
                                   2069 ;./alex.c:149: if (alex.state == PUÑETAZO_SALTANDO) {
      000CD4 21r08r01         [10] 2070 	ld	hl, #(_alex + 5)
      000CD7 4E               [ 7] 2071 	ld	c, (hl)
                                   2072 ;./alex.c:150: alex.lastChangeFrame--;
                                   2073 ;./alex.c:156: alex.frame = 5;
                                   2074 ;./alex.c:149: if (alex.state == PUÑETAZO_SALTANDO) {
      000CD8 79               [ 4] 2075 	ld	a, c
      000CD9 D6 10            [ 7] 2076 	sub	a, #0x10
      000CDB C2r67r0D         [10] 2077 	jp	NZ,00127$
                                   2078 ;./alex.c:150: alex.lastChangeFrame--;
      000CDE 21r06r01         [10] 2079 	ld	hl, #(_alex + 3)
      000CE1 4E               [ 7] 2080 	ld	c, (hl)
      000CE2 0D               [ 4] 2081 	dec	c
      000CE3 21r06r01         [10] 2082 	ld	hl, #(_alex + 3)
                                   2083 ;./alex.c:151: if  (!alex.lastChangeFrame) {
      000CE6 79               [ 4] 2084 	ld	a,c
      000CE7 77               [ 7] 2085 	ld	(hl),a
      000CE8 B7               [ 4] 2086 	or	a, a
      000CE9 20 0E            [12] 2087 	jr	NZ, 00117$
                                   2088 ;./alex.c:152: alex.state = 0;
      000CEB 21r08r01         [10] 2089 	ld	hl, #(_alex + 5)
      000CEE 36 00            [10] 2090 	ld	(hl), #0x00
                                   2091 ;./alex.c:153: SpriteTableY2[4] = 234;
      000CF0 2Ar40r03         [16] 2092 	ld	hl, (_SpriteTableY2)
      000CF3 11 04 00         [10] 2093 	ld	de, #0x0004
      000CF6 19               [11] 2094 	add	hl, de
      000CF7 36 EA            [10] 2095 	ld	(hl), #0xea
      000CF9                       2096 00117$:
                                   2097 ;./alex.c:155: if (!alex.oriented) {
      000CF9 3Ar07r01         [13] 2098 	ld	a, (#(_alex + 4) + 0)
      000CFC B7               [ 4] 2099 	or	a, a
      000CFD 20 34            [12] 2100 	jr	NZ, 00119$
                                   2101 ;./alex.c:156: alex.frame = 5;
      000CFF 21r05r01         [10] 2102 	ld	hl, #(_alex + 2)
      000D02 36 05            [10] 2103 	ld	(hl), #0x05
                                   2104 ;./alex.c:158: SpriteTableXN2[8] = alex.x + 16;
      000D04 3Ar42r03         [13] 2105 	ld	a, (_SpriteTableXN2+0)
      000D07 C6 08            [ 7] 2106 	add	a, #0x08
      000D09 4F               [ 4] 2107 	ld	c, a
      000D0A 3Ar43r03         [13] 2108 	ld	a, (_SpriteTableXN2+1)
      000D0D CE 00            [ 7] 2109 	adc	a, #0x00
      000D0F 47               [ 4] 2110 	ld	b, a
      000D10 3Ar03r01         [13] 2111 	ld	a, (#_alex + 0)
      000D13 C6 10            [ 7] 2112 	add	a, #0x10
      000D15 02               [ 7] 2113 	ld	(bc), a
                                   2114 ;./alex.c:159: SpriteTableXN2[9] = 9;
      000D16 2Ar42r03         [16] 2115 	ld	hl, (_SpriteTableXN2)
      000D19 11 09 00         [10] 2116 	ld	de, #0x0009
      000D1C 19               [11] 2117 	add	hl, de
      000D1D 36 09            [10] 2118 	ld	(hl), #0x09
                                   2119 ;./alex.c:160: SpriteTableY2[4] = alex.y + 9;
      000D1F 3Ar40r03         [13] 2120 	ld	a, (_SpriteTableY2+0)
      000D22 C6 04            [ 7] 2121 	add	a, #0x04
      000D24 4F               [ 4] 2122 	ld	c, a
      000D25 3Ar41r03         [13] 2123 	ld	a, (_SpriteTableY2+1)
      000D28 CE 00            [ 7] 2124 	adc	a, #0x00
      000D2A 47               [ 4] 2125 	ld	b, a
      000D2B 3Ar04r01         [13] 2126 	ld	a, (#(_alex + 1) + 0)
      000D2E C6 09            [ 7] 2127 	add	a, #0x09
      000D30 02               [ 7] 2128 	ld	(bc), a
      000D31 18 62            [12] 2129 	jr	00129$
      000D33                       2130 00119$:
                                   2131 ;./alex.c:163: alex.frame = 13;
      000D33 21r05r01         [10] 2132 	ld	hl, #(_alex + 2)
      000D36 36 0D            [10] 2133 	ld	(hl), #0x0d
                                   2134 ;./alex.c:165: SpriteTableXN2[8] = alex.x - 8;
      000D38 3Ar42r03         [13] 2135 	ld	a, (_SpriteTableXN2+0)
      000D3B C6 08            [ 7] 2136 	add	a, #0x08
      000D3D 4F               [ 4] 2137 	ld	c, a
      000D3E 3Ar43r03         [13] 2138 	ld	a, (_SpriteTableXN2+1)
      000D41 CE 00            [ 7] 2139 	adc	a, #0x00
      000D43 47               [ 4] 2140 	ld	b, a
      000D44 3Ar03r01         [13] 2141 	ld	a, (#_alex + 0)
      000D47 C6 F8            [ 7] 2142 	add	a, #0xf8
      000D49 02               [ 7] 2143 	ld	(bc), a
                                   2144 ;./alex.c:166: SpriteTableXN2[9] = 11;
      000D4A 2Ar42r03         [16] 2145 	ld	hl, (_SpriteTableXN2)
      000D4D 11 09 00         [10] 2146 	ld	de, #0x0009
      000D50 19               [11] 2147 	add	hl, de
      000D51 36 0B            [10] 2148 	ld	(hl), #0x0b
                                   2149 ;./alex.c:167: SpriteTableY2[4] = alex.y + 9;
      000D53 3Ar40r03         [13] 2150 	ld	a, (_SpriteTableY2+0)
      000D56 C6 04            [ 7] 2151 	add	a, #0x04
      000D58 4F               [ 4] 2152 	ld	c, a
      000D59 3Ar41r03         [13] 2153 	ld	a, (_SpriteTableY2+1)
      000D5C CE 00            [ 7] 2154 	adc	a, #0x00
      000D5E 47               [ 4] 2155 	ld	b, a
      000D5F 3Ar04r01         [13] 2156 	ld	a, (#(_alex + 1) + 0)
      000D62 C6 09            [ 7] 2157 	add	a, #0x09
      000D64 02               [ 7] 2158 	ld	(bc), a
      000D65 18 2E            [12] 2159 	jr	00129$
      000D67                       2160 00127$:
                                   2161 ;./alex.c:171: SpriteTableY2[4] = 234;
      000D67 2Ar40r03         [16] 2162 	ld	hl, (_SpriteTableY2)
      000D6A 11 04 00         [10] 2163 	ld	de, #0x0004
      000D6D 19               [11] 2164 	add	hl, de
      000D6E 36 EA            [10] 2165 	ld	(hl), #0xea
                                   2166 ;./alex.c:172: if (!alex.oriented)
      000D70 3Ar07r01         [13] 2167 	ld	a, (#(_alex + 4) + 0)
      000D73 DD 77 FD         [19] 2168 	ld	-3 (ix), a
      000D76 B7               [ 4] 2169 	or	a, a
      000D77 20 07            [12] 2170 	jr	NZ, 00122$
                                   2171 ;./alex.c:173: alex.frame = 6;
      000D79 21r05r01         [10] 2172 	ld	hl, #(_alex + 2)
      000D7C 36 06            [10] 2173 	ld	(hl), #0x06
      000D7E 18 05            [12] 2174 	jr	00123$
      000D80                       2175 00122$:
                                   2176 ;./alex.c:175: alex.frame = 14;
      000D80 21r05r01         [10] 2177 	ld	hl, #(_alex + 2)
      000D83 36 0E            [10] 2178 	ld	(hl), #0x0e
      000D85                       2179 00123$:
                                   2180 ;./alex.c:176: if (keys & PORT_A_KEY_1) {
      000D85 DD CB FE 66      [20] 2181 	bit	4, -2 (ix)
      000D89 28 0A            [12] 2182 	jr	Z, 00129$
                                   2183 ;./alex.c:177: alex.state = PUÑETAZO_SALTANDO;
      000D8B 21r08r01         [10] 2184 	ld	hl, #(_alex + 5)
      000D8E 36 10            [10] 2185 	ld	(hl), #0x10
                                   2186 ;./alex.c:178: alex.lastChangeFrame = 20;
      000D90 21r06r01         [10] 2187 	ld	hl, #(_alex + 3)
      000D93 36 14            [10] 2188 	ld	(hl), #0x14
      000D95                       2189 00129$:
                                   2190 ;./alex.c:182: }
      000D95 DD F9            [10] 2191 	ld	sp, ix
      000D97 DD E1            [14] 2192 	pop	ix
      000D99 E1               [10] 2193 	pop	hl
      000D9A F1               [10] 2194 	pop	af
      000D9B 33               [ 6] 2195 	inc	sp
      000D9C E9               [ 4] 2196 	jp	(hl)
                                   2197 ;./alex.c:186: void drawAlex() {
                                   2198 ;	---------------------------------
                                   2199 ; Function drawAlex
                                   2200 ; ---------------------------------
      000D9D                       2201 _drawAlex::
                                   2202 ;./alex.c:187: SpriteTableXN2[0] = alex.x;
      000D9D ED 5Br42r03      [20] 2203 	ld	de, (_SpriteTableXN2)
      000DA1 01r03r01         [10] 2204 	ld	bc, #_alex+0
      000DA4 0A               [ 7] 2205 	ld	a, (bc)
      000DA5 12               [ 7] 2206 	ld	(de), a
                                   2207 ;./alex.c:188: SpriteTableXN2[2] = alex.x + 8;
      000DA6 2Ar42r03         [16] 2208 	ld	hl, (_SpriteTableXN2)
      000DA9 23               [ 6] 2209 	inc	hl
      000DAA 23               [ 6] 2210 	inc	hl
      000DAB 0A               [ 7] 2211 	ld	a, (bc)
      000DAC C6 08            [ 7] 2212 	add	a, #0x08
      000DAE 77               [ 7] 2213 	ld	(hl), a
                                   2214 ;./alex.c:189: SpriteTableXN2[4] = alex.x;
      000DAF 2Ar42r03         [16] 2215 	ld	hl, (_SpriteTableXN2)
      000DB2 11 04 00         [10] 2216 	ld	de, #0x0004
      000DB5 19               [11] 2217 	add	hl, de
      000DB6 0A               [ 7] 2218 	ld	a, (bc)
      000DB7 77               [ 7] 2219 	ld	(hl), a
                                   2220 ;./alex.c:190: SpriteTableXN2[6] = alex.x + 8;
      000DB8 2Ar42r03         [16] 2221 	ld	hl, (_SpriteTableXN2)
      000DBB 11 06 00         [10] 2222 	ld	de, #0x0006
      000DBE 19               [11] 2223 	add	hl, de
      000DBF 0A               [ 7] 2224 	ld	a, (bc)
      000DC0 C6 08            [ 7] 2225 	add	a, #0x08
      000DC2 77               [ 7] 2226 	ld	(hl), a
                                   2227 ;./alex.c:191: SpriteTableY2[0] = alex.y;
      000DC3 ED 5Br40r03      [20] 2228 	ld	de, (_SpriteTableY2)
      000DC7 01r04r01         [10] 2229 	ld	bc, #_alex + 1
      000DCA 0A               [ 7] 2230 	ld	a, (bc)
      000DCB 12               [ 7] 2231 	ld	(de), a
                                   2232 ;./alex.c:192: SpriteTableY2[1] = alex.y;
      000DCC 2Ar40r03         [16] 2233 	ld	hl, (_SpriteTableY2)
      000DCF 23               [ 6] 2234 	inc	hl
      000DD0 0A               [ 7] 2235 	ld	a, (bc)
      000DD1 77               [ 7] 2236 	ld	(hl), a
                                   2237 ;./alex.c:193: SpriteTableY2[2] = alex.y + 16;
      000DD2 2Ar40r03         [16] 2238 	ld	hl, (_SpriteTableY2)
      000DD5 23               [ 6] 2239 	inc	hl
      000DD6 23               [ 6] 2240 	inc	hl
      000DD7 0A               [ 7] 2241 	ld	a, (bc)
      000DD8 C6 10            [ 7] 2242 	add	a, #0x10
      000DDA 77               [ 7] 2243 	ld	(hl), a
                                   2244 ;./alex.c:194: SpriteTableY2[3] = alex.y + 16;
      000DDB 2Ar40r03         [16] 2245 	ld	hl, (_SpriteTableY2)
      000DDE 23               [ 6] 2246 	inc	hl
      000DDF 23               [ 6] 2247 	inc	hl
      000DE0 23               [ 6] 2248 	inc	hl
      000DE1 0A               [ 7] 2249 	ld	a, (bc)
      000DE2 C6 10            [ 7] 2250 	add	a, #0x10
      000DE4 77               [ 7] 2251 	ld	(hl), a
                                   2252 ;./alex.c:195: if (alex.frame != lastFrame) {
      000DE5 21r05r01         [10] 2253 	ld	hl, #(_alex + 2)
      000DE8 5E               [ 7] 2254 	ld	e, (hl)
      000DE9 3Ar0Dr01         [13] 2255 	ld	a, (_lastFrame+0)
      000DEC 93               [ 4] 2256 	sub	a, e
      000DED C8               [11] 2257 	ret	Z
                                   2258 ;./alex.c:196: SMS_loadTiles(alex.sprite->data + alex.frame *256, alex.sprite->beginVRAM, 255);
      000DEE ED 4Br0Br01      [20] 2259 	ld	bc, (#_alex + 8)
      000DF2 C5               [11] 2260 	push	bc
      000DF3 FD E1            [14] 2261 	pop	iy
      000DF5 FD 6E 07         [19] 2262 	ld	l, 7 (iy)
                                   2263 ;	spillPairReg hl
      000DF8 FD 66 08         [19] 2264 	ld	h, 8 (iy)
                                   2265 ;	spillPairReg hl
      000DFB 53               [ 4] 2266 	ld	d, e
      000DFC 1E 00            [ 7] 2267 	ld	e, #0x00
      000DFE 19               [11] 2268 	add	hl, de
      000DFF EB               [ 4] 2269 	ex	de, hl
      000E00 21 04 00         [10] 2270 	ld	hl, #4
      000E03 09               [11] 2271 	add	hl, bc
      000E04 7E               [ 7] 2272 	ld	a, (hl)
      000E05 23               [ 6] 2273 	inc	hl
      000E06 66               [ 7] 2274 	ld	h, (hl)
                                   2275 ;	spillPairReg hl
      000E07 6F               [ 4] 2276 	ld	l, a
                                   2277 ;	spillPairReg hl
                                   2278 ;	spillPairReg hl
      000E08 29               [11] 2279 	add	hl, hl
      000E09 29               [11] 2280 	add	hl, hl
      000E0A 29               [11] 2281 	add	hl, hl
      000E0B 29               [11] 2282 	add	hl, hl
      000E0C 29               [11] 2283 	add	hl, hl
      000E0D CB F4            [ 8] 2284 	set	6, h
      000E0F 01 FF 00         [10] 2285 	ld	bc, #0x00ff
      000E12 C5               [11] 2286 	push	bc
      000E13 CDr00r00         [17] 2287 	call	_SMS_VRAMmemcpy
                                   2288 ;./alex.c:197: lastFrame = alex.frame;
      000E16 21r05r01         [10] 2289 	ld	hl, #(_alex + 2)
      000E19 7E               [ 7] 2290 	ld	a, (hl)
      000E1A 32r0Dr01         [13] 2291 	ld	(_lastFrame+0), a
                                   2292 ;./alex.c:199: }
      000E1D C9               [10] 2293 	ret
                                   2294 ;./alex.c:202: void moveAlex(int keys) {
                                   2295 ;	---------------------------------
                                   2296 ; Function moveAlex
                                   2297 ; ---------------------------------
      000E1E                       2298 _moveAlex::
      000E1E DD E5            [15] 2299 	push	ix
      000E20 DD 21 00 00      [14] 2300 	ld	ix,#0
      000E24 DD 39            [15] 2301 	add	ix,sp
      000E26 3B               [ 6] 2302 	dec	sp
                                   2303 ;./alex.c:203: unsigned char puedeBajar = canDown();
      000E27 E5               [11] 2304 	push	hl
      000E28 CDr73r0A         [17] 2305 	call	_canDown
      000E2B 4F               [ 4] 2306 	ld	c, a
      000E2C C5               [11] 2307 	push	bc
      000E2D CDr67r0A         [17] 2308 	call	_canUp
      000E30 DD 77 FF         [19] 2309 	ld	-1 (ix), a
      000E33 CDr8Dr0A         [17] 2310 	call	_canRight
      000E36 5F               [ 4] 2311 	ld	e, a
      000E37 D5               [11] 2312 	push	de
      000E38 CDr81r0A         [17] 2313 	call	_canLeft
      000E3B D1               [10] 2314 	pop	de
      000E3C C1               [10] 2315 	pop	bc
      000E3D E1               [10] 2316 	pop	hl
                                   2317 ;./alex.c:207: if (puedeBajar)
      000E3E 0C               [ 4] 2318 	inc	c
      000E3F 0D               [ 4] 2319 	dec	c
      000E40 28 0C            [12] 2320 	jr	Z, 00102$
                                   2321 ;./alex.c:208: moveAlexAire(keys, puedeSubir, puedeDerecha, puedeIzquierda);
      000E42 57               [ 4] 2322 	ld	d,a
      000E43 D5               [11] 2323 	push	de
      000E44 DD 7E FF         [19] 2324 	ld	a, -1 (ix)
      000E47 F5               [11] 2325 	push	af
      000E48 33               [ 6] 2326 	inc	sp
      000E49 CDr63r0C         [17] 2327 	call	_moveAlexAire
      000E4C 18 03            [12] 2328 	jr	00103$
      000E4E                       2329 00102$:
                                   2330 ;./alex.c:210: moveAlexSuelo(keys);
      000E4E CDr9Br0A         [17] 2331 	call	_moveAlexSuelo
      000E51                       2332 00103$:
                                   2333 ;./alex.c:211: drawAlex();
      000E51 CDr9Dr0D         [17] 2334 	call	_drawAlex
                                   2335 ;./alex.c:212: }
      000E54 33               [ 6] 2336 	inc	sp
      000E55 DD E1            [14] 2337 	pop	ix
      000E57 C9               [10] 2338 	ret
                                   2339 ;main.c:20: void inicializaPajaros()
                                   2340 ;	---------------------------------
                                   2341 ; Function inicializaPajaros
                                   2342 ; ---------------------------------
      000E58                       2343 _inicializaPajaros::
      000E58 DD E5            [15] 2344 	push	ix
      000E5A DD 21 00 00      [14] 2345 	ld	ix,#0
      000E5E DD 39            [15] 2346 	add	ix,sp
      000E60 21 F9 FF         [10] 2347 	ld	hl, #-7
      000E63 39               [11] 2348 	add	hl, sp
      000E64 F9               [ 6] 2349 	ld	sp, hl
                                   2350 ;main.c:23: for (i = 0; i < NUM_PAJAROS; i++)
      000E65 DD 36 FF 00      [19] 2351 	ld	-1 (ix), #0x00
      000E69                       2352 00108$:
                                   2353 ;main.c:25: pajaros[i].x = 15 + 32 * i;
      000E69 DD 4E FF         [19] 2354 	ld	c, -1 (ix)
      000E6C 06 00            [ 7] 2355 	ld	b, #0x00
      000E6E 69               [ 4] 2356 	ld	l, c
      000E6F 60               [ 4] 2357 	ld	h, b
      000E70 29               [11] 2358 	add	hl, hl
      000E71 29               [11] 2359 	add	hl, hl
      000E72 09               [11] 2360 	add	hl, bc
      000E73 29               [11] 2361 	add	hl, hl
      000E74 11r46r03         [10] 2362 	ld	de, #_pajaros
      000E77 19               [11] 2363 	add	hl, de
      000E78 E3               [19] 2364 	ex	(sp), hl
      000E79 DD 7E FF         [19] 2365 	ld	a, -1 (ix)
      000E7C 0F               [ 4] 2366 	rrca
      000E7D 0F               [ 4] 2367 	rrca
      000E7E 0F               [ 4] 2368 	rrca
      000E7F E6 E0            [ 7] 2369 	and	a, #0xe0
      000E81 C6 0F            [ 7] 2370 	add	a, #0x0f
      000E83 E1               [10] 2371 	pop	hl
      000E84 E5               [11] 2372 	push	hl
      000E85 77               [ 7] 2373 	ld	(hl), a
                                   2374 ;main.c:26: pajaros[i].y = 16 * (i / 2);
      000E86 DD 7E F9         [19] 2375 	ld	a, -7 (ix)
      000E89 C6 01            [ 7] 2376 	add	a, #0x01
      000E8B DD 77 FB         [19] 2377 	ld	-5 (ix), a
      000E8E DD 7E FA         [19] 2378 	ld	a, -6 (ix)
      000E91 CE 00            [ 7] 2379 	adc	a, #0x00
      000E93 DD 77 FC         [19] 2380 	ld	-4 (ix), a
      000E96 DD 4E FF         [19] 2381 	ld	c, -1 (ix)
      000E99 06 00            [ 7] 2382 	ld	b, #0x00
      000E9B DD 71 FD         [19] 2383 	ld	-3 (ix), c
      000E9E DD 70 FE         [19] 2384 	ld	-2 (ix), b
      000EA1 CB 78            [ 8] 2385 	bit	7, b
      000EA3 28 08            [12] 2386 	jr	Z, 00112$
      000EA5 DD 36 FD 01      [19] 2387 	ld	-3 (ix), #0x01
      000EA9 DD 36 FE 00      [19] 2388 	ld	-2 (ix), #0
      000EAD                       2389 00112$:
      000EAD DD 4E FD         [19] 2390 	ld	c, -3 (ix)
      000EB0 1E 00            [ 7] 2391 	ld	e, #0x00
      000EB2 CB 2B            [ 8] 2392 	sra	e
      000EB4 CB 19            [ 8] 2393 	rr	c
      000EB6 79               [ 4] 2394 	ld	a, c
      000EB7 87               [ 4] 2395 	add	a, a
      000EB8 87               [ 4] 2396 	add	a, a
      000EB9 87               [ 4] 2397 	add	a, a
      000EBA 87               [ 4] 2398 	add	a, a
      000EBB C1               [10] 2399 	pop	bc
      000EBC E1               [10] 2400 	pop	hl
      000EBD E5               [11] 2401 	push	hl
      000EBE C5               [11] 2402 	push	bc
      000EBF 77               [ 7] 2403 	ld	(hl), a
                                   2404 ;main.c:27: pajaros[i].lastChangeFrame = i * 3;
      000EC0 C1               [10] 2405 	pop	bc
      000EC1 C5               [11] 2406 	push	bc
      000EC2 03               [ 6] 2407 	inc	bc
      000EC3 03               [ 6] 2408 	inc	bc
      000EC4 03               [ 6] 2409 	inc	bc
      000EC5 DD 7E FF         [19] 2410 	ld	a, -1 (ix)
      000EC8 5F               [ 4] 2411 	ld	e, a
      000EC9 87               [ 4] 2412 	add	a, a
      000ECA 83               [ 4] 2413 	add	a, e
      000ECB 02               [ 7] 2414 	ld	(bc), a
                                   2415 ;main.c:28: pajaros[i].initSprite = 255;
      000ECC DD 7E F9         [19] 2416 	ld	a, -7 (ix)
      000ECF C6 06            [ 7] 2417 	add	a, #0x06
      000ED1 5F               [ 4] 2418 	ld	e, a
      000ED2 DD 7E FA         [19] 2419 	ld	a, -6 (ix)
      000ED5 CE 00            [ 7] 2420 	adc	a, #0x00
      000ED7 57               [ 4] 2421 	ld	d, a
      000ED8 3E FF            [ 7] 2422 	ld	a, #0xff
      000EDA 12               [ 7] 2423 	ld	(de), a
                                   2424 ;main.c:30: pajaros[i].x++;
      000EDB E1               [10] 2425 	pop	hl
      000EDC E5               [11] 2426 	push	hl
      000EDD 7E               [ 7] 2427 	ld	a, (hl)
      000EDE 3C               [ 4] 2428 	inc	a
      000EDF E1               [10] 2429 	pop	hl
      000EE0 E5               [11] 2430 	push	hl
      000EE1 77               [ 7] 2431 	ld	(hl), a
                                   2432 ;main.c:31: pajaros[i].lastChangeFrame++;
      000EE2 0A               [ 7] 2433 	ld	a, (bc)
      000EE3 3C               [ 4] 2434 	inc	a
      000EE4 02               [ 7] 2435 	ld	(bc), a
                                   2436 ;main.c:32: if (pajaros[i].lastChangeFrame == 20)
      000EE5 D6 14            [ 7] 2437 	sub	a, #0x14
      000EE7 20 15            [12] 2438 	jr	NZ, 00104$
                                   2439 ;main.c:34: pajaros[i].frame++;
      000EE9 E1               [10] 2440 	pop	hl
      000EEA E5               [11] 2441 	push	hl
      000EEB 23               [ 6] 2442 	inc	hl
      000EEC 23               [ 6] 2443 	inc	hl
      000EED 7E               [ 7] 2444 	ld	a, (hl)
      000EEE 3C               [ 4] 2445 	inc	a
      000EEF DD 77 FE         [19] 2446 	ld	-2 (ix), a
      000EF2 77               [ 7] 2447 	ld	(hl), a
                                   2448 ;main.c:35: if (pajaros[i].frame > 1)
      000EF3 3E 01            [ 7] 2449 	ld	a, #0x01
      000EF5 DD 96 FE         [19] 2450 	sub	a, -2 (ix)
      000EF8 30 02            [12] 2451 	jr	NC, 00102$
                                   2452 ;main.c:36: pajaros[i].frame = 0;
      000EFA 36 00            [10] 2453 	ld	(hl), #0x00
      000EFC                       2454 00102$:
                                   2455 ;main.c:37: pajaros[i].lastChangeFrame = 0;
      000EFC AF               [ 4] 2456 	xor	a, a
      000EFD 02               [ 7] 2457 	ld	(bc), a
      000EFE                       2458 00104$:
                                   2459 ;main.c:39: if(pajaros[i].initSprite == 255) {
      000EFE 1A               [ 7] 2460 	ld	a, (de)
      000EFF 3C               [ 4] 2461 	inc	a
      000F00 20 08            [12] 2462 	jr	NZ, 00109$
                                   2463 ;main.c:40: draw_entidad(&(pajaros[i]), &spritePajaro);
      000F02 11r18r01         [10] 2464 	ld	de, #_spritePajaro
      000F05 E1               [10] 2465 	pop	hl
      000F06 E5               [11] 2466 	push	hl
      000F07 CDr41r06         [17] 2467 	call	_draw_entidad
      000F0A                       2468 00109$:
                                   2469 ;main.c:23: for (i = 0; i < NUM_PAJAROS; i++)
      000F0A DD 34 FF         [23] 2470 	inc	-1 (ix)
      000F0D DD 7E FF         [19] 2471 	ld	a, -1 (ix)
      000F10 D6 13            [ 7] 2472 	sub	a, #0x13
      000F12 DAr69r0E         [10] 2473 	jp	C, 00108$
                                   2474 ;main.c:43: }
      000F15 DD F9            [10] 2475 	ld	sp, ix
      000F17 DD E1            [14] 2476 	pop	ix
      000F19 C9               [10] 2477 	ret
                                   2478 ;main.c:45: void loadGrapVRAM()
                                   2479 ;	---------------------------------
                                   2480 ; Function loadGrapVRAM
                                   2481 ; ---------------------------------
      000F1A                       2482 _loadGrapVRAM::
      000F1A DD E5            [15] 2483 	push	ix
      000F1C DD 21 00 00      [14] 2484 	ld	ix,#0
      000F20 DD 39            [15] 2485 	add	ix,sp
      000F22 21 E2 FF         [10] 2486 	ld	hl, #-30
      000F25 39               [11] 2487 	add	hl, sp
      000F26 F9               [ 6] 2488 	ld	sp, hl
                                   2489 ;main.c:47: SMS_init();
      000F27 CDr00r00         [17] 2490 	call	_SMS_init
                                   2491 ;main.c:50: SMS_setSpriteMode(SPRITEMODE_TALL);
      000F2A 2E 01            [ 7] 2492 	ld	l, #0x01
                                   2493 ;	spillPairReg hl
                                   2494 ;	spillPairReg hl
      000F2C CDr00r00         [17] 2495 	call	_SMS_setSpriteMode
                                   2496 ;main.c:51: SMS_displayOn();
      000F2F 21 40 01         [10] 2497 	ld	hl, #0x0140
      000F32 CDr00r00         [17] 2498 	call	_SMS_VDPturnOnFeature
                                   2499 ;main.c:52: SMS_loadBGPalette(sonicpalette_inc);
      000F35 21r00r00         [10] 2500 	ld	hl, #_sonicpalette_inc
      000F38 CDr00r00         [17] 2501 	call	_SMS_loadBGPalette
                                   2502 ;main.c:53: SMS_loadSpritePalette(palleteAlex_inc);
      000F3B 21r00r00         [10] 2503 	ld	hl, #_palleteAlex_inc
      000F3E CDr00r00         [17] 2504 	call	_SMS_loadSpritePalette
                                   2505 ;main.c:55: spriteAlex = generateSpriteNoRAM(2, 2, spriteAlex_inc_size, spriteAlex_inc);
      000F41 21r00r00         [10] 2506 	ld	hl, #_spriteAlex_inc
      000F44 E5               [11] 2507 	push	hl
      000F45 21 00 10         [10] 2508 	ld	hl, #0x1000
      000F48 E5               [11] 2509 	push	hl
                                   2510 ;	spillPairReg hl
                                   2511 ;	spillPairReg hl
      000F49 3E 02            [ 7] 2512 	ld	a,#0x02
      000F4B 6F               [ 4] 2513 	ld	l,a
      000F4C E5               [11] 2514 	push	hl
      000F4D 21 06 00         [10] 2515 	ld	hl, #0x0006
      000F50 39               [11] 2516 	add	hl, sp
      000F51 EB               [ 4] 2517 	ex	de,hl
      000F52 E1               [10] 2518 	pop	hl
      000F53 D5               [11] 2519 	push	de
      000F54 CDrABr02         [17] 2520 	call	_generateSpriteNoRAM
      000F57 F1               [10] 2521 	pop	af
      000F58 F1               [10] 2522 	pop	af
      000F59 F1               [10] 2523 	pop	af
      000F5A 11r0Er01         [10] 2524 	ld	de, #_spriteAlex
      000F5D 21 00 00         [10] 2525 	ld	hl, #0
      000F60 39               [11] 2526 	add	hl, sp
      000F61 01 0A 00         [10] 2527 	ld	bc, #0x000a
      000F64 ED B0            [21] 2528 	ldir
                                   2529 ;main.c:56: spritePuno = generateSprite(1, 2, puno_inc_size, puno_inc);
      000F66 21r00r00         [10] 2530 	ld	hl, #_puno_inc
      000F69 E5               [11] 2531 	push	hl
      000F6A 21 80 00         [10] 2532 	ld	hl, #0x0080
      000F6D E5               [11] 2533 	push	hl
      000F6E 2E 02            [ 7] 2534 	ld	l, #0x02
                                   2535 ;	spillPairReg hl
                                   2536 ;	spillPairReg hl
      000F70 3E 01            [ 7] 2537 	ld	a, #0x01
      000F72 E5               [11] 2538 	push	hl
      000F73 21 10 00         [10] 2539 	ld	hl, #0x0010
      000F76 39               [11] 2540 	add	hl, sp
      000F77 EB               [ 4] 2541 	ex	de,hl
      000F78 E1               [10] 2542 	pop	hl
      000F79 D5               [11] 2543 	push	de
      000F7A CDr01r02         [17] 2544 	call	_generateSprite
      000F7D F1               [10] 2545 	pop	af
      000F7E F1               [10] 2546 	pop	af
      000F7F F1               [10] 2547 	pop	af
      000F80 11r22r01         [10] 2548 	ld	de, #_spritePuno
      000F83 21 0A 00         [10] 2549 	ld	hl, #10
      000F86 39               [11] 2550 	add	hl, sp
      000F87 01 0A 00         [10] 2551 	ld	bc, #0x000a
      000F8A ED B0            [21] 2552 	ldir
                                   2553 ;main.c:57: spritePajaro = generateSpriteFlip(3, 1, spritePajaro_inc_size, spritePajaro_inc);
      000F8C 21r00r00         [10] 2554 	ld	hl, #_spritePajaro_inc
      000F8F E5               [11] 2555 	push	hl
      000F90 21 80 01         [10] 2556 	ld	hl, #0x0180
      000F93 E5               [11] 2557 	push	hl
      000F94 2E 01            [ 7] 2558 	ld	l, #0x01
                                   2559 ;	spillPairReg hl
                                   2560 ;	spillPairReg hl
      000F96 3E 03            [ 7] 2561 	ld	a, #0x03
      000F98 E5               [11] 2562 	push	hl
      000F99 21 1A 00         [10] 2563 	ld	hl, #0x001a
      000F9C 39               [11] 2564 	add	hl, sp
      000F9D EB               [ 4] 2565 	ex	de,hl
      000F9E E1               [10] 2566 	pop	hl
      000F9F D5               [11] 2567 	push	de
      000FA0 CDr00r00         [17] 2568 	call	_generateSpriteFlip
      000FA3 F1               [10] 2569 	pop	af
      000FA4 F1               [10] 2570 	pop	af
      000FA5 F1               [10] 2571 	pop	af
      000FA6 11r18r01         [10] 2572 	ld	de, #_spritePajaro
      000FA9 21 14 00         [10] 2573 	ld	hl, #20
      000FAC 39               [11] 2574 	add	hl, sp
      000FAD 01 0A 00         [10] 2575 	ld	bc, #0x000a
      000FB0 ED B0            [21] 2576 	ldir
                                   2577 ;main.c:58: SMS_initSprites();
      000FB2 CDr00r00         [17] 2578 	call	_SMS_initSprites
                                   2579 ;main.c:59: alex.initSprite = 255;
      000FB5 21r09r01         [10] 2580 	ld	hl, #_alex + 6
      000FB8 36 FF            [10] 2581 	ld	(hl), #0xff
                                   2582 ;main.c:60: draw_entidad(&alex, &spriteAlex);
      000FBA 11r0Er01         [10] 2583 	ld	de, #_spriteAlex
      000FBD 21r03r01         [10] 2584 	ld	hl, #_alex
      000FC0 CDr41r06         [17] 2585 	call	_draw_entidad
                                   2586 ;main.c:61: SMS_addSprite (0, 0, 9); // puno
      000FC3 11 09 00         [10] 2587 	ld	de, #0x0009
      000FC6 21 00 00         [10] 2588 	ld	hl, #0x0000
      000FC9 CDr00r00         [17] 2589 	call	_SMS_addSprite_f
                                   2590 ;main.c:62: inicializaPajaros();
      000FCC CDr58r0E         [17] 2591 	call	_inicializaPajaros
                                   2592 ;main.c:67: SMS_loadTiles(tiles_de_prueba2_inc, 0, tiles_de_prueba2_inc_size);
      000FCF 21 A0 00         [10] 2593 	ld	hl, #0x00a0
      000FD2 E5               [11] 2594 	push	hl
      000FD3 11r00r00         [10] 2595 	ld	de, #_tiles_de_prueba2_inc
      000FD6 21 00 40         [10] 2596 	ld	hl, #0x4000
      000FD9 CDr00r00         [17] 2597 	call	_SMS_VRAMmemcpy
                                   2598 ;main.c:68: SMS_loadTileMap(0, 0, tilemap_de_prueba2_inc, tilemap_de_prueba2_inc_size);
      000FDC 21 80 07         [10] 2599 	ld	hl, #0x0780
      000FDF E5               [11] 2600 	push	hl
      000FE0 11r00r00         [10] 2601 	ld	de, #_tilemap_de_prueba2_inc
      000FE3 21 00 78         [10] 2602 	ld	hl, #0x7800
      000FE6 CDr00r00         [17] 2603 	call	_SMS_VRAMmemcpy
                                   2604 ;main.c:69: SMS_loadBGPalette(paleta_de_prueba2_inc);
      000FE9 21r00r00         [10] 2605 	ld	hl, #_paleta_de_prueba2_inc
      000FEC CDr00r00         [17] 2606 	call	_SMS_loadBGPalette
                                   2607 ;main.c:70: SMS_setSpritePaletteColor(0,0);
                                   2608 ;	spillPairReg hl
                                   2609 ;	spillPairReg hl
      000FEF AF               [ 4] 2610 	xor	a, a
      000FF0 6F               [ 4] 2611 	ld	l, a
      000FF1 CDr00r00         [17] 2612 	call	_SMS_setSpritePaletteColor
                                   2613 ;main.c:71: }
      000FF4 DD F9            [10] 2614 	ld	sp, ix
      000FF6 DD E1            [14] 2615 	pop	ix
      000FF8 C9               [10] 2616 	ret
                                   2617 ;main.c:73: void dibujaPajaros()
                                   2618 ;	---------------------------------
                                   2619 ; Function dibujaPajaros
                                   2620 ; ---------------------------------
      000FF9                       2621 _dibujaPajaros::
      000FF9 DD E5            [15] 2622 	push	ix
      000FFB DD 21 00 00      [14] 2623 	ld	ix,#0
      000FFF DD 39            [15] 2624 	add	ix,sp
      001001 21 F6 FF         [10] 2625 	ld	hl, #-10
      001004 39               [11] 2626 	add	hl, sp
      001005 F9               [ 6] 2627 	ld	sp, hl
                                   2628 ;main.c:78: unsigned char initPajaros = pajaros[0].initSprite;
      001006 3Ar4Cr03         [13] 2629 	ld	a,(#_pajaros + 6)
      001009 DD 77 FA         [19] 2630 	ld	-6 (ix), a
                                   2631 ;main.c:79: for (i = 0; i < NUM_PAJAROS; i++)
      00100C DD 36 FE 00      [19] 2632 	ld	-2 (ix), #0x00
      001010                       2633 00119$:
                                   2634 ;main.c:81: T_entidad *p = &pajaros[i];
      001010 DD 4E FE         [19] 2635 	ld	c, -2 (ix)
      001013 06 00            [ 7] 2636 	ld	b, #0x00
      001015 69               [ 4] 2637 	ld	l, c
      001016 60               [ 4] 2638 	ld	h, b
      001017 29               [11] 2639 	add	hl, hl
      001018 29               [11] 2640 	add	hl, hl
      001019 09               [11] 2641 	add	hl, bc
      00101A 29               [11] 2642 	add	hl, hl
      00101B 11r46r03         [10] 2643 	ld	de, #_pajaros
      00101E 19               [11] 2644 	add	hl, de
                                   2645 ;main.c:82: p->x++;
      00101F DD 75 FB         [19] 2646 	ld	-5 (ix), l
      001022 DD 74 FC         [19] 2647 	ld	-4 (ix), h
      001025 7E               [ 7] 2648 	ld	a, (hl)
      001026 3C               [ 4] 2649 	inc	a
      001027 DD 6E FB         [19] 2650 	ld	l, -5 (ix)
      00102A DD 66 FC         [19] 2651 	ld	h, -4 (ix)
      00102D 77               [ 7] 2652 	ld	(hl), a
                                   2653 ;main.c:83: p->lastChangeFrame++;
      00102E DD 7E FB         [19] 2654 	ld	a, -5 (ix)
      001031 C6 03            [ 7] 2655 	add	a, #0x03
      001033 DD 77 F6         [19] 2656 	ld	-10 (ix), a
      001036 DD 7E FC         [19] 2657 	ld	a, -4 (ix)
      001039 CE 00            [ 7] 2658 	adc	a, #0x00
      00103B DD 77 F7         [19] 2659 	ld	-9 (ix), a
      00103E E1               [10] 2660 	pop	hl
      00103F E5               [11] 2661 	push	hl
      001040 7E               [ 7] 2662 	ld	a, (hl)
      001041 3C               [ 4] 2663 	inc	a
      001042 E1               [10] 2664 	pop	hl
      001043 E5               [11] 2665 	push	hl
      001044 77               [ 7] 2666 	ld	(hl), a
                                   2667 ;main.c:85: if (p->lastChangeFrame == 20)
      001045 D6 14            [ 7] 2668 	sub	a, #0x14
      001047 C2rDCr10         [10] 2669 	jp	NZ,00108$
                                   2670 ;main.c:87: p->frame++;
      00104A DD 7E FB         [19] 2671 	ld	a, -5 (ix)
      00104D C6 02            [ 7] 2672 	add	a, #0x02
      00104F DD 77 F8         [19] 2673 	ld	-8 (ix), a
      001052 DD 7E FC         [19] 2674 	ld	a, -4 (ix)
      001055 CE 00            [ 7] 2675 	adc	a, #0x00
      001057 DD 77 F9         [19] 2676 	ld	-7 (ix), a
      00105A DD 6E F8         [19] 2677 	ld	l, -8 (ix)
      00105D DD 66 F9         [19] 2678 	ld	h, -7 (ix)
      001060 4E               [ 7] 2679 	ld	c, (hl)
      001061 0C               [ 4] 2680 	inc	c
      001062 D1               [10] 2681 	pop	de
      001063 E1               [10] 2682 	pop	hl
      001064 E5               [11] 2683 	push	hl
      001065 D5               [11] 2684 	push	de
      001066 71               [ 7] 2685 	ld	(hl), c
                                   2686 ;main.c:88: if (p->frame > 1)
      001067 3E 01            [ 7] 2687 	ld	a, #0x01
      001069 91               [ 4] 2688 	sub	a, c
      00106A 30 06            [12] 2689 	jr	NC, 00104$
                                   2690 ;main.c:89: p->frame = 0;
      00106C C1               [10] 2691 	pop	bc
      00106D E1               [10] 2692 	pop	hl
      00106E E5               [11] 2693 	push	hl
      00106F C5               [11] 2694 	push	bc
      001070 36 00            [10] 2695 	ld	(hl), #0x00
      001072                       2696 00104$:
                                   2697 ;main.c:90: p->lastChangeFrame = 0;
      001072 E1               [10] 2698 	pop	hl
      001073 36 00            [10] 2699 	ld	(hl), #0x00
      001075 E5               [11] 2700 	push	hl
                                   2701 ;main.c:91: int frame = spritePajaro.tamano*p->frame + spritePajaro.beginVRAM;
      001076 21r1Ar01         [10] 2702 	ld	hl, #_spritePajaro + 2
      001079 5E               [ 7] 2703 	ld	e, (hl)
      00107A DD 6E F8         [19] 2704 	ld	l, -8 (ix)
      00107D DD 66 F9         [19] 2705 	ld	h, -7 (ix)
      001080 66               [ 7] 2706 	ld	h, (hl)
                                   2707 ;	spillPairReg hl
      001081 2E 00            [ 7] 2708 	ld	l, #0x00
      001083 55               [ 4] 2709 	ld	d, l
      001084 06 08            [ 7] 2710 	ld	b, #0x08
      001086                       2711 00191$:
      001086 29               [11] 2712 	add	hl, hl
      001087 30 01            [12] 2713 	jr	NC, 00192$
      001089 19               [11] 2714 	add	hl, de
      00108A                       2715 00192$:
      00108A 10 FA            [13] 2716 	djnz	00191$
      00108C 4D               [ 4] 2717 	ld	c, l
      00108D 3Ar1Cr01         [13] 2718 	ld	a, (#_spritePajaro + 4)
      001090 81               [ 4] 2719 	add	a, c
      001091 DD 77 FD         [19] 2720 	ld	-3 (ix), a
                                   2721 ;main.c:92: for(j=0;j<spritePajaro.alto;j++) {
      001094 DD 36 FF 00      [19] 2722 	ld	-1 (ix), #0x00
      001098                       2723 00117$:
      001098 21r18r01         [10] 2724 	ld	hl, #_spritePajaro
      00109B DD 7E FF         [19] 2725 	ld	a,-1 (ix)
      00109E 96               [ 7] 2726 	sub	a,(hl)
      00109F 30 3B            [12] 2727 	jr	NC, 00108$
                                   2728 ;main.c:93: unsigned char desplazado = (j<<2);
      0010A1 DD 7E FF         [19] 2729 	ld	a, -1 (ix)
      0010A4 87               [ 4] 2730 	add	a, a
      0010A5 87               [ 4] 2731 	add	a, a
                                   2732 ;main.c:94: unsigned char jCalculated = desplazado + frame, y = p->y+(desplazado<<2);
      0010A6 DD 86 FD         [19] 2733 	add	a, -3 (ix)
      0010A9 5F               [ 4] 2734 	ld	e, a
                                   2735 ;main.c:95: for(i2=0;i2<spritePajaro.ancho;i2++) {
      0010AA 16 00            [ 7] 2736 	ld	d, #0x00
      0010AC                       2737 00114$:
      0010AC 21r19r01         [10] 2738 	ld	hl, #_spritePajaro + 1
      0010AF 4E               [ 7] 2739 	ld	c, (hl)
      0010B0 7A               [ 4] 2740 	ld	a, d
      0010B1 91               [ 4] 2741 	sub	a, c
      0010B2 30 23            [12] 2742 	jr	NC, 00118$
                                   2743 ;main.c:96: SpriteTableXN2[(i2+initPajaros)*2+1] = jCalculated + (i2<<1);
      0010B4 4A               [ 4] 2744 	ld	c, d
      0010B5 06 00            [ 7] 2745 	ld	b, #0x00
      0010B7 DD 6E FA         [19] 2746 	ld	l, -6 (ix)
                                   2747 ;	spillPairReg hl
                                   2748 ;	spillPairReg hl
      0010BA 26 00            [ 7] 2749 	ld	h, #0x00
                                   2750 ;	spillPairReg hl
                                   2751 ;	spillPairReg hl
      0010BC 09               [11] 2752 	add	hl, bc
      0010BD 29               [11] 2753 	add	hl, hl
      0010BE 23               [ 6] 2754 	inc	hl
      0010BF 4D               [ 4] 2755 	ld	c, l
      0010C0 44               [ 4] 2756 	ld	b, h
      0010C1 79               [ 4] 2757 	ld	a, c
      0010C2 FD 21r42r03      [14] 2758 	ld	iy, #_SpriteTableXN2
      0010C6 FD 86 00         [19] 2759 	add	a, 0 (iy)
      0010C9 4F               [ 4] 2760 	ld	c, a
      0010CA 78               [ 4] 2761 	ld	a, b
      0010CB FD 8E 01         [19] 2762 	adc	a, 1 (iy)
      0010CE 47               [ 4] 2763 	ld	b, a
      0010CF 7A               [ 4] 2764 	ld	a, d
      0010D0 87               [ 4] 2765 	add	a, a
      0010D1 6B               [ 4] 2766 	ld	l, e
                                   2767 ;	spillPairReg hl
                                   2768 ;	spillPairReg hl
      0010D2 85               [ 4] 2769 	add	a, l
      0010D3 02               [ 7] 2770 	ld	(bc), a
                                   2771 ;main.c:95: for(i2=0;i2<spritePajaro.ancho;i2++) {
      0010D4 14               [ 4] 2772 	inc	d
      0010D5 18 D5            [12] 2773 	jr	00114$
      0010D7                       2774 00118$:
                                   2775 ;main.c:92: for(j=0;j<spritePajaro.alto;j++) {
      0010D7 DD 34 FF         [23] 2776 	inc	-1 (ix)
      0010DA 18 BC            [12] 2777 	jr	00117$
      0010DC                       2778 00108$:
                                   2779 ;main.c:100: initPajaros +=3;
      0010DC DD 7E FA         [19] 2780 	ld	a, -6 (ix)
      0010DF C6 03            [ 7] 2781 	add	a, #0x03
      0010E1 DD 77 FA         [19] 2782 	ld	-6 (ix), a
                                   2783 ;main.c:101: end = p->len;
      0010E4 DD 4E FB         [19] 2784 	ld	c, -5 (ix)
      0010E7 DD 46 FC         [19] 2785 	ld	b, -4 (ix)
      0010EA 21 07 00         [10] 2786 	ld	hl, #7
      0010ED 09               [11] 2787 	add	hl, bc
      0010EE 4E               [ 7] 2788 	ld	c, (hl)
                                   2789 ;main.c:102: i2 = p->initSprite << 1;
      0010EF DD 5E FB         [19] 2790 	ld	e, -5 (ix)
      0010F2 DD 56 FC         [19] 2791 	ld	d, -4 (ix)
      0010F5 21 06 00         [10] 2792 	ld	hl, #6
      0010F8 19               [11] 2793 	add	hl, de
      0010F9 7E               [ 7] 2794 	ld	a, (hl)
      0010FA 87               [ 4] 2795 	add	a, a
      0010FB 47               [ 4] 2796 	ld	b, a
                                   2797 ;main.c:103: while(i2<end) {
      0010FC                       2798 00109$:
                                   2799 ;main.c:104: SpriteTableXN2[i2] += 1;
      0010FC 78               [ 4] 2800 	ld	a,b
      0010FD B9               [ 4] 2801 	cp	a,c
      0010FE 30 11            [12] 2802 	jr	NC, 00120$
      001100 21r42r03         [10] 2803 	ld	hl, #_SpriteTableXN2
      001103 86               [ 7] 2804 	add	a, (hl)
      001104 23               [ 6] 2805 	inc	hl
      001105 5F               [ 4] 2806 	ld	e, a
      001106 3E 00            [ 7] 2807 	ld	a, #0x00
      001108 8E               [ 7] 2808 	adc	a, (hl)
      001109 57               [ 4] 2809 	ld	d, a
      00110A 1A               [ 7] 2810 	ld	a, (de)
      00110B 3C               [ 4] 2811 	inc	a
      00110C 12               [ 7] 2812 	ld	(de), a
                                   2813 ;main.c:105: i2 +=2;
      00110D 04               [ 4] 2814 	inc	b
      00110E 04               [ 4] 2815 	inc	b
      00110F 18 EB            [12] 2816 	jr	00109$
      001111                       2817 00120$:
                                   2818 ;main.c:79: for (i = 0; i < NUM_PAJAROS; i++)
      001111 DD 34 FE         [23] 2819 	inc	-2 (ix)
      001114 DD 7E FE         [19] 2820 	ld	a, -2 (ix)
      001117 D6 13            [ 7] 2821 	sub	a, #0x13
      001119 DAr10r10         [10] 2822 	jp	C, 00119$
                                   2823 ;main.c:110: }
      00111C DD F9            [10] 2824 	ld	sp, ix
      00111E DD E1            [14] 2825 	pop	ix
      001120 C9               [10] 2826 	ret
                                   2827 ;main.c:112: void playMusic() {
                                   2828 ;	---------------------------------
                                   2829 ; Function playMusic
                                   2830 ; ---------------------------------
      001121                       2831 _playMusic::
                                   2832 ;main.c:113: PSGFrame();
      001121 CDr00r00         [17] 2833 	call	_PSGFrame
                                   2834 ;main.c:114: PSGSFXFrame();
                                   2835 ;main.c:115: }
      001124 C3r00r00         [10] 2836 	jp	_PSGSFXFrame
                                   2837 ;main.c:117: void disableSprites() {
                                   2838 ;	---------------------------------
                                   2839 ; Function disableSprites
                                   2840 ; ---------------------------------
      001127                       2841 _disableSprites::
                                   2842 ;main.c:120: while (i < 64) {
      001127 0E 00            [ 7] 2843 	ld	c, #0x00
      001129                       2844 00101$:
      001129 79               [ 4] 2845 	ld	a, c
      00112A D6 40            [ 7] 2846 	sub	a, #0x40
      00112C 30 10            [12] 2847 	jr	NC, 00103$
                                   2848 ;main.c:121: SMS_updateSpritePosition(i,10,240); 
      00112E 41               [ 4] 2849 	ld	b, c
      00112F C5               [11] 2850 	push	bc
      001130 3E F0            [ 7] 2851 	ld	a, #0xf0
      001132 F5               [11] 2852 	push	af
      001133 33               [ 6] 2853 	inc	sp
      001134 2E 0A            [ 7] 2854 	ld	l, #0x0a
                                   2855 ;	spillPairReg hl
                                   2856 ;	spillPairReg hl
      001136 78               [ 4] 2857 	ld	a, b
      001137 CDr00r00         [17] 2858 	call	_SMS_updateSpritePosition
      00113A C1               [10] 2859 	pop	bc
                                   2860 ;main.c:122: i++;
      00113B 0C               [ 4] 2861 	inc	c
      00113C 18 EB            [12] 2862 	jr	00101$
      00113E                       2863 00103$:
                                   2864 ;main.c:124: numSprites = 0;
      00113E 21 00 00         [10] 2865 	ld	hl, #0x0000
      001141 22r04r04         [16] 2866 	ld	(_numSprites), hl
                                   2867 ;main.c:125: }
      001144 C9               [10] 2868 	ret
                                   2869 ;main.c:127: void main(void)
                                   2870 ;	---------------------------------
                                   2871 ; Function main
                                   2872 ; ---------------------------------
      001145                       2873 _main::
      001145 DD E5            [15] 2874 	push	ix
      001147 DD 21 00 00      [14] 2875 	ld	ix,#0
      00114B DD 39            [15] 2876 	add	ix,sp
      00114D F5               [11] 2877 	push	af
                                   2878 ;main.c:132: SMS_VRAMmemsetW(0, 0x0000, 16384);
      00114E DD 36 FF 00      [19] 2879 	ld	-1 (ix), #0x00
      001152 DD 36 FE 00      [19] 2880 	ld	-2 (ix), #0x00
      001156 21 00 40         [10] 2881 	ld	hl, #0x4000
      001159 E5               [11] 2882 	push	hl
      00115A 11 00 00         [10] 2883 	ld	de, #0x0000
      00115D 65               [ 4] 2884 	ld	h, l
      00115E CDr00r00         [17] 2885 	call	_SMS_VRAMmemsetW
                                   2886 ;main.c:142: printf("Hello, World! [1/3]");
      001161 21r14r12         [10] 2887 	ld	hl, #___str_0
      001164 E5               [11] 2888 	push	hl
      001165 CDr00r00         [17] 2889 	call	_printf
      001168 F1               [10] 2890 	pop	af
                                   2891 ;main.c:147: SMS_displayOn();
      001169 21 40 01         [10] 2892 	ld	hl, #0x0140
      00116C CDr00r00         [17] 2893 	call	_SMS_VDPturnOnFeature
                                   2894 ;main.c:148: SMS_setBGScrollX(scroll_x);
      00116F 2E 00            [ 7] 2895 	ld	l, #0x00
                                   2896 ;	spillPairReg hl
                                   2897 ;	spillPairReg hl
      001171 CDr00r00         [17] 2898 	call	_SMS_setBGScrollX
                                   2899 ;main.c:149: SMS_setBGScrollY(scroll_y);
      001174 2E 00            [ 7] 2900 	ld	l, #0x00
                                   2901 ;	spillPairReg hl
                                   2902 ;	spillPairReg hl
      001176 CDr00r00         [17] 2903 	call	_SMS_setBGScrollY
                                   2904 ;main.c:150: SMS_init();
      001179 CDr00r00         [17] 2905 	call	_SMS_init
                                   2906 ;main.c:151: initSpritesVariables();
      00117C CDrDEr05         [17] 2907 	call	_initSpritesVariables
                                   2908 ;main.c:152: loadGrapVRAM();
      00117F CDr1Ar0F         [17] 2909 	call	_loadGrapVRAM
                                   2910 ;main.c:158: PSGPlay(special_psg);
      001182 21r00r00         [10] 2911 	ld	hl, #_special_psg
      001185 CDr00r00         [17] 2912 	call	_PSGPlay
                                   2913 ;main.c:159: SMS_VDPturnOnFeature(VDPFEATURE_LEFTCOLBLANK);
      001188 21 20 00         [10] 2914 	ld	hl, #0x0020
      00118B CDr00r00         [17] 2915 	call	_SMS_VDPturnOnFeature
                                   2916 ;main.c:160: SMS_VDPturnOnFeature(VDPFEATURE_EXTRAHEIGHT);
      00118E 21 02 00         [10] 2917 	ld	hl, #0x0002
      001191 CDr00r00         [17] 2918 	call	_SMS_VDPturnOnFeature
                                   2919 ;main.c:162: SMS_VDPturnOnFeature(VDPFEATURE_240LINES);
      001194 21 08 01         [10] 2920 	ld	hl, #0x0108
      001197 CDr00r00         [17] 2921 	call	_SMS_VDPturnOnFeature
                                   2922 ;main.c:163: SMS_setFrameInterruptHandler(playMusic);
      00119A 21r21r11         [10] 2923 	ld	hl, #_playMusic
      00119D CDr00r00         [17] 2924 	call	_SMS_setFrameInterruptHandler
      0011A0                       2925 00115$:
                                   2926 ;main.c:168: if (SMS_queryPauseRequested())
      0011A0 CDr00r00         [17] 2927 	call	_SMS_queryPauseRequested
      0011A3 CB 47            [ 8] 2928 	bit	0,a
      0011A5 28 1E            [12] 2929 	jr	Z, 00105$
                                   2930 ;main.c:170: PSGPlay(emeraldhill_psg);
      0011A7 21r00r00         [10] 2931 	ld	hl, #_emeraldhill_psg
      0011AA CDr00r00         [17] 2932 	call	_PSGPlay
                                   2933 ;main.c:171: SMS_resetPauseRequest();
      0011AD CDr00r00         [17] 2934 	call	_SMS_resetPauseRequest
                                   2935 ;main.c:172: while (!SMS_queryPauseRequested())
      0011B0                       2936 00101$:
      0011B0 CDr00r00         [17] 2937 	call	_SMS_queryPauseRequested
      0011B3 CB 47            [ 8] 2938 	bit	0,a
      0011B5 20 05            [12] 2939 	jr	NZ, 00103$
                                   2940 ;main.c:174: SMS_waitForVBlank();
      0011B7 CDr00r00         [17] 2941 	call	_SMS_waitForVBlank
      0011BA 18 F4            [12] 2942 	jr	00101$
      0011BC                       2943 00103$:
                                   2944 ;main.c:178: SMS_resetPauseRequest();
      0011BC CDr00r00         [17] 2945 	call	_SMS_resetPauseRequest
                                   2946 ;main.c:179: PSGPlay(titulo_psg);
      0011BF 21r00r00         [10] 2947 	ld	hl, #_titulo_psg
      0011C2 CDr00r00         [17] 2948 	call	_PSGPlay
      0011C5                       2949 00105$:
                                   2950 ;main.c:183: int keys = SMS_getKeysHeld();
      0011C5 CDr00r00         [17] 2951 	call	_SMS_getKeysHeld
      0011C8 EB               [ 4] 2952 	ex	de, hl
                                   2953 ;main.c:184: if(keys & PORT_A_KEY_2)
      0011C9 CB 6D            [ 8] 2954 	bit	5, l
      0011CB 28 04            [12] 2955 	jr	Z, 00107$
                                   2956 ;main.c:185: keys = keys  ^ PORT_A_KEY_2;
      0011CD 7D               [ 4] 2957 	ld	a, l
      0011CE EE 20            [ 7] 2958 	xor	a, #0x20
      0011D0 6F               [ 4] 2959 	ld	l, a
                                   2960 ;	spillPairReg hl
                                   2961 ;	spillPairReg hl
      0011D1                       2962 00107$:
                                   2963 ;main.c:186: if(keys & PORT_A_KEY_1)
      0011D1 CB 65            [ 8] 2964 	bit	4, l
      0011D3 28 04            [12] 2965 	jr	Z, 00109$
                                   2966 ;main.c:187: keys = keys  ^ PORT_A_KEY_1;
      0011D5 7D               [ 4] 2967 	ld	a, l
      0011D6 EE 10            [ 7] 2968 	xor	a, #0x10
      0011D8 6F               [ 4] 2969 	ld	l, a
                                   2970 ;	spillPairReg hl
                                   2971 ;	spillPairReg hl
      0011D9                       2972 00109$:
                                   2973 ;main.c:189: keys = keys | (SMS_getKeysPressed() & (PORT_A_KEY_2 | PORT_A_KEY_1));
      0011D9 E5               [11] 2974 	push	hl
      0011DA CDr00r00         [17] 2975 	call	_SMS_getKeysPressed
      0011DD E1               [10] 2976 	pop	hl
      0011DE 7B               [ 4] 2977 	ld	a, e
      0011DF E6 30            [ 7] 2978 	and	a, #0x30
      0011E1 B5               [ 4] 2979 	or	a, l
      0011E2 6F               [ 4] 2980 	ld	l, a
                                   2981 ;	spillPairReg hl
                                   2982 ;	spillPairReg hl
                                   2983 ;main.c:192: moveAlex(keys);
      0011E3 CDr1Er0E         [17] 2984 	call	_moveAlex
                                   2985 ;main.c:194: dibujaPajaros();
      0011E6 CDrF9r0F         [17] 2986 	call	_dibujaPajaros
                                   2987 ;main.c:199: SMS_waitForVBlank();
      0011E9 CDr00r00         [17] 2988 	call	_SMS_waitForVBlank
                                   2989 ;main.c:205: copySpritestoSAT();
      0011EC CDr0Dr06         [17] 2990 	call	_copySpritestoSAT
                                   2991 ;main.c:212: if (scroll_y % 2 == 0)
      0011EF DD CB FF 46      [20] 2992 	bit	0, -1 (ix)
      0011F3 20 03            [12] 2993 	jr	NZ, 00111$
                                   2994 ;main.c:213: scroll_x += 1;
      0011F5 DD 34 FE         [23] 2995 	inc	-2 (ix)
      0011F8                       2996 00111$:
                                   2997 ;main.c:214: scroll_y++;
      0011F8 DD 34 FF         [23] 2998 	inc	-1 (ix)
                                   2999 ;main.c:215: if (scroll_y == 224)
      0011FB DD 7E FF         [19] 3000 	ld	a, -1 (ix)
      0011FE D6 E0            [ 7] 3001 	sub	a, #0xe0
      001200 20 04            [12] 3002 	jr	NZ, 00113$
                                   3003 ;main.c:216: scroll_y = 0;
      001202 DD 36 FF 00      [19] 3004 	ld	-1 (ix), #0x00
      001206                       3005 00113$:
                                   3006 ;main.c:218: SMS_setBGScrollX(scroll_x);
      001206 DD 6E FE         [19] 3007 	ld	l, -2 (ix)
                                   3008 ;	spillPairReg hl
                                   3009 ;	spillPairReg hl
      001209 CDr00r00         [17] 3010 	call	_SMS_setBGScrollX
                                   3011 ;main.c:220: SMS_displayOn();
      00120C 21 40 01         [10] 3012 	ld	hl, #0x0140
      00120F CDr00r00         [17] 3013 	call	_SMS_VDPturnOnFeature
                                   3014 ;main.c:222: }
      001212 18 8C            [12] 3015 	jr	00115$
      001214                       3016 ___str_0:
      001214 48 65 6C 6C 6F 2C 20  3017 	.ascii "Hello, World! [1/3]"
             57 6F 72 6C 64 21 20
             5B 31 2F 33 5D
      001227 00                    3018 	.db 0x00
                                   3019 	.area _CODE
      001228                       3020 __str_1:
      001228 53 45 47 41           3021 	.ascii "SEGA"
      00122C 00                    3022 	.db 0x00
      00122D                       3023 __str_2:
      00122D 62 61 73 69 63 20 65  3024 	.ascii "basic example"
             78 61 6D 70 6C 65
      00123A 00                    3025 	.db 0x00
      00123B                       3026 __str_3:
      00123B 41 20 73 69 6D 70 6C  3027 	.ascii "A simple example"
             65 20 65 78 61 6D 70
             6C 65
      00124B 00                    3028 	.db 0x00
                                   3029 	.area _INITIALIZER
      000000                       3030 __xinit__nextVRAMsprites:
      000000 00 01                 3031 	.dw #0x0100
      000002                       3032 __xinit__flipArray:
      000002 00                    3033 	.db #0x00	; 0
      000003 80                    3034 	.db #0x80	; 128
      000004 40                    3035 	.db #0x40	; 64
      000005 C0                    3036 	.db #0xc0	; 192
      000006 20                    3037 	.db #0x20	; 32
      000007 A0                    3038 	.db #0xa0	; 160
      000008 60                    3039 	.db #0x60	; 96
      000009 E0                    3040 	.db #0xe0	; 224
      00000A 10                    3041 	.db #0x10	; 16
      00000B 90                    3042 	.db #0x90	; 144
      00000C 50                    3043 	.db #0x50	; 80	'P'
      00000D D0                    3044 	.db #0xd0	; 208
      00000E 30                    3045 	.db #0x30	; 48	'0'
      00000F B0                    3046 	.db #0xb0	; 176
      000010 70                    3047 	.db #0x70	; 112	'p'
      000011 F0                    3048 	.db #0xf0	; 240
      000012 08                    3049 	.db #0x08	; 8
      000013 88                    3050 	.db #0x88	; 136
      000014 48                    3051 	.db #0x48	; 72	'H'
      000015 C8                    3052 	.db #0xc8	; 200
      000016 28                    3053 	.db #0x28	; 40
      000017 A8                    3054 	.db #0xa8	; 168
      000018 68                    3055 	.db #0x68	; 104	'h'
      000019 E8                    3056 	.db #0xe8	; 232
      00001A 18                    3057 	.db #0x18	; 24
      00001B 98                    3058 	.db #0x98	; 152
      00001C 58                    3059 	.db #0x58	; 88	'X'
      00001D D8                    3060 	.db #0xd8	; 216
      00001E 38                    3061 	.db #0x38	; 56	'8'
      00001F B8                    3062 	.db #0xb8	; 184
      000020 78                    3063 	.db #0x78	; 120	'x'
      000021 F8                    3064 	.db #0xf8	; 248
      000022 04                    3065 	.db #0x04	; 4
      000023 84                    3066 	.db #0x84	; 132
      000024 44                    3067 	.db #0x44	; 68	'D'
      000025 C4                    3068 	.db #0xc4	; 196
      000026 24                    3069 	.db #0x24	; 36
      000027 A4                    3070 	.db #0xa4	; 164
      000028 64                    3071 	.db #0x64	; 100	'd'
      000029 E4                    3072 	.db #0xe4	; 228
      00002A 14                    3073 	.db #0x14	; 20
      00002B 94                    3074 	.db #0x94	; 148
      00002C 54                    3075 	.db #0x54	; 84	'T'
      00002D D4                    3076 	.db #0xd4	; 212
      00002E 34                    3077 	.db #0x34	; 52	'4'
      00002F B4                    3078 	.db #0xb4	; 180
      000030 74                    3079 	.db #0x74	; 116	't'
      000031 F4                    3080 	.db #0xf4	; 244
      000032 0C                    3081 	.db #0x0c	; 12
      000033 8C                    3082 	.db #0x8c	; 140
      000034 4C                    3083 	.db #0x4c	; 76	'L'
      000035 CC                    3084 	.db #0xcc	; 204
      000036 2C                    3085 	.db #0x2c	; 44
      000037 AC                    3086 	.db #0xac	; 172
      000038 6C                    3087 	.db #0x6c	; 108	'l'
      000039 EC                    3088 	.db #0xec	; 236
      00003A 1C                    3089 	.db #0x1c	; 28
      00003B 9C                    3090 	.db #0x9c	; 156
      00003C 5C                    3091 	.db #0x5c	; 92
      00003D DC                    3092 	.db #0xdc	; 220
      00003E 3C                    3093 	.db #0x3c	; 60
      00003F BC                    3094 	.db #0xbc	; 188
      000040 7C                    3095 	.db #0x7c	; 124
      000041 FC                    3096 	.db #0xfc	; 252
      000042 02                    3097 	.db #0x02	; 2
      000043 82                    3098 	.db #0x82	; 130
      000044 42                    3099 	.db #0x42	; 66	'B'
      000045 C2                    3100 	.db #0xc2	; 194
      000046 22                    3101 	.db #0x22	; 34
      000047 A2                    3102 	.db #0xa2	; 162
      000048 62                    3103 	.db #0x62	; 98	'b'
      000049 E2                    3104 	.db #0xe2	; 226
      00004A 12                    3105 	.db #0x12	; 18
      00004B 92                    3106 	.db #0x92	; 146
      00004C 52                    3107 	.db #0x52	; 82	'R'
      00004D D2                    3108 	.db #0xd2	; 210
      00004E 32                    3109 	.db #0x32	; 50	'2'
      00004F B2                    3110 	.db #0xb2	; 178
      000050 72                    3111 	.db #0x72	; 114	'r'
      000051 F2                    3112 	.db #0xf2	; 242
      000052 0A                    3113 	.db #0x0a	; 10
      000053 8A                    3114 	.db #0x8a	; 138
      000054 4A                    3115 	.db #0x4a	; 74	'J'
      000055 CA                    3116 	.db #0xca	; 202
      000056 2A                    3117 	.db #0x2a	; 42
      000057 AA                    3118 	.db #0xaa	; 170
      000058 6A                    3119 	.db #0x6a	; 106	'j'
      000059 EA                    3120 	.db #0xea	; 234
      00005A 1A                    3121 	.db #0x1a	; 26
      00005B 9A                    3122 	.db #0x9a	; 154
      00005C 5A                    3123 	.db #0x5a	; 90	'Z'
      00005D DA                    3124 	.db #0xda	; 218
      00005E 3A                    3125 	.db #0x3a	; 58
      00005F BA                    3126 	.db #0xba	; 186
      000060 7A                    3127 	.db #0x7a	; 122	'z'
      000061 FA                    3128 	.db #0xfa	; 250
      000062 06                    3129 	.db #0x06	; 6
      000063 86                    3130 	.db #0x86	; 134
      000064 46                    3131 	.db #0x46	; 70	'F'
      000065 C6                    3132 	.db #0xc6	; 198
      000066 26                    3133 	.db #0x26	; 38
      000067 A6                    3134 	.db #0xa6	; 166
      000068 66                    3135 	.db #0x66	; 102	'f'
      000069 E6                    3136 	.db #0xe6	; 230
      00006A 16                    3137 	.db #0x16	; 22
      00006B 96                    3138 	.db #0x96	; 150
      00006C 56                    3139 	.db #0x56	; 86	'V'
      00006D D6                    3140 	.db #0xd6	; 214
      00006E 36                    3141 	.db #0x36	; 54	'6'
      00006F B6                    3142 	.db #0xb6	; 182
      000070 76                    3143 	.db #0x76	; 118	'v'
      000071 F6                    3144 	.db #0xf6	; 246
      000072 0E                    3145 	.db #0x0e	; 14
      000073 8E                    3146 	.db #0x8e	; 142
      000074 4E                    3147 	.db #0x4e	; 78	'N'
      000075 CE                    3148 	.db #0xce	; 206
      000076 2E                    3149 	.db #0x2e	; 46
      000077 AE                    3150 	.db #0xae	; 174
      000078 6E                    3151 	.db #0x6e	; 110	'n'
      000079 EE                    3152 	.db #0xee	; 238
      00007A 1E                    3153 	.db #0x1e	; 30
      00007B 9E                    3154 	.db #0x9e	; 158
      00007C 5E                    3155 	.db #0x5e	; 94
      00007D DE                    3156 	.db #0xde	; 222
      00007E 3E                    3157 	.db #0x3e	; 62
      00007F BE                    3158 	.db #0xbe	; 190
      000080 7E                    3159 	.db #0x7e	; 126
      000081 FE                    3160 	.db #0xfe	; 254
      000082 01                    3161 	.db #0x01	; 1
      000083 81                    3162 	.db #0x81	; 129
      000084 41                    3163 	.db #0x41	; 65	'A'
      000085 C1                    3164 	.db #0xc1	; 193
      000086 21                    3165 	.db #0x21	; 33
      000087 A1                    3166 	.db #0xa1	; 161
      000088 61                    3167 	.db #0x61	; 97	'a'
      000089 E1                    3168 	.db #0xe1	; 225
      00008A 11                    3169 	.db #0x11	; 17
      00008B 91                    3170 	.db #0x91	; 145
      00008C 51                    3171 	.db #0x51	; 81	'Q'
      00008D D1                    3172 	.db #0xd1	; 209
      00008E 31                    3173 	.db #0x31	; 49	'1'
      00008F B1                    3174 	.db #0xb1	; 177
      000090 71                    3175 	.db #0x71	; 113	'q'
      000091 F1                    3176 	.db #0xf1	; 241
      000092 09                    3177 	.db #0x09	; 9
      000093 89                    3178 	.db #0x89	; 137
      000094 49                    3179 	.db #0x49	; 73	'I'
      000095 C9                    3180 	.db #0xc9	; 201
      000096 29                    3181 	.db #0x29	; 41
      000097 A9                    3182 	.db #0xa9	; 169
      000098 69                    3183 	.db #0x69	; 105	'i'
      000099 E9                    3184 	.db #0xe9	; 233
      00009A 19                    3185 	.db #0x19	; 25
      00009B 99                    3186 	.db #0x99	; 153
      00009C 59                    3187 	.db #0x59	; 89	'Y'
      00009D D9                    3188 	.db #0xd9	; 217
      00009E 39                    3189 	.db #0x39	; 57	'9'
      00009F B9                    3190 	.db #0xb9	; 185
      0000A0 79                    3191 	.db #0x79	; 121	'y'
      0000A1 F9                    3192 	.db #0xf9	; 249
      0000A2 05                    3193 	.db #0x05	; 5
      0000A3 85                    3194 	.db #0x85	; 133
      0000A4 45                    3195 	.db #0x45	; 69	'E'
      0000A5 C5                    3196 	.db #0xc5	; 197
      0000A6 25                    3197 	.db #0x25	; 37
      0000A7 A5                    3198 	.db #0xa5	; 165
      0000A8 65                    3199 	.db #0x65	; 101	'e'
      0000A9 E5                    3200 	.db #0xe5	; 229
      0000AA 15                    3201 	.db #0x15	; 21
      0000AB 95                    3202 	.db #0x95	; 149
      0000AC 55                    3203 	.db #0x55	; 85	'U'
      0000AD D5                    3204 	.db #0xd5	; 213
      0000AE 35                    3205 	.db #0x35	; 53	'5'
      0000AF B5                    3206 	.db #0xb5	; 181
      0000B0 75                    3207 	.db #0x75	; 117	'u'
      0000B1 F5                    3208 	.db #0xf5	; 245
      0000B2 0D                    3209 	.db #0x0d	; 13
      0000B3 8D                    3210 	.db #0x8d	; 141
      0000B4 4D                    3211 	.db #0x4d	; 77	'M'
      0000B5 CD                    3212 	.db #0xcd	; 205
      0000B6 2D                    3213 	.db #0x2d	; 45
      0000B7 AD                    3214 	.db #0xad	; 173
      0000B8 6D                    3215 	.db #0x6d	; 109	'm'
      0000B9 ED                    3216 	.db #0xed	; 237
      0000BA 1D                    3217 	.db #0x1d	; 29
      0000BB 9D                    3218 	.db #0x9d	; 157
      0000BC 5D                    3219 	.db #0x5d	; 93
      0000BD DD                    3220 	.db #0xdd	; 221
      0000BE 3D                    3221 	.db #0x3d	; 61
      0000BF BD                    3222 	.db #0xbd	; 189
      0000C0 7D                    3223 	.db #0x7d	; 125
      0000C1 FD                    3224 	.db #0xfd	; 253
      0000C2 03                    3225 	.db #0x03	; 3
      0000C3 83                    3226 	.db #0x83	; 131
      0000C4 43                    3227 	.db #0x43	; 67	'C'
      0000C5 C3                    3228 	.db #0xc3	; 195
      0000C6 23                    3229 	.db #0x23	; 35
      0000C7 A3                    3230 	.db #0xa3	; 163
      0000C8 63                    3231 	.db #0x63	; 99	'c'
      0000C9 E3                    3232 	.db #0xe3	; 227
      0000CA 13                    3233 	.db #0x13	; 19
      0000CB 93                    3234 	.db #0x93	; 147
      0000CC 53                    3235 	.db #0x53	; 83	'S'
      0000CD D3                    3236 	.db #0xd3	; 211
      0000CE 33                    3237 	.db #0x33	; 51	'3'
      0000CF B3                    3238 	.db #0xb3	; 179
      0000D0 73                    3239 	.db #0x73	; 115	's'
      0000D1 F3                    3240 	.db #0xf3	; 243
      0000D2 0B                    3241 	.db #0x0b	; 11
      0000D3 8B                    3242 	.db #0x8b	; 139
      0000D4 4B                    3243 	.db #0x4b	; 75	'K'
      0000D5 CB                    3244 	.db #0xcb	; 203
      0000D6 2B                    3245 	.db #0x2b	; 43
      0000D7 AB                    3246 	.db #0xab	; 171
      0000D8 6B                    3247 	.db #0x6b	; 107	'k'
      0000D9 EB                    3248 	.db #0xeb	; 235
      0000DA 1B                    3249 	.db #0x1b	; 27
      0000DB 9B                    3250 	.db #0x9b	; 155
      0000DC 5B                    3251 	.db #0x5b	; 91
      0000DD DB                    3252 	.db #0xdb	; 219
      0000DE 3B                    3253 	.db #0x3b	; 59
      0000DF BB                    3254 	.db #0xbb	; 187
      0000E0 7B                    3255 	.db #0x7b	; 123
      0000E1 FB                    3256 	.db #0xfb	; 251
      0000E2 07                    3257 	.db #0x07	; 7
      0000E3 87                    3258 	.db #0x87	; 135
      0000E4 47                    3259 	.db #0x47	; 71	'G'
      0000E5 C7                    3260 	.db #0xc7	; 199
      0000E6 27                    3261 	.db #0x27	; 39
      0000E7 A7                    3262 	.db #0xa7	; 167
      0000E8 67                    3263 	.db #0x67	; 103	'g'
      0000E9 E7                    3264 	.db #0xe7	; 231
      0000EA 17                    3265 	.db #0x17	; 23
      0000EB 97                    3266 	.db #0x97	; 151
      0000EC 57                    3267 	.db #0x57	; 87	'W'
      0000ED D7                    3268 	.db #0xd7	; 215
      0000EE 37                    3269 	.db #0x37	; 55	'7'
      0000EF B7                    3270 	.db #0xb7	; 183
      0000F0 77                    3271 	.db #0x77	; 119	'w'
      0000F1 F7                    3272 	.db #0xf7	; 247
      0000F2 0F                    3273 	.db #0x0f	; 15
      0000F3 8F                    3274 	.db #0x8f	; 143
      0000F4 4F                    3275 	.db #0x4f	; 79	'O'
      0000F5 CF                    3276 	.db #0xcf	; 207
      0000F6 2F                    3277 	.db #0x2f	; 47
      0000F7 AF                    3278 	.db #0xaf	; 175
      0000F8 6F                    3279 	.db #0x6f	; 111	'o'
      0000F9 EF                    3280 	.db #0xef	; 239
      0000FA 1F                    3281 	.db #0x1f	; 31
      0000FB 9F                    3282 	.db #0x9f	; 159
      0000FC 5F                    3283 	.db #0x5f	; 95
      0000FD DF                    3284 	.db #0xdf	; 223
      0000FE 3F                    3285 	.db #0x3f	; 63
      0000FF BF                    3286 	.db #0xbf	; 191
      000100 7F                    3287 	.db #0x7f	; 127
      000101 FF                    3288 	.db #0xff	; 255
      000102                       3289 __xinit__maxSalto:
      000102 FF                    3290 	.db #0xff	; 255
      000103                       3291 __xinit__alex:
      000103 1E                    3292 	.db #0x1e	; 30
      000104 96                    3293 	.db #0x96	; 150
      000105 00                    3294 	.db #0x00	; 0
      000106 00                    3295 	.db #0x00	; 0
      000107 00                    3296 	.db #0x00	; 0
      000108 00                    3297 	.db #0x00	; 0
      000109 FF                    3298 	.db #0xff	; 255
      00010A 00                    3299 	.db #0x00	; 0
      00010B 00 00                 3300 	.dw #0x0000
      00010D                       3301 __xinit__lastFrame:
      00010D FF                    3302 	.db #0xff	; 255
      00010E                       3303 __xinit__spriteAlex:
      00010E 02                    3304 	.db #0x02	; 2
      00010F 02                    3305 	.db #0x02	; 2
      000110 08                    3306 	.db #0x08	; 8
      000111 00                    3307 	.db #0x00	; 0
      000112 00 00                 3308 	.dw #0x0000
      000114 00                    3309 	.db #0x00	; 0
      000115 00 00                 3310 	.dw #0x0000
      000117 00                    3311 	.db #0x00	; 0
      000118                       3312 __xinit__spritePajaro:
      000118 02                    3313 	.db #0x02	; 2
      000119 02                    3314 	.db #0x02	; 2
      00011A 08                    3315 	.db #0x08	; 8
      00011B 00                    3316 	.db #0x00	; 0
      00011C 00 00                 3317 	.dw #0x0000
      00011E 00                    3318 	.db #0x00	; 0
      00011F 00 00                 3319 	.dw #0x0000
      000121 00                    3320 	.db #0x00	; 0
      000122                       3321 __xinit__spritePuno:
      000122 02                    3322 	.db #0x02	; 2
      000123 02                    3323 	.db #0x02	; 2
      000124 08                    3324 	.db #0x08	; 8
      000125 00                    3325 	.db #0x00	; 0
      000126 00 00                 3326 	.dw #0x0000
      000128 00                    3327 	.db #0x00	; 0
      000129 00 00                 3328 	.dw #0x0000
      00012B 00                    3329 	.db #0x00	; 0
                                   3330 	.area _CABS (ABS)
      007FF0                       3331 	.org 0x7FF0
      007FF0                       3332 ___SMS__SEGA_signature:
      007FF0 54                    3333 	.db #0x54	; 84	'T'
      007FF1 4D                    3334 	.db #0x4d	; 77	'M'
      007FF2 52                    3335 	.db #0x52	; 82	'R'
      007FF3 20                    3336 	.db #0x20	; 32
      007FF4 53                    3337 	.db #0x53	; 83	'S'
      007FF5 45                    3338 	.db #0x45	; 69	'E'
      007FF6 47                    3339 	.db #0x47	; 71	'G'
      007FF7 41                    3340 	.db #0x41	; 65	'A'
      007FF8 FF                    3341 	.db #0xff	; 255
      007FF9 FF                    3342 	.db #0xff	; 255
      007FFA FF                    3343 	.db #0xff	; 255
      007FFB FF                    3344 	.db #0xff	; 255
      007FFC 99                    3345 	.db #0x99	; 153
      007FFD 09                    3346 	.db #0x09	; 9
      007FFE 00                    3347 	.db #0x00	; 0
      007FFF 4C                    3348 	.db #0x4c	; 76	'L'
      007FDB                       3349 	.org 0x7FDB
      007FDB                       3350 ___SMS__SDSC_author:
      007FDB 53 45 47 41           3351 	.ascii "SEGA"
      007FDF 00                    3352 	.db 0x00
      007FCD                       3353 	.org 0x7FCD
      007FCD                       3354 ___SMS__SDSC_name:
      007FCD 62 61 73 69 63 20 65  3355 	.ascii "basic example"
             78 61 6D 70 6C 65
      007FDA 00                    3356 	.db 0x00
      007FBC                       3357 	.org 0x7FBC
      007FBC                       3358 ___SMS__SDSC_descr:
      007FBC 41 20 73 69 6D 70 6C  3359 	.ascii "A simple example"
             65 20 65 78 61 6D 70
             6C 65
      007FCC 00                    3360 	.db 0x00
      007FE0                       3361 	.org 0x7FE0
      007FE0                       3362 ___SMS__SDSC_signature:
      007FE0 53                    3363 	.db #0x53	; 83	'S'
      007FE1 44                    3364 	.db #0x44	; 68	'D'
      007FE2 53                    3365 	.db #0x53	; 83	'S'
      007FE3 43                    3366 	.db #0x43	; 67	'C'
      007FE4 01                    3367 	.db #0x01	; 1
      007FE5 00                    3368 	.db #0x00	; 0
      007FE6 00                    3369 	.db #0x00	; 0
      007FE7 00                    3370 	.db #0x00	; 0
      007FE8 00                    3371 	.db #0x00	; 0
      007FE9 00                    3372 	.db #0x00	; 0
      007FEA DB                    3373 	.db #0xdb	; 219
      007FEB 7F                    3374 	.db #0x7f	; 127
      007FEC CD                    3375 	.db #0xcd	; 205
      007FED 7F                    3376 	.db #0x7f	; 127
      007FEE BC                    3377 	.db #0xbc	; 188
      007FEF 7F                    3378 	.db #0x7f	; 127
