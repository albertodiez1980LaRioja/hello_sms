                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14549 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___SMS__SDSC_signature
                                     12 	.globl ___SMS__SDSC_descr
                                     13 	.globl ___SMS__SDSC_name
                                     14 	.globl ___SMS__SDSC_author
                                     15 	.globl ___SMS__SEGA_signature
                                     16 	.globl _main
                                     17 	.globl _disableSprites
                                     18 	.globl _playMusic
                                     19 	.globl _dibujaPajaros
                                     20 	.globl _loadGrapVRAM
                                     21 	.globl _inicializaPajaros
                                     22 	.globl _moveAlex
                                     23 	.globl _drawAlex
                                     24 	.globl _moveAlexAire
                                     25 	.globl _moveAlexSuelo
                                     26 	.globl _canRight
                                     27 	.globl _canLeft
                                     28 	.globl _canDown
                                     29 	.globl _canUp
                                     30 	.globl _PSGSFXFrame
                                     31 	.globl _PSGFrame
                                     32 	.globl _PSGSFXPlay
                                     33 	.globl _PSGPlay
                                     34 	.globl _SMS_VRAMmemsetW
                                     35 	.globl _SMS_VRAMmemcpy
                                     36 	.globl _SMS_setFrameInterruptHandler
                                     37 	.globl _SMS_resetPauseRequest
                                     38 	.globl _SMS_queryPauseRequested
                                     39 	.globl _SMS_getKeysHeld
                                     40 	.globl _SMS_getKeysPressed
                                     41 	.globl _SMS_loadSpritePalette
                                     42 	.globl _SMS_loadBGPalette
                                     43 	.globl _SMS_setSpritePaletteColor
                                     44 	.globl _SMS_updateSpritePosition
                                     45 	.globl _SMS_addSprite_f
                                     46 	.globl _SMS_initSprites
                                     47 	.globl _SMS_waitForVBlank
                                     48 	.globl _SMS_setSpriteMode
                                     49 	.globl _SMS_setBGScrollY
                                     50 	.globl _SMS_setBGScrollX
                                     51 	.globl _SMS_VDPturnOnFeature
                                     52 	.globl _SMS_init
                                     53 	.globl _copySpritestoSAT
                                     54 	.globl _addHardwareSprite
                                     55 	.globl _generateSpriteNoRAM
                                     56 	.globl _generateSpriteFlip
                                     57 	.globl _printf
                                     58 	.globl _spritePuno
                                     59 	.globl _spritePajaro
                                     60 	.globl _spriteAlex
                                     61 	.globl _lastFrame
                                     62 	.globl _alex
                                     63 	.globl _maxSalto
                                     64 	.globl _flipArray
                                     65 	.globl _nextVRAMsprites
                                     66 	.globl _numSprites
                                     67 	.globl _pajaros
                                     68 	.globl _SMS_SRAM
                                     69 	.globl _SRAM_bank_to_be_mapped_on_slot2
                                     70 	.globl _ROM_bank_to_be_mapped_on_slot0
                                     71 	.globl _ROM_bank_to_be_mapped_on_slot1
                                     72 	.globl _ROM_bank_to_be_mapped_on_slot2
                                     73 	.globl _SpriteNextFree2
                                     74 	.globl _SpriteTableXN2
                                     75 	.globl _SpriteTableY2
                                     76 	.globl _hardwareSprites
                                     77 	.globl _buffer64
                                     78 	.globl _generateSprite
                                     79 	.globl _initSpritesVariables
                                     80 	.globl _draw_entidad
                                     81 ;--------------------------------------------------------
                                     82 ; special function registers
                                     83 ;--------------------------------------------------------
                           0000BF    84 _VDPControlPort	=	0x00bf
                           0000BF    85 _VDPStatusPort	=	0x00bf
                           0000BE    86 _VDPDataPort	=	0x00be
                           00007E    87 _VDPVCounterPort	=	0x007e
                           00007F    88 _VDPHCounterPort	=	0x007f
                                     89 ;--------------------------------------------------------
                                     90 ; ram data
                                     91 ;--------------------------------------------------------
                                     92 	.area _DATA
      000000                         93 _buffer64::
      000000                         94 	.ds 64
      000040                         95 _hardwareSprites::
      000040                         96 	.ds 768
      000340                         97 _SpriteTableY2::
      000340                         98 	.ds 2
      000342                         99 _SpriteTableXN2::
      000342                        100 	.ds 2
      000344                        101 _SpriteNextFree2::
      000344                        102 	.ds 2
                           00FFFF   103 _ROM_bank_to_be_mapped_on_slot2	=	0xffff
                           00FFFE   104 _ROM_bank_to_be_mapped_on_slot1	=	0xfffe
                           00FFFD   105 _ROM_bank_to_be_mapped_on_slot0	=	0xfffd
                           00FFFC   106 _SRAM_bank_to_be_mapped_on_slot2	=	0xfffc
                           008000   107 _SMS_SRAM	=	0x8000
      000346                        108 _pajaros::
      000346                        109 	.ds 190
      000404                        110 _numSprites::
      000404                        111 	.ds 2
                                    112 ;--------------------------------------------------------
                                    113 ; ram data
                                    114 ;--------------------------------------------------------
                                    115 	.area _INITIALIZED
      000000                        116 _nextVRAMsprites::
      000000                        117 	.ds 2
      000002                        118 _flipArray::
      000002                        119 	.ds 256
      000102                        120 _maxSalto::
      000102                        121 	.ds 1
      000103                        122 _alex::
      000103                        123 	.ds 10
      00010D                        124 _lastFrame::
      00010D                        125 	.ds 1
      00010E                        126 _spriteAlex::
      00010E                        127 	.ds 10
      000118                        128 _spritePajaro::
      000118                        129 	.ds 10
      000122                        130 _spritePuno::
      000122                        131 	.ds 10
                                    132 ;--------------------------------------------------------
                                    133 ; absolute external ram data
                                    134 ;--------------------------------------------------------
                                    135 	.area _DABS (ABS)
                                    136 ;--------------------------------------------------------
                                    137 ; global & static initialisations
                                    138 ;--------------------------------------------------------
                                    139 	.area _HOME
                                    140 	.area _GSINIT
                                    141 	.area _GSFINAL
                                    142 	.area _GSINIT
                                    143 ;--------------------------------------------------------
                                    144 ; Home
                                    145 ;--------------------------------------------------------
                                    146 	.area _HOME
                                    147 	.area _HOME
                                    148 ;--------------------------------------------------------
                                    149 ; code
                                    150 ;--------------------------------------------------------
                                    151 	.area _CODE
                                    152 ;./lib/./sprite.c:24: T_sprite generateSpriteFlip(unsigned char ancho, unsigned char alto, int tam,const unsigned char data[]) {
                                    153 ;	---------------------------------
                                    154 ; Function generateSpriteFlip
                                    155 ; ---------------------------------
      000000                        156 _generateSpriteFlip::
      000000 DD E5            [15]  157 	push	ix
      000002 DD 21 00 00      [14]  158 	ld	ix,#0
      000006 DD 39            [15]  159 	add	ix,sp
      000008 FD 21 EC FF      [14]  160 	ld	iy, #-20
      00000C FD 39            [15]  161 	add	iy, sp
      00000E FD F9            [10]  162 	ld	sp, iy
                                    163 ;./lib/./sprite.c:25: unsigned char tamano = alto*ancho*2;
      000010 DD 77 F9         [19]  164 	ld	-7 (ix), a
      000013 DD 75 F8         [19]  165 	ld	-8 (ix), l
      000016 5F               [ 4]  166 	ld	e, a
      000017 65               [ 4]  167 	ld	h, l
                                    168 ;	spillPairReg hl
                                    169 ;	spillPairReg hl
      000018 2E 00            [ 7]  170 	ld	l, #0x00
      00001A 55               [ 4]  171 	ld	d, l
      00001B 06 08            [ 7]  172 	ld	b, #0x08
      00001D                        173 00175$:
      00001D 29               [11]  174 	add	hl, hl
      00001E 30 01            [12]  175 	jr	NC, 00176$
      000020 19               [11]  176 	add	hl, de
      000021                        177 00176$:
      000021 10 FA            [13]  178 	djnz	00175$
      000023 4D               [ 4]  179 	ld	c, l
      000024 CB 21            [ 8]  180 	sla	c
                                    181 ;./lib/./sprite.c:26: T_sprite sprite = {alto,ancho,tamano,tam/(tamano*32),nextVRAMsprites, 1,0};
      000026 DD 7E F8         [19]  182 	ld	a, -8 (ix)
      000029 DD 77 EC         [19]  183 	ld	-20 (ix), a
      00002C DD 7E F9         [19]  184 	ld	a, -7 (ix)
      00002F DD 77 ED         [19]  185 	ld	-19 (ix), a
      000032 DD 71 EE         [19]  186 	ld	-18 (ix), c
      000035 DD 71 FE         [19]  187 	ld	-2 (ix), c
      000038 DD 36 FF 00      [19]  188 	ld	-1 (ix), #0x00
      00003C 69               [ 4]  189 	ld	l, c
      00003D 26 00            [ 7]  190 	ld	h, #0x00
      00003F 29               [11]  191 	add	hl, hl
      000040 29               [11]  192 	add	hl, hl
      000041 29               [11]  193 	add	hl, hl
      000042 29               [11]  194 	add	hl, hl
      000043 29               [11]  195 	add	hl, hl
      000044 C5               [11]  196 	push	bc
      000045 EB               [ 4]  197 	ex	de, hl
      000046 DD 6E 06         [19]  198 	ld	l, 6 (ix)
                                    199 ;	spillPairReg hl
                                    200 ;	spillPairReg hl
      000049 DD 66 07         [19]  201 	ld	h, 7 (ix)
                                    202 ;	spillPairReg hl
                                    203 ;	spillPairReg hl
      00004C CDr00r00         [17]  204 	call	__divsint
      00004F C1               [10]  205 	pop	bc
      000050 DD 73 EF         [19]  206 	ld	-17 (ix), e
      000053 3Ar00r00         [13]  207 	ld	a, (_nextVRAMsprites+0)
      000056 DD 77 F0         [19]  208 	ld	-16 (ix), a
      000059 3Ar01r00         [13]  209 	ld	a, (_nextVRAMsprites+1)
      00005C DD 77 F1         [19]  210 	ld	-15 (ix), a
      00005F DD 36 F2 01      [19]  211 	ld	-14 (ix), #0x01
      000063 AF               [ 4]  212 	xor	a, a
      000064 DD 77 F3         [19]  213 	ld	-13 (ix), a
      000067 DD 77 F4         [19]  214 	ld	-12 (ix), a
      00006A DD 36 F5 00      [19]  215 	ld	-11 (ix), #0x00
                                    216 ;./lib/./sprite.c:27: SMS_loadTiles(data,nextVRAMsprites,tam);
      00006E DD 5E 08         [19]  217 	ld	e, 8 (ix)
      000071 DD 56 09         [19]  218 	ld	d, 9 (ix)
      000074 2Ar00r00         [16]  219 	ld	hl, (_nextVRAMsprites)
      000077 29               [11]  220 	add	hl, hl
      000078 29               [11]  221 	add	hl, hl
      000079 29               [11]  222 	add	hl, hl
      00007A 29               [11]  223 	add	hl, hl
      00007B 29               [11]  224 	add	hl, hl
      00007C CB F4            [ 8]  225 	set	6, h
      00007E C5               [11]  226 	push	bc
      00007F E5               [11]  227 	push	hl
      000080 DD 6E 06         [19]  228 	ld	l, 6 (ix)
                                    229 ;	spillPairReg hl
                                    230 ;	spillPairReg hl
      000083 DD 66 07         [19]  231 	ld	h, 7 (ix)
                                    232 ;	spillPairReg hl
                                    233 ;	spillPairReg hl
      000086 E3               [19]  234 	ex	(sp), hl
      000087 CDr00r00         [17]  235 	call	_SMS_VRAMmemcpy
      00008A C1               [10]  236 	pop	bc
                                    237 ;./lib/./sprite.c:28: nextVRAMsprites = nextVRAMsprites + (tamano*sprite.numFrames);
      00008B DD 5E EF         [19]  238 	ld	e, -17 (ix)
      00008E 61               [ 4]  239 	ld	h, c
                                    240 ;	spillPairReg hl
                                    241 ;	spillPairReg hl
      00008F 2E 00            [ 7]  242 	ld	l, #0x00
      000091 55               [ 4]  243 	ld	d, l
      000092 06 08            [ 7]  244 	ld	b, #0x08
      000094                        245 00177$:
      000094 29               [11]  246 	add	hl, hl
      000095 30 01            [12]  247 	jr	NC, 00178$
      000097 19               [11]  248 	add	hl, de
      000098                        249 00178$:
      000098 10 FA            [13]  250 	djnz	00177$
      00009A EB               [ 4]  251 	ex	de, hl
      00009B 21r00r00         [10]  252 	ld	hl, #_nextVRAMsprites
      00009E 7E               [ 7]  253 	ld	a, (hl)
      00009F 83               [ 4]  254 	add	a, e
      0000A0 77               [ 7]  255 	ld	(hl), a
      0000A1 23               [ 6]  256 	inc	hl
      0000A2 7E               [ 7]  257 	ld	a, (hl)
      0000A3 8A               [ 4]  258 	adc	a, d
      0000A4 77               [ 7]  259 	ld	(hl), a
                                    260 ;./lib/./sprite.c:30: unsigned char y,x, numFrames = tamano/(alto*ancho);
      0000A5 DD 5E F9         [19]  261 	ld	e, -7 (ix)
      0000A8 DD 66 F8         [19]  262 	ld	h, -8 (ix)
                                    263 ;	spillPairReg hl
                                    264 ;	spillPairReg hl
      0000AB 2E 00            [ 7]  265 	ld	l, #0x00
      0000AD 55               [ 4]  266 	ld	d, l
      0000AE 06 08            [ 7]  267 	ld	b, #0x08
      0000B0                        268 00179$:
      0000B0 29               [11]  269 	add	hl, hl
      0000B1 30 01            [12]  270 	jr	NC, 00180$
      0000B3 19               [11]  271 	add	hl, de
      0000B4                        272 00180$:
      0000B4 10 FA            [13]  273 	djnz	00179$
      0000B6 EB               [ 4]  274 	ex	de, hl
      0000B7 DD 6E FE         [19]  275 	ld	l, -2 (ix)
                                    276 ;	spillPairReg hl
                                    277 ;	spillPairReg hl
      0000BA DD 66 FF         [19]  278 	ld	h, -1 (ix)
                                    279 ;	spillPairReg hl
                                    280 ;	spillPairReg hl
      0000BD CDr00r00         [17]  281 	call	__divsint
      0000C0 DD 73 FA         [19]  282 	ld	-6 (ix), e
                                    283 ;./lib/./sprite.c:31: int offset = 0, yOffset = 0;
      0000C3 01 00 00         [10]  284 	ld	bc, #0x0000
      0000C6 50               [ 4]  285 	ld	d, b
      0000C7 59               [ 4]  286 	ld	e, c
                                    287 ;./lib/./sprite.c:32: while(numFrames) {
      0000C8                        288 00110$:
      0000C8 DD 7E FA         [19]  289 	ld	a, -6 (ix)
      0000CB B7               [ 4]  290 	or	a, a
      0000CC CAr87r01         [10]  291 	jp	Z, 00112$
                                    292 ;./lib/./sprite.c:34: while (y) {
      0000CF DD 7E F8         [19]  293 	ld	a, -8 (ix)
      0000D2 DD 77 FB         [19]  294 	ld	-5 (ix), a
      0000D5                        295 00107$:
      0000D5 DD 7E FB         [19]  296 	ld	a, -5 (ix)
      0000D8 B7               [ 4]  297 	or	a, a
      0000D9 CAr81r01         [10]  298 	jp	Z, 00109$
                                    299 ;./lib/./sprite.c:36: offset = offset + x*64 - 64; // voy al principio del último tile
      0000DC DD 6E F9         [19]  300 	ld	l, -7 (ix)
                                    301 ;	spillPairReg hl
                                    302 ;	spillPairReg hl
      0000DF 26 00            [ 7]  303 	ld	h, #0x00
                                    304 ;	spillPairReg hl
                                    305 ;	spillPairReg hl
      0000E1 29               [11]  306 	add	hl, hl
      0000E2 29               [11]  307 	add	hl, hl
      0000E3 29               [11]  308 	add	hl, hl
      0000E4 29               [11]  309 	add	hl, hl
      0000E5 29               [11]  310 	add	hl, hl
      0000E6 29               [11]  311 	add	hl, hl
      0000E7 09               [11]  312 	add	hl, bc
      0000E8 7D               [ 4]  313 	ld	a, l
      0000E9 C6 C0            [ 7]  314 	add	a, #0xc0
      0000EB DD 77 FC         [19]  315 	ld	-4 (ix), a
      0000EE 7C               [ 4]  316 	ld	a, h
      0000EF CE FF            [ 7]  317 	adc	a, #0xff
      0000F1 DD 77 FD         [19]  318 	ld	-3 (ix), a
                                    319 ;./lib/./sprite.c:37: while(x) {
      0000F4 4B               [ 4]  320 	ld	c, e
      0000F5 42               [ 4]  321 	ld	b, d
      0000F6 DD 7E F9         [19]  322 	ld	a, -7 (ix)
      0000F9 DD 77 FE         [19]  323 	ld	-2 (ix), a
      0000FC                        324 00104$:
      0000FC DD 7E FE         [19]  325 	ld	a, -2 (ix)
      0000FF B7               [ 4]  326 	or	a, a
      000100 28 77            [12]  327 	jr	Z, 00124$
                                    328 ;./lib/./sprite.c:40: while(i<64){
      000102 DD 5E FC         [19]  329 	ld	e, -4 (ix)
      000105 DD 56 FD         [19]  330 	ld	d, -3 (ix)
      000108 DD 36 FF 00      [19]  331 	ld	-1 (ix), #0x00
      00010C                        332 00101$:
      00010C DD 7E FF         [19]  333 	ld	a, -1 (ix)
      00010F D6 40            [ 7]  334 	sub	a, #0x40
      000111 30 2D            [12]  335 	jr	NC, 00103$
                                    336 ;./lib/./sprite.c:41: buffer64[i] = flipArray[data[offset2]];
      000113 3Er00            [ 7]  337 	ld	a, #<(_buffer64)
      000115 DD 86 FF         [19]  338 	add	a, -1 (ix)
      000118 DD 77 F6         [19]  339 	ld	-10 (ix), a
      00011B 3Es00            [ 7]  340 	ld	a, #>(_buffer64)
      00011D CE 00            [ 7]  341 	adc	a, #0x00
      00011F DD 77 F7         [19]  342 	ld	-9 (ix), a
      000122 DD 6E 08         [19]  343 	ld	l, 8 (ix)
                                    344 ;	spillPairReg hl
                                    345 ;	spillPairReg hl
      000125 DD 66 09         [19]  346 	ld	h, 9 (ix)
                                    347 ;	spillPairReg hl
                                    348 ;	spillPairReg hl
      000128 19               [11]  349 	add	hl, de
      000129 7E               [ 7]  350 	ld	a, (hl)
      00012A C6r02            [ 7]  351 	add	a, #<(_flipArray)
      00012C 6F               [ 4]  352 	ld	l, a
                                    353 ;	spillPairReg hl
                                    354 ;	spillPairReg hl
      00012D 3E 00            [ 7]  355 	ld	a, #0x00
      00012F CEs00            [ 7]  356 	adc	a, #>(_flipArray)
      000131 67               [ 4]  357 	ld	h, a
                                    358 ;	spillPairReg hl
                                    359 ;	spillPairReg hl
      000132 7E               [ 7]  360 	ld	a, (hl)
      000133 DD 6E F6         [19]  361 	ld	l, -10 (ix)
      000136 DD 66 F7         [19]  362 	ld	h, -9 (ix)
      000139 77               [ 7]  363 	ld	(hl), a
                                    364 ;./lib/./sprite.c:42: offset2++;
      00013A 13               [ 6]  365 	inc	de
                                    366 ;./lib/./sprite.c:43: i++;
      00013B DD 34 FF         [23]  367 	inc	-1 (ix)
      00013E 18 CC            [12]  368 	jr	00101$
      000140                        369 00103$:
                                    370 ;./lib/./sprite.c:45: SMS_loadTiles(&buffer64,nextVRAMsprites,64);
      000140 2Ar00r00         [16]  371 	ld	hl, (_nextVRAMsprites)
      000143 29               [11]  372 	add	hl, hl
      000144 29               [11]  373 	add	hl, hl
      000145 29               [11]  374 	add	hl, hl
      000146 29               [11]  375 	add	hl, hl
      000147 29               [11]  376 	add	hl, hl
      000148 CB F4            [ 8]  377 	set	6, h
      00014A C5               [11]  378 	push	bc
      00014B 11 40 00         [10]  379 	ld	de, #0x0040
      00014E D5               [11]  380 	push	de
      00014F 11r00r00         [10]  381 	ld	de, #_buffer64
      000152 CDr00r00         [17]  382 	call	_SMS_VRAMmemcpy
      000155 C1               [10]  383 	pop	bc
                                    384 ;./lib/./sprite.c:46: offset = offset - 64; // voy al anterior tile
      000156 DD 7E FC         [19]  385 	ld	a, -4 (ix)
      000159 C6 C0            [ 7]  386 	add	a, #0xc0
      00015B DD 77 FC         [19]  387 	ld	-4 (ix), a
      00015E DD 7E FD         [19]  388 	ld	a, -3 (ix)
      000161 CE FF            [ 7]  389 	adc	a, #0xff
      000163 DD 77 FD         [19]  390 	ld	-3 (ix), a
                                    391 ;./lib/./sprite.c:47: yOffset = yOffset + 64;
      000166 21 40 00         [10]  392 	ld	hl, #0x0040
      000169 09               [11]  393 	add	hl, bc
      00016A 4D               [ 4]  394 	ld	c, l
      00016B 44               [ 4]  395 	ld	b, h
                                    396 ;./lib/./sprite.c:48: nextVRAMsprites += 2;
      00016C 2Ar00r00         [16]  397 	ld	hl, (_nextVRAMsprites)
      00016F 23               [ 6]  398 	inc	hl
      000170 23               [ 6]  399 	inc	hl
      000171 22r00r00         [16]  400 	ld	(_nextVRAMsprites), hl
                                    401 ;./lib/./sprite.c:49: x--;
      000174 DD 35 FE         [23]  402 	dec	-2 (ix)
      000177 18 83            [12]  403 	jr	00104$
      000179                        404 00124$:
      000179 59               [ 4]  405 	ld	e, c
      00017A 50               [ 4]  406 	ld	d, b
                                    407 ;./lib/./sprite.c:51: offset = yOffset;
                                    408 ;./lib/./sprite.c:52: y--;
      00017B DD 35 FB         [23]  409 	dec	-5 (ix)
      00017E C3rD5r00         [10]  410 	jp	00107$
      000181                        411 00109$:
                                    412 ;./lib/./sprite.c:54: numFrames--;
      000181 DD 35 FA         [23]  413 	dec	-6 (ix)
      000184 C3rC8r00         [10]  414 	jp	00110$
      000187                        415 00112$:
                                    416 ;./lib/./sprite.c:56: return sprite;
      000187 21 18 00         [10]  417 	ld	hl, #24
      00018A 39               [11]  418 	add	hl, sp
      00018B 5E               [ 7]  419 	ld	e, (hl)
      00018C 23               [ 6]  420 	inc	hl
      00018D 56               [ 7]  421 	ld	d, (hl)
      00018E 21 00 00         [10]  422 	ld	hl, #0
      000191 39               [11]  423 	add	hl, sp
      000192 01 0A 00         [10]  424 	ld	bc, #10
      000195 ED B0            [21]  425 	ldir
                                    426 ;./lib/./sprite.c:57: }
      000197 DD F9            [10]  427 	ld	sp, ix
      000199 DD E1            [14]  428 	pop	ix
      00019B C9               [10]  429 	ret
                                    430 ;./lib/./sprite.c:61: T_sprite generateSprite(unsigned char ancho, unsigned char alto, int tam,const unsigned char data[]) {
                                    431 ;	---------------------------------
                                    432 ; Function generateSprite
                                    433 ; ---------------------------------
      00019C                        434 _generateSprite::
      00019C DD E5            [15]  435 	push	ix
      00019E DD 21 00 00      [14]  436 	ld	ix,#0
      0001A2 DD 39            [15]  437 	add	ix,sp
      0001A4 FD 21 F6 FF      [14]  438 	ld	iy, #-10
      0001A8 FD 39            [15]  439 	add	iy, sp
      0001AA FD F9            [10]  440 	ld	sp, iy
      0001AC 5F               [ 4]  441 	ld	e, a
      0001AD 55               [ 4]  442 	ld	d, l
                                    443 ;./lib/./sprite.c:62: unsigned char tamano = alto*ancho*2;
      0001AE D5               [11]  444 	push	de
      0001AF 62               [ 4]  445 	ld	h, d
                                    446 ;	spillPairReg hl
                                    447 ;	spillPairReg hl
      0001B0 2E 00            [ 7]  448 	ld	l, #0x00
      0001B2 55               [ 4]  449 	ld	d, l
      0001B3 06 08            [ 7]  450 	ld	b, #0x08
      0001B5                        451 00103$:
      0001B5 29               [11]  452 	add	hl, hl
      0001B6 30 01            [12]  453 	jr	NC, 00104$
      0001B8 19               [11]  454 	add	hl, de
      0001B9                        455 00104$:
      0001B9 10 FA            [13]  456 	djnz	00103$
      0001BB D1               [10]  457 	pop	de
      0001BC 4D               [ 4]  458 	ld	c, l
      0001BD CB 21            [ 8]  459 	sla	c
                                    460 ;./lib/./sprite.c:63: T_sprite sprite = {alto,ancho,tamano,tam/(tamano*32),nextVRAMsprites, 1,0};
      0001BF DD 72 F6         [19]  461 	ld	-10 (ix), d
      0001C2 DD 73 F7         [19]  462 	ld	-9 (ix), e
      0001C5 DD 71 F8         [19]  463 	ld	-8 (ix), c
      0001C8 69               [ 4]  464 	ld	l, c
                                    465 ;	spillPairReg hl
                                    466 ;	spillPairReg hl
      0001C9 26 00            [ 7]  467 	ld	h, #0x00
                                    468 ;	spillPairReg hl
                                    469 ;	spillPairReg hl
      0001CB 29               [11]  470 	add	hl, hl
      0001CC 29               [11]  471 	add	hl, hl
      0001CD 29               [11]  472 	add	hl, hl
      0001CE 29               [11]  473 	add	hl, hl
      0001CF 29               [11]  474 	add	hl, hl
      0001D0 C5               [11]  475 	push	bc
      0001D1 EB               [ 4]  476 	ex	de, hl
      0001D2 DD 6E 06         [19]  477 	ld	l, 6 (ix)
                                    478 ;	spillPairReg hl
                                    479 ;	spillPairReg hl
      0001D5 DD 66 07         [19]  480 	ld	h, 7 (ix)
                                    481 ;	spillPairReg hl
                                    482 ;	spillPairReg hl
      0001D8 CDr00r00         [17]  483 	call	__divsint
      0001DB C1               [10]  484 	pop	bc
      0001DC DD 73 F9         [19]  485 	ld	-7 (ix), e
      0001DF 3Ar00r00         [13]  486 	ld	a, (_nextVRAMsprites+0)
      0001E2 DD 77 FA         [19]  487 	ld	-6 (ix), a
      0001E5 3Ar01r00         [13]  488 	ld	a, (_nextVRAMsprites+1)
      0001E8 DD 77 FB         [19]  489 	ld	-5 (ix), a
      0001EB DD 36 FC 01      [19]  490 	ld	-4 (ix), #0x01
      0001EF AF               [ 4]  491 	xor	a, a
      0001F0 DD 77 FD         [19]  492 	ld	-3 (ix), a
      0001F3 DD 77 FE         [19]  493 	ld	-2 (ix), a
      0001F6 DD 36 FF 00      [19]  494 	ld	-1 (ix), #0x00
                                    495 ;./lib/./sprite.c:64: SMS_loadTiles(data,nextVRAMsprites,tam);
      0001FA DD 5E 08         [19]  496 	ld	e, 8 (ix)
      0001FD DD 56 09         [19]  497 	ld	d, 9 (ix)
      000200 2Ar00r00         [16]  498 	ld	hl, (_nextVRAMsprites)
      000203 29               [11]  499 	add	hl, hl
      000204 29               [11]  500 	add	hl, hl
      000205 29               [11]  501 	add	hl, hl
      000206 29               [11]  502 	add	hl, hl
      000207 29               [11]  503 	add	hl, hl
      000208 CB F4            [ 8]  504 	set	6, h
      00020A C5               [11]  505 	push	bc
      00020B E5               [11]  506 	push	hl
      00020C DD 6E 06         [19]  507 	ld	l, 6 (ix)
                                    508 ;	spillPairReg hl
                                    509 ;	spillPairReg hl
      00020F DD 66 07         [19]  510 	ld	h, 7 (ix)
                                    511 ;	spillPairReg hl
                                    512 ;	spillPairReg hl
      000212 E3               [19]  513 	ex	(sp), hl
      000213 CDr00r00         [17]  514 	call	_SMS_VRAMmemcpy
      000216 C1               [10]  515 	pop	bc
                                    516 ;./lib/./sprite.c:65: nextVRAMsprites = nextVRAMsprites + (tamano*sprite.numFrames);
      000217 DD 5E F9         [19]  517 	ld	e, -7 (ix)
      00021A 61               [ 4]  518 	ld	h, c
                                    519 ;	spillPairReg hl
                                    520 ;	spillPairReg hl
      00021B 2E 00            [ 7]  521 	ld	l, #0x00
      00021D 55               [ 4]  522 	ld	d, l
      00021E 06 08            [ 7]  523 	ld	b, #0x08
      000220                        524 00105$:
      000220 29               [11]  525 	add	hl, hl
      000221 30 01            [12]  526 	jr	NC, 00106$
      000223 19               [11]  527 	add	hl, de
      000224                        528 00106$:
      000224 10 FA            [13]  529 	djnz	00105$
      000226 EB               [ 4]  530 	ex	de, hl
      000227 21r00r00         [10]  531 	ld	hl, #_nextVRAMsprites
      00022A 7E               [ 7]  532 	ld	a, (hl)
      00022B 83               [ 4]  533 	add	a, e
      00022C 77               [ 7]  534 	ld	(hl), a
      00022D 23               [ 6]  535 	inc	hl
      00022E 7E               [ 7]  536 	ld	a, (hl)
      00022F 8A               [ 4]  537 	adc	a, d
      000230 77               [ 7]  538 	ld	(hl), a
                                    539 ;./lib/./sprite.c:66: return sprite;
      000231 21 0E 00         [10]  540 	ld	hl, #14
      000234 39               [11]  541 	add	hl, sp
      000235 5E               [ 7]  542 	ld	e, (hl)
      000236 23               [ 6]  543 	inc	hl
      000237 56               [ 7]  544 	ld	d, (hl)
      000238 21 00 00         [10]  545 	ld	hl, #0
      00023B 39               [11]  546 	add	hl, sp
      00023C 01 0A 00         [10]  547 	ld	bc, #10
      00023F ED B0            [21]  548 	ldir
                                    549 ;./lib/./sprite.c:67: }
      000241 DD F9            [10]  550 	ld	sp, ix
      000243 DD E1            [14]  551 	pop	ix
      000245 C9               [10]  552 	ret
                                    553 ;./lib/./sprite.c:70: T_sprite generateSpriteNoRAM(unsigned char ancho, unsigned char alto, int tam,const unsigned char data[]) {
                                    554 ;	---------------------------------
                                    555 ; Function generateSpriteNoRAM
                                    556 ; ---------------------------------
      000246                        557 _generateSpriteNoRAM::
      000246 DD E5            [15]  558 	push	ix
      000248 DD 21 00 00      [14]  559 	ld	ix,#0
      00024C DD 39            [15]  560 	add	ix,sp
      00024E FD 21 F4 FF      [14]  561 	ld	iy, #-12
      000252 FD 39            [15]  562 	add	iy, sp
      000254 FD F9            [10]  563 	ld	sp, iy
      000256 5F               [ 4]  564 	ld	e, a
      000257 55               [ 4]  565 	ld	d, l
                                    566 ;./lib/./sprite.c:71: unsigned char tamano = alto*ancho*2;
      000258 D5               [11]  567 	push	de
      000259 62               [ 4]  568 	ld	h, d
                                    569 ;	spillPairReg hl
                                    570 ;	spillPairReg hl
      00025A 2E 00            [ 7]  571 	ld	l, #0x00
      00025C 55               [ 4]  572 	ld	d, l
      00025D 06 08            [ 7]  573 	ld	b, #0x08
      00025F                        574 00103$:
      00025F 29               [11]  575 	add	hl, hl
      000260 30 01            [12]  576 	jr	NC, 00104$
      000262 19               [11]  577 	add	hl, de
      000263                        578 00104$:
      000263 10 FA            [13]  579 	djnz	00103$
      000265 D1               [10]  580 	pop	de
      000266 4D               [ 4]  581 	ld	c, l
      000267 CB 21            [ 8]  582 	sla	c
                                    583 ;./lib/./sprite.c:72: T_sprite sprite = {alto,ancho,tamano,tam/(tamano*32),nextVRAMsprites, 0,0};
      000269 DD 72 F4         [19]  584 	ld	-12 (ix), d
      00026C DD 73 F5         [19]  585 	ld	-11 (ix), e
      00026F DD 71 F6         [19]  586 	ld	-10 (ix), c
                                    587 ;	spillPairReg hl
                                    588 ;	spillPairReg hl
      000272 DD 71 FE         [19]  589 	ld	-2 (ix), c
      000275 DD 36 FF 00      [19]  590 	ld	-1 (ix), #0x00
      000279 69               [ 4]  591 	ld	l, c
      00027A 26 00            [ 7]  592 	ld	h, #0x00
                                    593 ;	spillPairReg hl
                                    594 ;	spillPairReg hl
      00027C 29               [11]  595 	add	hl, hl
      00027D 29               [11]  596 	add	hl, hl
      00027E 29               [11]  597 	add	hl, hl
      00027F 29               [11]  598 	add	hl, hl
      000280 29               [11]  599 	add	hl, hl
      000281 EB               [ 4]  600 	ex	de,hl
      000282 D5               [11]  601 	push	de
      000283 DD 6E 06         [19]  602 	ld	l, 6 (ix)
                                    603 ;	spillPairReg hl
                                    604 ;	spillPairReg hl
      000286 DD 66 07         [19]  605 	ld	h, 7 (ix)
                                    606 ;	spillPairReg hl
                                    607 ;	spillPairReg hl
      000289 CDr00r00         [17]  608 	call	__divsint
      00028C EB               [ 4]  609 	ex	de, hl
      00028D D1               [10]  610 	pop	de
      00028E DD 75 F7         [19]  611 	ld	-9 (ix), l
      000291 3Ar00r00         [13]  612 	ld	a, (_nextVRAMsprites+0)
      000294 DD 77 F8         [19]  613 	ld	-8 (ix), a
      000297 3Ar01r00         [13]  614 	ld	a, (_nextVRAMsprites+1)
      00029A DD 77 F9         [19]  615 	ld	-7 (ix), a
      00029D DD 36 FA 00      [19]  616 	ld	-6 (ix), #0x00
      0002A1 AF               [ 4]  617 	xor	a, a
      0002A2 DD 77 FB         [19]  618 	ld	-5 (ix), a
      0002A5 DD 77 FC         [19]  619 	ld	-4 (ix), a
      0002A8 DD 36 FD 00      [19]  620 	ld	-3 (ix), #0x00
                                    621 ;./lib/./sprite.c:73: sprite.data = data;
      0002AC DD 7E 08         [19]  622 	ld	a, 8 (ix)
      0002AF DD 77 FB         [19]  623 	ld	-5 (ix), a
      0002B2 DD 7E 09         [19]  624 	ld	a, 9 (ix)
      0002B5 DD 77 FC         [19]  625 	ld	-4 (ix), a
                                    626 ;./lib/./sprite.c:74: sprite.frameInVRAM = 0;
      0002B8 DD 36 FD 00      [19]  627 	ld	-3 (ix), #0x00
                                    628 ;./lib/./sprite.c:75: SMS_loadTiles(data,nextVRAMsprites,tamano*32);
      0002BC DD 4E 08         [19]  629 	ld	c, 8 (ix)
      0002BF DD 46 09         [19]  630 	ld	b, 9 (ix)
      0002C2 2Ar00r00         [16]  631 	ld	hl, (_nextVRAMsprites)
      0002C5 29               [11]  632 	add	hl, hl
      0002C6 29               [11]  633 	add	hl, hl
      0002C7 29               [11]  634 	add	hl, hl
      0002C8 29               [11]  635 	add	hl, hl
      0002C9 29               [11]  636 	add	hl, hl
      0002CA CB F4            [ 8]  637 	set	6, h
      0002CC D5               [11]  638 	push	de
      0002CD 59               [ 4]  639 	ld	e, c
      0002CE 50               [ 4]  640 	ld	d, b
      0002CF CDr00r00         [17]  641 	call	_SMS_VRAMmemcpy
                                    642 ;./lib/./sprite.c:76: nextVRAMsprites = nextVRAMsprites + (tamano);
      0002D2 21r00r00         [10]  643 	ld	hl, #_nextVRAMsprites
      0002D5 7E               [ 7]  644 	ld	a, (hl)
      0002D6 DD 86 FE         [19]  645 	add	a, -2 (ix)
      0002D9 77               [ 7]  646 	ld	(hl), a
      0002DA 23               [ 6]  647 	inc	hl
      0002DB 7E               [ 7]  648 	ld	a, (hl)
      0002DC DD 8E FF         [19]  649 	adc	a, -1 (ix)
      0002DF 77               [ 7]  650 	ld	(hl), a
                                    651 ;./lib/./sprite.c:77: return sprite;
      0002E0 21 10 00         [10]  652 	ld	hl, #16
      0002E3 39               [11]  653 	add	hl, sp
      0002E4 5E               [ 7]  654 	ld	e, (hl)
      0002E5 23               [ 6]  655 	inc	hl
      0002E6 56               [ 7]  656 	ld	d, (hl)
      0002E7 21 00 00         [10]  657 	ld	hl, #0
      0002EA 39               [11]  658 	add	hl, sp
      0002EB 01 0A 00         [10]  659 	ld	bc, #10
      0002EE ED B0            [21]  660 	ldir
                                    661 ;./lib/./sprite.c:78: }
      0002F0 DD F9            [10]  662 	ld	sp, ix
      0002F2 DD E1            [14]  663 	pop	ix
      0002F4 C9               [10]  664 	ret
                                    665 ;./lib/./sprite.c:89: unsigned int addHardwareSprite(unsigned int x,unsigned int y,unsigned int vx,unsigned int vy,unsigned int lx,
                                    666 ;	---------------------------------
                                    667 ; Function addHardwareSprite
                                    668 ; ---------------------------------
      0002F5                        669 _addHardwareSprite::
      0002F5 DD E5            [15]  670 	push	ix
      0002F7 DD 21 00 00      [14]  671 	ld	ix,#0
      0002FB DD 39            [15]  672 	add	ix,sp
      0002FD FD 21 EA FF      [14]  673 	ld	iy, #-22
      000301 FD 39            [15]  674 	add	iy, sp
      000303 FD F9            [10]  675 	ld	sp, iy
      000305 DD 75 F4         [19]  676 	ld	-12 (ix), l
      000308 DD 74 F5         [19]  677 	ld	-11 (ix), h
      00030B DD 73 F2         [19]  678 	ld	-14 (ix), e
      00030E DD 72 F3         [19]  679 	ld	-13 (ix), d
                                    680 ;./lib/./sprite.c:91: unsigned int i = MAX_HARDWARE_SPRITES;
      000311 21 40 00         [10]  681 	ld	hl, #0x0040
      000314 E3               [19]  682 	ex	(sp), hl
                                    683 ;./lib/./sprite.c:92: while (i) {
      000315 DD 36 FE 40      [19]  684 	ld	-2 (ix), #0x40
      000319 DD 36 FF 00      [19]  685 	ld	-1 (ix), #0
      00031D                        686 00109$:
      00031D DD 7E FF         [19]  687 	ld	a, -1 (ix)
      000320 DD B6 FE         [19]  688 	or	a, -2 (ix)
      000323 CAr6Cr05         [10]  689 	jp	Z, 00111$
                                    690 ;./lib/./sprite.c:93: if (!hardwareSprites[i].len) {
      000326 DD 4E FE         [19]  691 	ld	c, -2 (ix)
      000329 DD 46 FF         [19]  692 	ld	b, -1 (ix)
      00032C 69               [ 4]  693 	ld	l, c
      00032D 60               [ 4]  694 	ld	h, b
      00032E 29               [11]  695 	add	hl, hl
      00032F 09               [11]  696 	add	hl, bc
      000330 29               [11]  697 	add	hl, hl
      000331 29               [11]  698 	add	hl, hl
      000332 DD 75 FC         [19]  699 	ld	-4 (ix), l
      000335 DD 74 FD         [19]  700 	ld	-3 (ix), h
      000338 3Er40            [ 7]  701 	ld	a, #<(_hardwareSprites)
      00033A DD 86 FC         [19]  702 	add	a, -4 (ix)
      00033D DD 77 FA         [19]  703 	ld	-6 (ix), a
      000340 3Es00            [ 7]  704 	ld	a, #>(_hardwareSprites)
      000342 DD 8E FD         [19]  705 	adc	a, -3 (ix)
      000345 DD 77 FB         [19]  706 	ld	-5 (ix), a
      000348 DD 7E FA         [19]  707 	ld	a, -6 (ix)
      00034B DD 77 FC         [19]  708 	ld	-4 (ix), a
      00034E DD 7E FB         [19]  709 	ld	a, -5 (ix)
      000351 DD 77 FD         [19]  710 	ld	-3 (ix), a
      000354 DD 6E FC         [19]  711 	ld	l, -4 (ix)
      000357 DD 66 FD         [19]  712 	ld	h, -3 (ix)
      00035A 11 0A 00         [10]  713 	ld	de, #0x000a
      00035D 19               [11]  714 	add	hl, de
      00035E 7E               [ 7]  715 	ld	a, (hl)
      00035F DD 77 FC         [19]  716 	ld	-4 (ix), a
      000362 23               [ 6]  717 	inc	hl
      000363 7E               [ 7]  718 	ld	a, (hl)
      000364 DD 77 FD         [19]  719 	ld	-3 (ix), a
      000367 DD B6 FC         [19]  720 	or	a, -4 (ix)
      00036A C2r50r05         [10]  721 	jp	NZ, 00108$
                                    722 ;./lib/./sprite.c:94: T_HardwareSprite *p = &hardwareSprites[i]; 
      00036D DD 7E FA         [19]  723 	ld	a, -6 (ix)
      000370 DD 77 FE         [19]  724 	ld	-2 (ix), a
      000373 DD 7E FB         [19]  725 	ld	a, -5 (ix)
      000376 DD 77 FF         [19]  726 	ld	-1 (ix), a
      000379 DD 7E FE         [19]  727 	ld	a, -2 (ix)
      00037C DD 77 EC         [19]  728 	ld	-20 (ix), a
      00037F DD 7E FF         [19]  729 	ld	a, -1 (ix)
      000382 DD 77 ED         [19]  730 	ld	-19 (ix), a
                                    731 ;./lib/./sprite.c:95: p->x = x;
      000385 DD 7E EC         [19]  732 	ld	a, -20 (ix)
      000388 C6 04            [ 7]  733 	add	a, #0x04
      00038A DD 77 FE         [19]  734 	ld	-2 (ix), a
      00038D DD 7E ED         [19]  735 	ld	a, -19 (ix)
      000390 CE 00            [ 7]  736 	adc	a, #0x00
      000392 DD 77 FF         [19]  737 	ld	-1 (ix), a
      000395 DD 6E FE         [19]  738 	ld	l, -2 (ix)
      000398 DD 66 FF         [19]  739 	ld	h, -1 (ix)
      00039B DD 7E F4         [19]  740 	ld	a, -12 (ix)
      00039E 77               [ 7]  741 	ld	(hl), a
      00039F 23               [ 6]  742 	inc	hl
      0003A0 DD 7E F5         [19]  743 	ld	a, -11 (ix)
      0003A3 77               [ 7]  744 	ld	(hl), a
                                    745 ;./lib/./sprite.c:96: p->y = y;
      0003A4 D1               [10]  746 	pop	de
      0003A5 E1               [10]  747 	pop	hl
      0003A6 E5               [11]  748 	push	hl
      0003A7 D5               [11]  749 	push	de
      0003A8 11 06 00         [10]  750 	ld	de, #0x0006
      0003AB 19               [11]  751 	add	hl, de
      0003AC DD 7E F2         [19]  752 	ld	a, -14 (ix)
      0003AF 77               [ 7]  753 	ld	(hl), a
      0003B0 23               [ 6]  754 	inc	hl
      0003B1 DD 7E F3         [19]  755 	ld	a, -13 (ix)
      0003B4 77               [ 7]  756 	ld	(hl), a
                                    757 ;./lib/./sprite.c:97: p->vx = vx;
      0003B5 C1               [10]  758 	pop	bc
      0003B6 E1               [10]  759 	pop	hl
      0003B7 E5               [11]  760 	push	hl
      0003B8 C5               [11]  761 	push	bc
      0003B9 DD 7E 04         [19]  762 	ld	a, 4 (ix)
      0003BC 77               [ 7]  763 	ld	(hl), a
      0003BD 23               [ 6]  764 	inc	hl
      0003BE DD 7E 05         [19]  765 	ld	a, 5 (ix)
      0003C1 77               [ 7]  766 	ld	(hl), a
                                    767 ;./lib/./sprite.c:98: p->vy = vy;
      0003C2 E1               [10]  768 	pop	hl
      0003C3 C1               [10]  769 	pop	bc
      0003C4 C5               [11]  770 	push	bc
      0003C5 E5               [11]  771 	push	hl
      0003C6 03               [ 6]  772 	inc	bc
      0003C7 03               [ 6]  773 	inc	bc
      0003C8 DD 7E 06         [19]  774 	ld	a, 6 (ix)
      0003CB 02               [ 7]  775 	ld	(bc), a
      0003CC 03               [ 6]  776 	inc	bc
      0003CD DD 7E 07         [19]  777 	ld	a, 7 (ix)
      0003D0 02               [ 7]  778 	ld	(bc), a
                                    779 ;./lib/./sprite.c:99: unsigned int iTile = 0;
      0003D1 AF               [ 4]  780 	xor	a, a
      0003D2 DD 77 FE         [19]  781 	ld	-2 (ix), a
      0003D5 DD 77 FF         [19]  782 	ld	-1 (ix), a
                                    783 ;./lib/./sprite.c:100: for (int iy=0;iy<ly;iy++) {
      0003D8 DD 7E F2         [19]  784 	ld	a, -14 (ix)
      0003DB DD 77 F6         [19]  785 	ld	-10 (ix), a
      0003DE DD 7E F3         [19]  786 	ld	a, -13 (ix)
      0003E1 DD 77 F7         [19]  787 	ld	-9 (ix), a
      0003E4 AF               [ 4]  788 	xor	a, a
      0003E5 DD 77 F8         [19]  789 	ld	-8 (ix), a
      0003E8 DD 77 F9         [19]  790 	ld	-7 (ix), a
      0003EB                        791 00116$:
      0003EB DD 7E F8         [19]  792 	ld	a, -8 (ix)
      0003EE DD 77 FC         [19]  793 	ld	-4 (ix), a
      0003F1 DD 7E F9         [19]  794 	ld	a, -7 (ix)
      0003F4 DD 77 FD         [19]  795 	ld	-3 (ix), a
                                    796 ;./lib/./sprite.c:103: p->initSprite = SMS_addSprite(x,y, tiles[iTile]);
      0003F7 DD 7E EC         [19]  797 	ld	a, -20 (ix)
      0003FA C6 08            [ 7]  798 	add	a, #0x08
      0003FC DD 77 EE         [19]  799 	ld	-18 (ix), a
      0003FF DD 7E ED         [19]  800 	ld	a, -19 (ix)
      000402 CE 00            [ 7]  801 	adc	a, #0x00
      000404 DD 77 EF         [19]  802 	ld	-17 (ix), a
                                    803 ;./lib/./sprite.c:100: for (int iy=0;iy<ly;iy++) {
      000407 DD 7E FC         [19]  804 	ld	a, -4 (ix)
      00040A DD 96 0A         [19]  805 	sub	a, 10 (ix)
      00040D DD 7E FD         [19]  806 	ld	a, -3 (ix)
      000410 DD 9E 0B         [19]  807 	sbc	a, 11 (ix)
      000413 D2rF7r04         [10]  808 	jp	NC, 00106$
                                    809 ;./lib/./sprite.c:101: for (int ix=0;ix<lx;ix++){
      000416 DD 7E FE         [19]  810 	ld	a, -2 (ix)
      000419 DD 77 FA         [19]  811 	ld	-6 (ix), a
      00041C DD 7E FF         [19]  812 	ld	a, -1 (ix)
      00041F DD 77 FB         [19]  813 	ld	-5 (ix), a
      000422 DD 7E F4         [19]  814 	ld	a, -12 (ix)
      000425 DD 77 FC         [19]  815 	ld	-4 (ix), a
      000428 DD 7E F5         [19]  816 	ld	a, -11 (ix)
      00042B DD 77 FD         [19]  817 	ld	-3 (ix), a
      00042E AF               [ 4]  818 	xor	a, a
      00042F DD 77 FE         [19]  819 	ld	-2 (ix), a
      000432 DD 77 FF         [19]  820 	ld	-1 (ix), a
      000435                        821 00113$:
      000435 DD 7E FE         [19]  822 	ld	a, -2 (ix)
      000438 DD 77 F0         [19]  823 	ld	-16 (ix), a
      00043B DD 7E FF         [19]  824 	ld	a, -1 (ix)
      00043E DD 77 F1         [19]  825 	ld	-15 (ix), a
      000441 DD 7E F0         [19]  826 	ld	a, -16 (ix)
      000444 DD 96 08         [19]  827 	sub	a, 8 (ix)
      000447 DD 7E F1         [19]  828 	ld	a, -15 (ix)
      00044A DD 9E 09         [19]  829 	sbc	a, 9 (ix)
      00044D 30 77            [12]  830 	jr	NC, 00129$
                                    831 ;./lib/./sprite.c:103: p->initSprite = SMS_addSprite(x,y, tiles[iTile]);
      00044F DD 46 FC         [19]  832 	ld	b, -4 (ix)
      000452 DD 6E FA         [19]  833 	ld	l, -6 (ix)
                                    834 ;	spillPairReg hl
                                    835 ;	spillPairReg hl
      000455 DD 66 FB         [19]  836 	ld	h, -5 (ix)
                                    837 ;	spillPairReg hl
                                    838 ;	spillPairReg hl
      000458 29               [11]  839 	add	hl, hl
      000459 EB               [ 4]  840 	ex	de,hl
      00045A DD 6E 0C         [19]  841 	ld	l, 12 (ix)
                                    842 ;	spillPairReg hl
                                    843 ;	spillPairReg hl
      00045D DD 66 0D         [19]  844 	ld	h, 13 (ix)
                                    845 ;	spillPairReg hl
                                    846 ;	spillPairReg hl
      000460 19               [11]  847 	add	hl, de
      000461 5E               [ 7]  848 	ld	e, (hl)
      000462 DD 73 F0         [19]  849 	ld	-16 (ix), e
      000465 DD 70 F1         [19]  850 	ld	-15 (ix), b
                                    851 ;./lib/./sprite.c:102: if(ix==0 && iy == 0) {
      000468 DD 7E FF         [19]  852 	ld	a, -1 (ix)
      00046B DD B6 FE         [19]  853 	or	a, -2 (ix)
      00046E 20 26            [12]  854 	jr	NZ, 00102$
      000470 DD 7E F9         [19]  855 	ld	a, -7 (ix)
      000473 DD B6 F8         [19]  856 	or	a, -8 (ix)
      000476 20 1E            [12]  857 	jr	NZ, 00102$
                                    858 ;./lib/./sprite.c:103: p->initSprite = SMS_addSprite(x,y, tiles[iTile]);
      000478 DD 5E F0         [19]  859 	ld	e, -16 (ix)
      00047B DD 56 F1         [19]  860 	ld	d, -15 (ix)
      00047E DD 6E F6         [19]  861 	ld	l, -10 (ix)
                                    862 ;	spillPairReg hl
                                    863 ;	spillPairReg hl
      000481 DD 66 F7         [19]  864 	ld	h, -9 (ix)
                                    865 ;	spillPairReg hl
                                    866 ;	spillPairReg hl
      000484 CDr00r00         [17]  867 	call	_SMS_addSprite_f
      000487 4F               [ 4]  868 	ld	c, a
      000488 07               [ 4]  869 	rlca
      000489 9F               [ 4]  870 	sbc	a, a
      00048A 47               [ 4]  871 	ld	b, a
      00048B DD 6E EE         [19]  872 	ld	l, -18 (ix)
      00048E DD 66 EF         [19]  873 	ld	h, -17 (ix)
      000491 71               [ 7]  874 	ld	(hl), c
      000492 23               [ 6]  875 	inc	hl
      000493 70               [ 7]  876 	ld	(hl), b
      000494 18 0F            [12]  877 	jr	00103$
      000496                        878 00102$:
                                    879 ;./lib/./sprite.c:106: SMS_addSprite(x,y, tiles[iTile]);
      000496 DD 5E F0         [19]  880 	ld	e, -16 (ix)
      000499 DD 56 F1         [19]  881 	ld	d, -15 (ix)
      00049C DD 6E F6         [19]  882 	ld	l, -10 (ix)
                                    883 ;	spillPairReg hl
                                    884 ;	spillPairReg hl
      00049F DD 66 F7         [19]  885 	ld	h, -9 (ix)
                                    886 ;	spillPairReg hl
                                    887 ;	spillPairReg hl
      0004A2 CDr00r00         [17]  888 	call	_SMS_addSprite_f
      0004A5                        889 00103$:
                                    890 ;./lib/./sprite.c:108: iTile++;
      0004A5 DD 34 FA         [23]  891 	inc	-6 (ix)
      0004A8 20 03            [12]  892 	jr	NZ, 00185$
      0004AA DD 34 FB         [23]  893 	inc	-5 (ix)
      0004AD                        894 00185$:
                                    895 ;./lib/./sprite.c:109: x += 8;
      0004AD DD 7E FC         [19]  896 	ld	a, -4 (ix)
      0004B0 C6 08            [ 7]  897 	add	a, #0x08
      0004B2 DD 77 FC         [19]  898 	ld	-4 (ix), a
      0004B5 30 03            [12]  899 	jr	NC, 00186$
      0004B7 DD 34 FD         [23]  900 	inc	-3 (ix)
      0004BA                        901 00186$:
                                    902 ;./lib/./sprite.c:101: for (int ix=0;ix<lx;ix++){
      0004BA DD 34 FE         [23]  903 	inc	-2 (ix)
      0004BD C2r35r04         [10]  904 	jp	NZ,00113$
      0004C0 DD 34 FF         [23]  905 	inc	-1 (ix)
      0004C3 C3r35r04         [10]  906 	jp	00113$
      0004C6                        907 00129$:
      0004C6 DD 7E FA         [19]  908 	ld	a, -6 (ix)
      0004C9 DD 77 FE         [19]  909 	ld	-2 (ix), a
      0004CC DD 7E FB         [19]  910 	ld	a, -5 (ix)
      0004CF DD 77 FF         [19]  911 	ld	-1 (ix), a
      0004D2 DD 7E FC         [19]  912 	ld	a, -4 (ix)
      0004D5 DD 77 F4         [19]  913 	ld	-12 (ix), a
      0004D8 DD 7E FD         [19]  914 	ld	a, -3 (ix)
      0004DB DD 77 F5         [19]  915 	ld	-11 (ix), a
                                    916 ;./lib/./sprite.c:111: y += 16;
      0004DE DD 7E F6         [19]  917 	ld	a, -10 (ix)
      0004E1 C6 10            [ 7]  918 	add	a, #0x10
      0004E3 DD 77 F6         [19]  919 	ld	-10 (ix), a
      0004E6 30 03            [12]  920 	jr	NC, 00188$
      0004E8 DD 34 F7         [23]  921 	inc	-9 (ix)
      0004EB                        922 00188$:
                                    923 ;./lib/./sprite.c:100: for (int iy=0;iy<ly;iy++) {
      0004EB DD 34 F8         [23]  924 	inc	-8 (ix)
      0004EE C2rEBr03         [10]  925 	jp	NZ,00116$
      0004F1 DD 34 F9         [23]  926 	inc	-7 (ix)
      0004F4 C3rEBr03         [10]  927 	jp	00116$
      0004F7                        928 00106$:
                                    929 ;./lib/./sprite.c:113: p->len = p->initSprite + lx*ly;
      0004F7 DD 7E EC         [19]  930 	ld	a, -20 (ix)
      0004FA C6 0A            [ 7]  931 	add	a, #0x0a
      0004FC DD 77 FE         [19]  932 	ld	-2 (ix), a
      0004FF DD 7E ED         [19]  933 	ld	a, -19 (ix)
      000502 CE 00            [ 7]  934 	adc	a, #0x00
      000504 DD 77 FF         [19]  935 	ld	-1 (ix), a
      000507 DD 6E EE         [19]  936 	ld	l, -18 (ix)
      00050A DD 66 EF         [19]  937 	ld	h, -17 (ix)
      00050D 7E               [ 7]  938 	ld	a, (hl)
      00050E DD 77 FC         [19]  939 	ld	-4 (ix), a
      000511 23               [ 6]  940 	inc	hl
      000512 7E               [ 7]  941 	ld	a, (hl)
      000513 DD 77 FD         [19]  942 	ld	-3 (ix), a
      000516 DD 5E 0A         [19]  943 	ld	e, 10 (ix)
      000519 DD 56 0B         [19]  944 	ld	d, 11 (ix)
      00051C DD 6E 08         [19]  945 	ld	l, 8 (ix)
                                    946 ;	spillPairReg hl
                                    947 ;	spillPairReg hl
      00051F DD 66 09         [19]  948 	ld	h, 9 (ix)
                                    949 ;	spillPairReg hl
                                    950 ;	spillPairReg hl
      000522 CDr00r00         [17]  951 	call	__mulint
      000525 DD 73 F8         [19]  952 	ld	-8 (ix), e
      000528 DD 72 F9         [19]  953 	ld	-7 (ix), d
      00052B DD 7E F8         [19]  954 	ld	a, -8 (ix)
      00052E DD 86 FC         [19]  955 	add	a, -4 (ix)
      000531 DD 77 FA         [19]  956 	ld	-6 (ix), a
      000534 DD 7E F9         [19]  957 	ld	a, -7 (ix)
      000537 DD 8E FD         [19]  958 	adc	a, -3 (ix)
      00053A DD 77 FB         [19]  959 	ld	-5 (ix), a
      00053D DD 6E FE         [19]  960 	ld	l, -2 (ix)
      000540 DD 66 FF         [19]  961 	ld	h, -1 (ix)
      000543 DD 7E FA         [19]  962 	ld	a, -6 (ix)
      000546 77               [ 7]  963 	ld	(hl), a
      000547 23               [ 6]  964 	inc	hl
      000548 DD 7E FB         [19]  965 	ld	a, -5 (ix)
      00054B 77               [ 7]  966 	ld	(hl), a
                                    967 ;./lib/./sprite.c:114: return i;
      00054C D1               [10]  968 	pop	de
      00054D D5               [11]  969 	push	de
      00054E 18 1E            [12]  970 	jr	00118$
      000550                        971 00108$:
                                    972 ;./lib/./sprite.c:116: i--;
      000550 DD 6E FE         [19]  973 	ld	l, -2 (ix)
      000553 DD 66 FF         [19]  974 	ld	h, -1 (ix)
      000556 2B               [ 6]  975 	dec	hl
      000557 DD 75 FE         [19]  976 	ld	-2 (ix), l
      00055A DD 74 FF         [19]  977 	ld	-1 (ix), h
      00055D DD 7E FE         [19]  978 	ld	a, -2 (ix)
      000560 DD 77 EA         [19]  979 	ld	-22 (ix), a
      000563 DD 7E FF         [19]  980 	ld	a, -1 (ix)
      000566 DD 77 EB         [19]  981 	ld	-21 (ix), a
      000569 C3r1Dr03         [10]  982 	jp	00109$
      00056C                        983 00111$:
                                    984 ;./lib/./sprite.c:118: return i;
      00056C D1               [10]  985 	pop	de
      00056D D5               [11]  986 	push	de
      00056E                        987 00118$:
                                    988 ;./lib/./sprite.c:119: }
      00056E DD F9            [10]  989 	ld	sp, ix
      000570 DD E1            [14]  990 	pop	ix
      000572 E1               [10]  991 	pop	hl
      000573 F1               [10]  992 	pop	af
      000574 F1               [10]  993 	pop	af
      000575 F1               [10]  994 	pop	af
      000576 F1               [10]  995 	pop	af
      000577 F1               [10]  996 	pop	af
      000578 E9               [ 4]  997 	jp	(hl)
                                    998 ;./lib/./sprite.c:131: void initSpritesVariables (void) {
                                    999 ;	---------------------------------
                                   1000 ; Function initSpritesVariables
                                   1001 ; ---------------------------------
      000579                       1002 _initSpritesVariables::
                                   1003 ;./lib/./sprite.c:133: while (i) {
      000579 01 40 00         [10] 1004 	ld	bc, #0x0040
      00057C                       1005 00101$:
      00057C 78               [ 4] 1006 	ld	a, b
      00057D B1               [ 4] 1007 	or	a, c
      00057E 28 15            [12] 1008 	jr	Z, 00103$
                                   1009 ;./lib/./sprite.c:134: hardwareSprites[i].len = 0;
      000580 69               [ 4] 1010 	ld	l, c
      000581 60               [ 4] 1011 	ld	h, b
      000582 29               [11] 1012 	add	hl, hl
      000583 09               [11] 1013 	add	hl, bc
      000584 29               [11] 1014 	add	hl, hl
      000585 29               [11] 1015 	add	hl, hl
      000586 11r40r00         [10] 1016 	ld	de, #_hardwareSprites
      000589 19               [11] 1017 	add	hl, de
      00058A 11 0A 00         [10] 1018 	ld	de, #0x000a
      00058D 19               [11] 1019 	add	hl, de
      00058E AF               [ 4] 1020 	xor	a, a
      00058F 77               [ 7] 1021 	ld	(hl), a
      000590 23               [ 6] 1022 	inc	hl
      000591 77               [ 7] 1023 	ld	(hl), a
                                   1024 ;./lib/./sprite.c:135: i--;
      000592 0B               [ 6] 1025 	dec	bc
      000593 18 E7            [12] 1026 	jr	00101$
      000595                       1027 00103$:
                                   1028 ;./lib/./sprite.c:148: __endasm;
      000595 21r00r00         [10] 1029 	ld	hl, #_SpriteNextFree
      000598 22r44r03         [16] 1030 	ld	(#_SpriteNextFree2), hl
      00059B 21r00r00         [10] 1031 	ld	hl, #_SpriteTableY
      00059E 22r40r03         [16] 1032 	ld	(#_SpriteTableY2), hl
      0005A1 21r00r00         [10] 1033 	ld	hl, #_SpriteTableXN
      0005A4 22r42r03         [16] 1034 	ld	(#_SpriteTableXN2), hl
                                   1035 ;./lib/./sprite.c:151: }
      0005A7 C9               [10] 1036 	ret
                                   1037 ;./lib/./sprite.c:168: void copySpritestoSAT (void) {
                                   1038 ;	---------------------------------
                                   1039 ; Function copySpritestoSAT
                                   1040 ; ---------------------------------
      0005A8                       1041 _copySpritestoSAT::
                                   1042 ;./lib/./sprite.c:169: SMS_setAddr(SMS_SATAddress);
      0005A8 21 00 7F         [10] 1043 	ld	hl, #0x7f00
      0005AB CF               [11] 1044 	rst	#0x08
                                   1045 ;./lib/./sprite.c:185: __endasm;
      0005AC 3Ar00r00         [13] 1046 	ld	a,(#_SpriteNextFree)
      0005AF B7               [ 4] 1047 	or	a
      0005B0 28 25            [12] 1048 	jr	z,_no_sprites
      0005B2 47               [ 4] 1049 	ld	b,a
      0005B3 0E BE            [ 7] 1050 	ld	c,#_VDPDataPort
      0005B5 21r00r00         [10] 1051 	ld	hl,#_SpriteTableY
      0005B8                       1052 _next_spriteY:
      0005B8 ED A3            [16] 1053 	outi	; 16 cycles
      0005BA 20 FC            [12] 1054 	jr	nz,_next_spriteY ; 12 cycles = 28 (VRAM safe on GG too)
      0005BC FE 40            [ 7] 1055 	cp	#64 ; 7 cycles
      0005BE 28 04            [12] 1056 	jr	z,_no_sprite_term ; 7 cycles
      0005C0 3E D0            [ 7] 1057 	ld	a,#0xD0 ; 7 cycles => VRAM safe
      0005C2 ED 79            [12] 1058 	out	(c),a
      0005C4                       1059 _no_sprite_term:
                                   1060 ;./lib/./sprite.c:186: SMS_setAddr(SMS_SATAddress+128);
      0005C4 21 80 7F         [10] 1061 	ld	hl, #0x7f80
      0005C7 CF               [11] 1062 	rst	#0x08
                                   1063 ;./lib/./sprite.c:201: __endasm;
      0005C8 0E BE            [ 7] 1064 	ld	c,#_VDPDataPort
      0005CA 3Ar00r00         [13] 1065 	ld	a,(#_SpriteNextFree)
      0005CD 87               [ 4] 1066 	add	a,a
      0005CE 47               [ 4] 1067 	ld	b,a
      0005CF 21r00r00         [10] 1068 	ld	hl,#_SpriteTableXN
      0005D2                       1069 _next_spriteXN:
      0005D2 ED A3            [16] 1070 	outi	; 16 cycles
      0005D4 20 FC            [12] 1071 	jr	nz,_next_spriteXN ; 12 cycles = 28 (VRAM safe on GG too)
      0005D6 C9               [10] 1072 	ret
      0005D7                       1073 _no_sprites:
      0005D7 3E D0            [ 7] 1074 	ld	a,#0xD0
      0005D9 D3 BE            [11] 1075 	out	(#_VDPDataPort),a
                                   1076 ;./lib/./sprite.c:202: }
      0005DB C9               [10] 1077 	ret
                                   1078 ;./lib/entities.c:12: void draw_entidad(T_entidad *entidad, T_sprite *sprite){
                                   1079 ;	---------------------------------
                                   1080 ; Function draw_entidad
                                   1081 ; ---------------------------------
      0005DC                       1082 _draw_entidad::
      0005DC DD E5            [15] 1083 	push	ix
      0005DE DD 21 00 00      [14] 1084 	ld	ix,#0
      0005E2 DD 39            [15] 1085 	add	ix,sp
      0005E4 FD 21 E3 FF      [14] 1086 	ld	iy, #-29
      0005E8 FD 39            [15] 1087 	add	iy, sp
      0005EA FD F9            [10] 1088 	ld	sp, iy
      0005EC DD 75 FC         [19] 1089 	ld	-4 (ix), l
      0005EF DD 74 FD         [19] 1090 	ld	-3 (ix), h
                                   1091 ;./lib/entities.c:14: if (sprite->allInRAM == 1){
      0005F2 DD 73 FA         [19] 1092 	ld	-6 (ix), e
      0005F5 DD 72 FB         [19] 1093 	ld	-5 (ix), d
      0005F8 4B               [ 4] 1094 	ld	c, e
      0005F9 42               [ 4] 1095 	ld	b, d
      0005FA 21 06 00         [10] 1096 	ld	hl, #6
      0005FD 09               [11] 1097 	add	hl, bc
      0005FE 4E               [ 7] 1098 	ld	c, (hl)
                                   1099 ;./lib/entities.c:15: if (entidad->initSprite == 255) {
      0005FF DD 7E FC         [19] 1100 	ld	a, -4 (ix)
      000602 C6 06            [ 7] 1101 	add	a, #0x06
      000604 DD 77 F2         [19] 1102 	ld	-14 (ix), a
      000607 DD 7E FD         [19] 1103 	ld	a, -3 (ix)
      00060A CE 00            [ 7] 1104 	adc	a, #0x00
      00060C DD 77 F3         [19] 1105 	ld	-13 (ix), a
      00060F DD 6E F2         [19] 1106 	ld	l, -14 (ix)
      000612 DD 66 F3         [19] 1107 	ld	h, -13 (ix)
      000615 46               [ 7] 1108 	ld	b, (hl)
                                   1109 ;./lib/entities.c:16: int frame = sprite->tamano*entidad->frame + sprite->beginVRAM;
      000616 DD 7E FC         [19] 1110 	ld	a, -4 (ix)
      000619 C6 02            [ 7] 1111 	add	a, #0x02
      00061B DD 77 F4         [19] 1112 	ld	-12 (ix), a
      00061E DD 7E FD         [19] 1113 	ld	a, -3 (ix)
      000621 CE 00            [ 7] 1114 	adc	a, #0x00
      000623 DD 77 F5         [19] 1115 	ld	-11 (ix), a
                                   1116 ;./lib/entities.c:17: for(j=0;j<sprite->alto;j++) {
      000626 DD 7E FC         [19] 1117 	ld	a, -4 (ix)
      000629 C6 01            [ 7] 1118 	add	a, #0x01
      00062B DD 77 F8         [19] 1119 	ld	-8 (ix), a
      00062E DD 7E FD         [19] 1120 	ld	a, -3 (ix)
      000631 CE 00            [ 7] 1121 	adc	a, #0x00
      000633 DD 77 F9         [19] 1122 	ld	-7 (ix), a
      000636 DD 7E FA         [19] 1123 	ld	a, -6 (ix)
      000639 C6 01            [ 7] 1124 	add	a, #0x01
      00063B DD 77 FE         [19] 1125 	ld	-2 (ix), a
      00063E DD 7E FB         [19] 1126 	ld	a, -5 (ix)
      000641 CE 00            [ 7] 1127 	adc	a, #0x00
      000643 DD 77 FF         [19] 1128 	ld	-1 (ix), a
                                   1129 ;./lib/entities.c:27: entidad->len = (sprite->alto * sprite->ancho + entidad->initSprite)*2;
      000646 DD 7E FC         [19] 1130 	ld	a, -4 (ix)
      000649 C6 07            [ 7] 1131 	add	a, #0x07
      00064B DD 77 E3         [19] 1132 	ld	-29 (ix), a
      00064E DD 7E FD         [19] 1133 	ld	a, -3 (ix)
      000651 CE 00            [ 7] 1134 	adc	a, #0x00
      000653 DD 77 E4         [19] 1135 	ld	-28 (ix), a
                                   1136 ;./lib/entities.c:15: if (entidad->initSprite == 255) {
      000656 04               [ 4] 1137 	inc	b
      000657 3E 01            [ 7] 1138 	ld	a, #0x01
      000659 28 01            [12] 1139 	jr	Z, 00253$
      00065B AF               [ 4] 1140 	xor	a, a
      00065C                       1141 00253$:
      00065C DD 77 F7         [19] 1142 	ld	-9 (ix), a
                                   1143 ;./lib/entities.c:14: if (sprite->allInRAM == 1){
      00065F 0D               [ 4] 1144 	dec	c
      000660 C2r73r08         [10] 1145 	jp	NZ,00120$
                                   1146 ;./lib/entities.c:15: if (entidad->initSprite == 255) {
      000663 DD 7E F2         [19] 1147 	ld	a, -14 (ix)
      000666 DD 77 E5         [19] 1148 	ld	-27 (ix), a
      000669 DD 7E F3         [19] 1149 	ld	a, -13 (ix)
      00066C DD 77 E6         [19] 1150 	ld	-26 (ix), a
      00066F DD 7E F7         [19] 1151 	ld	a, -9 (ix)
      000672 B7               [ 4] 1152 	or	a, a
      000673 CArFDr09         [10] 1153 	jp	Z, 00134$
                                   1154 ;./lib/entities.c:16: int frame = sprite->tamano*entidad->frame + sprite->beginVRAM;
      000676 DD 7E FA         [19] 1155 	ld	a, -6 (ix)
      000679 DD 77 F2         [19] 1156 	ld	-14 (ix), a
      00067C DD 7E FB         [19] 1157 	ld	a, -5 (ix)
      00067F DD 77 F3         [19] 1158 	ld	-13 (ix), a
      000682 DD 6E F2         [19] 1159 	ld	l, -14 (ix)
      000685 DD 66 F3         [19] 1160 	ld	h, -13 (ix)
      000688 23               [ 6] 1161 	inc	hl
      000689 23               [ 6] 1162 	inc	hl
      00068A 7E               [ 7] 1163 	ld	a, (hl)
      00068B DD 77 F6         [19] 1164 	ld	-10 (ix), a
      00068E DD 6E F4         [19] 1165 	ld	l, -12 (ix)
      000691 DD 66 F5         [19] 1166 	ld	h, -11 (ix)
      000694 7E               [ 7] 1167 	ld	a, (hl)
      000695 DD 77 F7         [19] 1168 	ld	-9 (ix), a
      000698 DD 7E F6         [19] 1169 	ld	a, -10 (ix)
      00069B DD 77 F5         [19] 1170 	ld	-11 (ix), a
      00069E DD 5E F7         [19] 1171 	ld	e, -9 (ix)
      0006A1 DD 66 F5         [19] 1172 	ld	h, -11 (ix)
                                   1173 ;	spillPairReg hl
                                   1174 ;	spillPairReg hl
      0006A4 2E 00            [ 7] 1175 	ld	l, #0x00
      0006A6 55               [ 4] 1176 	ld	d, l
      0006A7 06 08            [ 7] 1177 	ld	b, #0x08
      0006A9                       1178 00256$:
      0006A9 29               [11] 1179 	add	hl, hl
      0006AA 30 01            [12] 1180 	jr	NC, 00257$
      0006AC 19               [11] 1181 	add	hl, de
      0006AD                       1182 00257$:
      0006AD 10 FA            [13] 1183 	djnz	00256$
      0006AF DD 75 F7         [19] 1184 	ld	-9 (ix), l
      0006B2 DD 7E FA         [19] 1185 	ld	a, -6 (ix)
      0006B5 DD 77 F5         [19] 1186 	ld	-11 (ix), a
      0006B8 DD 7E FB         [19] 1187 	ld	a, -5 (ix)
      0006BB DD 77 F6         [19] 1188 	ld	-10 (ix), a
      0006BE DD 6E F5         [19] 1189 	ld	l, -11 (ix)
      0006C1 DD 66 F6         [19] 1190 	ld	h, -10 (ix)
      0006C4 11 04 00         [10] 1191 	ld	de, #0x0004
      0006C7 19               [11] 1192 	add	hl, de
      0006C8 7E               [ 7] 1193 	ld	a, (hl)
      0006C9 DD 77 F6         [19] 1194 	ld	-10 (ix), a
      0006CC DD 86 F7         [19] 1195 	add	a, -9 (ix)
      0006CF DD 77 E7         [19] 1196 	ld	-25 (ix), a
                                   1197 ;./lib/entities.c:17: for(j=0;j<sprite->alto;j++) {
      0006D2 DD 7E F8         [19] 1198 	ld	a, -8 (ix)
      0006D5 DD 77 E8         [19] 1199 	ld	-24 (ix), a
      0006D8 DD 7E F9         [19] 1200 	ld	a, -7 (ix)
      0006DB DD 77 E9         [19] 1201 	ld	-23 (ix), a
      0006DE DD 7E FE         [19] 1202 	ld	a, -2 (ix)
      0006E1 DD 77 EA         [19] 1203 	ld	-22 (ix), a
      0006E4 DD 7E FF         [19] 1204 	ld	a, -1 (ix)
      0006E7 DD 77 EB         [19] 1205 	ld	-21 (ix), a
      0006EA DD 36 FE 00      [19] 1206 	ld	-2 (ix), #0x00
      0006EE                       1207 00126$:
      0006EE DD 6E FA         [19] 1208 	ld	l, -6 (ix)
      0006F1 DD 66 FB         [19] 1209 	ld	h, -5 (ix)
      0006F4 7E               [ 7] 1210 	ld	a, (hl)
      0006F5 DD 77 FF         [19] 1211 	ld	-1 (ix), a
      0006F8 DD 7E FE         [19] 1212 	ld	a, -2 (ix)
      0006FB DD 96 FF         [19] 1213 	sub	a, -1 (ix)
      0006FE D2r37r08         [10] 1214 	jp	NC, 00106$
                                   1215 ;./lib/entities.c:18: unsigned char desplazado = (j<<2);
      000701 DD 7E FE         [19] 1216 	ld	a, -2 (ix)
      000704 DD 77 FF         [19] 1217 	ld	-1 (ix), a
      000707 DD CB FF 26      [23] 1218 	sla	-1 (ix)
      00070B DD CB FF 26      [23] 1219 	sla	-1 (ix)
                                   1220 ;./lib/entities.c:19: unsigned char jCalculated = desplazado + frame, y = entidad->y+(desplazado<<2);
      00070F DD 7E FF         [19] 1221 	ld	a, -1 (ix)
      000712 DD 77 F9         [19] 1222 	ld	-7 (ix), a
      000715 DD 86 E7         [19] 1223 	add	a, -25 (ix)
      000718 DD 77 FF         [19] 1224 	ld	-1 (ix), a
      00071B DD 77 EC         [19] 1225 	ld	-20 (ix), a
      00071E DD 6E E8         [19] 1226 	ld	l, -24 (ix)
      000721 DD 66 E9         [19] 1227 	ld	h, -23 (ix)
      000724 7E               [ 7] 1228 	ld	a, (hl)
      000725 DD 77 FF         [19] 1229 	ld	-1 (ix), a
      000728 DD CB F9 26      [23] 1230 	sla	-7 (ix)
      00072C DD CB F9 26      [23] 1231 	sla	-7 (ix)
      000730 DD 7E FF         [19] 1232 	ld	a, -1 (ix)
      000733 DD 86 F9         [19] 1233 	add	a, -7 (ix)
      000736 DD 77 FF         [19] 1234 	ld	-1 (ix), a
      000739 DD 77 ED         [19] 1235 	ld	-19 (ix), a
                                   1236 ;./lib/entities.c:20: for(i=0;i<sprite->ancho;i++) {
      00073C DD 36 FF 00      [19] 1237 	ld	-1 (ix), #0x00
      000740                       1238 00123$:
      000740 DD 6E EA         [19] 1239 	ld	l, -22 (ix)
      000743 DD 66 EB         [19] 1240 	ld	h, -21 (ix)
      000746 DD 7E FF         [19] 1241 	ld	a,-1 (ix)
      000749 96               [ 7] 1242 	sub	a,(hl)
      00074A D2r31r08         [10] 1243 	jp	NC, 00127$
                                   1244 ;./lib/entities.c:22: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      00074D DD 6E FC         [19] 1245 	ld	l, -4 (ix)
      000750 DD 66 FD         [19] 1246 	ld	h, -3 (ix)
      000753 7E               [ 7] 1247 	ld	a, (hl)
      000754 DD 77 F7         [19] 1248 	ld	-9 (ix), a
      000757 DD 7E FF         [19] 1249 	ld	a, -1 (ix)
      00075A DD 77 F8         [19] 1250 	ld	-8 (ix), a
      00075D DD 36 F9 00      [19] 1251 	ld	-7 (ix), #0x00
      000761 DD 7E EC         [19] 1252 	ld	a, -20 (ix)
      000764 DD 77 EE         [19] 1253 	ld	-18 (ix), a
      000767 DD 36 EF 00      [19] 1254 	ld	-17 (ix), #0x00
      00076B DD 7E ED         [19] 1255 	ld	a, -19 (ix)
      00076E DD 77 F0         [19] 1256 	ld	-16 (ix), a
      000771 DD 36 F1 00      [19] 1257 	ld	-15 (ix), #0x00
      000775 DD 7E F7         [19] 1258 	ld	a, -9 (ix)
      000778 DD 77 F2         [19] 1259 	ld	-14 (ix), a
      00077B DD 36 F3 00      [19] 1260 	ld	-13 (ix), #0x00
      00077F DD 7E F8         [19] 1261 	ld	a, -8 (ix)
      000782 DD 77 F4         [19] 1262 	ld	-12 (ix), a
      000785 DD 7E F9         [19] 1263 	ld	a, -7 (ix)
      000788 DD 77 F5         [19] 1264 	ld	-11 (ix), a
      00078B 06 03            [ 7] 1265 	ld	b, #0x03
      00078D                       1266 00258$:
      00078D DD CB F4 26      [23] 1267 	sla	-12 (ix)
      000791 DD CB F5 16      [23] 1268 	rl	-11 (ix)
      000795 10 F6            [13] 1269 	djnz	00258$
      000797 DD 7E F8         [19] 1270 	ld	a, -8 (ix)
      00079A DD 77 F6         [19] 1271 	ld	-10 (ix), a
      00079D DD 7E F9         [19] 1272 	ld	a, -7 (ix)
      0007A0 DD 77 F7         [19] 1273 	ld	-9 (ix), a
      0007A3 DD CB F6 26      [23] 1274 	sla	-10 (ix)
      0007A7 DD CB F7 16      [23] 1275 	rl	-9 (ix)
      0007AB DD 7E F4         [19] 1276 	ld	a, -12 (ix)
      0007AE DD 86 F2         [19] 1277 	add	a, -14 (ix)
      0007B1 DD 77 F8         [19] 1278 	ld	-8 (ix), a
      0007B4 DD 7E F5         [19] 1279 	ld	a, -11 (ix)
      0007B7 DD 8E F3         [19] 1280 	adc	a, -13 (ix)
      0007BA DD 77 F9         [19] 1281 	ld	-7 (ix), a
      0007BD DD 7E EE         [19] 1282 	ld	a, -18 (ix)
      0007C0 DD 86 F6         [19] 1283 	add	a, -10 (ix)
      0007C3 DD 77 F4         [19] 1284 	ld	-12 (ix), a
      0007C6 3E 00            [ 7] 1285 	ld	a, #0x00
      0007C8 DD 8E F7         [19] 1286 	adc	a, -9 (ix)
      0007CB DD 77 F5         [19] 1287 	ld	-11 (ix), a
      0007CE DD 7E F8         [19] 1288 	ld	a, -8 (ix)
      0007D1 DD 77 F6         [19] 1289 	ld	-10 (ix), a
      0007D4 DD 36 F7 00      [19] 1290 	ld	-9 (ix), #0x00
      0007D8 DD 7E F4         [19] 1291 	ld	a, -12 (ix)
      0007DB DD 77 F8         [19] 1292 	ld	-8 (ix), a
      0007DE DD 36 F9 00      [19] 1293 	ld	-7 (ix), #0x00
      0007E2 DD 7E F6         [19] 1294 	ld	a, -10 (ix)
      0007E5 DD 77 F7         [19] 1295 	ld	-9 (ix), a
      0007E8 DD 36 F6 00      [19] 1296 	ld	-10 (ix), #0x00
      0007EC AF               [ 4] 1297 	xor	a, a
      0007ED DD B6 F8         [19] 1298 	or	a, -8 (ix)
      0007F0 DD 77 F4         [19] 1299 	ld	-12 (ix), a
      0007F3 DD 7E F7         [19] 1300 	ld	a, -9 (ix)
      0007F6 DD B6 F9         [19] 1301 	or	a, -7 (ix)
      0007F9 DD 77 F5         [19] 1302 	ld	-11 (ix), a
                                   1303 ;./lib/entities.c:21: if(i==0 && j==0)
      0007FC DD 7E FF         [19] 1304 	ld	a, -1 (ix)
      0007FF B7               [ 4] 1305 	or	a, a
      000800 20 1B            [12] 1306 	jr	NZ, 00102$
      000802 DD 7E FE         [19] 1307 	ld	a, -2 (ix)
      000805 B7               [ 4] 1308 	or	a, a
      000806 20 15            [12] 1309 	jr	NZ, 00102$
                                   1310 ;./lib/entities.c:22: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      000808 DD 5E F4         [19] 1311 	ld	e, -12 (ix)
      00080B DD 56 F5         [19] 1312 	ld	d, -11 (ix)
      00080E DD 6E F0         [19] 1313 	ld	l, -16 (ix)
                                   1314 ;	spillPairReg hl
                                   1315 ;	spillPairReg hl
      000811 26 00            [ 7] 1316 	ld	h, #0x00
                                   1317 ;	spillPairReg hl
                                   1318 ;	spillPairReg hl
      000813 CDr00r00         [17] 1319 	call	_SMS_addSprite_f
      000816 C1               [10] 1320 	pop	bc
      000817 E1               [10] 1321 	pop	hl
      000818 E5               [11] 1322 	push	hl
      000819 C5               [11] 1323 	push	bc
      00081A 77               [ 7] 1324 	ld	(hl), a
      00081B 18 0E            [12] 1325 	jr	00124$
      00081D                       1326 00102$:
                                   1327 ;./lib/entities.c:24: SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      00081D DD 5E F4         [19] 1328 	ld	e, -12 (ix)
      000820 DD 56 F5         [19] 1329 	ld	d, -11 (ix)
      000823 DD 6E F0         [19] 1330 	ld	l, -16 (ix)
                                   1331 ;	spillPairReg hl
                                   1332 ;	spillPairReg hl
      000826 26 00            [ 7] 1333 	ld	h, #0x00
                                   1334 ;	spillPairReg hl
                                   1335 ;	spillPairReg hl
      000828 CDr00r00         [17] 1336 	call	_SMS_addSprite_f
      00082B                       1337 00124$:
                                   1338 ;./lib/entities.c:20: for(i=0;i<sprite->ancho;i++) {
      00082B DD 34 FF         [23] 1339 	inc	-1 (ix)
      00082E C3r40r07         [10] 1340 	jp	00123$
      000831                       1341 00127$:
                                   1342 ;./lib/entities.c:17: for(j=0;j<sprite->alto;j++) {
      000831 DD 34 FE         [23] 1343 	inc	-2 (ix)
      000834 C3rEEr06         [10] 1344 	jp	00126$
      000837                       1345 00106$:
                                   1346 ;./lib/entities.c:27: entidad->len = (sprite->alto * sprite->ancho + entidad->initSprite)*2;
      000837 DD 6E EA         [19] 1347 	ld	l, -22 (ix)
      00083A DD 66 EB         [19] 1348 	ld	h, -21 (ix)
      00083D 7E               [ 7] 1349 	ld	a, (hl)
      00083E DD 77 FE         [19] 1350 	ld	-2 (ix), a
      000841 5F               [ 4] 1351 	ld	e, a
      000842 DD 66 FF         [19] 1352 	ld	h, -1 (ix)
                                   1353 ;	spillPairReg hl
                                   1354 ;	spillPairReg hl
      000845 2E 00            [ 7] 1355 	ld	l, #0x00
      000847 55               [ 4] 1356 	ld	d, l
      000848 06 08            [ 7] 1357 	ld	b, #0x08
      00084A                       1358 00260$:
      00084A 29               [11] 1359 	add	hl, hl
      00084B 30 01            [12] 1360 	jr	NC, 00261$
      00084D 19               [11] 1361 	add	hl, de
      00084E                       1362 00261$:
      00084E 10 FA            [13] 1363 	djnz	00260$
      000850 DD 75 FF         [19] 1364 	ld	-1 (ix), l
      000853 DD 6E E5         [19] 1365 	ld	l, -27 (ix)
      000856 DD 66 E6         [19] 1366 	ld	h, -26 (ix)
      000859 7E               [ 7] 1367 	ld	a, (hl)
      00085A DD 77 FE         [19] 1368 	ld	-2 (ix), a
      00085D DD 7E FF         [19] 1369 	ld	a, -1 (ix)
      000860 DD 86 FE         [19] 1370 	add	a, -2 (ix)
      000863 DD 77 FF         [19] 1371 	ld	-1 (ix), a
      000866 DD CB FF 26      [23] 1372 	sla	-1 (ix)
      00086A E1               [10] 1373 	pop	hl
      00086B E5               [11] 1374 	push	hl
      00086C DD 7E FF         [19] 1375 	ld	a, -1 (ix)
      00086F 77               [ 7] 1376 	ld	(hl), a
      000870 C3rFDr09         [10] 1377 	jp	00134$
      000873                       1378 00120$:
                                   1379 ;./lib/entities.c:32: if (entidad->initSprite == 255) {
      000873 DD 7E F2         [19] 1380 	ld	a, -14 (ix)
      000876 DD 77 EC         [19] 1381 	ld	-20 (ix), a
      000879 DD 7E F3         [19] 1382 	ld	a, -13 (ix)
      00087C DD 77 ED         [19] 1383 	ld	-19 (ix), a
      00087F DD 7E F7         [19] 1384 	ld	a, -9 (ix)
      000882 B7               [ 4] 1385 	or	a, a
      000883 CArFDr09         [10] 1386 	jp	Z, 00134$
                                   1387 ;./lib/entities.c:33: if (entidad->frame != sprite->frameInVRAM){
      000886 DD 6E F4         [19] 1388 	ld	l, -12 (ix)
      000889 DD 66 F5         [19] 1389 	ld	h, -11 (ix)
      00088C 7E               [ 7] 1390 	ld	a, (hl)
      00088D DD 77 F7         [19] 1391 	ld	-9 (ix), a
      000890 DD 7E FA         [19] 1392 	ld	a, -6 (ix)
      000893 C6 09            [ 7] 1393 	add	a, #0x09
      000895 DD 77 F5         [19] 1394 	ld	-11 (ix), a
      000898 DD 7E FB         [19] 1395 	ld	a, -5 (ix)
      00089B CE 00            [ 7] 1396 	adc	a, #0x00
      00089D DD 77 F6         [19] 1397 	ld	-10 (ix), a
      0008A0 DD 6E F5         [19] 1398 	ld	l, -11 (ix)
      0008A3 DD 66 F6         [19] 1399 	ld	h, -10 (ix)
      0008A6 DD 7E F7         [19] 1400 	ld	a,-9 (ix)
      0008A9 96               [ 7] 1401 	sub	a,(hl)
      0008AA 28 0A            [12] 1402 	jr	Z, 00151$
                                   1403 ;./lib/entities.c:35: sprite->frameInVRAM = entidad->frame;
      0008AC DD 6E F5         [19] 1404 	ld	l, -11 (ix)
      0008AF DD 66 F6         [19] 1405 	ld	h, -10 (ix)
      0008B2 DD 7E F7         [19] 1406 	ld	a, -9 (ix)
      0008B5 77               [ 7] 1407 	ld	(hl), a
                                   1408 ;./lib/entities.c:37: for(j=0;j<sprite->alto;j++) {
      0008B6                       1409 00151$:
      0008B6 DD 7E F8         [19] 1410 	ld	a, -8 (ix)
      0008B9 DD 77 EE         [19] 1411 	ld	-18 (ix), a
      0008BC DD 7E F9         [19] 1412 	ld	a, -7 (ix)
      0008BF DD 77 EF         [19] 1413 	ld	-17 (ix), a
      0008C2 DD 7E F8         [19] 1414 	ld	a, -8 (ix)
      0008C5 DD 77 F0         [19] 1415 	ld	-16 (ix), a
      0008C8 DD 7E F9         [19] 1416 	ld	a, -7 (ix)
      0008CB DD 77 F1         [19] 1417 	ld	-15 (ix), a
      0008CE DD 7E FE         [19] 1418 	ld	a, -2 (ix)
      0008D1 DD 77 F2         [19] 1419 	ld	-14 (ix), a
      0008D4 DD 7E FF         [19] 1420 	ld	a, -1 (ix)
      0008D7 DD 77 F3         [19] 1421 	ld	-13 (ix), a
      0008DA DD 36 FE 00      [19] 1422 	ld	-2 (ix), #0x00
      0008DE                       1423 00132$:
      0008DE DD 6E FA         [19] 1424 	ld	l, -6 (ix)
      0008E1 DD 66 FB         [19] 1425 	ld	h, -5 (ix)
      0008E4 7E               [ 7] 1426 	ld	a, (hl)
      0008E5 DD 77 FF         [19] 1427 	ld	-1 (ix), a
      0008E8 DD 7E FE         [19] 1428 	ld	a, -2 (ix)
      0008EB DD 96 FF         [19] 1429 	sub	a, -1 (ix)
      0008EE D2rACr09         [10] 1430 	jp	NC, 00116$
                                   1431 ;./lib/entities.c:38: for(i=0;i<sprite->ancho;i++) {
      0008F1 DD 36 FF 00      [19] 1432 	ld	-1 (ix), #0x00
      0008F5                       1433 00129$:
      0008F5 DD 6E F2         [19] 1434 	ld	l, -14 (ix)
      0008F8 DD 66 F3         [19] 1435 	ld	h, -13 (ix)
      0008FB DD 7E FF         [19] 1436 	ld	a,-1 (ix)
      0008FE 96               [ 7] 1437 	sub	a,(hl)
      0008FF D2rA6r09         [10] 1438 	jp	NC, 00133$
                                   1439 ;./lib/entities.c:22: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      000902 DD 6E FC         [19] 1440 	ld	l, -4 (ix)
      000905 DD 66 FD         [19] 1441 	ld	h, -3 (ix)
      000908 7E               [ 7] 1442 	ld	a, (hl)
                                   1443 ;./lib/entities.c:40: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),entidad->y+(j<<4), (j<<2) + (i<<1) );  
      000909 DD 4E FF         [19] 1444 	ld	c, -1 (ix)
      00090C 06 00            [ 7] 1445 	ld	b, #0x00
      00090E DD 5E FE         [19] 1446 	ld	e, -2 (ix)
      000911 16 00            [ 7] 1447 	ld	d, #0x00
                                   1448 ;./lib/entities.c:22: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      000913 DD 77 F4         [19] 1449 	ld	-12 (ix), a
      000916 DD 36 F5 00      [19] 1450 	ld	-11 (ix), #0x00
                                   1451 ;./lib/entities.c:40: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),entidad->y+(j<<4), (j<<2) + (i<<1) );  
      00091A DD 71 F6         [19] 1452 	ld	-10 (ix), c
      00091D DD 70 F7         [19] 1453 	ld	-9 (ix), b
      000920 3E 03            [ 7] 1454 	ld	a, #0x03
      000922                       1455 00263$:
      000922 DD CB F6 26      [23] 1456 	sla	-10 (ix)
      000926 DD CB F7 16      [23] 1457 	rl	-9 (ix)
      00092A 3D               [ 4] 1458 	dec	a
      00092B 20 F5            [12] 1459 	jr	NZ, 00263$
      00092D 6B               [ 4] 1460 	ld	l, e
      00092E 62               [ 4] 1461 	ld	h, d
      00092F 29               [11] 1462 	add	hl, hl
      000930 29               [11] 1463 	add	hl, hl
      000931 CB 21            [ 8] 1464 	sla	c
      000933 CB 10            [ 8] 1465 	rl	b
      000935 EB               [ 4] 1466 	ex	de, hl
      000936 29               [11] 1467 	add	hl, hl
      000937 29               [11] 1468 	add	hl, hl
      000938 29               [11] 1469 	add	hl, hl
      000939 29               [11] 1470 	add	hl, hl
      00093A EB               [ 4] 1471 	ex	de, hl
      00093B DD 73 F8         [19] 1472 	ld	-8 (ix), e
      00093E DD 72 F9         [19] 1473 	ld	-7 (ix), d
      000941 DD 7E F4         [19] 1474 	ld	a, -12 (ix)
      000944 DD 86 F6         [19] 1475 	add	a, -10 (ix)
      000947 5F               [ 4] 1476 	ld	e, a
      000948 3E 00            [ 7] 1477 	ld	a, #0x00
      00094A DD 8E F7         [19] 1478 	adc	a, -9 (ix)
      00094D 09               [11] 1479 	add	hl, bc
                                   1480 ;	spillPairReg hl
                                   1481 ;	spillPairReg hl
      00094E AF               [ 4] 1482 	xor	a, a
      00094F 67               [ 4] 1483 	ld	h,a
      000950 B5               [ 4] 1484 	or	a, l
      000951 DD 77 F6         [19] 1485 	ld	-10 (ix), a
      000954 7B               [ 4] 1486 	ld	a, e
      000955 B4               [ 4] 1487 	or	a, h
      000956 DD 77 F7         [19] 1488 	ld	-9 (ix), a
                                   1489 ;./lib/entities.c:39: if(i==0 && j==0) {
      000959 DD 7E FF         [19] 1490 	ld	a, -1 (ix)
      00095C B7               [ 4] 1491 	or	a, a
      00095D 20 28            [12] 1492 	jr	NZ, 00112$
      00095F DD 7E FE         [19] 1493 	ld	a, -2 (ix)
      000962 B7               [ 4] 1494 	or	a, a
      000963 20 22            [12] 1495 	jr	NZ, 00112$
                                   1496 ;./lib/entities.c:40: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),entidad->y+(j<<4), (j<<2) + (i<<1) );  
      000965 DD 6E F0         [19] 1497 	ld	l, -16 (ix)
      000968 DD 66 F1         [19] 1498 	ld	h, -15 (ix)
      00096B 4E               [ 7] 1499 	ld	c, (hl)
      00096C 06 00            [ 7] 1500 	ld	b, #0x00
      00096E DD 6E F8         [19] 1501 	ld	l, -8 (ix)
                                   1502 ;	spillPairReg hl
                                   1503 ;	spillPairReg hl
      000971 DD 66 F9         [19] 1504 	ld	h, -7 (ix)
                                   1505 ;	spillPairReg hl
                                   1506 ;	spillPairReg hl
      000974 09               [11] 1507 	add	hl, bc
      000975 DD 5E F6         [19] 1508 	ld	e, -10 (ix)
      000978 DD 56 F7         [19] 1509 	ld	d, -9 (ix)
      00097B CDr00r00         [17] 1510 	call	_SMS_addSprite_f
      00097E DD 6E EC         [19] 1511 	ld	l, -20 (ix)
      000981 DD 66 ED         [19] 1512 	ld	h, -19 (ix)
      000984 77               [ 7] 1513 	ld	(hl), a
      000985 18 19            [12] 1514 	jr	00130$
      000987                       1515 00112$:
                                   1516 ;./lib/entities.c:43: SMS_addSprite(entidad->x+(i<<3),entidad->y+(j<<4), (j<<2) + (i<<1) );
      000987 DD 6E EE         [19] 1517 	ld	l, -18 (ix)
      00098A DD 66 EF         [19] 1518 	ld	h, -17 (ix)
      00098D 4E               [ 7] 1519 	ld	c, (hl)
      00098E 06 00            [ 7] 1520 	ld	b, #0x00
      000990 DD 6E F8         [19] 1521 	ld	l, -8 (ix)
                                   1522 ;	spillPairReg hl
                                   1523 ;	spillPairReg hl
      000993 DD 66 F9         [19] 1524 	ld	h, -7 (ix)
                                   1525 ;	spillPairReg hl
                                   1526 ;	spillPairReg hl
      000996 09               [11] 1527 	add	hl, bc
      000997 DD 5E F6         [19] 1528 	ld	e, -10 (ix)
      00099A DD 56 F7         [19] 1529 	ld	d, -9 (ix)
      00099D CDr00r00         [17] 1530 	call	_SMS_addSprite_f
      0009A0                       1531 00130$:
                                   1532 ;./lib/entities.c:38: for(i=0;i<sprite->ancho;i++) {
      0009A0 DD 34 FF         [23] 1533 	inc	-1 (ix)
      0009A3 C3rF5r08         [10] 1534 	jp	00129$
      0009A6                       1535 00133$:
                                   1536 ;./lib/entities.c:37: for(j=0;j<sprite->alto;j++) {
      0009A6 DD 34 FE         [23] 1537 	inc	-2 (ix)
      0009A9 C3rDEr08         [10] 1538 	jp	00132$
      0009AC                       1539 00116$:
                                   1540 ;./lib/entities.c:47: entidad->len = sprite->alto * sprite->ancho + entidad->initSprite;
      0009AC DD 6E F2         [19] 1541 	ld	l, -14 (ix)
      0009AF DD 66 F3         [19] 1542 	ld	h, -13 (ix)
      0009B2 7E               [ 7] 1543 	ld	a, (hl)
      0009B3 DD 77 FE         [19] 1544 	ld	-2 (ix), a
      0009B6 5F               [ 4] 1545 	ld	e, a
      0009B7 DD 66 FF         [19] 1546 	ld	h, -1 (ix)
                                   1547 ;	spillPairReg hl
                                   1548 ;	spillPairReg hl
      0009BA 2E 00            [ 7] 1549 	ld	l, #0x00
      0009BC 55               [ 4] 1550 	ld	d, l
      0009BD 06 08            [ 7] 1551 	ld	b, #0x08
      0009BF                       1552 00265$:
      0009BF 29               [11] 1553 	add	hl, hl
      0009C0 30 01            [12] 1554 	jr	NC, 00266$
      0009C2 19               [11] 1555 	add	hl, de
      0009C3                       1556 00266$:
      0009C3 10 FA            [13] 1557 	djnz	00265$
      0009C5 DD 75 FF         [19] 1558 	ld	-1 (ix), l
      0009C8 DD 6E EC         [19] 1559 	ld	l, -20 (ix)
      0009CB DD 66 ED         [19] 1560 	ld	h, -19 (ix)
      0009CE 7E               [ 7] 1561 	ld	a, (hl)
      0009CF DD 77 FE         [19] 1562 	ld	-2 (ix), a
      0009D2 DD 86 FF         [19] 1563 	add	a, -1 (ix)
      0009D5 DD 77 FF         [19] 1564 	ld	-1 (ix), a
      0009D8 E1               [10] 1565 	pop	hl
      0009D9 E5               [11] 1566 	push	hl
      0009DA DD 7E FF         [19] 1567 	ld	a, -1 (ix)
      0009DD 77               [ 7] 1568 	ld	(hl), a
                                   1569 ;./lib/entities.c:48: entidad->sprite = sprite;
      0009DE DD 7E FC         [19] 1570 	ld	a, -4 (ix)
      0009E1 C6 08            [ 7] 1571 	add	a, #0x08
      0009E3 DD 77 FE         [19] 1572 	ld	-2 (ix), a
      0009E6 DD 7E FD         [19] 1573 	ld	a, -3 (ix)
      0009E9 CE 00            [ 7] 1574 	adc	a, #0x00
      0009EB DD 77 FF         [19] 1575 	ld	-1 (ix), a
      0009EE DD 6E FE         [19] 1576 	ld	l, -2 (ix)
      0009F1 DD 66 FF         [19] 1577 	ld	h, -1 (ix)
      0009F4 DD 7E FA         [19] 1578 	ld	a, -6 (ix)
      0009F7 77               [ 7] 1579 	ld	(hl), a
      0009F8 23               [ 6] 1580 	inc	hl
      0009F9 DD 7E FB         [19] 1581 	ld	a, -5 (ix)
      0009FC 77               [ 7] 1582 	ld	(hl), a
      0009FD                       1583 00134$:
                                   1584 ;./lib/entities.c:51: }
      0009FD DD F9            [10] 1585 	ld	sp, ix
      0009FF DD E1            [14] 1586 	pop	ix
      000A01 C9               [10] 1587 	ret
                                   1588 ;./alex.c:20: unsigned char canUp(){
                                   1589 ;	---------------------------------
                                   1590 ; Function canUp
                                   1591 ; ---------------------------------
      000A02                       1592 _canUp::
                                   1593 ;./alex.c:21: if (alex.x < 2)
      000A02 3Ar03r01         [13] 1594 	ld	a, (#_alex + 0)
      000A05 D6 02            [ 7] 1595 	sub	a, #0x02
      000A07 30 02            [12] 1596 	jr	NC, 00102$
                                   1597 ;./alex.c:22: return 0;
      000A09 AF               [ 4] 1598 	xor	a, a
      000A0A C9               [10] 1599 	ret
      000A0B                       1600 00102$:
                                   1601 ;./alex.c:23: return 1;
      000A0B 3E 01            [ 7] 1602 	ld	a, #0x01
                                   1603 ;./alex.c:24: }
      000A0D C9               [10] 1604 	ret
                                   1605 ;./alex.c:26: unsigned char canDown() {
                                   1606 ;	---------------------------------
                                   1607 ; Function canDown
                                   1608 ; ---------------------------------
      000A0E                       1609 _canDown::
                                   1610 ;./alex.c:27: if (alex.y > 153)
      000A0E 21r04r01         [10] 1611 	ld	hl, #_alex+1
      000A11 4E               [ 7] 1612 	ld	c, (hl)
      000A12 3E 99            [ 7] 1613 	ld	a, #0x99
      000A14 91               [ 4] 1614 	sub	a, c
      000A15 30 02            [12] 1615 	jr	NC, 00102$
                                   1616 ;./alex.c:28: return 0;
      000A17 AF               [ 4] 1617 	xor	a, a
      000A18 C9               [10] 1618 	ret
      000A19                       1619 00102$:
                                   1620 ;./alex.c:29: return 1;
      000A19 3E 01            [ 7] 1621 	ld	a, #0x01
                                   1622 ;./alex.c:30: }
      000A1B C9               [10] 1623 	ret
                                   1624 ;./alex.c:32: unsigned char canLeft() {
                                   1625 ;	---------------------------------
                                   1626 ; Function canLeft
                                   1627 ; ---------------------------------
      000A1C                       1628 _canLeft::
                                   1629 ;./alex.c:33: if (alex.x < 9)
      000A1C 3Ar03r01         [13] 1630 	ld	a, (#_alex + 0)
      000A1F D6 09            [ 7] 1631 	sub	a, #0x09
      000A21 30 02            [12] 1632 	jr	NC, 00102$
                                   1633 ;./alex.c:34: return 0;
      000A23 AF               [ 4] 1634 	xor	a, a
      000A24 C9               [10] 1635 	ret
      000A25                       1636 00102$:
                                   1637 ;./alex.c:35: return 1;
      000A25 3E 01            [ 7] 1638 	ld	a, #0x01
                                   1639 ;./alex.c:36: }
      000A27 C9               [10] 1640 	ret
                                   1641 ;./alex.c:38: unsigned char canRight() {
                                   1642 ;	---------------------------------
                                   1643 ; Function canRight
                                   1644 ; ---------------------------------
      000A28                       1645 _canRight::
                                   1646 ;./alex.c:39: if (alex.x > 238)
      000A28 21r03r01         [10] 1647 	ld	hl, #_alex+0
      000A2B 4E               [ 7] 1648 	ld	c, (hl)
      000A2C 3E EE            [ 7] 1649 	ld	a, #0xee
      000A2E 91               [ 4] 1650 	sub	a, c
      000A2F 30 02            [12] 1651 	jr	NC, 00102$
                                   1652 ;./alex.c:40: return 0;
      000A31 AF               [ 4] 1653 	xor	a, a
      000A32 C9               [10] 1654 	ret
      000A33                       1655 00102$:
                                   1656 ;./alex.c:41: return 1;
      000A33 3E 01            [ 7] 1657 	ld	a, #0x01
                                   1658 ;./alex.c:42: }
      000A35 C9               [10] 1659 	ret
                                   1660 ;./alex.c:44: void moveAlexSuelo(int keys) {
                                   1661 ;	---------------------------------
                                   1662 ; Function moveAlexSuelo
                                   1663 ; ---------------------------------
      000A36                       1664 _moveAlexSuelo::
      000A36 DD E5            [15] 1665 	push	ix
      000A38 DD 21 00 00      [14] 1666 	ld	ix,#0
      000A3C DD 39            [15] 1667 	add	ix,sp
      000A3E F5               [11] 1668 	push	af
      000A3F F5               [11] 1669 	push	af
      000A40 F5               [11] 1670 	push	af
      000A41 DD 75 FE         [19] 1671 	ld	-2 (ix), l
      000A44 DD 74 FF         [19] 1672 	ld	-1 (ix), h
                                   1673 ;./alex.c:46: if (keys & PORT_A_KEY_LEFT)
      000A47 DD 7E FE         [19] 1674 	ld	a, -2 (ix)
      000A4A E6 04            [ 7] 1675 	and	a, #0x04
      000A4C DD 77 FA         [19] 1676 	ld	-6 (ix), a
      000A4F DD 36 FB 00      [19] 1677 	ld	-5 (ix), #0x00
                                   1678 ;./alex.c:48: if (keys & PORT_A_KEY_RIGHT)
      000A53 DD 7E FE         [19] 1679 	ld	a, -2 (ix)
      000A56 E6 08            [ 7] 1680 	and	a, #0x08
      000A58 DD 77 FC         [19] 1681 	ld	-4 (ix), a
      000A5B DD 36 FD 00      [19] 1682 	ld	-3 (ix), #0x00
                                   1683 ;./alex.c:45: if ((keys & PORT_A_KEY_DOWN)){
      000A5F DD CB FE 4E      [20] 1684 	bit	1, -2 (ix)
      000A63 28 33            [12] 1685 	jr	Z, 00109$
                                   1686 ;./alex.c:46: if (keys & PORT_A_KEY_LEFT)
      000A65 AF               [ 4] 1687 	xor	a, a
      000A66 DD B6 FA         [19] 1688 	or	a, -6 (ix)
      000A69 28 05            [12] 1689 	jr	Z, 00102$
                                   1690 ;./alex.c:47: alex.oriented = 1;
      000A6B 21r07r01         [10] 1691 	ld	hl, #_alex+4
      000A6E 36 01            [10] 1692 	ld	(hl), #0x01
      000A70                       1693 00102$:
                                   1694 ;./alex.c:48: if (keys & PORT_A_KEY_RIGHT)
      000A70 AF               [ 4] 1695 	xor	a, a
      000A71 DD B6 FC         [19] 1696 	or	a, -4 (ix)
      000A74 28 05            [12] 1697 	jr	Z, 00104$
                                   1698 ;./alex.c:49: alex.oriented = 0;
      000A76 21r07r01         [10] 1699 	ld	hl, #_alex+4
      000A79 36 00            [10] 1700 	ld	(hl), #0x00
      000A7B                       1701 00104$:
                                   1702 ;./alex.c:50: if (!alex.oriented)
      000A7B 3Ar07r01         [13] 1703 	ld	a,(#_alex + 4)
                                   1704 ;./alex.c:51: alex.frame = 7;
                                   1705 ;./alex.c:50: if (!alex.oriented)
      000A7E DD 77 FD         [19] 1706 	ld	-3 (ix), a
      000A81 B7               [ 4] 1707 	or	a, a
      000A82 20 07            [12] 1708 	jr	NZ, 00106$
                                   1709 ;./alex.c:51: alex.frame = 7;
      000A84 21r05r01         [10] 1710 	ld	hl, #(_alex + 2)
      000A87 36 07            [10] 1711 	ld	(hl), #0x07
      000A89 18 05            [12] 1712 	jr	00107$
      000A8B                       1713 00106$:
                                   1714 ;./alex.c:53: alex.frame = 15;
      000A8B 21r05r01         [10] 1715 	ld	hl, #(_alex + 2)
      000A8E 36 0F            [10] 1716 	ld	(hl), #0x0f
      000A90                       1717 00107$:
                                   1718 ;./alex.c:54: alex.lastChangeFrame = 15;
      000A90 21r06r01         [10] 1719 	ld	hl, #_alex + 3
      000A93 36 0F            [10] 1720 	ld	(hl), #0x0f
                                   1721 ;./alex.c:55: return; // not move
      000A95 C3rF9r0B         [10] 1722 	jp	00146$
      000A98                       1723 00109$:
                                   1724 ;./alex.c:58: if (keys & PORT_A_KEY_2) {
      000A98 DD CB FE 6E      [20] 1725 	bit	5, -2 (ix)
      000A9C 28 2A            [12] 1726 	jr	Z, 00116$
                                   1727 ;./alex.c:59: if (alex.y > 100)
      000A9E 01r04r01         [10] 1728 	ld	bc, #_alex+1
      000AA1 0A               [ 7] 1729 	ld	a, (bc)
      000AA2 5F               [ 4] 1730 	ld	e, a
      000AA3 3E 64            [ 7] 1731 	ld	a, #0x64
      000AA5 93               [ 4] 1732 	sub	a, e
      000AA6 30 09            [12] 1733 	jr	NC, 00111$
                                   1734 ;./alex.c:60: maxSalto = alex.y - 100;
      000AA8 7B               [ 4] 1735 	ld	a, e
      000AA9 21r02r01         [10] 1736 	ld	hl, #_maxSalto
      000AAC C6 9C            [ 7] 1737 	add	a, #0x9c
      000AAE 77               [ 7] 1738 	ld	(hl), a
      000AAF 18 05            [12] 1739 	jr	00112$
      000AB1                       1740 00111$:
                                   1741 ;./alex.c:62: maxSalto = 0;
      000AB1 21r02r01         [10] 1742 	ld	hl, #_maxSalto
      000AB4 36 00            [10] 1743 	ld	(hl), #0x00
      000AB6                       1744 00112$:
                                   1745 ;./alex.c:63: alex.y--;
      000AB6 0A               [ 7] 1746 	ld	a, (bc)
      000AB7 3D               [ 4] 1747 	dec	a
      000AB8 02               [ 7] 1748 	ld	(bc), a
                                   1749 ;./alex.c:64: alex.y--;
      000AB9 3D               [ 4] 1750 	dec	a
      000ABA 02               [ 7] 1751 	ld	(bc), a
                                   1752 ;./alex.c:65: PSGSFXPlay(salto_psg, SFX_CHANNEL1);
      000ABB 3E 08            [ 7] 1753 	ld	a, #0x08
      000ABD F5               [11] 1754 	push	af
      000ABE 33               [ 6] 1755 	inc	sp
      000ABF 21r00r00         [10] 1756 	ld	hl, #_salto_psg
      000AC2 CDr00r00         [17] 1757 	call	_PSGSFXPlay
                                   1758 ;./alex.c:66: return;
      000AC5 C3rF9r0B         [10] 1759 	jp	00146$
      000AC8                       1760 00116$:
                                   1761 ;./alex.c:68: else if (keys & PORT_A_KEY_1) {
      000AC8 DD CB FE 66      [20] 1762 	bit	4, -2 (ix)
      000ACC 28 0A            [12] 1763 	jr	Z, 00117$
                                   1764 ;./alex.c:69: alex.state = PUÑETAZO_SUELO;
      000ACE 21r08r01         [10] 1765 	ld	hl, #_alex + 5
      000AD1 36 20            [10] 1766 	ld	(hl), #0x20
                                   1767 ;./alex.c:70: alex.lastChangeFrame = 15;
      000AD3 21r06r01         [10] 1768 	ld	hl, #_alex + 3
      000AD6 36 0F            [10] 1769 	ld	(hl), #0x0f
      000AD8                       1770 00117$:
                                   1771 ;./alex.c:72: if(alex.state != PUÑETAZO_SUELO) {
      000AD8 21r08r01         [10] 1772 	ld	hl, #(_alex + 5)
      000ADB 5E               [ 7] 1773 	ld	e, (hl)
                                   1774 ;./alex.c:77: alex.oriented = 1;
                                   1775 ;./alex.c:78: alex.lastChangeFrame++;
      000ADC 01r06r01         [10] 1776 	ld	bc, #_alex + 3
                                   1777 ;./alex.c:81: alex.frame++;
                                   1778 ;./alex.c:72: if(alex.state != PUÑETAZO_SUELO) {
      000ADF 7B               [ 4] 1779 	ld	a, e
      000AE0 D6 20            [ 7] 1780 	sub	a, #0x20
      000AE2 CAr79r0B         [10] 1781 	jp	Z,00144$
                                   1782 ;./alex.c:73: SpriteTableY2[4] = 234;
      000AE5 2Ar40r03         [16] 1783 	ld	hl, (_SpriteTableY2)
      000AE8 11 04 00         [10] 1784 	ld	de, #0x0004
      000AEB 19               [11] 1785 	add	hl, de
      000AEC 36 EA            [10] 1786 	ld	(hl), #0xea
                                   1787 ;./alex.c:74: if ((keys & PORT_A_KEY_LEFT) && alex.x > 8 )
      000AEE AF               [ 4] 1788 	xor	a, a
      000AEF DD B6 FA         [19] 1789 	or	a, -6 (ix)
      000AF2 28 3A            [12] 1790 	jr	Z, 00135$
      000AF4 21r03r01         [10] 1791 	ld	hl, #_alex
      000AF7 5E               [ 7] 1792 	ld	e, (hl)
      000AF8 3E 08            [ 7] 1793 	ld	a, #0x08
      000AFA 93               [ 4] 1794 	sub	a, e
      000AFB 30 31            [12] 1795 	jr	NC, 00135$
                                   1796 ;./alex.c:76: alex.x -= 1;
      000AFD 1D               [ 4] 1797 	dec	e
      000AFE 21r03r01         [10] 1798 	ld	hl, #_alex
      000B01 73               [ 7] 1799 	ld	(hl), e
                                   1800 ;./alex.c:77: alex.oriented = 1;
      000B02 21r07r01         [10] 1801 	ld	hl, #(_alex + 4)
      000B05 36 01            [10] 1802 	ld	(hl), #0x01
                                   1803 ;./alex.c:78: alex.lastChangeFrame++;
      000B07 0A               [ 7] 1804 	ld	a, (bc)
      000B08 3C               [ 4] 1805 	inc	a
      000B09 02               [ 7] 1806 	ld	(bc), a
                                   1807 ;./alex.c:79: if (alex.lastChangeFrame == 11) {
      000B0A D6 0B            [ 7] 1808 	sub	a, #0x0b
      000B0C 20 09            [12] 1809 	jr	NZ, 00119$
                                   1810 ;./alex.c:80: alex.lastChangeFrame = 0;
      000B0E AF               [ 4] 1811 	xor	a, a
      000B0F 02               [ 7] 1812 	ld	(bc), a
                                   1813 ;./alex.c:81: alex.frame++;
      000B10 3Ar05r01         [13] 1814 	ld	a, (#(_alex + 2) + 0)
      000B13 3C               [ 4] 1815 	inc	a
      000B14 32r05r01         [13] 1816 	ld	(#(_alex + 2)),a
      000B17                       1817 00119$:
                                   1818 ;./alex.c:83: if (alex.frame > 11 || alex.frame < 8)
      000B17 21r05r01         [10] 1819 	ld	hl, #(_alex + 2)
      000B1A 4E               [ 7] 1820 	ld	c, (hl)
      000B1B 3E 0B            [ 7] 1821 	ld	a, #0x0b
      000B1D 91               [ 4] 1822 	sub	a, c
      000B1E 38 06            [12] 1823 	jr	C, 00120$
      000B20 79               [ 4] 1824 	ld	a, c
      000B21 D6 08            [ 7] 1825 	sub	a, #0x08
      000B23 D2rF9r0B         [10] 1826 	jp	NC, 00146$
      000B26                       1827 00120$:
                                   1828 ;./alex.c:84: alex.frame = 8;
      000B26 21r05r01         [10] 1829 	ld	hl, #(_alex + 2)
      000B29 36 08            [10] 1830 	ld	(hl), #0x08
      000B2B C3rF9r0B         [10] 1831 	jp	00146$
      000B2E                       1832 00135$:
                                   1833 ;./alex.c:86: else if ((keys & PORT_A_KEY_RIGHT) && alex.x <240)
      000B2E AF               [ 4] 1834 	xor	a, a
      000B2F DD B6 FC         [19] 1835 	or	a, -4 (ix)
      000B32 28 32            [12] 1836 	jr	Z, 00131$
      000B34 3Ar03r01         [13] 1837 	ld	a, (#_alex + 0)
      000B37 FE F0            [ 7] 1838 	cp	a, #0xf0
      000B39 30 2B            [12] 1839 	jr	NC, 00131$
                                   1840 ;./alex.c:88: alex.x += 1;
      000B3B 3C               [ 4] 1841 	inc	a
      000B3C 32r03r01         [13] 1842 	ld	(#_alex),a
                                   1843 ;./alex.c:89: alex.oriented = 0;
      000B3F 21r07r01         [10] 1844 	ld	hl, #(_alex + 4)
      000B42 36 00            [10] 1845 	ld	(hl), #0x00
                                   1846 ;./alex.c:90: alex.lastChangeFrame++;
      000B44 0A               [ 7] 1847 	ld	a, (bc)
      000B45 3C               [ 4] 1848 	inc	a
      000B46 02               [ 7] 1849 	ld	(bc), a
                                   1850 ;./alex.c:91: if (alex.lastChangeFrame == 11) {
      000B47 D6 0B            [ 7] 1851 	sub	a, #0x0b
      000B49 20 09            [12] 1852 	jr	NZ, 00124$
                                   1853 ;./alex.c:92: alex.lastChangeFrame = 0;
      000B4B AF               [ 4] 1854 	xor	a, a
      000B4C 02               [ 7] 1855 	ld	(bc), a
                                   1856 ;./alex.c:93: alex.frame++;
      000B4D 3Ar05r01         [13] 1857 	ld	a, (#(_alex + 2) + 0)
      000B50 3C               [ 4] 1858 	inc	a
      000B51 32r05r01         [13] 1859 	ld	(#(_alex + 2)),a
      000B54                       1860 00124$:
                                   1861 ;./alex.c:95: if (alex.frame > 3 || alex.frame < 0)
      000B54 21r05r01         [10] 1862 	ld	hl, #(_alex + 2)
      000B57 4E               [ 7] 1863 	ld	c, (hl)
      000B58 3E 03            [ 7] 1864 	ld	a, #0x03
      000B5A 91               [ 4] 1865 	sub	a, c
      000B5B D2rF9r0B         [10] 1866 	jp	NC, 00146$
                                   1867 ;./alex.c:96: alex.frame = 0;
      000B5E 21r05r01         [10] 1868 	ld	hl, #(_alex + 2)
      000B61 36 00            [10] 1869 	ld	(hl), #0x00
      000B63 C3rF9r0B         [10] 1870 	jp	00146$
      000B66                       1871 00131$:
                                   1872 ;./alex.c:100: alex.frame = 4;
      000B66 21r05r01         [10] 1873 	ld	hl, #(_alex + 2)
      000B69 36 04            [10] 1874 	ld	(hl), #0x04
                                   1875 ;./alex.c:101: if (alex.oriented)
      000B6B 3Ar07r01         [13] 1876 	ld	a, (#(_alex + 4) + 0)
      000B6E B7               [ 4] 1877 	or	a, a
      000B6F 28 02            [12] 1878 	jr	Z, 00129$
                                   1879 ;./alex.c:102: alex.frame = 12;
      000B71 36 0C            [10] 1880 	ld	(hl), #0x0c
      000B73                       1881 00129$:
                                   1882 ;./alex.c:103: alex.lastChangeFrame = 10;
      000B73 3E 0A            [ 7] 1883 	ld	a, #0x0a
      000B75 02               [ 7] 1884 	ld	(bc), a
      000B76 C3rF9r0B         [10] 1885 	jp	00146$
      000B79                       1886 00144$:
                                   1887 ;./alex.c:107: if (!alex.oriented) {
                                   1888 ;./alex.c:112: SpriteTableY2[4] = alex.y + 9;
                                   1889 ;./alex.c:107: if (!alex.oriented) {
      000B79 3Ar07r01         [13] 1890 	ld	a, (#(_alex + 4) + 0)
      000B7C B7               [ 4] 1891 	or	a, a
      000B7D 20 34            [12] 1892 	jr	NZ, 00139$
                                   1893 ;./alex.c:108: alex.frame = 5;
      000B7F 21r05r01         [10] 1894 	ld	hl, #(_alex + 2)
      000B82 36 05            [10] 1895 	ld	(hl), #0x05
                                   1896 ;./alex.c:110: SpriteTableXN2[8] = alex.x + 16;
      000B84 3Ar42r03         [13] 1897 	ld	a, (_SpriteTableXN2+0)
      000B87 C6 08            [ 7] 1898 	add	a, #0x08
      000B89 5F               [ 4] 1899 	ld	e, a
      000B8A 3Ar43r03         [13] 1900 	ld	a, (_SpriteTableXN2+1)
      000B8D CE 00            [ 7] 1901 	adc	a, #0x00
      000B8F 57               [ 4] 1902 	ld	d, a
      000B90 3Ar03r01         [13] 1903 	ld	a, (#_alex + 0)
      000B93 C6 10            [ 7] 1904 	add	a, #0x10
      000B95 12               [ 7] 1905 	ld	(de), a
                                   1906 ;./alex.c:111: SpriteTableXN2[9] = 9;
      000B96 2Ar42r03         [16] 1907 	ld	hl, (_SpriteTableXN2)
      000B99 11 09 00         [10] 1908 	ld	de, #0x0009
      000B9C 19               [11] 1909 	add	hl, de
      000B9D 36 09            [10] 1910 	ld	(hl), #0x09
                                   1911 ;./alex.c:112: SpriteTableY2[4] = alex.y + 9;
      000B9F 3Ar40r03         [13] 1912 	ld	a, (_SpriteTableY2+0)
      000BA2 C6 04            [ 7] 1913 	add	a, #0x04
      000BA4 5F               [ 4] 1914 	ld	e, a
      000BA5 3Ar41r03         [13] 1915 	ld	a, (_SpriteTableY2+1)
      000BA8 CE 00            [ 7] 1916 	adc	a, #0x00
      000BAA 57               [ 4] 1917 	ld	d, a
      000BAB 3Ar04r01         [13] 1918 	ld	a, (#(_alex + 1) + 0)
      000BAE C6 09            [ 7] 1919 	add	a, #0x09
      000BB0 12               [ 7] 1920 	ld	(de), a
      000BB1 18 32            [12] 1921 	jr	00140$
      000BB3                       1922 00139$:
                                   1923 ;./alex.c:115: alex.frame = 13;
      000BB3 21r05r01         [10] 1924 	ld	hl, #(_alex + 2)
      000BB6 36 0D            [10] 1925 	ld	(hl), #0x0d
                                   1926 ;./alex.c:117: SpriteTableXN2[8] = alex.x - 8;
      000BB8 3Ar42r03         [13] 1927 	ld	a, (_SpriteTableXN2+0)
      000BBB C6 08            [ 7] 1928 	add	a, #0x08
      000BBD 5F               [ 4] 1929 	ld	e, a
      000BBE 3Ar43r03         [13] 1930 	ld	a, (_SpriteTableXN2+1)
      000BC1 CE 00            [ 7] 1931 	adc	a, #0x00
      000BC3 57               [ 4] 1932 	ld	d, a
      000BC4 3Ar03r01         [13] 1933 	ld	a, (#_alex + 0)
      000BC7 C6 F8            [ 7] 1934 	add	a, #0xf8
      000BC9 12               [ 7] 1935 	ld	(de), a
                                   1936 ;./alex.c:118: SpriteTableXN2[9] = 11;
      000BCA 2Ar42r03         [16] 1937 	ld	hl, (_SpriteTableXN2)
      000BCD 11 09 00         [10] 1938 	ld	de, #0x0009
      000BD0 19               [11] 1939 	add	hl, de
      000BD1 36 0B            [10] 1940 	ld	(hl), #0x0b
                                   1941 ;./alex.c:119: SpriteTableY2[4] = alex.y + 9;
      000BD3 3Ar40r03         [13] 1942 	ld	a, (_SpriteTableY2+0)
      000BD6 C6 04            [ 7] 1943 	add	a, #0x04
      000BD8 5F               [ 4] 1944 	ld	e, a
      000BD9 3Ar41r03         [13] 1945 	ld	a, (_SpriteTableY2+1)
      000BDC CE 00            [ 7] 1946 	adc	a, #0x00
      000BDE 57               [ 4] 1947 	ld	d, a
      000BDF 3Ar04r01         [13] 1948 	ld	a, (#(_alex + 1) + 0)
      000BE2 C6 09            [ 7] 1949 	add	a, #0x09
      000BE4 12               [ 7] 1950 	ld	(de), a
      000BE5                       1951 00140$:
                                   1952 ;./alex.c:121: alex.lastChangeFrame--;
      000BE5 0A               [ 7] 1953 	ld	a, (bc)
      000BE6 3D               [ 4] 1954 	dec	a
      000BE7 02               [ 7] 1955 	ld	(bc), a
                                   1956 ;./alex.c:122: if(!alex.lastChangeFrame) {
      000BE8 B7               [ 4] 1957 	or	a, a
      000BE9 20 0E            [12] 1958 	jr	NZ, 00146$
                                   1959 ;./alex.c:123: alex.state = 0;
      000BEB 21r08r01         [10] 1960 	ld	hl, #(_alex + 5)
      000BEE 36 00            [10] 1961 	ld	(hl), #0x00
                                   1962 ;./alex.c:124: SpriteTableY2[4] = 234;
      000BF0 2Ar40r03         [16] 1963 	ld	hl, (_SpriteTableY2)
      000BF3 11 04 00         [10] 1964 	ld	de, #0x0004
      000BF6 19               [11] 1965 	add	hl, de
      000BF7 36 EA            [10] 1966 	ld	(hl), #0xea
      000BF9                       1967 00146$:
                                   1968 ;./alex.c:127: }
      000BF9 DD F9            [10] 1969 	ld	sp, ix
      000BFB DD E1            [14] 1970 	pop	ix
      000BFD C9               [10] 1971 	ret
                                   1972 ;./alex.c:129: void moveAlexAire(int keys, unsigned char puedeSubir, unsigned char puedeDerecha, unsigned char puedeIzquieda) {
                                   1973 ;	---------------------------------
                                   1974 ; Function moveAlexAire
                                   1975 ; ---------------------------------
      000BFE                       1976 _moveAlexAire::
      000BFE DD E5            [15] 1977 	push	ix
      000C00 DD 21 00 00      [14] 1978 	ld	ix,#0
      000C04 DD 39            [15] 1979 	add	ix,sp
      000C06 F5               [11] 1980 	push	af
      000C07 3B               [ 6] 1981 	dec	sp
      000C08 DD 75 FE         [19] 1982 	ld	-2 (ix), l
      000C0B DD 74 FF         [19] 1983 	ld	-1 (ix), h
                                   1984 ;./alex.c:130: if (alex.y > maxSalto) {
      000C0E 21r04r01         [10] 1985 	ld	hl, #(_alex + 1)
      000C11 46               [ 7] 1986 	ld	b, (hl)
                                   1987 ;./alex.c:131: alex.y -= 2;
      000C12 48               [ 4] 1988 	ld	c, b
                                   1989 ;./alex.c:130: if (alex.y > maxSalto) {
      000C13 3Ar02r01         [13] 1990 	ld	a, (_maxSalto+0)
      000C16 90               [ 4] 1991 	sub	a, b
      000C17 30 08            [12] 1992 	jr	NC, 00102$
                                   1993 ;./alex.c:131: alex.y -= 2;
      000C19 0D               [ 4] 1994 	dec	c
      000C1A 0D               [ 4] 1995 	dec	c
      000C1B 21r04r01         [10] 1996 	ld	hl, #(_alex + 1)
      000C1E 71               [ 7] 1997 	ld	(hl), c
      000C1F 18 0E            [12] 1998 	jr	00103$
      000C21                       1999 00102$:
                                   2000 ;./alex.c:134: alex.y += 2; // bajando
      000C21 0C               [ 4] 2001 	inc	c
      000C22 0C               [ 4] 2002 	inc	c
      000C23 21r04r01         [10] 2003 	ld	hl, #(_alex + 1)
      000C26 71               [ 7] 2004 	ld	(hl), c
                                   2005 ;./alex.c:135: maxSalto = 255;
      000C27 FD 21r02r01      [14] 2006 	ld	iy, #_maxSalto
      000C2B FD 36 00 FF      [19] 2007 	ld	0 (iy), #0xff
      000C2F                       2008 00103$:
                                   2009 ;./alex.c:138: if (alex.state != PUÑETAZO_SALTANDO)
                                   2010 ;./alex.c:139: alex.oriented = 1;
                                   2011 ;./alex.c:137: if (keys & PORT_A_KEY_LEFT) {
      000C2F DD CB FE 56      [20] 2012 	bit	2, -2 (ix)
      000C33 28 1A            [12] 2013 	jr	Z, 00109$
                                   2014 ;./alex.c:138: if (alex.state != PUÑETAZO_SALTANDO)
      000C35 3Ar08r01         [13] 2015 	ld	a, (#(_alex + 5) + 0)
      000C38 D6 10            [ 7] 2016 	sub	a, #0x10
      000C3A 28 05            [12] 2017 	jr	Z, 00105$
                                   2018 ;./alex.c:139: alex.oriented = 1;
      000C3C 21r07r01         [10] 2019 	ld	hl, #(_alex + 4)
      000C3F 36 01            [10] 2020 	ld	(hl), #0x01
      000C41                       2021 00105$:
                                   2022 ;./alex.c:140: if (puedeIzquieda)
      000C41 DD 7E 06         [19] 2023 	ld	a, 6 (ix)
      000C44 B7               [ 4] 2024 	or	a, a
      000C45 28 08            [12] 2025 	jr	Z, 00109$
                                   2026 ;./alex.c:141: alex.x -= 2;
      000C47 3Ar03r01         [13] 2027 	ld	a, (#_alex + 0)
      000C4A 3D               [ 4] 2028 	dec	a
      000C4B 3D               [ 4] 2029 	dec	a
      000C4C 32r03r01         [13] 2030 	ld	(#_alex),a
      000C4F                       2031 00109$:
                                   2032 ;./alex.c:143: if (keys & PORT_A_KEY_RIGHT) {
      000C4F DD CB FE 5E      [20] 2033 	bit	3, -2 (ix)
      000C53 28 1A            [12] 2034 	jr	Z, 00115$
                                   2035 ;./alex.c:144: if (alex.state != PUÑETAZO_SALTANDO)
      000C55 3Ar08r01         [13] 2036 	ld	a, (#(_alex + 5) + 0)
      000C58 D6 10            [ 7] 2037 	sub	a, #0x10
      000C5A 28 05            [12] 2038 	jr	Z, 00111$
                                   2039 ;./alex.c:145: alex.oriented = 0;
      000C5C 21r07r01         [10] 2040 	ld	hl, #(_alex + 4)
      000C5F 36 00            [10] 2041 	ld	(hl), #0x00
      000C61                       2042 00111$:
                                   2043 ;./alex.c:146: if (puedeDerecha)
      000C61 DD 7E 05         [19] 2044 	ld	a, 5 (ix)
      000C64 B7               [ 4] 2045 	or	a, a
      000C65 28 08            [12] 2046 	jr	Z, 00115$
                                   2047 ;./alex.c:147: alex.x += 2;
      000C67 3Ar03r01         [13] 2048 	ld	a, (#_alex + 0)
      000C6A C6 02            [ 7] 2049 	add	a, #0x02
      000C6C 32r03r01         [13] 2050 	ld	(#_alex),a
      000C6F                       2051 00115$:
                                   2052 ;./alex.c:149: if (alex.state == PUÑETAZO_SALTANDO) {
      000C6F 21r08r01         [10] 2053 	ld	hl, #(_alex + 5)
      000C72 4E               [ 7] 2054 	ld	c, (hl)
                                   2055 ;./alex.c:150: alex.lastChangeFrame--;
                                   2056 ;./alex.c:156: alex.frame = 5;
                                   2057 ;./alex.c:149: if (alex.state == PUÑETAZO_SALTANDO) {
      000C73 79               [ 4] 2058 	ld	a, c
      000C74 D6 10            [ 7] 2059 	sub	a, #0x10
      000C76 C2r02r0D         [10] 2060 	jp	NZ,00127$
                                   2061 ;./alex.c:150: alex.lastChangeFrame--;
      000C79 21r06r01         [10] 2062 	ld	hl, #(_alex + 3)
      000C7C 4E               [ 7] 2063 	ld	c, (hl)
      000C7D 0D               [ 4] 2064 	dec	c
      000C7E 21r06r01         [10] 2065 	ld	hl, #(_alex + 3)
                                   2066 ;./alex.c:151: if  (!alex.lastChangeFrame) {
      000C81 79               [ 4] 2067 	ld	a,c
      000C82 77               [ 7] 2068 	ld	(hl),a
      000C83 B7               [ 4] 2069 	or	a, a
      000C84 20 0E            [12] 2070 	jr	NZ, 00117$
                                   2071 ;./alex.c:152: alex.state = 0;
      000C86 21r08r01         [10] 2072 	ld	hl, #(_alex + 5)
      000C89 36 00            [10] 2073 	ld	(hl), #0x00
                                   2074 ;./alex.c:153: SpriteTableY2[4] = 234;
      000C8B 2Ar40r03         [16] 2075 	ld	hl, (_SpriteTableY2)
      000C8E 11 04 00         [10] 2076 	ld	de, #0x0004
      000C91 19               [11] 2077 	add	hl, de
      000C92 36 EA            [10] 2078 	ld	(hl), #0xea
      000C94                       2079 00117$:
                                   2080 ;./alex.c:155: if (!alex.oriented) {
      000C94 3Ar07r01         [13] 2081 	ld	a, (#(_alex + 4) + 0)
      000C97 B7               [ 4] 2082 	or	a, a
      000C98 20 34            [12] 2083 	jr	NZ, 00119$
                                   2084 ;./alex.c:156: alex.frame = 5;
      000C9A 21r05r01         [10] 2085 	ld	hl, #(_alex + 2)
      000C9D 36 05            [10] 2086 	ld	(hl), #0x05
                                   2087 ;./alex.c:158: SpriteTableXN2[8] = alex.x + 16;
      000C9F 3Ar42r03         [13] 2088 	ld	a, (_SpriteTableXN2+0)
      000CA2 C6 08            [ 7] 2089 	add	a, #0x08
      000CA4 4F               [ 4] 2090 	ld	c, a
      000CA5 3Ar43r03         [13] 2091 	ld	a, (_SpriteTableXN2+1)
      000CA8 CE 00            [ 7] 2092 	adc	a, #0x00
      000CAA 47               [ 4] 2093 	ld	b, a
      000CAB 3Ar03r01         [13] 2094 	ld	a, (#_alex + 0)
      000CAE C6 10            [ 7] 2095 	add	a, #0x10
      000CB0 02               [ 7] 2096 	ld	(bc), a
                                   2097 ;./alex.c:159: SpriteTableXN2[9] = 9;
      000CB1 2Ar42r03         [16] 2098 	ld	hl, (_SpriteTableXN2)
      000CB4 11 09 00         [10] 2099 	ld	de, #0x0009
      000CB7 19               [11] 2100 	add	hl, de
      000CB8 36 09            [10] 2101 	ld	(hl), #0x09
                                   2102 ;./alex.c:160: SpriteTableY2[4] = alex.y + 9;
      000CBA 3Ar40r03         [13] 2103 	ld	a, (_SpriteTableY2+0)
      000CBD C6 04            [ 7] 2104 	add	a, #0x04
      000CBF 4F               [ 4] 2105 	ld	c, a
      000CC0 3Ar41r03         [13] 2106 	ld	a, (_SpriteTableY2+1)
      000CC3 CE 00            [ 7] 2107 	adc	a, #0x00
      000CC5 47               [ 4] 2108 	ld	b, a
      000CC6 3Ar04r01         [13] 2109 	ld	a, (#(_alex + 1) + 0)
      000CC9 C6 09            [ 7] 2110 	add	a, #0x09
      000CCB 02               [ 7] 2111 	ld	(bc), a
      000CCC 18 62            [12] 2112 	jr	00129$
      000CCE                       2113 00119$:
                                   2114 ;./alex.c:163: alex.frame = 13;
      000CCE 21r05r01         [10] 2115 	ld	hl, #(_alex + 2)
      000CD1 36 0D            [10] 2116 	ld	(hl), #0x0d
                                   2117 ;./alex.c:165: SpriteTableXN2[8] = alex.x - 8;
      000CD3 3Ar42r03         [13] 2118 	ld	a, (_SpriteTableXN2+0)
      000CD6 C6 08            [ 7] 2119 	add	a, #0x08
      000CD8 4F               [ 4] 2120 	ld	c, a
      000CD9 3Ar43r03         [13] 2121 	ld	a, (_SpriteTableXN2+1)
      000CDC CE 00            [ 7] 2122 	adc	a, #0x00
      000CDE 47               [ 4] 2123 	ld	b, a
      000CDF 3Ar03r01         [13] 2124 	ld	a, (#_alex + 0)
      000CE2 C6 F8            [ 7] 2125 	add	a, #0xf8
      000CE4 02               [ 7] 2126 	ld	(bc), a
                                   2127 ;./alex.c:166: SpriteTableXN2[9] = 11;
      000CE5 2Ar42r03         [16] 2128 	ld	hl, (_SpriteTableXN2)
      000CE8 11 09 00         [10] 2129 	ld	de, #0x0009
      000CEB 19               [11] 2130 	add	hl, de
      000CEC 36 0B            [10] 2131 	ld	(hl), #0x0b
                                   2132 ;./alex.c:167: SpriteTableY2[4] = alex.y + 9;
      000CEE 3Ar40r03         [13] 2133 	ld	a, (_SpriteTableY2+0)
      000CF1 C6 04            [ 7] 2134 	add	a, #0x04
      000CF3 4F               [ 4] 2135 	ld	c, a
      000CF4 3Ar41r03         [13] 2136 	ld	a, (_SpriteTableY2+1)
      000CF7 CE 00            [ 7] 2137 	adc	a, #0x00
      000CF9 47               [ 4] 2138 	ld	b, a
      000CFA 3Ar04r01         [13] 2139 	ld	a, (#(_alex + 1) + 0)
      000CFD C6 09            [ 7] 2140 	add	a, #0x09
      000CFF 02               [ 7] 2141 	ld	(bc), a
      000D00 18 2E            [12] 2142 	jr	00129$
      000D02                       2143 00127$:
                                   2144 ;./alex.c:171: SpriteTableY2[4] = 234;
      000D02 2Ar40r03         [16] 2145 	ld	hl, (_SpriteTableY2)
      000D05 11 04 00         [10] 2146 	ld	de, #0x0004
      000D08 19               [11] 2147 	add	hl, de
      000D09 36 EA            [10] 2148 	ld	(hl), #0xea
                                   2149 ;./alex.c:172: if (!alex.oriented)
      000D0B 3Ar07r01         [13] 2150 	ld	a, (#(_alex + 4) + 0)
      000D0E DD 77 FD         [19] 2151 	ld	-3 (ix), a
      000D11 B7               [ 4] 2152 	or	a, a
      000D12 20 07            [12] 2153 	jr	NZ, 00122$
                                   2154 ;./alex.c:173: alex.frame = 6;
      000D14 21r05r01         [10] 2155 	ld	hl, #(_alex + 2)
      000D17 36 06            [10] 2156 	ld	(hl), #0x06
      000D19 18 05            [12] 2157 	jr	00123$
      000D1B                       2158 00122$:
                                   2159 ;./alex.c:175: alex.frame = 14;
      000D1B 21r05r01         [10] 2160 	ld	hl, #(_alex + 2)
      000D1E 36 0E            [10] 2161 	ld	(hl), #0x0e
      000D20                       2162 00123$:
                                   2163 ;./alex.c:176: if (keys & PORT_A_KEY_1) {
      000D20 DD CB FE 66      [20] 2164 	bit	4, -2 (ix)
      000D24 28 0A            [12] 2165 	jr	Z, 00129$
                                   2166 ;./alex.c:177: alex.state = PUÑETAZO_SALTANDO;
      000D26 21r08r01         [10] 2167 	ld	hl, #(_alex + 5)
      000D29 36 10            [10] 2168 	ld	(hl), #0x10
                                   2169 ;./alex.c:178: alex.lastChangeFrame = 20;
      000D2B 21r06r01         [10] 2170 	ld	hl, #(_alex + 3)
      000D2E 36 14            [10] 2171 	ld	(hl), #0x14
      000D30                       2172 00129$:
                                   2173 ;./alex.c:182: }
      000D30 DD F9            [10] 2174 	ld	sp, ix
      000D32 DD E1            [14] 2175 	pop	ix
      000D34 E1               [10] 2176 	pop	hl
      000D35 F1               [10] 2177 	pop	af
      000D36 33               [ 6] 2178 	inc	sp
      000D37 E9               [ 4] 2179 	jp	(hl)
                                   2180 ;./alex.c:186: void drawAlex() {
                                   2181 ;	---------------------------------
                                   2182 ; Function drawAlex
                                   2183 ; ---------------------------------
      000D38                       2184 _drawAlex::
                                   2185 ;./alex.c:187: SpriteTableXN2[0] = alex.x;
      000D38 ED 5Br42r03      [20] 2186 	ld	de, (_SpriteTableXN2)
      000D3C 01r03r01         [10] 2187 	ld	bc, #_alex+0
      000D3F 0A               [ 7] 2188 	ld	a, (bc)
      000D40 12               [ 7] 2189 	ld	(de), a
                                   2190 ;./alex.c:188: SpriteTableXN2[2] = alex.x + 8;
      000D41 2Ar42r03         [16] 2191 	ld	hl, (_SpriteTableXN2)
      000D44 23               [ 6] 2192 	inc	hl
      000D45 23               [ 6] 2193 	inc	hl
      000D46 0A               [ 7] 2194 	ld	a, (bc)
      000D47 C6 08            [ 7] 2195 	add	a, #0x08
      000D49 77               [ 7] 2196 	ld	(hl), a
                                   2197 ;./alex.c:189: SpriteTableXN2[4] = alex.x;
      000D4A 2Ar42r03         [16] 2198 	ld	hl, (_SpriteTableXN2)
      000D4D 11 04 00         [10] 2199 	ld	de, #0x0004
      000D50 19               [11] 2200 	add	hl, de
      000D51 0A               [ 7] 2201 	ld	a, (bc)
      000D52 77               [ 7] 2202 	ld	(hl), a
                                   2203 ;./alex.c:190: SpriteTableXN2[6] = alex.x + 8;
      000D53 2Ar42r03         [16] 2204 	ld	hl, (_SpriteTableXN2)
      000D56 11 06 00         [10] 2205 	ld	de, #0x0006
      000D59 19               [11] 2206 	add	hl, de
      000D5A 0A               [ 7] 2207 	ld	a, (bc)
      000D5B C6 08            [ 7] 2208 	add	a, #0x08
      000D5D 77               [ 7] 2209 	ld	(hl), a
                                   2210 ;./alex.c:191: SpriteTableY2[0] = alex.y;
      000D5E ED 5Br40r03      [20] 2211 	ld	de, (_SpriteTableY2)
      000D62 01r04r01         [10] 2212 	ld	bc, #_alex + 1
      000D65 0A               [ 7] 2213 	ld	a, (bc)
      000D66 12               [ 7] 2214 	ld	(de), a
                                   2215 ;./alex.c:192: SpriteTableY2[1] = alex.y;
      000D67 2Ar40r03         [16] 2216 	ld	hl, (_SpriteTableY2)
      000D6A 23               [ 6] 2217 	inc	hl
      000D6B 0A               [ 7] 2218 	ld	a, (bc)
      000D6C 77               [ 7] 2219 	ld	(hl), a
                                   2220 ;./alex.c:193: SpriteTableY2[2] = alex.y + 16;
      000D6D 2Ar40r03         [16] 2221 	ld	hl, (_SpriteTableY2)
      000D70 23               [ 6] 2222 	inc	hl
      000D71 23               [ 6] 2223 	inc	hl
      000D72 0A               [ 7] 2224 	ld	a, (bc)
      000D73 C6 10            [ 7] 2225 	add	a, #0x10
      000D75 77               [ 7] 2226 	ld	(hl), a
                                   2227 ;./alex.c:194: SpriteTableY2[3] = alex.y + 16;
      000D76 2Ar40r03         [16] 2228 	ld	hl, (_SpriteTableY2)
      000D79 23               [ 6] 2229 	inc	hl
      000D7A 23               [ 6] 2230 	inc	hl
      000D7B 23               [ 6] 2231 	inc	hl
      000D7C 0A               [ 7] 2232 	ld	a, (bc)
      000D7D C6 10            [ 7] 2233 	add	a, #0x10
      000D7F 77               [ 7] 2234 	ld	(hl), a
                                   2235 ;./alex.c:195: if (alex.frame != lastFrame) {
      000D80 21r05r01         [10] 2236 	ld	hl, #(_alex + 2)
      000D83 5E               [ 7] 2237 	ld	e, (hl)
      000D84 3Ar0Dr01         [13] 2238 	ld	a, (_lastFrame+0)
      000D87 93               [ 4] 2239 	sub	a, e
      000D88 C8               [11] 2240 	ret	Z
                                   2241 ;./alex.c:196: SMS_loadTiles(alex.sprite->data + alex.frame *256, alex.sprite->beginVRAM, 255);
      000D89 ED 4Br0Br01      [20] 2242 	ld	bc, (#_alex + 8)
      000D8D C5               [11] 2243 	push	bc
      000D8E FD E1            [14] 2244 	pop	iy
      000D90 FD 6E 07         [19] 2245 	ld	l, 7 (iy)
                                   2246 ;	spillPairReg hl
      000D93 FD 66 08         [19] 2247 	ld	h, 8 (iy)
                                   2248 ;	spillPairReg hl
      000D96 53               [ 4] 2249 	ld	d, e
      000D97 1E 00            [ 7] 2250 	ld	e, #0x00
      000D99 19               [11] 2251 	add	hl, de
      000D9A EB               [ 4] 2252 	ex	de, hl
      000D9B 21 04 00         [10] 2253 	ld	hl, #4
      000D9E 09               [11] 2254 	add	hl, bc
      000D9F 7E               [ 7] 2255 	ld	a, (hl)
      000DA0 23               [ 6] 2256 	inc	hl
      000DA1 66               [ 7] 2257 	ld	h, (hl)
                                   2258 ;	spillPairReg hl
      000DA2 6F               [ 4] 2259 	ld	l, a
                                   2260 ;	spillPairReg hl
                                   2261 ;	spillPairReg hl
      000DA3 29               [11] 2262 	add	hl, hl
      000DA4 29               [11] 2263 	add	hl, hl
      000DA5 29               [11] 2264 	add	hl, hl
      000DA6 29               [11] 2265 	add	hl, hl
      000DA7 29               [11] 2266 	add	hl, hl
      000DA8 CB F4            [ 8] 2267 	set	6, h
      000DAA 01 FF 00         [10] 2268 	ld	bc, #0x00ff
      000DAD C5               [11] 2269 	push	bc
      000DAE CDr00r00         [17] 2270 	call	_SMS_VRAMmemcpy
                                   2271 ;./alex.c:197: lastFrame = alex.frame;
      000DB1 21r05r01         [10] 2272 	ld	hl, #(_alex + 2)
      000DB4 7E               [ 7] 2273 	ld	a, (hl)
      000DB5 32r0Dr01         [13] 2274 	ld	(_lastFrame+0), a
                                   2275 ;./alex.c:199: }
      000DB8 C9               [10] 2276 	ret
                                   2277 ;./alex.c:202: void moveAlex(int keys) {
                                   2278 ;	---------------------------------
                                   2279 ; Function moveAlex
                                   2280 ; ---------------------------------
      000DB9                       2281 _moveAlex::
      000DB9 DD E5            [15] 2282 	push	ix
      000DBB DD 21 00 00      [14] 2283 	ld	ix,#0
      000DBF DD 39            [15] 2284 	add	ix,sp
      000DC1 3B               [ 6] 2285 	dec	sp
                                   2286 ;./alex.c:203: unsigned char puedeBajar = canDown();
      000DC2 E5               [11] 2287 	push	hl
      000DC3 CDr0Er0A         [17] 2288 	call	_canDown
      000DC6 4F               [ 4] 2289 	ld	c, a
      000DC7 C5               [11] 2290 	push	bc
      000DC8 CDr02r0A         [17] 2291 	call	_canUp
      000DCB DD 77 FF         [19] 2292 	ld	-1 (ix), a
      000DCE CDr28r0A         [17] 2293 	call	_canRight
      000DD1 5F               [ 4] 2294 	ld	e, a
      000DD2 D5               [11] 2295 	push	de
      000DD3 CDr1Cr0A         [17] 2296 	call	_canLeft
      000DD6 D1               [10] 2297 	pop	de
      000DD7 C1               [10] 2298 	pop	bc
      000DD8 E1               [10] 2299 	pop	hl
                                   2300 ;./alex.c:207: if (puedeBajar)
      000DD9 0C               [ 4] 2301 	inc	c
      000DDA 0D               [ 4] 2302 	dec	c
      000DDB 28 0C            [12] 2303 	jr	Z, 00102$
                                   2304 ;./alex.c:208: moveAlexAire(keys, puedeSubir, puedeDerecha, puedeIzquierda);
      000DDD 57               [ 4] 2305 	ld	d,a
      000DDE D5               [11] 2306 	push	de
      000DDF DD 7E FF         [19] 2307 	ld	a, -1 (ix)
      000DE2 F5               [11] 2308 	push	af
      000DE3 33               [ 6] 2309 	inc	sp
      000DE4 CDrFEr0B         [17] 2310 	call	_moveAlexAire
      000DE7 18 03            [12] 2311 	jr	00103$
      000DE9                       2312 00102$:
                                   2313 ;./alex.c:210: moveAlexSuelo(keys);
      000DE9 CDr36r0A         [17] 2314 	call	_moveAlexSuelo
      000DEC                       2315 00103$:
                                   2316 ;./alex.c:211: drawAlex();
      000DEC CDr38r0D         [17] 2317 	call	_drawAlex
                                   2318 ;./alex.c:212: }
      000DEF 33               [ 6] 2319 	inc	sp
      000DF0 DD E1            [14] 2320 	pop	ix
      000DF2 C9               [10] 2321 	ret
                                   2322 ;main.c:20: void inicializaPajaros()
                                   2323 ;	---------------------------------
                                   2324 ; Function inicializaPajaros
                                   2325 ; ---------------------------------
      000DF3                       2326 _inicializaPajaros::
      000DF3 DD E5            [15] 2327 	push	ix
      000DF5 DD 21 00 00      [14] 2328 	ld	ix,#0
      000DF9 DD 39            [15] 2329 	add	ix,sp
      000DFB 21 F9 FF         [10] 2330 	ld	hl, #-7
      000DFE 39               [11] 2331 	add	hl, sp
      000DFF F9               [ 6] 2332 	ld	sp, hl
                                   2333 ;main.c:23: for (i = 0; i < NUM_PAJAROS; i++)
      000E00 DD 36 FF 00      [19] 2334 	ld	-1 (ix), #0x00
      000E04                       2335 00108$:
                                   2336 ;main.c:25: pajaros[i].x = 15 + 32 * i;
      000E04 DD 4E FF         [19] 2337 	ld	c, -1 (ix)
      000E07 06 00            [ 7] 2338 	ld	b, #0x00
      000E09 69               [ 4] 2339 	ld	l, c
      000E0A 60               [ 4] 2340 	ld	h, b
      000E0B 29               [11] 2341 	add	hl, hl
      000E0C 29               [11] 2342 	add	hl, hl
      000E0D 09               [11] 2343 	add	hl, bc
      000E0E 29               [11] 2344 	add	hl, hl
      000E0F 11r46r03         [10] 2345 	ld	de, #_pajaros
      000E12 19               [11] 2346 	add	hl, de
      000E13 E3               [19] 2347 	ex	(sp), hl
      000E14 DD 7E FF         [19] 2348 	ld	a, -1 (ix)
      000E17 0F               [ 4] 2349 	rrca
      000E18 0F               [ 4] 2350 	rrca
      000E19 0F               [ 4] 2351 	rrca
      000E1A E6 E0            [ 7] 2352 	and	a, #0xe0
      000E1C C6 0F            [ 7] 2353 	add	a, #0x0f
      000E1E E1               [10] 2354 	pop	hl
      000E1F E5               [11] 2355 	push	hl
      000E20 77               [ 7] 2356 	ld	(hl), a
                                   2357 ;main.c:26: pajaros[i].y = 16 * (i / 2);
      000E21 DD 7E F9         [19] 2358 	ld	a, -7 (ix)
      000E24 C6 01            [ 7] 2359 	add	a, #0x01
      000E26 DD 77 FB         [19] 2360 	ld	-5 (ix), a
      000E29 DD 7E FA         [19] 2361 	ld	a, -6 (ix)
      000E2C CE 00            [ 7] 2362 	adc	a, #0x00
      000E2E DD 77 FC         [19] 2363 	ld	-4 (ix), a
      000E31 DD 4E FF         [19] 2364 	ld	c, -1 (ix)
      000E34 06 00            [ 7] 2365 	ld	b, #0x00
      000E36 DD 71 FD         [19] 2366 	ld	-3 (ix), c
      000E39 DD 70 FE         [19] 2367 	ld	-2 (ix), b
      000E3C CB 78            [ 8] 2368 	bit	7, b
      000E3E 28 08            [12] 2369 	jr	Z, 00112$
      000E40 DD 36 FD 01      [19] 2370 	ld	-3 (ix), #0x01
      000E44 DD 36 FE 00      [19] 2371 	ld	-2 (ix), #0
      000E48                       2372 00112$:
      000E48 DD 4E FD         [19] 2373 	ld	c, -3 (ix)
      000E4B 1E 00            [ 7] 2374 	ld	e, #0x00
      000E4D CB 2B            [ 8] 2375 	sra	e
      000E4F CB 19            [ 8] 2376 	rr	c
      000E51 79               [ 4] 2377 	ld	a, c
      000E52 87               [ 4] 2378 	add	a, a
      000E53 87               [ 4] 2379 	add	a, a
      000E54 87               [ 4] 2380 	add	a, a
      000E55 87               [ 4] 2381 	add	a, a
      000E56 C1               [10] 2382 	pop	bc
      000E57 E1               [10] 2383 	pop	hl
      000E58 E5               [11] 2384 	push	hl
      000E59 C5               [11] 2385 	push	bc
      000E5A 77               [ 7] 2386 	ld	(hl), a
                                   2387 ;main.c:27: pajaros[i].lastChangeFrame = i * 3;
      000E5B C1               [10] 2388 	pop	bc
      000E5C C5               [11] 2389 	push	bc
      000E5D 03               [ 6] 2390 	inc	bc
      000E5E 03               [ 6] 2391 	inc	bc
      000E5F 03               [ 6] 2392 	inc	bc
      000E60 DD 7E FF         [19] 2393 	ld	a, -1 (ix)
      000E63 5F               [ 4] 2394 	ld	e, a
      000E64 87               [ 4] 2395 	add	a, a
      000E65 83               [ 4] 2396 	add	a, e
      000E66 02               [ 7] 2397 	ld	(bc), a
                                   2398 ;main.c:28: pajaros[i].initSprite = 255;
      000E67 DD 7E F9         [19] 2399 	ld	a, -7 (ix)
      000E6A C6 06            [ 7] 2400 	add	a, #0x06
      000E6C 5F               [ 4] 2401 	ld	e, a
      000E6D DD 7E FA         [19] 2402 	ld	a, -6 (ix)
      000E70 CE 00            [ 7] 2403 	adc	a, #0x00
      000E72 57               [ 4] 2404 	ld	d, a
      000E73 3E FF            [ 7] 2405 	ld	a, #0xff
      000E75 12               [ 7] 2406 	ld	(de), a
                                   2407 ;main.c:30: pajaros[i].x++;
      000E76 E1               [10] 2408 	pop	hl
      000E77 E5               [11] 2409 	push	hl
      000E78 7E               [ 7] 2410 	ld	a, (hl)
      000E79 3C               [ 4] 2411 	inc	a
      000E7A E1               [10] 2412 	pop	hl
      000E7B E5               [11] 2413 	push	hl
      000E7C 77               [ 7] 2414 	ld	(hl), a
                                   2415 ;main.c:31: pajaros[i].lastChangeFrame++;
      000E7D 0A               [ 7] 2416 	ld	a, (bc)
      000E7E 3C               [ 4] 2417 	inc	a
      000E7F 02               [ 7] 2418 	ld	(bc), a
                                   2419 ;main.c:32: if (pajaros[i].lastChangeFrame == 20)
      000E80 D6 14            [ 7] 2420 	sub	a, #0x14
      000E82 20 15            [12] 2421 	jr	NZ, 00104$
                                   2422 ;main.c:34: pajaros[i].frame++;
      000E84 E1               [10] 2423 	pop	hl
      000E85 E5               [11] 2424 	push	hl
      000E86 23               [ 6] 2425 	inc	hl
      000E87 23               [ 6] 2426 	inc	hl
      000E88 7E               [ 7] 2427 	ld	a, (hl)
      000E89 3C               [ 4] 2428 	inc	a
      000E8A DD 77 FE         [19] 2429 	ld	-2 (ix), a
      000E8D 77               [ 7] 2430 	ld	(hl), a
                                   2431 ;main.c:35: if (pajaros[i].frame > 1)
      000E8E 3E 01            [ 7] 2432 	ld	a, #0x01
      000E90 DD 96 FE         [19] 2433 	sub	a, -2 (ix)
      000E93 30 02            [12] 2434 	jr	NC, 00102$
                                   2435 ;main.c:36: pajaros[i].frame = 0;
      000E95 36 00            [10] 2436 	ld	(hl), #0x00
      000E97                       2437 00102$:
                                   2438 ;main.c:37: pajaros[i].lastChangeFrame = 0;
      000E97 AF               [ 4] 2439 	xor	a, a
      000E98 02               [ 7] 2440 	ld	(bc), a
      000E99                       2441 00104$:
                                   2442 ;main.c:39: if(pajaros[i].initSprite == 255) {
      000E99 1A               [ 7] 2443 	ld	a, (de)
      000E9A 3C               [ 4] 2444 	inc	a
      000E9B 20 08            [12] 2445 	jr	NZ, 00109$
                                   2446 ;main.c:40: draw_entidad(&(pajaros[i]), &spritePajaro);
      000E9D 11r18r01         [10] 2447 	ld	de, #_spritePajaro
      000EA0 E1               [10] 2448 	pop	hl
      000EA1 E5               [11] 2449 	push	hl
      000EA2 CDrDCr05         [17] 2450 	call	_draw_entidad
      000EA5                       2451 00109$:
                                   2452 ;main.c:23: for (i = 0; i < NUM_PAJAROS; i++)
      000EA5 DD 34 FF         [23] 2453 	inc	-1 (ix)
      000EA8 DD 7E FF         [19] 2454 	ld	a, -1 (ix)
      000EAB D6 13            [ 7] 2455 	sub	a, #0x13
      000EAD DAr04r0E         [10] 2456 	jp	C, 00108$
                                   2457 ;main.c:43: }
      000EB0 DD F9            [10] 2458 	ld	sp, ix
      000EB2 DD E1            [14] 2459 	pop	ix
      000EB4 C9               [10] 2460 	ret
                                   2461 ;main.c:45: void loadGrapVRAM()
                                   2462 ;	---------------------------------
                                   2463 ; Function loadGrapVRAM
                                   2464 ; ---------------------------------
      000EB5                       2465 _loadGrapVRAM::
      000EB5 DD E5            [15] 2466 	push	ix
      000EB7 DD 21 00 00      [14] 2467 	ld	ix,#0
      000EBB DD 39            [15] 2468 	add	ix,sp
      000EBD 21 E2 FF         [10] 2469 	ld	hl, #-30
      000EC0 39               [11] 2470 	add	hl, sp
      000EC1 F9               [ 6] 2471 	ld	sp, hl
                                   2472 ;main.c:47: SMS_init();
      000EC2 CDr00r00         [17] 2473 	call	_SMS_init
                                   2474 ;main.c:50: SMS_setSpriteMode(SPRITEMODE_TALL);
      000EC5 2E 01            [ 7] 2475 	ld	l, #0x01
                                   2476 ;	spillPairReg hl
                                   2477 ;	spillPairReg hl
      000EC7 CDr00r00         [17] 2478 	call	_SMS_setSpriteMode
                                   2479 ;main.c:51: SMS_displayOn();
      000ECA 21 40 01         [10] 2480 	ld	hl, #0x0140
      000ECD CDr00r00         [17] 2481 	call	_SMS_VDPturnOnFeature
                                   2482 ;main.c:52: SMS_loadBGPalette(sonicpalette_inc);
      000ED0 21r00r00         [10] 2483 	ld	hl, #_sonicpalette_inc
      000ED3 CDr00r00         [17] 2484 	call	_SMS_loadBGPalette
                                   2485 ;main.c:53: SMS_loadSpritePalette(palleteAlex_inc);
      000ED6 21r00r00         [10] 2486 	ld	hl, #_palleteAlex_inc
      000ED9 CDr00r00         [17] 2487 	call	_SMS_loadSpritePalette
                                   2488 ;main.c:55: spriteAlex = generateSpriteNoRAM(2, 2, spriteAlex_inc_size, spriteAlex_inc);
      000EDC 21r00r00         [10] 2489 	ld	hl, #_spriteAlex_inc
      000EDF E5               [11] 2490 	push	hl
      000EE0 21 00 10         [10] 2491 	ld	hl, #0x1000
      000EE3 E5               [11] 2492 	push	hl
                                   2493 ;	spillPairReg hl
                                   2494 ;	spillPairReg hl
      000EE4 3E 02            [ 7] 2495 	ld	a,#0x02
      000EE6 6F               [ 4] 2496 	ld	l,a
      000EE7 E5               [11] 2497 	push	hl
      000EE8 21 06 00         [10] 2498 	ld	hl, #0x0006
      000EEB 39               [11] 2499 	add	hl, sp
      000EEC EB               [ 4] 2500 	ex	de,hl
      000EED E1               [10] 2501 	pop	hl
      000EEE D5               [11] 2502 	push	de
      000EEF CDr46r02         [17] 2503 	call	_generateSpriteNoRAM
      000EF2 F1               [10] 2504 	pop	af
      000EF3 F1               [10] 2505 	pop	af
      000EF4 F1               [10] 2506 	pop	af
      000EF5 11r0Er01         [10] 2507 	ld	de, #_spriteAlex
      000EF8 21 00 00         [10] 2508 	ld	hl, #0
      000EFB 39               [11] 2509 	add	hl, sp
      000EFC 01 0A 00         [10] 2510 	ld	bc, #0x000a
      000EFF ED B0            [21] 2511 	ldir
                                   2512 ;main.c:56: spritePuno = generateSprite(1, 2, puno_inc_size, puno_inc);
      000F01 21r00r00         [10] 2513 	ld	hl, #_puno_inc
      000F04 E5               [11] 2514 	push	hl
      000F05 21 80 00         [10] 2515 	ld	hl, #0x0080
      000F08 E5               [11] 2516 	push	hl
      000F09 2E 02            [ 7] 2517 	ld	l, #0x02
                                   2518 ;	spillPairReg hl
                                   2519 ;	spillPairReg hl
      000F0B 3E 01            [ 7] 2520 	ld	a, #0x01
      000F0D E5               [11] 2521 	push	hl
      000F0E 21 10 00         [10] 2522 	ld	hl, #0x0010
      000F11 39               [11] 2523 	add	hl, sp
      000F12 EB               [ 4] 2524 	ex	de,hl
      000F13 E1               [10] 2525 	pop	hl
      000F14 D5               [11] 2526 	push	de
      000F15 CDr9Cr01         [17] 2527 	call	_generateSprite
      000F18 F1               [10] 2528 	pop	af
      000F19 F1               [10] 2529 	pop	af
      000F1A F1               [10] 2530 	pop	af
      000F1B 11r22r01         [10] 2531 	ld	de, #_spritePuno
      000F1E 21 0A 00         [10] 2532 	ld	hl, #10
      000F21 39               [11] 2533 	add	hl, sp
      000F22 01 0A 00         [10] 2534 	ld	bc, #0x000a
      000F25 ED B0            [21] 2535 	ldir
                                   2536 ;main.c:57: spritePajaro = generateSpriteFlip(3, 1, spritePajaro_inc_size, spritePajaro_inc);
      000F27 21r00r00         [10] 2537 	ld	hl, #_spritePajaro_inc
      000F2A E5               [11] 2538 	push	hl
      000F2B 21 80 01         [10] 2539 	ld	hl, #0x0180
      000F2E E5               [11] 2540 	push	hl
      000F2F 2E 01            [ 7] 2541 	ld	l, #0x01
                                   2542 ;	spillPairReg hl
                                   2543 ;	spillPairReg hl
      000F31 3E 03            [ 7] 2544 	ld	a, #0x03
      000F33 E5               [11] 2545 	push	hl
      000F34 21 1A 00         [10] 2546 	ld	hl, #0x001a
      000F37 39               [11] 2547 	add	hl, sp
      000F38 EB               [ 4] 2548 	ex	de,hl
      000F39 E1               [10] 2549 	pop	hl
      000F3A D5               [11] 2550 	push	de
      000F3B CDr00r00         [17] 2551 	call	_generateSpriteFlip
      000F3E F1               [10] 2552 	pop	af
      000F3F F1               [10] 2553 	pop	af
      000F40 F1               [10] 2554 	pop	af
      000F41 11r18r01         [10] 2555 	ld	de, #_spritePajaro
      000F44 21 14 00         [10] 2556 	ld	hl, #20
      000F47 39               [11] 2557 	add	hl, sp
      000F48 01 0A 00         [10] 2558 	ld	bc, #0x000a
      000F4B ED B0            [21] 2559 	ldir
                                   2560 ;main.c:58: SMS_initSprites();
      000F4D CDr00r00         [17] 2561 	call	_SMS_initSprites
                                   2562 ;main.c:59: alex.initSprite = 255;
      000F50 21r09r01         [10] 2563 	ld	hl, #_alex + 6
      000F53 36 FF            [10] 2564 	ld	(hl), #0xff
                                   2565 ;main.c:60: draw_entidad(&alex, &spriteAlex);
      000F55 11r0Er01         [10] 2566 	ld	de, #_spriteAlex
      000F58 21r03r01         [10] 2567 	ld	hl, #_alex
      000F5B CDrDCr05         [17] 2568 	call	_draw_entidad
                                   2569 ;main.c:61: SMS_addSprite (0, 0, 9); // puno
      000F5E 11 09 00         [10] 2570 	ld	de, #0x0009
      000F61 21 00 00         [10] 2571 	ld	hl, #0x0000
      000F64 CDr00r00         [17] 2572 	call	_SMS_addSprite_f
                                   2573 ;main.c:62: inicializaPajaros();
      000F67 CDrF3r0D         [17] 2574 	call	_inicializaPajaros
                                   2575 ;main.c:67: SMS_loadTiles(tiles_de_prueba2_inc, 0, tiles_de_prueba2_inc_size);
      000F6A 21 A0 00         [10] 2576 	ld	hl, #0x00a0
      000F6D E5               [11] 2577 	push	hl
      000F6E 11r00r00         [10] 2578 	ld	de, #_tiles_de_prueba2_inc
      000F71 21 00 40         [10] 2579 	ld	hl, #0x4000
      000F74 CDr00r00         [17] 2580 	call	_SMS_VRAMmemcpy
                                   2581 ;main.c:68: SMS_loadTileMap(0, 0, tilemap_de_prueba2_inc, tilemap_de_prueba2_inc_size);
      000F77 21 80 07         [10] 2582 	ld	hl, #0x0780
      000F7A E5               [11] 2583 	push	hl
      000F7B 11r00r00         [10] 2584 	ld	de, #_tilemap_de_prueba2_inc
      000F7E 21 00 78         [10] 2585 	ld	hl, #0x7800
      000F81 CDr00r00         [17] 2586 	call	_SMS_VRAMmemcpy
                                   2587 ;main.c:69: SMS_loadBGPalette(paleta_de_prueba2_inc);
      000F84 21r00r00         [10] 2588 	ld	hl, #_paleta_de_prueba2_inc
      000F87 CDr00r00         [17] 2589 	call	_SMS_loadBGPalette
                                   2590 ;main.c:70: SMS_setSpritePaletteColor(0,0);
                                   2591 ;	spillPairReg hl
                                   2592 ;	spillPairReg hl
      000F8A AF               [ 4] 2593 	xor	a, a
      000F8B 6F               [ 4] 2594 	ld	l, a
      000F8C CDr00r00         [17] 2595 	call	_SMS_setSpritePaletteColor
                                   2596 ;main.c:71: }
      000F8F DD F9            [10] 2597 	ld	sp, ix
      000F91 DD E1            [14] 2598 	pop	ix
      000F93 C9               [10] 2599 	ret
                                   2600 ;main.c:73: void dibujaPajaros()
                                   2601 ;	---------------------------------
                                   2602 ; Function dibujaPajaros
                                   2603 ; ---------------------------------
      000F94                       2604 _dibujaPajaros::
      000F94 DD E5            [15] 2605 	push	ix
      000F96 DD 21 00 00      [14] 2606 	ld	ix,#0
      000F9A DD 39            [15] 2607 	add	ix,sp
      000F9C 21 F6 FF         [10] 2608 	ld	hl, #-10
      000F9F 39               [11] 2609 	add	hl, sp
      000FA0 F9               [ 6] 2610 	ld	sp, hl
                                   2611 ;main.c:78: unsigned char initPajaros = pajaros[0].initSprite;
      000FA1 3Ar4Cr03         [13] 2612 	ld	a,(#_pajaros + 6)
      000FA4 DD 77 FA         [19] 2613 	ld	-6 (ix), a
                                   2614 ;main.c:79: for (i = 0; i < NUM_PAJAROS; i++)
      000FA7 DD 36 FE 00      [19] 2615 	ld	-2 (ix), #0x00
      000FAB                       2616 00119$:
                                   2617 ;main.c:81: T_entidad *p = &pajaros[i];
      000FAB DD 4E FE         [19] 2618 	ld	c, -2 (ix)
      000FAE 06 00            [ 7] 2619 	ld	b, #0x00
      000FB0 69               [ 4] 2620 	ld	l, c
      000FB1 60               [ 4] 2621 	ld	h, b
      000FB2 29               [11] 2622 	add	hl, hl
      000FB3 29               [11] 2623 	add	hl, hl
      000FB4 09               [11] 2624 	add	hl, bc
      000FB5 29               [11] 2625 	add	hl, hl
      000FB6 11r46r03         [10] 2626 	ld	de, #_pajaros
      000FB9 19               [11] 2627 	add	hl, de
                                   2628 ;main.c:82: p->x++;
      000FBA DD 75 FB         [19] 2629 	ld	-5 (ix), l
      000FBD DD 74 FC         [19] 2630 	ld	-4 (ix), h
      000FC0 7E               [ 7] 2631 	ld	a, (hl)
      000FC1 3C               [ 4] 2632 	inc	a
      000FC2 DD 6E FB         [19] 2633 	ld	l, -5 (ix)
      000FC5 DD 66 FC         [19] 2634 	ld	h, -4 (ix)
      000FC8 77               [ 7] 2635 	ld	(hl), a
                                   2636 ;main.c:83: p->lastChangeFrame++;
      000FC9 DD 7E FB         [19] 2637 	ld	a, -5 (ix)
      000FCC C6 03            [ 7] 2638 	add	a, #0x03
      000FCE DD 77 F6         [19] 2639 	ld	-10 (ix), a
      000FD1 DD 7E FC         [19] 2640 	ld	a, -4 (ix)
      000FD4 CE 00            [ 7] 2641 	adc	a, #0x00
      000FD6 DD 77 F7         [19] 2642 	ld	-9 (ix), a
      000FD9 E1               [10] 2643 	pop	hl
      000FDA E5               [11] 2644 	push	hl
      000FDB 7E               [ 7] 2645 	ld	a, (hl)
      000FDC 3C               [ 4] 2646 	inc	a
      000FDD E1               [10] 2647 	pop	hl
      000FDE E5               [11] 2648 	push	hl
      000FDF 77               [ 7] 2649 	ld	(hl), a
                                   2650 ;main.c:85: if (p->lastChangeFrame == 20)
      000FE0 D6 14            [ 7] 2651 	sub	a, #0x14
      000FE2 C2r77r10         [10] 2652 	jp	NZ,00108$
                                   2653 ;main.c:87: p->frame++;
      000FE5 DD 7E FB         [19] 2654 	ld	a, -5 (ix)
      000FE8 C6 02            [ 7] 2655 	add	a, #0x02
      000FEA DD 77 F8         [19] 2656 	ld	-8 (ix), a
      000FED DD 7E FC         [19] 2657 	ld	a, -4 (ix)
      000FF0 CE 00            [ 7] 2658 	adc	a, #0x00
      000FF2 DD 77 F9         [19] 2659 	ld	-7 (ix), a
      000FF5 DD 6E F8         [19] 2660 	ld	l, -8 (ix)
      000FF8 DD 66 F9         [19] 2661 	ld	h, -7 (ix)
      000FFB 4E               [ 7] 2662 	ld	c, (hl)
      000FFC 0C               [ 4] 2663 	inc	c
      000FFD D1               [10] 2664 	pop	de
      000FFE E1               [10] 2665 	pop	hl
      000FFF E5               [11] 2666 	push	hl
      001000 D5               [11] 2667 	push	de
      001001 71               [ 7] 2668 	ld	(hl), c
                                   2669 ;main.c:88: if (p->frame > 1)
      001002 3E 01            [ 7] 2670 	ld	a, #0x01
      001004 91               [ 4] 2671 	sub	a, c
      001005 30 06            [12] 2672 	jr	NC, 00104$
                                   2673 ;main.c:89: p->frame = 0;
      001007 C1               [10] 2674 	pop	bc
      001008 E1               [10] 2675 	pop	hl
      001009 E5               [11] 2676 	push	hl
      00100A C5               [11] 2677 	push	bc
      00100B 36 00            [10] 2678 	ld	(hl), #0x00
      00100D                       2679 00104$:
                                   2680 ;main.c:90: p->lastChangeFrame = 0;
      00100D E1               [10] 2681 	pop	hl
      00100E 36 00            [10] 2682 	ld	(hl), #0x00
      001010 E5               [11] 2683 	push	hl
                                   2684 ;main.c:91: int frame = spritePajaro.tamano*p->frame + spritePajaro.beginVRAM;
      001011 21r1Ar01         [10] 2685 	ld	hl, #_spritePajaro + 2
      001014 5E               [ 7] 2686 	ld	e, (hl)
      001015 DD 6E F8         [19] 2687 	ld	l, -8 (ix)
      001018 DD 66 F9         [19] 2688 	ld	h, -7 (ix)
      00101B 66               [ 7] 2689 	ld	h, (hl)
                                   2690 ;	spillPairReg hl
      00101C 2E 00            [ 7] 2691 	ld	l, #0x00
      00101E 55               [ 4] 2692 	ld	d, l
      00101F 06 08            [ 7] 2693 	ld	b, #0x08
      001021                       2694 00191$:
      001021 29               [11] 2695 	add	hl, hl
      001022 30 01            [12] 2696 	jr	NC, 00192$
      001024 19               [11] 2697 	add	hl, de
      001025                       2698 00192$:
      001025 10 FA            [13] 2699 	djnz	00191$
      001027 4D               [ 4] 2700 	ld	c, l
      001028 3Ar1Cr01         [13] 2701 	ld	a, (#_spritePajaro + 4)
      00102B 81               [ 4] 2702 	add	a, c
      00102C DD 77 FD         [19] 2703 	ld	-3 (ix), a
                                   2704 ;main.c:92: for(j=0;j<spritePajaro.alto;j++) {
      00102F DD 36 FF 00      [19] 2705 	ld	-1 (ix), #0x00
      001033                       2706 00117$:
      001033 21r18r01         [10] 2707 	ld	hl, #_spritePajaro
      001036 DD 7E FF         [19] 2708 	ld	a,-1 (ix)
      001039 96               [ 7] 2709 	sub	a,(hl)
      00103A 30 3B            [12] 2710 	jr	NC, 00108$
                                   2711 ;main.c:93: unsigned char desplazado = (j<<2);
      00103C DD 7E FF         [19] 2712 	ld	a, -1 (ix)
      00103F 87               [ 4] 2713 	add	a, a
      001040 87               [ 4] 2714 	add	a, a
                                   2715 ;main.c:94: unsigned char jCalculated = desplazado + frame, y = p->y+(desplazado<<2);
      001041 DD 86 FD         [19] 2716 	add	a, -3 (ix)
      001044 5F               [ 4] 2717 	ld	e, a
                                   2718 ;main.c:95: for(i2=0;i2<spritePajaro.ancho;i2++) {
      001045 16 00            [ 7] 2719 	ld	d, #0x00
      001047                       2720 00114$:
      001047 21r19r01         [10] 2721 	ld	hl, #_spritePajaro + 1
      00104A 4E               [ 7] 2722 	ld	c, (hl)
      00104B 7A               [ 4] 2723 	ld	a, d
      00104C 91               [ 4] 2724 	sub	a, c
      00104D 30 23            [12] 2725 	jr	NC, 00118$
                                   2726 ;main.c:96: SpriteTableXN2[(i2+initPajaros)*2+1] = jCalculated + (i2<<1);
      00104F 4A               [ 4] 2727 	ld	c, d
      001050 06 00            [ 7] 2728 	ld	b, #0x00
      001052 DD 6E FA         [19] 2729 	ld	l, -6 (ix)
                                   2730 ;	spillPairReg hl
                                   2731 ;	spillPairReg hl
      001055 26 00            [ 7] 2732 	ld	h, #0x00
                                   2733 ;	spillPairReg hl
                                   2734 ;	spillPairReg hl
      001057 09               [11] 2735 	add	hl, bc
      001058 29               [11] 2736 	add	hl, hl
      001059 23               [ 6] 2737 	inc	hl
      00105A 4D               [ 4] 2738 	ld	c, l
      00105B 44               [ 4] 2739 	ld	b, h
      00105C 79               [ 4] 2740 	ld	a, c
      00105D FD 21r42r03      [14] 2741 	ld	iy, #_SpriteTableXN2
      001061 FD 86 00         [19] 2742 	add	a, 0 (iy)
      001064 4F               [ 4] 2743 	ld	c, a
      001065 78               [ 4] 2744 	ld	a, b
      001066 FD 8E 01         [19] 2745 	adc	a, 1 (iy)
      001069 47               [ 4] 2746 	ld	b, a
      00106A 7A               [ 4] 2747 	ld	a, d
      00106B 87               [ 4] 2748 	add	a, a
      00106C 6B               [ 4] 2749 	ld	l, e
                                   2750 ;	spillPairReg hl
                                   2751 ;	spillPairReg hl
      00106D 85               [ 4] 2752 	add	a, l
      00106E 02               [ 7] 2753 	ld	(bc), a
                                   2754 ;main.c:95: for(i2=0;i2<spritePajaro.ancho;i2++) {
      00106F 14               [ 4] 2755 	inc	d
      001070 18 D5            [12] 2756 	jr	00114$
      001072                       2757 00118$:
                                   2758 ;main.c:92: for(j=0;j<spritePajaro.alto;j++) {
      001072 DD 34 FF         [23] 2759 	inc	-1 (ix)
      001075 18 BC            [12] 2760 	jr	00117$
      001077                       2761 00108$:
                                   2762 ;main.c:100: initPajaros +=3;
      001077 DD 7E FA         [19] 2763 	ld	a, -6 (ix)
      00107A C6 03            [ 7] 2764 	add	a, #0x03
      00107C DD 77 FA         [19] 2765 	ld	-6 (ix), a
                                   2766 ;main.c:101: end = p->len;
      00107F DD 4E FB         [19] 2767 	ld	c, -5 (ix)
      001082 DD 46 FC         [19] 2768 	ld	b, -4 (ix)
      001085 21 07 00         [10] 2769 	ld	hl, #7
      001088 09               [11] 2770 	add	hl, bc
      001089 4E               [ 7] 2771 	ld	c, (hl)
                                   2772 ;main.c:102: i2 = p->initSprite << 1;
      00108A DD 5E FB         [19] 2773 	ld	e, -5 (ix)
      00108D DD 56 FC         [19] 2774 	ld	d, -4 (ix)
      001090 21 06 00         [10] 2775 	ld	hl, #6
      001093 19               [11] 2776 	add	hl, de
      001094 7E               [ 7] 2777 	ld	a, (hl)
      001095 87               [ 4] 2778 	add	a, a
      001096 47               [ 4] 2779 	ld	b, a
                                   2780 ;main.c:103: while(i2<end) {
      001097                       2781 00109$:
                                   2782 ;main.c:104: SpriteTableXN2[i2] += 1;
      001097 78               [ 4] 2783 	ld	a,b
      001098 B9               [ 4] 2784 	cp	a,c
      001099 30 11            [12] 2785 	jr	NC, 00120$
      00109B 21r42r03         [10] 2786 	ld	hl, #_SpriteTableXN2
      00109E 86               [ 7] 2787 	add	a, (hl)
      00109F 23               [ 6] 2788 	inc	hl
      0010A0 5F               [ 4] 2789 	ld	e, a
      0010A1 3E 00            [ 7] 2790 	ld	a, #0x00
      0010A3 8E               [ 7] 2791 	adc	a, (hl)
      0010A4 57               [ 4] 2792 	ld	d, a
      0010A5 1A               [ 7] 2793 	ld	a, (de)
      0010A6 3C               [ 4] 2794 	inc	a
      0010A7 12               [ 7] 2795 	ld	(de), a
                                   2796 ;main.c:105: i2 +=2;
      0010A8 04               [ 4] 2797 	inc	b
      0010A9 04               [ 4] 2798 	inc	b
      0010AA 18 EB            [12] 2799 	jr	00109$
      0010AC                       2800 00120$:
                                   2801 ;main.c:79: for (i = 0; i < NUM_PAJAROS; i++)
      0010AC DD 34 FE         [23] 2802 	inc	-2 (ix)
      0010AF DD 7E FE         [19] 2803 	ld	a, -2 (ix)
      0010B2 D6 13            [ 7] 2804 	sub	a, #0x13
      0010B4 DArABr0F         [10] 2805 	jp	C, 00119$
                                   2806 ;main.c:110: }
      0010B7 DD F9            [10] 2807 	ld	sp, ix
      0010B9 DD E1            [14] 2808 	pop	ix
      0010BB C9               [10] 2809 	ret
                                   2810 ;main.c:112: void playMusic() {
                                   2811 ;	---------------------------------
                                   2812 ; Function playMusic
                                   2813 ; ---------------------------------
      0010BC                       2814 _playMusic::
                                   2815 ;main.c:113: PSGFrame();
      0010BC CDr00r00         [17] 2816 	call	_PSGFrame
                                   2817 ;main.c:114: PSGSFXFrame();
                                   2818 ;main.c:115: }
      0010BF C3r00r00         [10] 2819 	jp	_PSGSFXFrame
                                   2820 ;main.c:117: void disableSprites() {
                                   2821 ;	---------------------------------
                                   2822 ; Function disableSprites
                                   2823 ; ---------------------------------
      0010C2                       2824 _disableSprites::
                                   2825 ;main.c:120: while (i < 64) {
      0010C2 0E 00            [ 7] 2826 	ld	c, #0x00
      0010C4                       2827 00101$:
      0010C4 79               [ 4] 2828 	ld	a, c
      0010C5 D6 40            [ 7] 2829 	sub	a, #0x40
      0010C7 30 10            [12] 2830 	jr	NC, 00103$
                                   2831 ;main.c:121: SMS_updateSpritePosition(i,10,240); 
      0010C9 41               [ 4] 2832 	ld	b, c
      0010CA C5               [11] 2833 	push	bc
      0010CB 3E F0            [ 7] 2834 	ld	a, #0xf0
      0010CD F5               [11] 2835 	push	af
      0010CE 33               [ 6] 2836 	inc	sp
      0010CF 2E 0A            [ 7] 2837 	ld	l, #0x0a
                                   2838 ;	spillPairReg hl
                                   2839 ;	spillPairReg hl
      0010D1 78               [ 4] 2840 	ld	a, b
      0010D2 CDr00r00         [17] 2841 	call	_SMS_updateSpritePosition
      0010D5 C1               [10] 2842 	pop	bc
                                   2843 ;main.c:122: i++;
      0010D6 0C               [ 4] 2844 	inc	c
      0010D7 18 EB            [12] 2845 	jr	00101$
      0010D9                       2846 00103$:
                                   2847 ;main.c:124: numSprites = 0;
      0010D9 21 00 00         [10] 2848 	ld	hl, #0x0000
      0010DC 22r04r04         [16] 2849 	ld	(_numSprites), hl
                                   2850 ;main.c:125: }
      0010DF C9               [10] 2851 	ret
                                   2852 ;main.c:127: void main(void)
                                   2853 ;	---------------------------------
                                   2854 ; Function main
                                   2855 ; ---------------------------------
      0010E0                       2856 _main::
      0010E0 DD E5            [15] 2857 	push	ix
      0010E2 DD 21 00 00      [14] 2858 	ld	ix,#0
      0010E6 DD 39            [15] 2859 	add	ix,sp
      0010E8 F5               [11] 2860 	push	af
                                   2861 ;main.c:132: SMS_VRAMmemsetW(0, 0x0000, 16384);
      0010E9 DD 36 FF 00      [19] 2862 	ld	-1 (ix), #0x00
      0010ED DD 36 FE 00      [19] 2863 	ld	-2 (ix), #0x00
      0010F1 21 00 40         [10] 2864 	ld	hl, #0x4000
      0010F4 E5               [11] 2865 	push	hl
      0010F5 11 00 00         [10] 2866 	ld	de, #0x0000
      0010F8 65               [ 4] 2867 	ld	h, l
      0010F9 CDr00r00         [17] 2868 	call	_SMS_VRAMmemsetW
                                   2869 ;main.c:142: printf("Hello, World! [1/3]");
      0010FC 21rAFr11         [10] 2870 	ld	hl, #___str_0
      0010FF E5               [11] 2871 	push	hl
      001100 CDr00r00         [17] 2872 	call	_printf
      001103 F1               [10] 2873 	pop	af
                                   2874 ;main.c:147: SMS_displayOn();
      001104 21 40 01         [10] 2875 	ld	hl, #0x0140
      001107 CDr00r00         [17] 2876 	call	_SMS_VDPturnOnFeature
                                   2877 ;main.c:148: SMS_setBGScrollX(scroll_x);
      00110A 2E 00            [ 7] 2878 	ld	l, #0x00
                                   2879 ;	spillPairReg hl
                                   2880 ;	spillPairReg hl
      00110C CDr00r00         [17] 2881 	call	_SMS_setBGScrollX
                                   2882 ;main.c:149: SMS_setBGScrollY(scroll_y);
      00110F 2E 00            [ 7] 2883 	ld	l, #0x00
                                   2884 ;	spillPairReg hl
                                   2885 ;	spillPairReg hl
      001111 CDr00r00         [17] 2886 	call	_SMS_setBGScrollY
                                   2887 ;main.c:150: SMS_init();
      001114 CDr00r00         [17] 2888 	call	_SMS_init
                                   2889 ;main.c:151: initSpritesVariables();
      001117 CDr79r05         [17] 2890 	call	_initSpritesVariables
                                   2891 ;main.c:152: loadGrapVRAM();
      00111A CDrB5r0E         [17] 2892 	call	_loadGrapVRAM
                                   2893 ;main.c:158: PSGPlay(special_psg);
      00111D 21r00r00         [10] 2894 	ld	hl, #_special_psg
      001120 CDr00r00         [17] 2895 	call	_PSGPlay
                                   2896 ;main.c:159: SMS_VDPturnOnFeature(VDPFEATURE_LEFTCOLBLANK);
      001123 21 20 00         [10] 2897 	ld	hl, #0x0020
      001126 CDr00r00         [17] 2898 	call	_SMS_VDPturnOnFeature
                                   2899 ;main.c:160: SMS_VDPturnOnFeature(VDPFEATURE_EXTRAHEIGHT);
      001129 21 02 00         [10] 2900 	ld	hl, #0x0002
      00112C CDr00r00         [17] 2901 	call	_SMS_VDPturnOnFeature
                                   2902 ;main.c:162: SMS_VDPturnOnFeature(VDPFEATURE_240LINES);
      00112F 21 08 01         [10] 2903 	ld	hl, #0x0108
      001132 CDr00r00         [17] 2904 	call	_SMS_VDPturnOnFeature
                                   2905 ;main.c:163: SMS_setFrameInterruptHandler(playMusic);
      001135 21rBCr10         [10] 2906 	ld	hl, #_playMusic
      001138 CDr00r00         [17] 2907 	call	_SMS_setFrameInterruptHandler
      00113B                       2908 00115$:
                                   2909 ;main.c:168: if (SMS_queryPauseRequested())
      00113B CDr00r00         [17] 2910 	call	_SMS_queryPauseRequested
      00113E CB 47            [ 8] 2911 	bit	0,a
      001140 28 1E            [12] 2912 	jr	Z, 00105$
                                   2913 ;main.c:170: PSGPlay(emeraldhill_psg);
      001142 21r00r00         [10] 2914 	ld	hl, #_emeraldhill_psg
      001145 CDr00r00         [17] 2915 	call	_PSGPlay
                                   2916 ;main.c:171: SMS_resetPauseRequest();
      001148 CDr00r00         [17] 2917 	call	_SMS_resetPauseRequest
                                   2918 ;main.c:172: while (!SMS_queryPauseRequested())
      00114B                       2919 00101$:
      00114B CDr00r00         [17] 2920 	call	_SMS_queryPauseRequested
      00114E CB 47            [ 8] 2921 	bit	0,a
      001150 20 05            [12] 2922 	jr	NZ, 00103$
                                   2923 ;main.c:174: SMS_waitForVBlank();
      001152 CDr00r00         [17] 2924 	call	_SMS_waitForVBlank
      001155 18 F4            [12] 2925 	jr	00101$
      001157                       2926 00103$:
                                   2927 ;main.c:178: SMS_resetPauseRequest();
      001157 CDr00r00         [17] 2928 	call	_SMS_resetPauseRequest
                                   2929 ;main.c:179: PSGPlay(titulo_psg);
      00115A 21r00r00         [10] 2930 	ld	hl, #_titulo_psg
      00115D CDr00r00         [17] 2931 	call	_PSGPlay
      001160                       2932 00105$:
                                   2933 ;main.c:183: int keys = SMS_getKeysHeld();
      001160 CDr00r00         [17] 2934 	call	_SMS_getKeysHeld
      001163 EB               [ 4] 2935 	ex	de, hl
                                   2936 ;main.c:184: if(keys & PORT_A_KEY_2)
      001164 CB 6D            [ 8] 2937 	bit	5, l
      001166 28 04            [12] 2938 	jr	Z, 00107$
                                   2939 ;main.c:185: keys = keys  ^ PORT_A_KEY_2;
      001168 7D               [ 4] 2940 	ld	a, l
      001169 EE 20            [ 7] 2941 	xor	a, #0x20
      00116B 6F               [ 4] 2942 	ld	l, a
                                   2943 ;	spillPairReg hl
                                   2944 ;	spillPairReg hl
      00116C                       2945 00107$:
                                   2946 ;main.c:186: if(keys & PORT_A_KEY_1)
      00116C CB 65            [ 8] 2947 	bit	4, l
      00116E 28 04            [12] 2948 	jr	Z, 00109$
                                   2949 ;main.c:187: keys = keys  ^ PORT_A_KEY_1;
      001170 7D               [ 4] 2950 	ld	a, l
      001171 EE 10            [ 7] 2951 	xor	a, #0x10
      001173 6F               [ 4] 2952 	ld	l, a
                                   2953 ;	spillPairReg hl
                                   2954 ;	spillPairReg hl
      001174                       2955 00109$:
                                   2956 ;main.c:189: keys = keys | (SMS_getKeysPressed() & (PORT_A_KEY_2 | PORT_A_KEY_1));
      001174 E5               [11] 2957 	push	hl
      001175 CDr00r00         [17] 2958 	call	_SMS_getKeysPressed
      001178 E1               [10] 2959 	pop	hl
      001179 7B               [ 4] 2960 	ld	a, e
      00117A E6 30            [ 7] 2961 	and	a, #0x30
      00117C B5               [ 4] 2962 	or	a, l
      00117D 6F               [ 4] 2963 	ld	l, a
                                   2964 ;	spillPairReg hl
                                   2965 ;	spillPairReg hl
                                   2966 ;main.c:192: moveAlex(keys);
      00117E CDrB9r0D         [17] 2967 	call	_moveAlex
                                   2968 ;main.c:194: dibujaPajaros();
      001181 CDr94r0F         [17] 2969 	call	_dibujaPajaros
                                   2970 ;main.c:199: SMS_waitForVBlank();
      001184 CDr00r00         [17] 2971 	call	_SMS_waitForVBlank
                                   2972 ;main.c:205: copySpritestoSAT();
      001187 CDrA8r05         [17] 2973 	call	_copySpritestoSAT
                                   2974 ;main.c:212: if (scroll_y % 2 == 0)
      00118A DD CB FF 46      [20] 2975 	bit	0, -1 (ix)
      00118E 20 03            [12] 2976 	jr	NZ, 00111$
                                   2977 ;main.c:213: scroll_x += 1;
      001190 DD 34 FE         [23] 2978 	inc	-2 (ix)
      001193                       2979 00111$:
                                   2980 ;main.c:214: scroll_y++;
      001193 DD 34 FF         [23] 2981 	inc	-1 (ix)
                                   2982 ;main.c:215: if (scroll_y == 224)
      001196 DD 7E FF         [19] 2983 	ld	a, -1 (ix)
      001199 D6 E0            [ 7] 2984 	sub	a, #0xe0
      00119B 20 04            [12] 2985 	jr	NZ, 00113$
                                   2986 ;main.c:216: scroll_y = 0;
      00119D DD 36 FF 00      [19] 2987 	ld	-1 (ix), #0x00
      0011A1                       2988 00113$:
                                   2989 ;main.c:218: SMS_setBGScrollX(scroll_x);
      0011A1 DD 6E FE         [19] 2990 	ld	l, -2 (ix)
                                   2991 ;	spillPairReg hl
                                   2992 ;	spillPairReg hl
      0011A4 CDr00r00         [17] 2993 	call	_SMS_setBGScrollX
                                   2994 ;main.c:220: SMS_displayOn();
      0011A7 21 40 01         [10] 2995 	ld	hl, #0x0140
      0011AA CDr00r00         [17] 2996 	call	_SMS_VDPturnOnFeature
                                   2997 ;main.c:222: }
      0011AD 18 8C            [12] 2998 	jr	00115$
      0011AF                       2999 ___str_0:
      0011AF 48 65 6C 6C 6F 2C 20  3000 	.ascii "Hello, World! [1/3]"
             57 6F 72 6C 64 21 20
             5B 31 2F 33 5D
      0011C2 00                    3001 	.db 0x00
                                   3002 	.area _CODE
      0011C3                       3003 __str_1:
      0011C3 53 45 47 41           3004 	.ascii "SEGA"
      0011C7 00                    3005 	.db 0x00
      0011C8                       3006 __str_2:
      0011C8 62 61 73 69 63 20 65  3007 	.ascii "basic example"
             78 61 6D 70 6C 65
      0011D5 00                    3008 	.db 0x00
      0011D6                       3009 __str_3:
      0011D6 41 20 73 69 6D 70 6C  3010 	.ascii "A simple example"
             65 20 65 78 61 6D 70
             6C 65
      0011E6 00                    3011 	.db 0x00
                                   3012 	.area _INITIALIZER
      000000                       3013 __xinit__nextVRAMsprites:
      000000 00 01                 3014 	.dw #0x0100
      000002                       3015 __xinit__flipArray:
      000002 00                    3016 	.db #0x00	; 0
      000003 80                    3017 	.db #0x80	; 128
      000004 40                    3018 	.db #0x40	; 64
      000005 C0                    3019 	.db #0xc0	; 192
      000006 20                    3020 	.db #0x20	; 32
      000007 A0                    3021 	.db #0xa0	; 160
      000008 60                    3022 	.db #0x60	; 96
      000009 E0                    3023 	.db #0xe0	; 224
      00000A 10                    3024 	.db #0x10	; 16
      00000B 90                    3025 	.db #0x90	; 144
      00000C 50                    3026 	.db #0x50	; 80	'P'
      00000D D0                    3027 	.db #0xd0	; 208
      00000E 30                    3028 	.db #0x30	; 48	'0'
      00000F B0                    3029 	.db #0xb0	; 176
      000010 70                    3030 	.db #0x70	; 112	'p'
      000011 F0                    3031 	.db #0xf0	; 240
      000012 08                    3032 	.db #0x08	; 8
      000013 88                    3033 	.db #0x88	; 136
      000014 48                    3034 	.db #0x48	; 72	'H'
      000015 C8                    3035 	.db #0xc8	; 200
      000016 28                    3036 	.db #0x28	; 40
      000017 A8                    3037 	.db #0xa8	; 168
      000018 68                    3038 	.db #0x68	; 104	'h'
      000019 E8                    3039 	.db #0xe8	; 232
      00001A 18                    3040 	.db #0x18	; 24
      00001B 98                    3041 	.db #0x98	; 152
      00001C 58                    3042 	.db #0x58	; 88	'X'
      00001D D8                    3043 	.db #0xd8	; 216
      00001E 38                    3044 	.db #0x38	; 56	'8'
      00001F B8                    3045 	.db #0xb8	; 184
      000020 78                    3046 	.db #0x78	; 120	'x'
      000021 F8                    3047 	.db #0xf8	; 248
      000022 04                    3048 	.db #0x04	; 4
      000023 84                    3049 	.db #0x84	; 132
      000024 44                    3050 	.db #0x44	; 68	'D'
      000025 C4                    3051 	.db #0xc4	; 196
      000026 24                    3052 	.db #0x24	; 36
      000027 A4                    3053 	.db #0xa4	; 164
      000028 64                    3054 	.db #0x64	; 100	'd'
      000029 E4                    3055 	.db #0xe4	; 228
      00002A 14                    3056 	.db #0x14	; 20
      00002B 94                    3057 	.db #0x94	; 148
      00002C 54                    3058 	.db #0x54	; 84	'T'
      00002D D4                    3059 	.db #0xd4	; 212
      00002E 34                    3060 	.db #0x34	; 52	'4'
      00002F B4                    3061 	.db #0xb4	; 180
      000030 74                    3062 	.db #0x74	; 116	't'
      000031 F4                    3063 	.db #0xf4	; 244
      000032 0C                    3064 	.db #0x0c	; 12
      000033 8C                    3065 	.db #0x8c	; 140
      000034 4C                    3066 	.db #0x4c	; 76	'L'
      000035 CC                    3067 	.db #0xcc	; 204
      000036 2C                    3068 	.db #0x2c	; 44
      000037 AC                    3069 	.db #0xac	; 172
      000038 6C                    3070 	.db #0x6c	; 108	'l'
      000039 EC                    3071 	.db #0xec	; 236
      00003A 1C                    3072 	.db #0x1c	; 28
      00003B 9C                    3073 	.db #0x9c	; 156
      00003C 5C                    3074 	.db #0x5c	; 92
      00003D DC                    3075 	.db #0xdc	; 220
      00003E 3C                    3076 	.db #0x3c	; 60
      00003F BC                    3077 	.db #0xbc	; 188
      000040 7C                    3078 	.db #0x7c	; 124
      000041 FC                    3079 	.db #0xfc	; 252
      000042 02                    3080 	.db #0x02	; 2
      000043 82                    3081 	.db #0x82	; 130
      000044 42                    3082 	.db #0x42	; 66	'B'
      000045 C2                    3083 	.db #0xc2	; 194
      000046 22                    3084 	.db #0x22	; 34
      000047 A2                    3085 	.db #0xa2	; 162
      000048 62                    3086 	.db #0x62	; 98	'b'
      000049 E2                    3087 	.db #0xe2	; 226
      00004A 12                    3088 	.db #0x12	; 18
      00004B 92                    3089 	.db #0x92	; 146
      00004C 52                    3090 	.db #0x52	; 82	'R'
      00004D D2                    3091 	.db #0xd2	; 210
      00004E 32                    3092 	.db #0x32	; 50	'2'
      00004F B2                    3093 	.db #0xb2	; 178
      000050 72                    3094 	.db #0x72	; 114	'r'
      000051 F2                    3095 	.db #0xf2	; 242
      000052 0A                    3096 	.db #0x0a	; 10
      000053 8A                    3097 	.db #0x8a	; 138
      000054 4A                    3098 	.db #0x4a	; 74	'J'
      000055 CA                    3099 	.db #0xca	; 202
      000056 2A                    3100 	.db #0x2a	; 42
      000057 AA                    3101 	.db #0xaa	; 170
      000058 6A                    3102 	.db #0x6a	; 106	'j'
      000059 EA                    3103 	.db #0xea	; 234
      00005A 1A                    3104 	.db #0x1a	; 26
      00005B 9A                    3105 	.db #0x9a	; 154
      00005C 5A                    3106 	.db #0x5a	; 90	'Z'
      00005D DA                    3107 	.db #0xda	; 218
      00005E 3A                    3108 	.db #0x3a	; 58
      00005F BA                    3109 	.db #0xba	; 186
      000060 7A                    3110 	.db #0x7a	; 122	'z'
      000061 FA                    3111 	.db #0xfa	; 250
      000062 06                    3112 	.db #0x06	; 6
      000063 86                    3113 	.db #0x86	; 134
      000064 46                    3114 	.db #0x46	; 70	'F'
      000065 C6                    3115 	.db #0xc6	; 198
      000066 26                    3116 	.db #0x26	; 38
      000067 A6                    3117 	.db #0xa6	; 166
      000068 66                    3118 	.db #0x66	; 102	'f'
      000069 E6                    3119 	.db #0xe6	; 230
      00006A 16                    3120 	.db #0x16	; 22
      00006B 96                    3121 	.db #0x96	; 150
      00006C 56                    3122 	.db #0x56	; 86	'V'
      00006D D6                    3123 	.db #0xd6	; 214
      00006E 36                    3124 	.db #0x36	; 54	'6'
      00006F B6                    3125 	.db #0xb6	; 182
      000070 76                    3126 	.db #0x76	; 118	'v'
      000071 F6                    3127 	.db #0xf6	; 246
      000072 0E                    3128 	.db #0x0e	; 14
      000073 8E                    3129 	.db #0x8e	; 142
      000074 4E                    3130 	.db #0x4e	; 78	'N'
      000075 CE                    3131 	.db #0xce	; 206
      000076 2E                    3132 	.db #0x2e	; 46
      000077 AE                    3133 	.db #0xae	; 174
      000078 6E                    3134 	.db #0x6e	; 110	'n'
      000079 EE                    3135 	.db #0xee	; 238
      00007A 1E                    3136 	.db #0x1e	; 30
      00007B 9E                    3137 	.db #0x9e	; 158
      00007C 5E                    3138 	.db #0x5e	; 94
      00007D DE                    3139 	.db #0xde	; 222
      00007E 3E                    3140 	.db #0x3e	; 62
      00007F BE                    3141 	.db #0xbe	; 190
      000080 7E                    3142 	.db #0x7e	; 126
      000081 FE                    3143 	.db #0xfe	; 254
      000082 01                    3144 	.db #0x01	; 1
      000083 81                    3145 	.db #0x81	; 129
      000084 41                    3146 	.db #0x41	; 65	'A'
      000085 C1                    3147 	.db #0xc1	; 193
      000086 21                    3148 	.db #0x21	; 33
      000087 A1                    3149 	.db #0xa1	; 161
      000088 61                    3150 	.db #0x61	; 97	'a'
      000089 E1                    3151 	.db #0xe1	; 225
      00008A 11                    3152 	.db #0x11	; 17
      00008B 91                    3153 	.db #0x91	; 145
      00008C 51                    3154 	.db #0x51	; 81	'Q'
      00008D D1                    3155 	.db #0xd1	; 209
      00008E 31                    3156 	.db #0x31	; 49	'1'
      00008F B1                    3157 	.db #0xb1	; 177
      000090 71                    3158 	.db #0x71	; 113	'q'
      000091 F1                    3159 	.db #0xf1	; 241
      000092 09                    3160 	.db #0x09	; 9
      000093 89                    3161 	.db #0x89	; 137
      000094 49                    3162 	.db #0x49	; 73	'I'
      000095 C9                    3163 	.db #0xc9	; 201
      000096 29                    3164 	.db #0x29	; 41
      000097 A9                    3165 	.db #0xa9	; 169
      000098 69                    3166 	.db #0x69	; 105	'i'
      000099 E9                    3167 	.db #0xe9	; 233
      00009A 19                    3168 	.db #0x19	; 25
      00009B 99                    3169 	.db #0x99	; 153
      00009C 59                    3170 	.db #0x59	; 89	'Y'
      00009D D9                    3171 	.db #0xd9	; 217
      00009E 39                    3172 	.db #0x39	; 57	'9'
      00009F B9                    3173 	.db #0xb9	; 185
      0000A0 79                    3174 	.db #0x79	; 121	'y'
      0000A1 F9                    3175 	.db #0xf9	; 249
      0000A2 05                    3176 	.db #0x05	; 5
      0000A3 85                    3177 	.db #0x85	; 133
      0000A4 45                    3178 	.db #0x45	; 69	'E'
      0000A5 C5                    3179 	.db #0xc5	; 197
      0000A6 25                    3180 	.db #0x25	; 37
      0000A7 A5                    3181 	.db #0xa5	; 165
      0000A8 65                    3182 	.db #0x65	; 101	'e'
      0000A9 E5                    3183 	.db #0xe5	; 229
      0000AA 15                    3184 	.db #0x15	; 21
      0000AB 95                    3185 	.db #0x95	; 149
      0000AC 55                    3186 	.db #0x55	; 85	'U'
      0000AD D5                    3187 	.db #0xd5	; 213
      0000AE 35                    3188 	.db #0x35	; 53	'5'
      0000AF B5                    3189 	.db #0xb5	; 181
      0000B0 75                    3190 	.db #0x75	; 117	'u'
      0000B1 F5                    3191 	.db #0xf5	; 245
      0000B2 0D                    3192 	.db #0x0d	; 13
      0000B3 8D                    3193 	.db #0x8d	; 141
      0000B4 4D                    3194 	.db #0x4d	; 77	'M'
      0000B5 CD                    3195 	.db #0xcd	; 205
      0000B6 2D                    3196 	.db #0x2d	; 45
      0000B7 AD                    3197 	.db #0xad	; 173
      0000B8 6D                    3198 	.db #0x6d	; 109	'm'
      0000B9 ED                    3199 	.db #0xed	; 237
      0000BA 1D                    3200 	.db #0x1d	; 29
      0000BB 9D                    3201 	.db #0x9d	; 157
      0000BC 5D                    3202 	.db #0x5d	; 93
      0000BD DD                    3203 	.db #0xdd	; 221
      0000BE 3D                    3204 	.db #0x3d	; 61
      0000BF BD                    3205 	.db #0xbd	; 189
      0000C0 7D                    3206 	.db #0x7d	; 125
      0000C1 FD                    3207 	.db #0xfd	; 253
      0000C2 03                    3208 	.db #0x03	; 3
      0000C3 83                    3209 	.db #0x83	; 131
      0000C4 43                    3210 	.db #0x43	; 67	'C'
      0000C5 C3                    3211 	.db #0xc3	; 195
      0000C6 23                    3212 	.db #0x23	; 35
      0000C7 A3                    3213 	.db #0xa3	; 163
      0000C8 63                    3214 	.db #0x63	; 99	'c'
      0000C9 E3                    3215 	.db #0xe3	; 227
      0000CA 13                    3216 	.db #0x13	; 19
      0000CB 93                    3217 	.db #0x93	; 147
      0000CC 53                    3218 	.db #0x53	; 83	'S'
      0000CD D3                    3219 	.db #0xd3	; 211
      0000CE 33                    3220 	.db #0x33	; 51	'3'
      0000CF B3                    3221 	.db #0xb3	; 179
      0000D0 73                    3222 	.db #0x73	; 115	's'
      0000D1 F3                    3223 	.db #0xf3	; 243
      0000D2 0B                    3224 	.db #0x0b	; 11
      0000D3 8B                    3225 	.db #0x8b	; 139
      0000D4 4B                    3226 	.db #0x4b	; 75	'K'
      0000D5 CB                    3227 	.db #0xcb	; 203
      0000D6 2B                    3228 	.db #0x2b	; 43
      0000D7 AB                    3229 	.db #0xab	; 171
      0000D8 6B                    3230 	.db #0x6b	; 107	'k'
      0000D9 EB                    3231 	.db #0xeb	; 235
      0000DA 1B                    3232 	.db #0x1b	; 27
      0000DB 9B                    3233 	.db #0x9b	; 155
      0000DC 5B                    3234 	.db #0x5b	; 91
      0000DD DB                    3235 	.db #0xdb	; 219
      0000DE 3B                    3236 	.db #0x3b	; 59
      0000DF BB                    3237 	.db #0xbb	; 187
      0000E0 7B                    3238 	.db #0x7b	; 123
      0000E1 FB                    3239 	.db #0xfb	; 251
      0000E2 07                    3240 	.db #0x07	; 7
      0000E3 87                    3241 	.db #0x87	; 135
      0000E4 47                    3242 	.db #0x47	; 71	'G'
      0000E5 C7                    3243 	.db #0xc7	; 199
      0000E6 27                    3244 	.db #0x27	; 39
      0000E7 A7                    3245 	.db #0xa7	; 167
      0000E8 67                    3246 	.db #0x67	; 103	'g'
      0000E9 E7                    3247 	.db #0xe7	; 231
      0000EA 17                    3248 	.db #0x17	; 23
      0000EB 97                    3249 	.db #0x97	; 151
      0000EC 57                    3250 	.db #0x57	; 87	'W'
      0000ED D7                    3251 	.db #0xd7	; 215
      0000EE 37                    3252 	.db #0x37	; 55	'7'
      0000EF B7                    3253 	.db #0xb7	; 183
      0000F0 77                    3254 	.db #0x77	; 119	'w'
      0000F1 F7                    3255 	.db #0xf7	; 247
      0000F2 0F                    3256 	.db #0x0f	; 15
      0000F3 8F                    3257 	.db #0x8f	; 143
      0000F4 4F                    3258 	.db #0x4f	; 79	'O'
      0000F5 CF                    3259 	.db #0xcf	; 207
      0000F6 2F                    3260 	.db #0x2f	; 47
      0000F7 AF                    3261 	.db #0xaf	; 175
      0000F8 6F                    3262 	.db #0x6f	; 111	'o'
      0000F9 EF                    3263 	.db #0xef	; 239
      0000FA 1F                    3264 	.db #0x1f	; 31
      0000FB 9F                    3265 	.db #0x9f	; 159
      0000FC 5F                    3266 	.db #0x5f	; 95
      0000FD DF                    3267 	.db #0xdf	; 223
      0000FE 3F                    3268 	.db #0x3f	; 63
      0000FF BF                    3269 	.db #0xbf	; 191
      000100 7F                    3270 	.db #0x7f	; 127
      000101 FF                    3271 	.db #0xff	; 255
      000102                       3272 __xinit__maxSalto:
      000102 FF                    3273 	.db #0xff	; 255
      000103                       3274 __xinit__alex:
      000103 1E                    3275 	.db #0x1e	; 30
      000104 96                    3276 	.db #0x96	; 150
      000105 00                    3277 	.db #0x00	; 0
      000106 00                    3278 	.db #0x00	; 0
      000107 00                    3279 	.db #0x00	; 0
      000108 00                    3280 	.db #0x00	; 0
      000109 FF                    3281 	.db #0xff	; 255
      00010A 00                    3282 	.db #0x00	; 0
      00010B 00 00                 3283 	.dw #0x0000
      00010D                       3284 __xinit__lastFrame:
      00010D FF                    3285 	.db #0xff	; 255
      00010E                       3286 __xinit__spriteAlex:
      00010E 02                    3287 	.db #0x02	; 2
      00010F 02                    3288 	.db #0x02	; 2
      000110 08                    3289 	.db #0x08	; 8
      000111 00                    3290 	.db #0x00	; 0
      000112 00 00                 3291 	.dw #0x0000
      000114 00                    3292 	.db #0x00	; 0
      000115 00 00                 3293 	.dw #0x0000
      000117 00                    3294 	.db #0x00	; 0
      000118                       3295 __xinit__spritePajaro:
      000118 02                    3296 	.db #0x02	; 2
      000119 02                    3297 	.db #0x02	; 2
      00011A 08                    3298 	.db #0x08	; 8
      00011B 00                    3299 	.db #0x00	; 0
      00011C 00 00                 3300 	.dw #0x0000
      00011E 00                    3301 	.db #0x00	; 0
      00011F 00 00                 3302 	.dw #0x0000
      000121 00                    3303 	.db #0x00	; 0
      000122                       3304 __xinit__spritePuno:
      000122 02                    3305 	.db #0x02	; 2
      000123 02                    3306 	.db #0x02	; 2
      000124 08                    3307 	.db #0x08	; 8
      000125 00                    3308 	.db #0x00	; 0
      000126 00 00                 3309 	.dw #0x0000
      000128 00                    3310 	.db #0x00	; 0
      000129 00 00                 3311 	.dw #0x0000
      00012B 00                    3312 	.db #0x00	; 0
                                   3313 	.area _CABS (ABS)
      007FF0                       3314 	.org 0x7FF0
      007FF0                       3315 ___SMS__SEGA_signature:
      007FF0 54                    3316 	.db #0x54	; 84	'T'
      007FF1 4D                    3317 	.db #0x4d	; 77	'M'
      007FF2 52                    3318 	.db #0x52	; 82	'R'
      007FF3 20                    3319 	.db #0x20	; 32
      007FF4 53                    3320 	.db #0x53	; 83	'S'
      007FF5 45                    3321 	.db #0x45	; 69	'E'
      007FF6 47                    3322 	.db #0x47	; 71	'G'
      007FF7 41                    3323 	.db #0x41	; 65	'A'
      007FF8 FF                    3324 	.db #0xff	; 255
      007FF9 FF                    3325 	.db #0xff	; 255
      007FFA FF                    3326 	.db #0xff	; 255
      007FFB FF                    3327 	.db #0xff	; 255
      007FFC 99                    3328 	.db #0x99	; 153
      007FFD 09                    3329 	.db #0x09	; 9
      007FFE 00                    3330 	.db #0x00	; 0
      007FFF 4C                    3331 	.db #0x4c	; 76	'L'
      007FDB                       3332 	.org 0x7FDB
      007FDB                       3333 ___SMS__SDSC_author:
      007FDB 53 45 47 41           3334 	.ascii "SEGA"
      007FDF 00                    3335 	.db 0x00
      007FCD                       3336 	.org 0x7FCD
      007FCD                       3337 ___SMS__SDSC_name:
      007FCD 62 61 73 69 63 20 65  3338 	.ascii "basic example"
             78 61 6D 70 6C 65
      007FDA 00                    3339 	.db 0x00
      007FBC                       3340 	.org 0x7FBC
      007FBC                       3341 ___SMS__SDSC_descr:
      007FBC 41 20 73 69 6D 70 6C  3342 	.ascii "A simple example"
             65 20 65 78 61 6D 70
             6C 65
      007FCC 00                    3343 	.db 0x00
      007FE0                       3344 	.org 0x7FE0
      007FE0                       3345 ___SMS__SDSC_signature:
      007FE0 53                    3346 	.db #0x53	; 83	'S'
      007FE1 44                    3347 	.db #0x44	; 68	'D'
      007FE2 53                    3348 	.db #0x53	; 83	'S'
      007FE3 43                    3349 	.db #0x43	; 67	'C'
      007FE4 01                    3350 	.db #0x01	; 1
      007FE5 00                    3351 	.db #0x00	; 0
      007FE6 00                    3352 	.db #0x00	; 0
      007FE7 00                    3353 	.db #0x00	; 0
      007FE8 00                    3354 	.db #0x00	; 0
      007FE9 00                    3355 	.db #0x00	; 0
      007FEA DB                    3356 	.db #0xdb	; 219
      007FEB 7F                    3357 	.db #0x7f	; 127
      007FEC CD                    3358 	.db #0xcd	; 205
      007FED 7F                    3359 	.db #0x7f	; 127
      007FEE BC                    3360 	.db #0xbc	; 188
      007FEF 7F                    3361 	.db #0x7f	; 127
