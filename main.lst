                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14549 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___SMS__SDSC_signature
                                     12 	.globl ___SMS__SDSC_descr
                                     13 	.globl ___SMS__SDSC_name
                                     14 	.globl ___SMS__SDSC_author
                                     15 	.globl ___SMS__SEGA_signature
                                     16 	.globl _main
                                     17 	.globl _disableSprites
                                     18 	.globl _playMusic
                                     19 	.globl _dibujaPajaros
                                     20 	.globl _loadGrapVRAM
                                     21 	.globl _inicializaPajaros
                                     22 	.globl _moveAlex
                                     23 	.globl _drawAlex
                                     24 	.globl _moveAlexAire
                                     25 	.globl _moveAlexSuelo
                                     26 	.globl _canRight
                                     27 	.globl _canLeft
                                     28 	.globl _canDown
                                     29 	.globl _canUp
                                     30 	.globl _PSGSFXFrame
                                     31 	.globl _PSGFrame
                                     32 	.globl _PSGSFXPlay
                                     33 	.globl _PSGPlay
                                     34 	.globl _SMS_VRAMmemsetW
                                     35 	.globl _SMS_VRAMmemcpy
                                     36 	.globl _SMS_setFrameInterruptHandler
                                     37 	.globl _SMS_resetPauseRequest
                                     38 	.globl _SMS_queryPauseRequested
                                     39 	.globl _SMS_getKeysHeld
                                     40 	.globl _SMS_getKeysPressed
                                     41 	.globl _SMS_loadSpritePalette
                                     42 	.globl _SMS_loadBGPalette
                                     43 	.globl _SMS_setSpritePaletteColor
                                     44 	.globl _SMS_updateSpritePosition
                                     45 	.globl _SMS_addSprite_f
                                     46 	.globl _SMS_initSprites
                                     47 	.globl _SMS_waitForVBlank
                                     48 	.globl _SMS_setSpriteMode
                                     49 	.globl _SMS_setBGScrollY
                                     50 	.globl _SMS_setBGScrollX
                                     51 	.globl _SMS_VDPturnOffFeature
                                     52 	.globl _SMS_VDPturnOnFeature
                                     53 	.globl _SMS_init
                                     54 	.globl _copySpritestoSAT
                                     55 	.globl _addHardwareSprite
                                     56 	.globl _generateSpriteNoRAM
                                     57 	.globl _printf
                                     58 	.globl _spritePuno
                                     59 	.globl _spritePajaro
                                     60 	.globl _spriteAlex
                                     61 	.globl _alex
                                     62 	.globl _maxSalto
                                     63 	.globl _nextVRAMsprites
                                     64 	.globl _numSprites
                                     65 	.globl _pajaros
                                     66 	.globl _SMS_SRAM
                                     67 	.globl _SRAM_bank_to_be_mapped_on_slot2
                                     68 	.globl _ROM_bank_to_be_mapped_on_slot0
                                     69 	.globl _ROM_bank_to_be_mapped_on_slot1
                                     70 	.globl _ROM_bank_to_be_mapped_on_slot2
                                     71 	.globl _SpriteNextFree2
                                     72 	.globl _SpriteTableXN2
                                     73 	.globl _SpriteTableY2
                                     74 	.globl _hardwareSprites
                                     75 	.globl _generateSprite
                                     76 	.globl _initSpritesVariables
                                     77 	.globl _draw_entidad
                                     78 ;--------------------------------------------------------
                                     79 ; special function registers
                                     80 ;--------------------------------------------------------
                           0000BF    81 _VDPControlPort	=	0x00bf
                           0000BF    82 _VDPStatusPort	=	0x00bf
                           0000BE    83 _VDPDataPort	=	0x00be
                           00007E    84 _VDPVCounterPort	=	0x007e
                           00007F    85 _VDPHCounterPort	=	0x007f
                                     86 ;--------------------------------------------------------
                                     87 ; ram data
                                     88 ;--------------------------------------------------------
                                     89 	.area _DATA
      000000                         90 _hardwareSprites::
      000000                         91 	.ds 768
      000300                         92 _SpriteTableY2::
      000300                         93 	.ds 2
      000302                         94 _SpriteTableXN2::
      000302                         95 	.ds 2
      000304                         96 _SpriteNextFree2::
      000304                         97 	.ds 2
                           00FFFF    98 _ROM_bank_to_be_mapped_on_slot2	=	0xffff
                           00FFFE    99 _ROM_bank_to_be_mapped_on_slot1	=	0xfffe
                           00FFFD   100 _ROM_bank_to_be_mapped_on_slot0	=	0xfffd
                           00FFFC   101 _SRAM_bank_to_be_mapped_on_slot2	=	0xfffc
                           008000   102 _SMS_SRAM	=	0x8000
      000306                        103 _pajaros::
      000306                        104 	.ds 190
      0003C4                        105 _numSprites::
      0003C4                        106 	.ds 2
                                    107 ;--------------------------------------------------------
                                    108 ; ram data
                                    109 ;--------------------------------------------------------
                                    110 	.area _INITIALIZED
      000000                        111 _nextVRAMsprites::
      000000                        112 	.ds 2
      000002                        113 _maxSalto::
      000002                        114 	.ds 1
      000003                        115 _alex::
      000003                        116 	.ds 10
      00000D                        117 _spriteAlex::
      00000D                        118 	.ds 10
      000017                        119 _spritePajaro::
      000017                        120 	.ds 10
      000021                        121 _spritePuno::
      000021                        122 	.ds 10
                                    123 ;--------------------------------------------------------
                                    124 ; absolute external ram data
                                    125 ;--------------------------------------------------------
                                    126 	.area _DABS (ABS)
                                    127 ;--------------------------------------------------------
                                    128 ; global & static initialisations
                                    129 ;--------------------------------------------------------
                                    130 	.area _HOME
                                    131 	.area _GSINIT
                                    132 	.area _GSFINAL
                                    133 	.area _GSINIT
                                    134 ;--------------------------------------------------------
                                    135 ; Home
                                    136 ;--------------------------------------------------------
                                    137 	.area _HOME
                                    138 	.area _HOME
                                    139 ;--------------------------------------------------------
                                    140 ; code
                                    141 ;--------------------------------------------------------
                                    142 	.area _CODE
                                    143 ;./lib/./sprite.c:20: T_sprite generateSprite(unsigned char ancho, unsigned char alto, int tam,const unsigned char data[]) {
                                    144 ;	---------------------------------
                                    145 ; Function generateSprite
                                    146 ; ---------------------------------
      000000                        147 _generateSprite::
      000000 DD E5            [15]  148 	push	ix
      000002 DD 21 00 00      [14]  149 	ld	ix,#0
      000006 DD 39            [15]  150 	add	ix,sp
      000008 FD 21 F6 FF      [14]  151 	ld	iy, #-10
      00000C FD 39            [15]  152 	add	iy, sp
      00000E FD F9            [10]  153 	ld	sp, iy
      000010 5F               [ 4]  154 	ld	e, a
      000011 55               [ 4]  155 	ld	d, l
                                    156 ;./lib/./sprite.c:21: unsigned char tamano = alto*ancho*2;
      000012 D5               [11]  157 	push	de
      000013 62               [ 4]  158 	ld	h, d
                                    159 ;	spillPairReg hl
                                    160 ;	spillPairReg hl
      000014 2E 00            [ 7]  161 	ld	l, #0x00
      000016 55               [ 4]  162 	ld	d, l
      000017 06 08            [ 7]  163 	ld	b, #0x08
      000019                        164 00103$:
      000019 29               [11]  165 	add	hl, hl
      00001A 30 01            [12]  166 	jr	NC, 00104$
      00001C 19               [11]  167 	add	hl, de
      00001D                        168 00104$:
      00001D 10 FA            [13]  169 	djnz	00103$
      00001F D1               [10]  170 	pop	de
      000020 4D               [ 4]  171 	ld	c, l
      000021 CB 21            [ 8]  172 	sla	c
                                    173 ;./lib/./sprite.c:22: T_sprite sprite = {alto,ancho,tamano,tam/(tamano*32),nextVRAMsprites, 1,0};
      000023 DD 72 F6         [19]  174 	ld	-10 (ix), d
      000026 DD 73 F7         [19]  175 	ld	-9 (ix), e
      000029 DD 71 F8         [19]  176 	ld	-8 (ix), c
      00002C 69               [ 4]  177 	ld	l, c
                                    178 ;	spillPairReg hl
                                    179 ;	spillPairReg hl
      00002D 26 00            [ 7]  180 	ld	h, #0x00
                                    181 ;	spillPairReg hl
                                    182 ;	spillPairReg hl
      00002F 29               [11]  183 	add	hl, hl
      000030 29               [11]  184 	add	hl, hl
      000031 29               [11]  185 	add	hl, hl
      000032 29               [11]  186 	add	hl, hl
      000033 29               [11]  187 	add	hl, hl
      000034 C5               [11]  188 	push	bc
      000035 EB               [ 4]  189 	ex	de, hl
      000036 DD 6E 06         [19]  190 	ld	l, 6 (ix)
                                    191 ;	spillPairReg hl
                                    192 ;	spillPairReg hl
      000039 DD 66 07         [19]  193 	ld	h, 7 (ix)
                                    194 ;	spillPairReg hl
                                    195 ;	spillPairReg hl
      00003C CDr00r00         [17]  196 	call	__divsint
      00003F C1               [10]  197 	pop	bc
      000040 DD 73 F9         [19]  198 	ld	-7 (ix), e
      000043 3Ar00r00         [13]  199 	ld	a, (_nextVRAMsprites+0)
      000046 DD 77 FA         [19]  200 	ld	-6 (ix), a
      000049 3Ar01r00         [13]  201 	ld	a, (_nextVRAMsprites+1)
      00004C DD 77 FB         [19]  202 	ld	-5 (ix), a
      00004F DD 36 FC 01      [19]  203 	ld	-4 (ix), #0x01
      000053 AF               [ 4]  204 	xor	a, a
      000054 DD 77 FD         [19]  205 	ld	-3 (ix), a
      000057 DD 77 FE         [19]  206 	ld	-2 (ix), a
      00005A DD 36 FF 00      [19]  207 	ld	-1 (ix), #0x00
                                    208 ;./lib/./sprite.c:23: SMS_loadTiles(data,nextVRAMsprites,tam);
      00005E DD 5E 08         [19]  209 	ld	e, 8 (ix)
      000061 DD 56 09         [19]  210 	ld	d, 9 (ix)
      000064 2Ar00r00         [16]  211 	ld	hl, (_nextVRAMsprites)
      000067 29               [11]  212 	add	hl, hl
      000068 29               [11]  213 	add	hl, hl
      000069 29               [11]  214 	add	hl, hl
      00006A 29               [11]  215 	add	hl, hl
      00006B 29               [11]  216 	add	hl, hl
      00006C CB F4            [ 8]  217 	set	6, h
      00006E C5               [11]  218 	push	bc
      00006F E5               [11]  219 	push	hl
      000070 DD 6E 06         [19]  220 	ld	l, 6 (ix)
                                    221 ;	spillPairReg hl
                                    222 ;	spillPairReg hl
      000073 DD 66 07         [19]  223 	ld	h, 7 (ix)
                                    224 ;	spillPairReg hl
                                    225 ;	spillPairReg hl
      000076 E3               [19]  226 	ex	(sp), hl
      000077 CDr00r00         [17]  227 	call	_SMS_VRAMmemcpy
      00007A C1               [10]  228 	pop	bc
                                    229 ;./lib/./sprite.c:24: nextVRAMsprites = nextVRAMsprites + (tamano*sprite.numFrames);
      00007B DD 5E F9         [19]  230 	ld	e, -7 (ix)
      00007E 61               [ 4]  231 	ld	h, c
                                    232 ;	spillPairReg hl
                                    233 ;	spillPairReg hl
      00007F 2E 00            [ 7]  234 	ld	l, #0x00
      000081 55               [ 4]  235 	ld	d, l
      000082 06 08            [ 7]  236 	ld	b, #0x08
      000084                        237 00105$:
      000084 29               [11]  238 	add	hl, hl
      000085 30 01            [12]  239 	jr	NC, 00106$
      000087 19               [11]  240 	add	hl, de
      000088                        241 00106$:
      000088 10 FA            [13]  242 	djnz	00105$
      00008A EB               [ 4]  243 	ex	de, hl
      00008B 21r00r00         [10]  244 	ld	hl, #_nextVRAMsprites
      00008E 7E               [ 7]  245 	ld	a, (hl)
      00008F 83               [ 4]  246 	add	a, e
      000090 77               [ 7]  247 	ld	(hl), a
      000091 23               [ 6]  248 	inc	hl
      000092 7E               [ 7]  249 	ld	a, (hl)
      000093 8A               [ 4]  250 	adc	a, d
      000094 77               [ 7]  251 	ld	(hl), a
                                    252 ;./lib/./sprite.c:25: return sprite;
      000095 21 0E 00         [10]  253 	ld	hl, #14
      000098 39               [11]  254 	add	hl, sp
      000099 5E               [ 7]  255 	ld	e, (hl)
      00009A 23               [ 6]  256 	inc	hl
      00009B 56               [ 7]  257 	ld	d, (hl)
      00009C 21 00 00         [10]  258 	ld	hl, #0
      00009F 39               [11]  259 	add	hl, sp
      0000A0 01 0A 00         [10]  260 	ld	bc, #10
      0000A3 ED B0            [21]  261 	ldir
                                    262 ;./lib/./sprite.c:26: }
      0000A5 DD F9            [10]  263 	ld	sp, ix
      0000A7 DD E1            [14]  264 	pop	ix
      0000A9 C9               [10]  265 	ret
                                    266 ;./lib/./sprite.c:29: T_sprite generateSpriteNoRAM(unsigned char ancho, unsigned char alto, int tam,const unsigned char data[]) {
                                    267 ;	---------------------------------
                                    268 ; Function generateSpriteNoRAM
                                    269 ; ---------------------------------
      0000AA                        270 _generateSpriteNoRAM::
      0000AA DD E5            [15]  271 	push	ix
      0000AC DD 21 00 00      [14]  272 	ld	ix,#0
      0000B0 DD 39            [15]  273 	add	ix,sp
      0000B2 FD 21 F4 FF      [14]  274 	ld	iy, #-12
      0000B6 FD 39            [15]  275 	add	iy, sp
      0000B8 FD F9            [10]  276 	ld	sp, iy
      0000BA 5F               [ 4]  277 	ld	e, a
      0000BB 55               [ 4]  278 	ld	d, l
                                    279 ;./lib/./sprite.c:30: unsigned char tamano = alto*ancho*2;
      0000BC D5               [11]  280 	push	de
      0000BD 62               [ 4]  281 	ld	h, d
                                    282 ;	spillPairReg hl
                                    283 ;	spillPairReg hl
      0000BE 2E 00            [ 7]  284 	ld	l, #0x00
      0000C0 55               [ 4]  285 	ld	d, l
      0000C1 06 08            [ 7]  286 	ld	b, #0x08
      0000C3                        287 00103$:
      0000C3 29               [11]  288 	add	hl, hl
      0000C4 30 01            [12]  289 	jr	NC, 00104$
      0000C6 19               [11]  290 	add	hl, de
      0000C7                        291 00104$:
      0000C7 10 FA            [13]  292 	djnz	00103$
      0000C9 D1               [10]  293 	pop	de
      0000CA 4D               [ 4]  294 	ld	c, l
      0000CB CB 21            [ 8]  295 	sla	c
                                    296 ;./lib/./sprite.c:31: T_sprite sprite = {alto,ancho,tamano,tam/(tamano*32),nextVRAMsprites, 0,0};
      0000CD DD 72 F4         [19]  297 	ld	-12 (ix), d
      0000D0 DD 73 F5         [19]  298 	ld	-11 (ix), e
      0000D3 DD 71 F6         [19]  299 	ld	-10 (ix), c
                                    300 ;	spillPairReg hl
                                    301 ;	spillPairReg hl
      0000D6 DD 71 FE         [19]  302 	ld	-2 (ix), c
      0000D9 DD 36 FF 00      [19]  303 	ld	-1 (ix), #0x00
      0000DD 69               [ 4]  304 	ld	l, c
      0000DE 26 00            [ 7]  305 	ld	h, #0x00
                                    306 ;	spillPairReg hl
                                    307 ;	spillPairReg hl
      0000E0 29               [11]  308 	add	hl, hl
      0000E1 29               [11]  309 	add	hl, hl
      0000E2 29               [11]  310 	add	hl, hl
      0000E3 29               [11]  311 	add	hl, hl
      0000E4 29               [11]  312 	add	hl, hl
      0000E5 EB               [ 4]  313 	ex	de,hl
      0000E6 D5               [11]  314 	push	de
      0000E7 DD 6E 06         [19]  315 	ld	l, 6 (ix)
                                    316 ;	spillPairReg hl
                                    317 ;	spillPairReg hl
      0000EA DD 66 07         [19]  318 	ld	h, 7 (ix)
                                    319 ;	spillPairReg hl
                                    320 ;	spillPairReg hl
      0000ED CDr00r00         [17]  321 	call	__divsint
      0000F0 EB               [ 4]  322 	ex	de, hl
      0000F1 D1               [10]  323 	pop	de
      0000F2 DD 75 F7         [19]  324 	ld	-9 (ix), l
      0000F5 3Ar00r00         [13]  325 	ld	a, (_nextVRAMsprites+0)
      0000F8 DD 77 F8         [19]  326 	ld	-8 (ix), a
      0000FB 3Ar01r00         [13]  327 	ld	a, (_nextVRAMsprites+1)
      0000FE DD 77 F9         [19]  328 	ld	-7 (ix), a
      000101 DD 36 FA 00      [19]  329 	ld	-6 (ix), #0x00
      000105 AF               [ 4]  330 	xor	a, a
      000106 DD 77 FB         [19]  331 	ld	-5 (ix), a
      000109 DD 77 FC         [19]  332 	ld	-4 (ix), a
      00010C DD 36 FD 00      [19]  333 	ld	-3 (ix), #0x00
                                    334 ;./lib/./sprite.c:32: sprite.data = data;
      000110 DD 7E 08         [19]  335 	ld	a, 8 (ix)
      000113 DD 77 FB         [19]  336 	ld	-5 (ix), a
      000116 DD 7E 09         [19]  337 	ld	a, 9 (ix)
      000119 DD 77 FC         [19]  338 	ld	-4 (ix), a
                                    339 ;./lib/./sprite.c:33: sprite.frameInVRAM = 0;
      00011C DD 36 FD 00      [19]  340 	ld	-3 (ix), #0x00
                                    341 ;./lib/./sprite.c:34: SMS_loadTiles(data,nextVRAMsprites,tamano*32);
      000120 DD 4E 08         [19]  342 	ld	c, 8 (ix)
      000123 DD 46 09         [19]  343 	ld	b, 9 (ix)
      000126 2Ar00r00         [16]  344 	ld	hl, (_nextVRAMsprites)
      000129 29               [11]  345 	add	hl, hl
      00012A 29               [11]  346 	add	hl, hl
      00012B 29               [11]  347 	add	hl, hl
      00012C 29               [11]  348 	add	hl, hl
      00012D 29               [11]  349 	add	hl, hl
      00012E CB F4            [ 8]  350 	set	6, h
      000130 D5               [11]  351 	push	de
      000131 59               [ 4]  352 	ld	e, c
      000132 50               [ 4]  353 	ld	d, b
      000133 CDr00r00         [17]  354 	call	_SMS_VRAMmemcpy
                                    355 ;./lib/./sprite.c:35: nextVRAMsprites = nextVRAMsprites + (tamano);
      000136 21r00r00         [10]  356 	ld	hl, #_nextVRAMsprites
      000139 7E               [ 7]  357 	ld	a, (hl)
      00013A DD 86 FE         [19]  358 	add	a, -2 (ix)
      00013D 77               [ 7]  359 	ld	(hl), a
      00013E 23               [ 6]  360 	inc	hl
      00013F 7E               [ 7]  361 	ld	a, (hl)
      000140 DD 8E FF         [19]  362 	adc	a, -1 (ix)
      000143 77               [ 7]  363 	ld	(hl), a
                                    364 ;./lib/./sprite.c:36: return sprite;
      000144 21 10 00         [10]  365 	ld	hl, #16
      000147 39               [11]  366 	add	hl, sp
      000148 5E               [ 7]  367 	ld	e, (hl)
      000149 23               [ 6]  368 	inc	hl
      00014A 56               [ 7]  369 	ld	d, (hl)
      00014B 21 00 00         [10]  370 	ld	hl, #0
      00014E 39               [11]  371 	add	hl, sp
      00014F 01 0A 00         [10]  372 	ld	bc, #10
      000152 ED B0            [21]  373 	ldir
                                    374 ;./lib/./sprite.c:37: }
      000154 DD F9            [10]  375 	ld	sp, ix
      000156 DD E1            [14]  376 	pop	ix
      000158 C9               [10]  377 	ret
                                    378 ;./lib/./sprite.c:48: unsigned int addHardwareSprite(unsigned int x,unsigned int y,unsigned int vx,unsigned int vy,unsigned int lx,
                                    379 ;	---------------------------------
                                    380 ; Function addHardwareSprite
                                    381 ; ---------------------------------
      000159                        382 _addHardwareSprite::
      000159 DD E5            [15]  383 	push	ix
      00015B DD 21 00 00      [14]  384 	ld	ix,#0
      00015F DD 39            [15]  385 	add	ix,sp
      000161 FD 21 EA FF      [14]  386 	ld	iy, #-22
      000165 FD 39            [15]  387 	add	iy, sp
      000167 FD F9            [10]  388 	ld	sp, iy
      000169 DD 75 F4         [19]  389 	ld	-12 (ix), l
      00016C DD 74 F5         [19]  390 	ld	-11 (ix), h
      00016F DD 73 F2         [19]  391 	ld	-14 (ix), e
      000172 DD 72 F3         [19]  392 	ld	-13 (ix), d
                                    393 ;./lib/./sprite.c:50: unsigned int i = MAX_HARDWARE_SPRITES;
      000175 21 40 00         [10]  394 	ld	hl, #0x0040
      000178 E3               [19]  395 	ex	(sp), hl
                                    396 ;./lib/./sprite.c:51: while (i) {
      000179 DD 36 FE 40      [19]  397 	ld	-2 (ix), #0x40
      00017D DD 36 FF 00      [19]  398 	ld	-1 (ix), #0
      000181                        399 00109$:
      000181 DD 7E FF         [19]  400 	ld	a, -1 (ix)
      000184 DD B6 FE         [19]  401 	or	a, -2 (ix)
      000187 CArD0r03         [10]  402 	jp	Z, 00111$
                                    403 ;./lib/./sprite.c:52: if (!hardwareSprites[i].len) {
      00018A DD 4E FE         [19]  404 	ld	c, -2 (ix)
      00018D DD 46 FF         [19]  405 	ld	b, -1 (ix)
      000190 69               [ 4]  406 	ld	l, c
      000191 60               [ 4]  407 	ld	h, b
      000192 29               [11]  408 	add	hl, hl
      000193 09               [11]  409 	add	hl, bc
      000194 29               [11]  410 	add	hl, hl
      000195 29               [11]  411 	add	hl, hl
      000196 DD 75 FC         [19]  412 	ld	-4 (ix), l
      000199 DD 74 FD         [19]  413 	ld	-3 (ix), h
      00019C 3Er00            [ 7]  414 	ld	a, #<(_hardwareSprites)
      00019E DD 86 FC         [19]  415 	add	a, -4 (ix)
      0001A1 DD 77 FA         [19]  416 	ld	-6 (ix), a
      0001A4 3Es00            [ 7]  417 	ld	a, #>(_hardwareSprites)
      0001A6 DD 8E FD         [19]  418 	adc	a, -3 (ix)
      0001A9 DD 77 FB         [19]  419 	ld	-5 (ix), a
      0001AC DD 7E FA         [19]  420 	ld	a, -6 (ix)
      0001AF DD 77 FC         [19]  421 	ld	-4 (ix), a
      0001B2 DD 7E FB         [19]  422 	ld	a, -5 (ix)
      0001B5 DD 77 FD         [19]  423 	ld	-3 (ix), a
      0001B8 DD 6E FC         [19]  424 	ld	l, -4 (ix)
      0001BB DD 66 FD         [19]  425 	ld	h, -3 (ix)
      0001BE 11 0A 00         [10]  426 	ld	de, #0x000a
      0001C1 19               [11]  427 	add	hl, de
      0001C2 7E               [ 7]  428 	ld	a, (hl)
      0001C3 DD 77 FC         [19]  429 	ld	-4 (ix), a
      0001C6 23               [ 6]  430 	inc	hl
      0001C7 7E               [ 7]  431 	ld	a, (hl)
      0001C8 DD 77 FD         [19]  432 	ld	-3 (ix), a
      0001CB DD B6 FC         [19]  433 	or	a, -4 (ix)
      0001CE C2rB4r03         [10]  434 	jp	NZ, 00108$
                                    435 ;./lib/./sprite.c:53: T_HardwareSprite *p = &hardwareSprites[i]; 
      0001D1 DD 7E FA         [19]  436 	ld	a, -6 (ix)
      0001D4 DD 77 FE         [19]  437 	ld	-2 (ix), a
      0001D7 DD 7E FB         [19]  438 	ld	a, -5 (ix)
      0001DA DD 77 FF         [19]  439 	ld	-1 (ix), a
      0001DD DD 7E FE         [19]  440 	ld	a, -2 (ix)
      0001E0 DD 77 EC         [19]  441 	ld	-20 (ix), a
      0001E3 DD 7E FF         [19]  442 	ld	a, -1 (ix)
      0001E6 DD 77 ED         [19]  443 	ld	-19 (ix), a
                                    444 ;./lib/./sprite.c:54: p->x = x;
      0001E9 DD 7E EC         [19]  445 	ld	a, -20 (ix)
      0001EC C6 04            [ 7]  446 	add	a, #0x04
      0001EE DD 77 FE         [19]  447 	ld	-2 (ix), a
      0001F1 DD 7E ED         [19]  448 	ld	a, -19 (ix)
      0001F4 CE 00            [ 7]  449 	adc	a, #0x00
      0001F6 DD 77 FF         [19]  450 	ld	-1 (ix), a
      0001F9 DD 6E FE         [19]  451 	ld	l, -2 (ix)
      0001FC DD 66 FF         [19]  452 	ld	h, -1 (ix)
      0001FF DD 7E F4         [19]  453 	ld	a, -12 (ix)
      000202 77               [ 7]  454 	ld	(hl), a
      000203 23               [ 6]  455 	inc	hl
      000204 DD 7E F5         [19]  456 	ld	a, -11 (ix)
      000207 77               [ 7]  457 	ld	(hl), a
                                    458 ;./lib/./sprite.c:55: p->y = y;
      000208 D1               [10]  459 	pop	de
      000209 E1               [10]  460 	pop	hl
      00020A E5               [11]  461 	push	hl
      00020B D5               [11]  462 	push	de
      00020C 11 06 00         [10]  463 	ld	de, #0x0006
      00020F 19               [11]  464 	add	hl, de
      000210 DD 7E F2         [19]  465 	ld	a, -14 (ix)
      000213 77               [ 7]  466 	ld	(hl), a
      000214 23               [ 6]  467 	inc	hl
      000215 DD 7E F3         [19]  468 	ld	a, -13 (ix)
      000218 77               [ 7]  469 	ld	(hl), a
                                    470 ;./lib/./sprite.c:56: p->vx = vx;
      000219 C1               [10]  471 	pop	bc
      00021A E1               [10]  472 	pop	hl
      00021B E5               [11]  473 	push	hl
      00021C C5               [11]  474 	push	bc
      00021D DD 7E 04         [19]  475 	ld	a, 4 (ix)
      000220 77               [ 7]  476 	ld	(hl), a
      000221 23               [ 6]  477 	inc	hl
      000222 DD 7E 05         [19]  478 	ld	a, 5 (ix)
      000225 77               [ 7]  479 	ld	(hl), a
                                    480 ;./lib/./sprite.c:57: p->vy = vy;
      000226 E1               [10]  481 	pop	hl
      000227 C1               [10]  482 	pop	bc
      000228 C5               [11]  483 	push	bc
      000229 E5               [11]  484 	push	hl
      00022A 03               [ 6]  485 	inc	bc
      00022B 03               [ 6]  486 	inc	bc
      00022C DD 7E 06         [19]  487 	ld	a, 6 (ix)
      00022F 02               [ 7]  488 	ld	(bc), a
      000230 03               [ 6]  489 	inc	bc
      000231 DD 7E 07         [19]  490 	ld	a, 7 (ix)
      000234 02               [ 7]  491 	ld	(bc), a
                                    492 ;./lib/./sprite.c:58: unsigned int iTile = 0;
      000235 AF               [ 4]  493 	xor	a, a
      000236 DD 77 FE         [19]  494 	ld	-2 (ix), a
      000239 DD 77 FF         [19]  495 	ld	-1 (ix), a
                                    496 ;./lib/./sprite.c:59: for (int iy=0;iy<ly;iy++) {
      00023C DD 7E F2         [19]  497 	ld	a, -14 (ix)
      00023F DD 77 F6         [19]  498 	ld	-10 (ix), a
      000242 DD 7E F3         [19]  499 	ld	a, -13 (ix)
      000245 DD 77 F7         [19]  500 	ld	-9 (ix), a
      000248 AF               [ 4]  501 	xor	a, a
      000249 DD 77 F8         [19]  502 	ld	-8 (ix), a
      00024C DD 77 F9         [19]  503 	ld	-7 (ix), a
      00024F                        504 00116$:
      00024F DD 7E F8         [19]  505 	ld	a, -8 (ix)
      000252 DD 77 FC         [19]  506 	ld	-4 (ix), a
      000255 DD 7E F9         [19]  507 	ld	a, -7 (ix)
      000258 DD 77 FD         [19]  508 	ld	-3 (ix), a
                                    509 ;./lib/./sprite.c:62: p->initSprite = SMS_addSprite(x,y, tiles[iTile]);
      00025B DD 7E EC         [19]  510 	ld	a, -20 (ix)
      00025E C6 08            [ 7]  511 	add	a, #0x08
      000260 DD 77 EE         [19]  512 	ld	-18 (ix), a
      000263 DD 7E ED         [19]  513 	ld	a, -19 (ix)
      000266 CE 00            [ 7]  514 	adc	a, #0x00
      000268 DD 77 EF         [19]  515 	ld	-17 (ix), a
                                    516 ;./lib/./sprite.c:59: for (int iy=0;iy<ly;iy++) {
      00026B DD 7E FC         [19]  517 	ld	a, -4 (ix)
      00026E DD 96 0A         [19]  518 	sub	a, 10 (ix)
      000271 DD 7E FD         [19]  519 	ld	a, -3 (ix)
      000274 DD 9E 0B         [19]  520 	sbc	a, 11 (ix)
      000277 D2r5Br03         [10]  521 	jp	NC, 00106$
                                    522 ;./lib/./sprite.c:60: for (int ix=0;ix<lx;ix++){
      00027A DD 7E FE         [19]  523 	ld	a, -2 (ix)
      00027D DD 77 FA         [19]  524 	ld	-6 (ix), a
      000280 DD 7E FF         [19]  525 	ld	a, -1 (ix)
      000283 DD 77 FB         [19]  526 	ld	-5 (ix), a
      000286 DD 7E F4         [19]  527 	ld	a, -12 (ix)
      000289 DD 77 FC         [19]  528 	ld	-4 (ix), a
      00028C DD 7E F5         [19]  529 	ld	a, -11 (ix)
      00028F DD 77 FD         [19]  530 	ld	-3 (ix), a
      000292 AF               [ 4]  531 	xor	a, a
      000293 DD 77 FE         [19]  532 	ld	-2 (ix), a
      000296 DD 77 FF         [19]  533 	ld	-1 (ix), a
      000299                        534 00113$:
      000299 DD 7E FE         [19]  535 	ld	a, -2 (ix)
      00029C DD 77 F0         [19]  536 	ld	-16 (ix), a
      00029F DD 7E FF         [19]  537 	ld	a, -1 (ix)
      0002A2 DD 77 F1         [19]  538 	ld	-15 (ix), a
      0002A5 DD 7E F0         [19]  539 	ld	a, -16 (ix)
      0002A8 DD 96 08         [19]  540 	sub	a, 8 (ix)
      0002AB DD 7E F1         [19]  541 	ld	a, -15 (ix)
      0002AE DD 9E 09         [19]  542 	sbc	a, 9 (ix)
      0002B1 30 77            [12]  543 	jr	NC, 00129$
                                    544 ;./lib/./sprite.c:62: p->initSprite = SMS_addSprite(x,y, tiles[iTile]);
      0002B3 DD 46 FC         [19]  545 	ld	b, -4 (ix)
      0002B6 DD 6E FA         [19]  546 	ld	l, -6 (ix)
                                    547 ;	spillPairReg hl
                                    548 ;	spillPairReg hl
      0002B9 DD 66 FB         [19]  549 	ld	h, -5 (ix)
                                    550 ;	spillPairReg hl
                                    551 ;	spillPairReg hl
      0002BC 29               [11]  552 	add	hl, hl
      0002BD EB               [ 4]  553 	ex	de,hl
      0002BE DD 6E 0C         [19]  554 	ld	l, 12 (ix)
                                    555 ;	spillPairReg hl
                                    556 ;	spillPairReg hl
      0002C1 DD 66 0D         [19]  557 	ld	h, 13 (ix)
                                    558 ;	spillPairReg hl
                                    559 ;	spillPairReg hl
      0002C4 19               [11]  560 	add	hl, de
      0002C5 5E               [ 7]  561 	ld	e, (hl)
      0002C6 DD 73 F0         [19]  562 	ld	-16 (ix), e
      0002C9 DD 70 F1         [19]  563 	ld	-15 (ix), b
                                    564 ;./lib/./sprite.c:61: if(ix==0 && iy == 0) {
      0002CC DD 7E FF         [19]  565 	ld	a, -1 (ix)
      0002CF DD B6 FE         [19]  566 	or	a, -2 (ix)
      0002D2 20 26            [12]  567 	jr	NZ, 00102$
      0002D4 DD 7E F9         [19]  568 	ld	a, -7 (ix)
      0002D7 DD B6 F8         [19]  569 	or	a, -8 (ix)
      0002DA 20 1E            [12]  570 	jr	NZ, 00102$
                                    571 ;./lib/./sprite.c:62: p->initSprite = SMS_addSprite(x,y, tiles[iTile]);
      0002DC DD 5E F0         [19]  572 	ld	e, -16 (ix)
      0002DF DD 56 F1         [19]  573 	ld	d, -15 (ix)
      0002E2 DD 6E F6         [19]  574 	ld	l, -10 (ix)
                                    575 ;	spillPairReg hl
                                    576 ;	spillPairReg hl
      0002E5 DD 66 F7         [19]  577 	ld	h, -9 (ix)
                                    578 ;	spillPairReg hl
                                    579 ;	spillPairReg hl
      0002E8 CDr00r00         [17]  580 	call	_SMS_addSprite_f
      0002EB 4F               [ 4]  581 	ld	c, a
      0002EC 07               [ 4]  582 	rlca
      0002ED 9F               [ 4]  583 	sbc	a, a
      0002EE 47               [ 4]  584 	ld	b, a
      0002EF DD 6E EE         [19]  585 	ld	l, -18 (ix)
      0002F2 DD 66 EF         [19]  586 	ld	h, -17 (ix)
      0002F5 71               [ 7]  587 	ld	(hl), c
      0002F6 23               [ 6]  588 	inc	hl
      0002F7 70               [ 7]  589 	ld	(hl), b
      0002F8 18 0F            [12]  590 	jr	00103$
      0002FA                        591 00102$:
                                    592 ;./lib/./sprite.c:65: SMS_addSprite(x,y, tiles[iTile]);
      0002FA DD 5E F0         [19]  593 	ld	e, -16 (ix)
      0002FD DD 56 F1         [19]  594 	ld	d, -15 (ix)
      000300 DD 6E F6         [19]  595 	ld	l, -10 (ix)
                                    596 ;	spillPairReg hl
                                    597 ;	spillPairReg hl
      000303 DD 66 F7         [19]  598 	ld	h, -9 (ix)
                                    599 ;	spillPairReg hl
                                    600 ;	spillPairReg hl
      000306 CDr00r00         [17]  601 	call	_SMS_addSprite_f
      000309                        602 00103$:
                                    603 ;./lib/./sprite.c:67: iTile++;
      000309 DD 34 FA         [23]  604 	inc	-6 (ix)
      00030C 20 03            [12]  605 	jr	NZ, 00185$
      00030E DD 34 FB         [23]  606 	inc	-5 (ix)
      000311                        607 00185$:
                                    608 ;./lib/./sprite.c:68: x += 8;
      000311 DD 7E FC         [19]  609 	ld	a, -4 (ix)
      000314 C6 08            [ 7]  610 	add	a, #0x08
      000316 DD 77 FC         [19]  611 	ld	-4 (ix), a
      000319 30 03            [12]  612 	jr	NC, 00186$
      00031B DD 34 FD         [23]  613 	inc	-3 (ix)
      00031E                        614 00186$:
                                    615 ;./lib/./sprite.c:60: for (int ix=0;ix<lx;ix++){
      00031E DD 34 FE         [23]  616 	inc	-2 (ix)
      000321 C2r99r02         [10]  617 	jp	NZ,00113$
      000324 DD 34 FF         [23]  618 	inc	-1 (ix)
      000327 C3r99r02         [10]  619 	jp	00113$
      00032A                        620 00129$:
      00032A DD 7E FA         [19]  621 	ld	a, -6 (ix)
      00032D DD 77 FE         [19]  622 	ld	-2 (ix), a
      000330 DD 7E FB         [19]  623 	ld	a, -5 (ix)
      000333 DD 77 FF         [19]  624 	ld	-1 (ix), a
      000336 DD 7E FC         [19]  625 	ld	a, -4 (ix)
      000339 DD 77 F4         [19]  626 	ld	-12 (ix), a
      00033C DD 7E FD         [19]  627 	ld	a, -3 (ix)
      00033F DD 77 F5         [19]  628 	ld	-11 (ix), a
                                    629 ;./lib/./sprite.c:70: y += 16;
      000342 DD 7E F6         [19]  630 	ld	a, -10 (ix)
      000345 C6 10            [ 7]  631 	add	a, #0x10
      000347 DD 77 F6         [19]  632 	ld	-10 (ix), a
      00034A 30 03            [12]  633 	jr	NC, 00188$
      00034C DD 34 F7         [23]  634 	inc	-9 (ix)
      00034F                        635 00188$:
                                    636 ;./lib/./sprite.c:59: for (int iy=0;iy<ly;iy++) {
      00034F DD 34 F8         [23]  637 	inc	-8 (ix)
      000352 C2r4Fr02         [10]  638 	jp	NZ,00116$
      000355 DD 34 F9         [23]  639 	inc	-7 (ix)
      000358 C3r4Fr02         [10]  640 	jp	00116$
      00035B                        641 00106$:
                                    642 ;./lib/./sprite.c:72: p->len = p->initSprite + lx*ly;
      00035B DD 7E EC         [19]  643 	ld	a, -20 (ix)
      00035E C6 0A            [ 7]  644 	add	a, #0x0a
      000360 DD 77 FE         [19]  645 	ld	-2 (ix), a
      000363 DD 7E ED         [19]  646 	ld	a, -19 (ix)
      000366 CE 00            [ 7]  647 	adc	a, #0x00
      000368 DD 77 FF         [19]  648 	ld	-1 (ix), a
      00036B DD 6E EE         [19]  649 	ld	l, -18 (ix)
      00036E DD 66 EF         [19]  650 	ld	h, -17 (ix)
      000371 7E               [ 7]  651 	ld	a, (hl)
      000372 DD 77 FC         [19]  652 	ld	-4 (ix), a
      000375 23               [ 6]  653 	inc	hl
      000376 7E               [ 7]  654 	ld	a, (hl)
      000377 DD 77 FD         [19]  655 	ld	-3 (ix), a
      00037A DD 5E 0A         [19]  656 	ld	e, 10 (ix)
      00037D DD 56 0B         [19]  657 	ld	d, 11 (ix)
      000380 DD 6E 08         [19]  658 	ld	l, 8 (ix)
                                    659 ;	spillPairReg hl
                                    660 ;	spillPairReg hl
      000383 DD 66 09         [19]  661 	ld	h, 9 (ix)
                                    662 ;	spillPairReg hl
                                    663 ;	spillPairReg hl
      000386 CDr00r00         [17]  664 	call	__mulint
      000389 DD 73 F8         [19]  665 	ld	-8 (ix), e
      00038C DD 72 F9         [19]  666 	ld	-7 (ix), d
      00038F DD 7E F8         [19]  667 	ld	a, -8 (ix)
      000392 DD 86 FC         [19]  668 	add	a, -4 (ix)
      000395 DD 77 FA         [19]  669 	ld	-6 (ix), a
      000398 DD 7E F9         [19]  670 	ld	a, -7 (ix)
      00039B DD 8E FD         [19]  671 	adc	a, -3 (ix)
      00039E DD 77 FB         [19]  672 	ld	-5 (ix), a
      0003A1 DD 6E FE         [19]  673 	ld	l, -2 (ix)
      0003A4 DD 66 FF         [19]  674 	ld	h, -1 (ix)
      0003A7 DD 7E FA         [19]  675 	ld	a, -6 (ix)
      0003AA 77               [ 7]  676 	ld	(hl), a
      0003AB 23               [ 6]  677 	inc	hl
      0003AC DD 7E FB         [19]  678 	ld	a, -5 (ix)
      0003AF 77               [ 7]  679 	ld	(hl), a
                                    680 ;./lib/./sprite.c:73: return i;
      0003B0 D1               [10]  681 	pop	de
      0003B1 D5               [11]  682 	push	de
      0003B2 18 1E            [12]  683 	jr	00118$
      0003B4                        684 00108$:
                                    685 ;./lib/./sprite.c:75: i--;
      0003B4 DD 6E FE         [19]  686 	ld	l, -2 (ix)
      0003B7 DD 66 FF         [19]  687 	ld	h, -1 (ix)
      0003BA 2B               [ 6]  688 	dec	hl
      0003BB DD 75 FE         [19]  689 	ld	-2 (ix), l
      0003BE DD 74 FF         [19]  690 	ld	-1 (ix), h
      0003C1 DD 7E FE         [19]  691 	ld	a, -2 (ix)
      0003C4 DD 77 EA         [19]  692 	ld	-22 (ix), a
      0003C7 DD 7E FF         [19]  693 	ld	a, -1 (ix)
      0003CA DD 77 EB         [19]  694 	ld	-21 (ix), a
      0003CD C3r81r01         [10]  695 	jp	00109$
      0003D0                        696 00111$:
                                    697 ;./lib/./sprite.c:77: return i;
      0003D0 D1               [10]  698 	pop	de
      0003D1 D5               [11]  699 	push	de
      0003D2                        700 00118$:
                                    701 ;./lib/./sprite.c:78: }
      0003D2 DD F9            [10]  702 	ld	sp, ix
      0003D4 DD E1            [14]  703 	pop	ix
      0003D6 E1               [10]  704 	pop	hl
      0003D7 F1               [10]  705 	pop	af
      0003D8 F1               [10]  706 	pop	af
      0003D9 F1               [10]  707 	pop	af
      0003DA F1               [10]  708 	pop	af
      0003DB F1               [10]  709 	pop	af
      0003DC E9               [ 4]  710 	jp	(hl)
                                    711 ;./lib/./sprite.c:90: void initSpritesVariables (void) {
                                    712 ;	---------------------------------
                                    713 ; Function initSpritesVariables
                                    714 ; ---------------------------------
      0003DD                        715 _initSpritesVariables::
                                    716 ;./lib/./sprite.c:92: while (i) {
      0003DD 01 40 00         [10]  717 	ld	bc, #0x0040
      0003E0                        718 00101$:
      0003E0 78               [ 4]  719 	ld	a, b
      0003E1 B1               [ 4]  720 	or	a, c
      0003E2 28 15            [12]  721 	jr	Z, 00103$
                                    722 ;./lib/./sprite.c:93: hardwareSprites[i].len = 0;
      0003E4 69               [ 4]  723 	ld	l, c
      0003E5 60               [ 4]  724 	ld	h, b
      0003E6 29               [11]  725 	add	hl, hl
      0003E7 09               [11]  726 	add	hl, bc
      0003E8 29               [11]  727 	add	hl, hl
      0003E9 29               [11]  728 	add	hl, hl
      0003EA 11r00r00         [10]  729 	ld	de, #_hardwareSprites
      0003ED 19               [11]  730 	add	hl, de
      0003EE 11 0A 00         [10]  731 	ld	de, #0x000a
      0003F1 19               [11]  732 	add	hl, de
      0003F2 AF               [ 4]  733 	xor	a, a
      0003F3 77               [ 7]  734 	ld	(hl), a
      0003F4 23               [ 6]  735 	inc	hl
      0003F5 77               [ 7]  736 	ld	(hl), a
                                    737 ;./lib/./sprite.c:94: i--;
      0003F6 0B               [ 6]  738 	dec	bc
      0003F7 18 E7            [12]  739 	jr	00101$
      0003F9                        740 00103$:
                                    741 ;./lib/./sprite.c:107: __endasm;
      0003F9 21r00r00         [10]  742 	ld	hl, #_SpriteNextFree
      0003FC 22r04r03         [16]  743 	ld	(#_SpriteNextFree2), hl
      0003FF 21r00r00         [10]  744 	ld	hl, #_SpriteTableY
      000402 22r00r03         [16]  745 	ld	(#_SpriteTableY2), hl
      000405 21r00r00         [10]  746 	ld	hl, #_SpriteTableXN
      000408 22r02r03         [16]  747 	ld	(#_SpriteTableXN2), hl
                                    748 ;./lib/./sprite.c:110: }
      00040B C9               [10]  749 	ret
                                    750 ;./lib/./sprite.c:127: void copySpritestoSAT (void) {
                                    751 ;	---------------------------------
                                    752 ; Function copySpritestoSAT
                                    753 ; ---------------------------------
      00040C                        754 _copySpritestoSAT::
                                    755 ;./lib/./sprite.c:128: SMS_setAddr(SMS_SATAddress);
      00040C 21 00 7F         [10]  756 	ld	hl, #0x7f00
      00040F CF               [11]  757 	rst	#0x08
                                    758 ;./lib/./sprite.c:144: __endasm;
      000410 3Ar00r00         [13]  759 	ld	a,(#_SpriteNextFree)
      000413 B7               [ 4]  760 	or	a
      000414 28 25            [12]  761 	jr	z,_no_sprites
      000416 47               [ 4]  762 	ld	b,a
      000417 0E BE            [ 7]  763 	ld	c,#_VDPDataPort
      000419 21r00r00         [10]  764 	ld	hl,#_SpriteTableY
      00041C                        765 _next_spriteY:
      00041C ED A3            [16]  766 	outi	; 16 cycles
      00041E 20 FC            [12]  767 	jr	nz,_next_spriteY ; 12 cycles = 28 (VRAM safe on GG too)
      000420 FE 40            [ 7]  768 	cp	#64 ; 7 cycles
      000422 28 04            [12]  769 	jr	z,_no_sprite_term ; 7 cycles
      000424 3E D0            [ 7]  770 	ld	a,#0xD0 ; 7 cycles => VRAM safe
      000426 ED 79            [12]  771 	out	(c),a
      000428                        772 _no_sprite_term:
                                    773 ;./lib/./sprite.c:145: SMS_setAddr(SMS_SATAddress+128);
      000428 21 80 7F         [10]  774 	ld	hl, #0x7f80
      00042B CF               [11]  775 	rst	#0x08
                                    776 ;./lib/./sprite.c:160: __endasm;
      00042C 0E BE            [ 7]  777 	ld	c,#_VDPDataPort
      00042E 3Ar00r00         [13]  778 	ld	a,(#_SpriteNextFree)
      000431 87               [ 4]  779 	add	a,a
      000432 47               [ 4]  780 	ld	b,a
      000433 21r00r00         [10]  781 	ld	hl,#_SpriteTableXN
      000436                        782 _next_spriteXN:
      000436 ED A3            [16]  783 	outi	; 16 cycles
      000438 20 FC            [12]  784 	jr	nz,_next_spriteXN ; 12 cycles = 28 (VRAM safe on GG too)
      00043A C9               [10]  785 	ret
      00043B                        786 _no_sprites:
      00043B 3E D0            [ 7]  787 	ld	a,#0xD0
      00043D D3 BE            [11]  788 	out	(#_VDPDataPort),a
                                    789 ;./lib/./sprite.c:161: }
      00043F C9               [10]  790 	ret
                                    791 ;./lib/entities.c:12: void draw_entidad(T_entidad *entidad, T_sprite *sprite){
                                    792 ;	---------------------------------
                                    793 ; Function draw_entidad
                                    794 ; ---------------------------------
      000440                        795 _draw_entidad::
      000440 DD E5            [15]  796 	push	ix
      000442 DD 21 00 00      [14]  797 	ld	ix,#0
      000446 DD 39            [15]  798 	add	ix,sp
      000448 FD 21 E3 FF      [14]  799 	ld	iy, #-29
      00044C FD 39            [15]  800 	add	iy, sp
      00044E FD F9            [10]  801 	ld	sp, iy
      000450 DD 75 FC         [19]  802 	ld	-4 (ix), l
      000453 DD 74 FD         [19]  803 	ld	-3 (ix), h
                                    804 ;./lib/entities.c:14: if (sprite->allInRAM == 1){
      000456 DD 73 FA         [19]  805 	ld	-6 (ix), e
      000459 DD 72 FB         [19]  806 	ld	-5 (ix), d
      00045C 4B               [ 4]  807 	ld	c, e
      00045D 42               [ 4]  808 	ld	b, d
      00045E 21 06 00         [10]  809 	ld	hl, #6
      000461 09               [11]  810 	add	hl, bc
      000462 4E               [ 7]  811 	ld	c, (hl)
                                    812 ;./lib/entities.c:15: if (entidad->initSprite == 255) {
      000463 DD 7E FC         [19]  813 	ld	a, -4 (ix)
      000466 C6 06            [ 7]  814 	add	a, #0x06
      000468 DD 77 F2         [19]  815 	ld	-14 (ix), a
      00046B DD 7E FD         [19]  816 	ld	a, -3 (ix)
      00046E CE 00            [ 7]  817 	adc	a, #0x00
      000470 DD 77 F3         [19]  818 	ld	-13 (ix), a
      000473 DD 6E F2         [19]  819 	ld	l, -14 (ix)
      000476 DD 66 F3         [19]  820 	ld	h, -13 (ix)
      000479 46               [ 7]  821 	ld	b, (hl)
                                    822 ;./lib/entities.c:16: int frame = sprite->tamano*entidad->frame + sprite->beginVRAM;
      00047A DD 7E FC         [19]  823 	ld	a, -4 (ix)
      00047D C6 02            [ 7]  824 	add	a, #0x02
      00047F DD 77 F4         [19]  825 	ld	-12 (ix), a
      000482 DD 7E FD         [19]  826 	ld	a, -3 (ix)
      000485 CE 00            [ 7]  827 	adc	a, #0x00
      000487 DD 77 F5         [19]  828 	ld	-11 (ix), a
                                    829 ;./lib/entities.c:17: for(j=0;j<sprite->alto;j++) {
      00048A DD 7E FC         [19]  830 	ld	a, -4 (ix)
      00048D C6 01            [ 7]  831 	add	a, #0x01
      00048F DD 77 F8         [19]  832 	ld	-8 (ix), a
      000492 DD 7E FD         [19]  833 	ld	a, -3 (ix)
      000495 CE 00            [ 7]  834 	adc	a, #0x00
      000497 DD 77 F9         [19]  835 	ld	-7 (ix), a
      00049A DD 7E FA         [19]  836 	ld	a, -6 (ix)
      00049D C6 01            [ 7]  837 	add	a, #0x01
      00049F DD 77 FE         [19]  838 	ld	-2 (ix), a
      0004A2 DD 7E FB         [19]  839 	ld	a, -5 (ix)
      0004A5 CE 00            [ 7]  840 	adc	a, #0x00
      0004A7 DD 77 FF         [19]  841 	ld	-1 (ix), a
                                    842 ;./lib/entities.c:27: entidad->len = (sprite->alto * sprite->ancho + entidad->initSprite)*2;
      0004AA DD 7E FC         [19]  843 	ld	a, -4 (ix)
      0004AD C6 07            [ 7]  844 	add	a, #0x07
      0004AF DD 77 E3         [19]  845 	ld	-29 (ix), a
      0004B2 DD 7E FD         [19]  846 	ld	a, -3 (ix)
      0004B5 CE 00            [ 7]  847 	adc	a, #0x00
      0004B7 DD 77 E4         [19]  848 	ld	-28 (ix), a
                                    849 ;./lib/entities.c:15: if (entidad->initSprite == 255) {
      0004BA 04               [ 4]  850 	inc	b
      0004BB 3E 01            [ 7]  851 	ld	a, #0x01
      0004BD 28 01            [12]  852 	jr	Z, 00253$
      0004BF AF               [ 4]  853 	xor	a, a
      0004C0                        854 00253$:
      0004C0 DD 77 F7         [19]  855 	ld	-9 (ix), a
                                    856 ;./lib/entities.c:14: if (sprite->allInRAM == 1){
      0004C3 0D               [ 4]  857 	dec	c
      0004C4 C2rD7r06         [10]  858 	jp	NZ,00120$
                                    859 ;./lib/entities.c:15: if (entidad->initSprite == 255) {
      0004C7 DD 7E F2         [19]  860 	ld	a, -14 (ix)
      0004CA DD 77 E5         [19]  861 	ld	-27 (ix), a
      0004CD DD 7E F3         [19]  862 	ld	a, -13 (ix)
      0004D0 DD 77 E6         [19]  863 	ld	-26 (ix), a
      0004D3 DD 7E F7         [19]  864 	ld	a, -9 (ix)
      0004D6 B7               [ 4]  865 	or	a, a
      0004D7 CAr61r08         [10]  866 	jp	Z, 00134$
                                    867 ;./lib/entities.c:16: int frame = sprite->tamano*entidad->frame + sprite->beginVRAM;
      0004DA DD 7E FA         [19]  868 	ld	a, -6 (ix)
      0004DD DD 77 F2         [19]  869 	ld	-14 (ix), a
      0004E0 DD 7E FB         [19]  870 	ld	a, -5 (ix)
      0004E3 DD 77 F3         [19]  871 	ld	-13 (ix), a
      0004E6 DD 6E F2         [19]  872 	ld	l, -14 (ix)
      0004E9 DD 66 F3         [19]  873 	ld	h, -13 (ix)
      0004EC 23               [ 6]  874 	inc	hl
      0004ED 23               [ 6]  875 	inc	hl
      0004EE 7E               [ 7]  876 	ld	a, (hl)
      0004EF DD 77 F6         [19]  877 	ld	-10 (ix), a
      0004F2 DD 6E F4         [19]  878 	ld	l, -12 (ix)
      0004F5 DD 66 F5         [19]  879 	ld	h, -11 (ix)
      0004F8 7E               [ 7]  880 	ld	a, (hl)
      0004F9 DD 77 F7         [19]  881 	ld	-9 (ix), a
      0004FC DD 7E F6         [19]  882 	ld	a, -10 (ix)
      0004FF DD 77 F5         [19]  883 	ld	-11 (ix), a
      000502 DD 5E F7         [19]  884 	ld	e, -9 (ix)
      000505 DD 66 F5         [19]  885 	ld	h, -11 (ix)
                                    886 ;	spillPairReg hl
                                    887 ;	spillPairReg hl
      000508 2E 00            [ 7]  888 	ld	l, #0x00
      00050A 55               [ 4]  889 	ld	d, l
      00050B 06 08            [ 7]  890 	ld	b, #0x08
      00050D                        891 00256$:
      00050D 29               [11]  892 	add	hl, hl
      00050E 30 01            [12]  893 	jr	NC, 00257$
      000510 19               [11]  894 	add	hl, de
      000511                        895 00257$:
      000511 10 FA            [13]  896 	djnz	00256$
      000513 DD 75 F7         [19]  897 	ld	-9 (ix), l
      000516 DD 7E FA         [19]  898 	ld	a, -6 (ix)
      000519 DD 77 F5         [19]  899 	ld	-11 (ix), a
      00051C DD 7E FB         [19]  900 	ld	a, -5 (ix)
      00051F DD 77 F6         [19]  901 	ld	-10 (ix), a
      000522 DD 6E F5         [19]  902 	ld	l, -11 (ix)
      000525 DD 66 F6         [19]  903 	ld	h, -10 (ix)
      000528 11 04 00         [10]  904 	ld	de, #0x0004
      00052B 19               [11]  905 	add	hl, de
      00052C 7E               [ 7]  906 	ld	a, (hl)
      00052D DD 77 F6         [19]  907 	ld	-10 (ix), a
      000530 DD 86 F7         [19]  908 	add	a, -9 (ix)
      000533 DD 77 E7         [19]  909 	ld	-25 (ix), a
                                    910 ;./lib/entities.c:17: for(j=0;j<sprite->alto;j++) {
      000536 DD 7E F8         [19]  911 	ld	a, -8 (ix)
      000539 DD 77 E8         [19]  912 	ld	-24 (ix), a
      00053C DD 7E F9         [19]  913 	ld	a, -7 (ix)
      00053F DD 77 E9         [19]  914 	ld	-23 (ix), a
      000542 DD 7E FE         [19]  915 	ld	a, -2 (ix)
      000545 DD 77 EA         [19]  916 	ld	-22 (ix), a
      000548 DD 7E FF         [19]  917 	ld	a, -1 (ix)
      00054B DD 77 EB         [19]  918 	ld	-21 (ix), a
      00054E DD 36 FE 00      [19]  919 	ld	-2 (ix), #0x00
      000552                        920 00126$:
      000552 DD 6E FA         [19]  921 	ld	l, -6 (ix)
      000555 DD 66 FB         [19]  922 	ld	h, -5 (ix)
      000558 7E               [ 7]  923 	ld	a, (hl)
      000559 DD 77 FF         [19]  924 	ld	-1 (ix), a
      00055C DD 7E FE         [19]  925 	ld	a, -2 (ix)
      00055F DD 96 FF         [19]  926 	sub	a, -1 (ix)
      000562 D2r9Br06         [10]  927 	jp	NC, 00106$
                                    928 ;./lib/entities.c:18: unsigned char desplazado = (j<<2);
      000565 DD 7E FE         [19]  929 	ld	a, -2 (ix)
      000568 DD 77 FF         [19]  930 	ld	-1 (ix), a
      00056B DD CB FF 26      [23]  931 	sla	-1 (ix)
      00056F DD CB FF 26      [23]  932 	sla	-1 (ix)
                                    933 ;./lib/entities.c:19: unsigned char jCalculated = desplazado + frame, y = entidad->y+(desplazado<<2);
      000573 DD 7E FF         [19]  934 	ld	a, -1 (ix)
      000576 DD 77 F9         [19]  935 	ld	-7 (ix), a
      000579 DD 86 E7         [19]  936 	add	a, -25 (ix)
      00057C DD 77 FF         [19]  937 	ld	-1 (ix), a
      00057F DD 77 EC         [19]  938 	ld	-20 (ix), a
      000582 DD 6E E8         [19]  939 	ld	l, -24 (ix)
      000585 DD 66 E9         [19]  940 	ld	h, -23 (ix)
      000588 7E               [ 7]  941 	ld	a, (hl)
      000589 DD 77 FF         [19]  942 	ld	-1 (ix), a
      00058C DD CB F9 26      [23]  943 	sla	-7 (ix)
      000590 DD CB F9 26      [23]  944 	sla	-7 (ix)
      000594 DD 7E FF         [19]  945 	ld	a, -1 (ix)
      000597 DD 86 F9         [19]  946 	add	a, -7 (ix)
      00059A DD 77 FF         [19]  947 	ld	-1 (ix), a
      00059D DD 77 ED         [19]  948 	ld	-19 (ix), a
                                    949 ;./lib/entities.c:20: for(i=0;i<sprite->ancho;i++) {
      0005A0 DD 36 FF 00      [19]  950 	ld	-1 (ix), #0x00
      0005A4                        951 00123$:
      0005A4 DD 6E EA         [19]  952 	ld	l, -22 (ix)
      0005A7 DD 66 EB         [19]  953 	ld	h, -21 (ix)
      0005AA DD 7E FF         [19]  954 	ld	a,-1 (ix)
      0005AD 96               [ 7]  955 	sub	a,(hl)
      0005AE D2r95r06         [10]  956 	jp	NC, 00127$
                                    957 ;./lib/entities.c:22: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      0005B1 DD 6E FC         [19]  958 	ld	l, -4 (ix)
      0005B4 DD 66 FD         [19]  959 	ld	h, -3 (ix)
      0005B7 7E               [ 7]  960 	ld	a, (hl)
      0005B8 DD 77 F7         [19]  961 	ld	-9 (ix), a
      0005BB DD 7E FF         [19]  962 	ld	a, -1 (ix)
      0005BE DD 77 F8         [19]  963 	ld	-8 (ix), a
      0005C1 DD 36 F9 00      [19]  964 	ld	-7 (ix), #0x00
      0005C5 DD 7E EC         [19]  965 	ld	a, -20 (ix)
      0005C8 DD 77 EE         [19]  966 	ld	-18 (ix), a
      0005CB DD 36 EF 00      [19]  967 	ld	-17 (ix), #0x00
      0005CF DD 7E ED         [19]  968 	ld	a, -19 (ix)
      0005D2 DD 77 F0         [19]  969 	ld	-16 (ix), a
      0005D5 DD 36 F1 00      [19]  970 	ld	-15 (ix), #0x00
      0005D9 DD 7E F7         [19]  971 	ld	a, -9 (ix)
      0005DC DD 77 F2         [19]  972 	ld	-14 (ix), a
      0005DF DD 36 F3 00      [19]  973 	ld	-13 (ix), #0x00
      0005E3 DD 7E F8         [19]  974 	ld	a, -8 (ix)
      0005E6 DD 77 F4         [19]  975 	ld	-12 (ix), a
      0005E9 DD 7E F9         [19]  976 	ld	a, -7 (ix)
      0005EC DD 77 F5         [19]  977 	ld	-11 (ix), a
      0005EF 06 03            [ 7]  978 	ld	b, #0x03
      0005F1                        979 00258$:
      0005F1 DD CB F4 26      [23]  980 	sla	-12 (ix)
      0005F5 DD CB F5 16      [23]  981 	rl	-11 (ix)
      0005F9 10 F6            [13]  982 	djnz	00258$
      0005FB DD 7E F8         [19]  983 	ld	a, -8 (ix)
      0005FE DD 77 F6         [19]  984 	ld	-10 (ix), a
      000601 DD 7E F9         [19]  985 	ld	a, -7 (ix)
      000604 DD 77 F7         [19]  986 	ld	-9 (ix), a
      000607 DD CB F6 26      [23]  987 	sla	-10 (ix)
      00060B DD CB F7 16      [23]  988 	rl	-9 (ix)
      00060F DD 7E F4         [19]  989 	ld	a, -12 (ix)
      000612 DD 86 F2         [19]  990 	add	a, -14 (ix)
      000615 DD 77 F8         [19]  991 	ld	-8 (ix), a
      000618 DD 7E F5         [19]  992 	ld	a, -11 (ix)
      00061B DD 8E F3         [19]  993 	adc	a, -13 (ix)
      00061E DD 77 F9         [19]  994 	ld	-7 (ix), a
      000621 DD 7E EE         [19]  995 	ld	a, -18 (ix)
      000624 DD 86 F6         [19]  996 	add	a, -10 (ix)
      000627 DD 77 F4         [19]  997 	ld	-12 (ix), a
      00062A 3E 00            [ 7]  998 	ld	a, #0x00
      00062C DD 8E F7         [19]  999 	adc	a, -9 (ix)
      00062F DD 77 F5         [19] 1000 	ld	-11 (ix), a
      000632 DD 7E F8         [19] 1001 	ld	a, -8 (ix)
      000635 DD 77 F6         [19] 1002 	ld	-10 (ix), a
      000638 DD 36 F7 00      [19] 1003 	ld	-9 (ix), #0x00
      00063C DD 7E F4         [19] 1004 	ld	a, -12 (ix)
      00063F DD 77 F8         [19] 1005 	ld	-8 (ix), a
      000642 DD 36 F9 00      [19] 1006 	ld	-7 (ix), #0x00
      000646 DD 7E F6         [19] 1007 	ld	a, -10 (ix)
      000649 DD 77 F7         [19] 1008 	ld	-9 (ix), a
      00064C DD 36 F6 00      [19] 1009 	ld	-10 (ix), #0x00
      000650 AF               [ 4] 1010 	xor	a, a
      000651 DD B6 F8         [19] 1011 	or	a, -8 (ix)
      000654 DD 77 F4         [19] 1012 	ld	-12 (ix), a
      000657 DD 7E F7         [19] 1013 	ld	a, -9 (ix)
      00065A DD B6 F9         [19] 1014 	or	a, -7 (ix)
      00065D DD 77 F5         [19] 1015 	ld	-11 (ix), a
                                   1016 ;./lib/entities.c:21: if(i==0 && j==0)
      000660 DD 7E FF         [19] 1017 	ld	a, -1 (ix)
      000663 B7               [ 4] 1018 	or	a, a
      000664 20 1B            [12] 1019 	jr	NZ, 00102$
      000666 DD 7E FE         [19] 1020 	ld	a, -2 (ix)
      000669 B7               [ 4] 1021 	or	a, a
      00066A 20 15            [12] 1022 	jr	NZ, 00102$
                                   1023 ;./lib/entities.c:22: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      00066C DD 5E F4         [19] 1024 	ld	e, -12 (ix)
      00066F DD 56 F5         [19] 1025 	ld	d, -11 (ix)
      000672 DD 6E F0         [19] 1026 	ld	l, -16 (ix)
                                   1027 ;	spillPairReg hl
                                   1028 ;	spillPairReg hl
      000675 26 00            [ 7] 1029 	ld	h, #0x00
                                   1030 ;	spillPairReg hl
                                   1031 ;	spillPairReg hl
      000677 CDr00r00         [17] 1032 	call	_SMS_addSprite_f
      00067A C1               [10] 1033 	pop	bc
      00067B E1               [10] 1034 	pop	hl
      00067C E5               [11] 1035 	push	hl
      00067D C5               [11] 1036 	push	bc
      00067E 77               [ 7] 1037 	ld	(hl), a
      00067F 18 0E            [12] 1038 	jr	00124$
      000681                       1039 00102$:
                                   1040 ;./lib/entities.c:24: SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      000681 DD 5E F4         [19] 1041 	ld	e, -12 (ix)
      000684 DD 56 F5         [19] 1042 	ld	d, -11 (ix)
      000687 DD 6E F0         [19] 1043 	ld	l, -16 (ix)
                                   1044 ;	spillPairReg hl
                                   1045 ;	spillPairReg hl
      00068A 26 00            [ 7] 1046 	ld	h, #0x00
                                   1047 ;	spillPairReg hl
                                   1048 ;	spillPairReg hl
      00068C CDr00r00         [17] 1049 	call	_SMS_addSprite_f
      00068F                       1050 00124$:
                                   1051 ;./lib/entities.c:20: for(i=0;i<sprite->ancho;i++) {
      00068F DD 34 FF         [23] 1052 	inc	-1 (ix)
      000692 C3rA4r05         [10] 1053 	jp	00123$
      000695                       1054 00127$:
                                   1055 ;./lib/entities.c:17: for(j=0;j<sprite->alto;j++) {
      000695 DD 34 FE         [23] 1056 	inc	-2 (ix)
      000698 C3r52r05         [10] 1057 	jp	00126$
      00069B                       1058 00106$:
                                   1059 ;./lib/entities.c:27: entidad->len = (sprite->alto * sprite->ancho + entidad->initSprite)*2;
      00069B DD 6E EA         [19] 1060 	ld	l, -22 (ix)
      00069E DD 66 EB         [19] 1061 	ld	h, -21 (ix)
      0006A1 7E               [ 7] 1062 	ld	a, (hl)
      0006A2 DD 77 FE         [19] 1063 	ld	-2 (ix), a
      0006A5 5F               [ 4] 1064 	ld	e, a
      0006A6 DD 66 FF         [19] 1065 	ld	h, -1 (ix)
                                   1066 ;	spillPairReg hl
                                   1067 ;	spillPairReg hl
      0006A9 2E 00            [ 7] 1068 	ld	l, #0x00
      0006AB 55               [ 4] 1069 	ld	d, l
      0006AC 06 08            [ 7] 1070 	ld	b, #0x08
      0006AE                       1071 00260$:
      0006AE 29               [11] 1072 	add	hl, hl
      0006AF 30 01            [12] 1073 	jr	NC, 00261$
      0006B1 19               [11] 1074 	add	hl, de
      0006B2                       1075 00261$:
      0006B2 10 FA            [13] 1076 	djnz	00260$
      0006B4 DD 75 FF         [19] 1077 	ld	-1 (ix), l
      0006B7 DD 6E E5         [19] 1078 	ld	l, -27 (ix)
      0006BA DD 66 E6         [19] 1079 	ld	h, -26 (ix)
      0006BD 7E               [ 7] 1080 	ld	a, (hl)
      0006BE DD 77 FE         [19] 1081 	ld	-2 (ix), a
      0006C1 DD 7E FF         [19] 1082 	ld	a, -1 (ix)
      0006C4 DD 86 FE         [19] 1083 	add	a, -2 (ix)
      0006C7 DD 77 FF         [19] 1084 	ld	-1 (ix), a
      0006CA DD CB FF 26      [23] 1085 	sla	-1 (ix)
      0006CE E1               [10] 1086 	pop	hl
      0006CF E5               [11] 1087 	push	hl
      0006D0 DD 7E FF         [19] 1088 	ld	a, -1 (ix)
      0006D3 77               [ 7] 1089 	ld	(hl), a
      0006D4 C3r61r08         [10] 1090 	jp	00134$
      0006D7                       1091 00120$:
                                   1092 ;./lib/entities.c:32: if (entidad->initSprite == 255) {
      0006D7 DD 7E F2         [19] 1093 	ld	a, -14 (ix)
      0006DA DD 77 EC         [19] 1094 	ld	-20 (ix), a
      0006DD DD 7E F3         [19] 1095 	ld	a, -13 (ix)
      0006E0 DD 77 ED         [19] 1096 	ld	-19 (ix), a
      0006E3 DD 7E F7         [19] 1097 	ld	a, -9 (ix)
      0006E6 B7               [ 4] 1098 	or	a, a
      0006E7 CAr61r08         [10] 1099 	jp	Z, 00134$
                                   1100 ;./lib/entities.c:33: if (entidad->frame != sprite->frameInVRAM){
      0006EA DD 6E F4         [19] 1101 	ld	l, -12 (ix)
      0006ED DD 66 F5         [19] 1102 	ld	h, -11 (ix)
      0006F0 7E               [ 7] 1103 	ld	a, (hl)
      0006F1 DD 77 F7         [19] 1104 	ld	-9 (ix), a
      0006F4 DD 7E FA         [19] 1105 	ld	a, -6 (ix)
      0006F7 C6 09            [ 7] 1106 	add	a, #0x09
      0006F9 DD 77 F5         [19] 1107 	ld	-11 (ix), a
      0006FC DD 7E FB         [19] 1108 	ld	a, -5 (ix)
      0006FF CE 00            [ 7] 1109 	adc	a, #0x00
      000701 DD 77 F6         [19] 1110 	ld	-10 (ix), a
      000704 DD 6E F5         [19] 1111 	ld	l, -11 (ix)
      000707 DD 66 F6         [19] 1112 	ld	h, -10 (ix)
      00070A DD 7E F7         [19] 1113 	ld	a,-9 (ix)
      00070D 96               [ 7] 1114 	sub	a,(hl)
      00070E 28 0A            [12] 1115 	jr	Z, 00151$
                                   1116 ;./lib/entities.c:35: sprite->frameInVRAM = entidad->frame;
      000710 DD 6E F5         [19] 1117 	ld	l, -11 (ix)
      000713 DD 66 F6         [19] 1118 	ld	h, -10 (ix)
      000716 DD 7E F7         [19] 1119 	ld	a, -9 (ix)
      000719 77               [ 7] 1120 	ld	(hl), a
                                   1121 ;./lib/entities.c:37: for(j=0;j<sprite->alto;j++) {
      00071A                       1122 00151$:
      00071A DD 7E F8         [19] 1123 	ld	a, -8 (ix)
      00071D DD 77 EE         [19] 1124 	ld	-18 (ix), a
      000720 DD 7E F9         [19] 1125 	ld	a, -7 (ix)
      000723 DD 77 EF         [19] 1126 	ld	-17 (ix), a
      000726 DD 7E F8         [19] 1127 	ld	a, -8 (ix)
      000729 DD 77 F0         [19] 1128 	ld	-16 (ix), a
      00072C DD 7E F9         [19] 1129 	ld	a, -7 (ix)
      00072F DD 77 F1         [19] 1130 	ld	-15 (ix), a
      000732 DD 7E FE         [19] 1131 	ld	a, -2 (ix)
      000735 DD 77 F2         [19] 1132 	ld	-14 (ix), a
      000738 DD 7E FF         [19] 1133 	ld	a, -1 (ix)
      00073B DD 77 F3         [19] 1134 	ld	-13 (ix), a
      00073E DD 36 FE 00      [19] 1135 	ld	-2 (ix), #0x00
      000742                       1136 00132$:
      000742 DD 6E FA         [19] 1137 	ld	l, -6 (ix)
      000745 DD 66 FB         [19] 1138 	ld	h, -5 (ix)
      000748 7E               [ 7] 1139 	ld	a, (hl)
      000749 DD 77 FF         [19] 1140 	ld	-1 (ix), a
      00074C DD 7E FE         [19] 1141 	ld	a, -2 (ix)
      00074F DD 96 FF         [19] 1142 	sub	a, -1 (ix)
      000752 D2r10r08         [10] 1143 	jp	NC, 00116$
                                   1144 ;./lib/entities.c:38: for(i=0;i<sprite->ancho;i++) {
      000755 DD 36 FF 00      [19] 1145 	ld	-1 (ix), #0x00
      000759                       1146 00129$:
      000759 DD 6E F2         [19] 1147 	ld	l, -14 (ix)
      00075C DD 66 F3         [19] 1148 	ld	h, -13 (ix)
      00075F DD 7E FF         [19] 1149 	ld	a,-1 (ix)
      000762 96               [ 7] 1150 	sub	a,(hl)
      000763 D2r0Ar08         [10] 1151 	jp	NC, 00133$
                                   1152 ;./lib/entities.c:22: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      000766 DD 6E FC         [19] 1153 	ld	l, -4 (ix)
      000769 DD 66 FD         [19] 1154 	ld	h, -3 (ix)
      00076C 7E               [ 7] 1155 	ld	a, (hl)
                                   1156 ;./lib/entities.c:40: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),entidad->y+(j<<4), (j<<2) + (i<<1) );  
      00076D DD 4E FF         [19] 1157 	ld	c, -1 (ix)
      000770 06 00            [ 7] 1158 	ld	b, #0x00
      000772 DD 5E FE         [19] 1159 	ld	e, -2 (ix)
      000775 16 00            [ 7] 1160 	ld	d, #0x00
                                   1161 ;./lib/entities.c:22: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      000777 DD 77 F4         [19] 1162 	ld	-12 (ix), a
      00077A DD 36 F5 00      [19] 1163 	ld	-11 (ix), #0x00
                                   1164 ;./lib/entities.c:40: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),entidad->y+(j<<4), (j<<2) + (i<<1) );  
      00077E DD 71 F6         [19] 1165 	ld	-10 (ix), c
      000781 DD 70 F7         [19] 1166 	ld	-9 (ix), b
      000784 3E 03            [ 7] 1167 	ld	a, #0x03
      000786                       1168 00263$:
      000786 DD CB F6 26      [23] 1169 	sla	-10 (ix)
      00078A DD CB F7 16      [23] 1170 	rl	-9 (ix)
      00078E 3D               [ 4] 1171 	dec	a
      00078F 20 F5            [12] 1172 	jr	NZ, 00263$
      000791 6B               [ 4] 1173 	ld	l, e
      000792 62               [ 4] 1174 	ld	h, d
      000793 29               [11] 1175 	add	hl, hl
      000794 29               [11] 1176 	add	hl, hl
      000795 CB 21            [ 8] 1177 	sla	c
      000797 CB 10            [ 8] 1178 	rl	b
      000799 EB               [ 4] 1179 	ex	de, hl
      00079A 29               [11] 1180 	add	hl, hl
      00079B 29               [11] 1181 	add	hl, hl
      00079C 29               [11] 1182 	add	hl, hl
      00079D 29               [11] 1183 	add	hl, hl
      00079E EB               [ 4] 1184 	ex	de, hl
      00079F DD 73 F8         [19] 1185 	ld	-8 (ix), e
      0007A2 DD 72 F9         [19] 1186 	ld	-7 (ix), d
      0007A5 DD 7E F4         [19] 1187 	ld	a, -12 (ix)
      0007A8 DD 86 F6         [19] 1188 	add	a, -10 (ix)
      0007AB 5F               [ 4] 1189 	ld	e, a
      0007AC 3E 00            [ 7] 1190 	ld	a, #0x00
      0007AE DD 8E F7         [19] 1191 	adc	a, -9 (ix)
      0007B1 09               [11] 1192 	add	hl, bc
                                   1193 ;	spillPairReg hl
                                   1194 ;	spillPairReg hl
      0007B2 AF               [ 4] 1195 	xor	a, a
      0007B3 67               [ 4] 1196 	ld	h,a
      0007B4 B5               [ 4] 1197 	or	a, l
      0007B5 DD 77 F6         [19] 1198 	ld	-10 (ix), a
      0007B8 7B               [ 4] 1199 	ld	a, e
      0007B9 B4               [ 4] 1200 	or	a, h
      0007BA DD 77 F7         [19] 1201 	ld	-9 (ix), a
                                   1202 ;./lib/entities.c:39: if(i==0 && j==0) {
      0007BD DD 7E FF         [19] 1203 	ld	a, -1 (ix)
      0007C0 B7               [ 4] 1204 	or	a, a
      0007C1 20 28            [12] 1205 	jr	NZ, 00112$
      0007C3 DD 7E FE         [19] 1206 	ld	a, -2 (ix)
      0007C6 B7               [ 4] 1207 	or	a, a
      0007C7 20 22            [12] 1208 	jr	NZ, 00112$
                                   1209 ;./lib/entities.c:40: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),entidad->y+(j<<4), (j<<2) + (i<<1) );  
      0007C9 DD 6E F0         [19] 1210 	ld	l, -16 (ix)
      0007CC DD 66 F1         [19] 1211 	ld	h, -15 (ix)
      0007CF 4E               [ 7] 1212 	ld	c, (hl)
      0007D0 06 00            [ 7] 1213 	ld	b, #0x00
      0007D2 DD 6E F8         [19] 1214 	ld	l, -8 (ix)
                                   1215 ;	spillPairReg hl
                                   1216 ;	spillPairReg hl
      0007D5 DD 66 F9         [19] 1217 	ld	h, -7 (ix)
                                   1218 ;	spillPairReg hl
                                   1219 ;	spillPairReg hl
      0007D8 09               [11] 1220 	add	hl, bc
      0007D9 DD 5E F6         [19] 1221 	ld	e, -10 (ix)
      0007DC DD 56 F7         [19] 1222 	ld	d, -9 (ix)
      0007DF CDr00r00         [17] 1223 	call	_SMS_addSprite_f
      0007E2 DD 6E EC         [19] 1224 	ld	l, -20 (ix)
      0007E5 DD 66 ED         [19] 1225 	ld	h, -19 (ix)
      0007E8 77               [ 7] 1226 	ld	(hl), a
      0007E9 18 19            [12] 1227 	jr	00130$
      0007EB                       1228 00112$:
                                   1229 ;./lib/entities.c:43: SMS_addSprite(entidad->x+(i<<3),entidad->y+(j<<4), (j<<2) + (i<<1) );
      0007EB DD 6E EE         [19] 1230 	ld	l, -18 (ix)
      0007EE DD 66 EF         [19] 1231 	ld	h, -17 (ix)
      0007F1 4E               [ 7] 1232 	ld	c, (hl)
      0007F2 06 00            [ 7] 1233 	ld	b, #0x00
      0007F4 DD 6E F8         [19] 1234 	ld	l, -8 (ix)
                                   1235 ;	spillPairReg hl
                                   1236 ;	spillPairReg hl
      0007F7 DD 66 F9         [19] 1237 	ld	h, -7 (ix)
                                   1238 ;	spillPairReg hl
                                   1239 ;	spillPairReg hl
      0007FA 09               [11] 1240 	add	hl, bc
      0007FB DD 5E F6         [19] 1241 	ld	e, -10 (ix)
      0007FE DD 56 F7         [19] 1242 	ld	d, -9 (ix)
      000801 CDr00r00         [17] 1243 	call	_SMS_addSprite_f
      000804                       1244 00130$:
                                   1245 ;./lib/entities.c:38: for(i=0;i<sprite->ancho;i++) {
      000804 DD 34 FF         [23] 1246 	inc	-1 (ix)
      000807 C3r59r07         [10] 1247 	jp	00129$
      00080A                       1248 00133$:
                                   1249 ;./lib/entities.c:37: for(j=0;j<sprite->alto;j++) {
      00080A DD 34 FE         [23] 1250 	inc	-2 (ix)
      00080D C3r42r07         [10] 1251 	jp	00132$
      000810                       1252 00116$:
                                   1253 ;./lib/entities.c:47: entidad->len = sprite->alto * sprite->ancho + entidad->initSprite;
      000810 DD 6E F2         [19] 1254 	ld	l, -14 (ix)
      000813 DD 66 F3         [19] 1255 	ld	h, -13 (ix)
      000816 7E               [ 7] 1256 	ld	a, (hl)
      000817 DD 77 FE         [19] 1257 	ld	-2 (ix), a
      00081A 5F               [ 4] 1258 	ld	e, a
      00081B DD 66 FF         [19] 1259 	ld	h, -1 (ix)
                                   1260 ;	spillPairReg hl
                                   1261 ;	spillPairReg hl
      00081E 2E 00            [ 7] 1262 	ld	l, #0x00
      000820 55               [ 4] 1263 	ld	d, l
      000821 06 08            [ 7] 1264 	ld	b, #0x08
      000823                       1265 00265$:
      000823 29               [11] 1266 	add	hl, hl
      000824 30 01            [12] 1267 	jr	NC, 00266$
      000826 19               [11] 1268 	add	hl, de
      000827                       1269 00266$:
      000827 10 FA            [13] 1270 	djnz	00265$
      000829 DD 75 FF         [19] 1271 	ld	-1 (ix), l
      00082C DD 6E EC         [19] 1272 	ld	l, -20 (ix)
      00082F DD 66 ED         [19] 1273 	ld	h, -19 (ix)
      000832 7E               [ 7] 1274 	ld	a, (hl)
      000833 DD 77 FE         [19] 1275 	ld	-2 (ix), a
      000836 DD 86 FF         [19] 1276 	add	a, -1 (ix)
      000839 DD 77 FF         [19] 1277 	ld	-1 (ix), a
      00083C E1               [10] 1278 	pop	hl
      00083D E5               [11] 1279 	push	hl
      00083E DD 7E FF         [19] 1280 	ld	a, -1 (ix)
      000841 77               [ 7] 1281 	ld	(hl), a
                                   1282 ;./lib/entities.c:48: entidad->sprite = sprite;
      000842 DD 7E FC         [19] 1283 	ld	a, -4 (ix)
      000845 C6 08            [ 7] 1284 	add	a, #0x08
      000847 DD 77 FE         [19] 1285 	ld	-2 (ix), a
      00084A DD 7E FD         [19] 1286 	ld	a, -3 (ix)
      00084D CE 00            [ 7] 1287 	adc	a, #0x00
      00084F DD 77 FF         [19] 1288 	ld	-1 (ix), a
      000852 DD 6E FE         [19] 1289 	ld	l, -2 (ix)
      000855 DD 66 FF         [19] 1290 	ld	h, -1 (ix)
      000858 DD 7E FA         [19] 1291 	ld	a, -6 (ix)
      00085B 77               [ 7] 1292 	ld	(hl), a
      00085C 23               [ 6] 1293 	inc	hl
      00085D DD 7E FB         [19] 1294 	ld	a, -5 (ix)
      000860 77               [ 7] 1295 	ld	(hl), a
      000861                       1296 00134$:
                                   1297 ;./lib/entities.c:51: }
      000861 DD F9            [10] 1298 	ld	sp, ix
      000863 DD E1            [14] 1299 	pop	ix
      000865 C9               [10] 1300 	ret
                                   1301 ;./alex.c:20: unsigned char canUp(){
                                   1302 ;	---------------------------------
                                   1303 ; Function canUp
                                   1304 ; ---------------------------------
      000866                       1305 _canUp::
                                   1306 ;./alex.c:21: if (alex.x < 2)
      000866 3Ar03r00         [13] 1307 	ld	a, (#_alex + 0)
      000869 D6 02            [ 7] 1308 	sub	a, #0x02
      00086B 30 02            [12] 1309 	jr	NC, 00102$
                                   1310 ;./alex.c:22: return 0;
      00086D AF               [ 4] 1311 	xor	a, a
      00086E C9               [10] 1312 	ret
      00086F                       1313 00102$:
                                   1314 ;./alex.c:23: return 1;
      00086F 3E 01            [ 7] 1315 	ld	a, #0x01
                                   1316 ;./alex.c:24: }
      000871 C9               [10] 1317 	ret
                                   1318 ;./alex.c:26: unsigned char canDown() {
                                   1319 ;	---------------------------------
                                   1320 ; Function canDown
                                   1321 ; ---------------------------------
      000872                       1322 _canDown::
                                   1323 ;./alex.c:27: if (alex.y > 155)
      000872 21r04r00         [10] 1324 	ld	hl, #_alex+1
      000875 4E               [ 7] 1325 	ld	c, (hl)
      000876 3E 9B            [ 7] 1326 	ld	a, #0x9b
      000878 91               [ 4] 1327 	sub	a, c
      000879 30 02            [12] 1328 	jr	NC, 00102$
                                   1329 ;./alex.c:28: return 0;
      00087B AF               [ 4] 1330 	xor	a, a
      00087C C9               [10] 1331 	ret
      00087D                       1332 00102$:
                                   1333 ;./alex.c:29: return 1;
      00087D 3E 01            [ 7] 1334 	ld	a, #0x01
                                   1335 ;./alex.c:30: }
      00087F C9               [10] 1336 	ret
                                   1337 ;./alex.c:32: unsigned char canLeft() {
                                   1338 ;	---------------------------------
                                   1339 ; Function canLeft
                                   1340 ; ---------------------------------
      000880                       1341 _canLeft::
                                   1342 ;./alex.c:33: if (alex.x < 9)
      000880 3Ar03r00         [13] 1343 	ld	a, (#_alex + 0)
      000883 D6 09            [ 7] 1344 	sub	a, #0x09
      000885 30 02            [12] 1345 	jr	NC, 00102$
                                   1346 ;./alex.c:34: return 0;
      000887 AF               [ 4] 1347 	xor	a, a
      000888 C9               [10] 1348 	ret
      000889                       1349 00102$:
                                   1350 ;./alex.c:35: return 1;
      000889 3E 01            [ 7] 1351 	ld	a, #0x01
                                   1352 ;./alex.c:36: }
      00088B C9               [10] 1353 	ret
                                   1354 ;./alex.c:38: unsigned char canRight() {
                                   1355 ;	---------------------------------
                                   1356 ; Function canRight
                                   1357 ; ---------------------------------
      00088C                       1358 _canRight::
                                   1359 ;./alex.c:39: if (alex.x > 238)
      00088C 21r03r00         [10] 1360 	ld	hl, #_alex+0
      00088F 4E               [ 7] 1361 	ld	c, (hl)
      000890 3E EE            [ 7] 1362 	ld	a, #0xee
      000892 91               [ 4] 1363 	sub	a, c
      000893 30 02            [12] 1364 	jr	NC, 00102$
                                   1365 ;./alex.c:40: return 0;
      000895 AF               [ 4] 1366 	xor	a, a
      000896 C9               [10] 1367 	ret
      000897                       1368 00102$:
                                   1369 ;./alex.c:41: return 1;
      000897 3E 01            [ 7] 1370 	ld	a, #0x01
                                   1371 ;./alex.c:42: }
      000899 C9               [10] 1372 	ret
                                   1373 ;./alex.c:44: void moveAlexSuelo(int keys) {
                                   1374 ;	---------------------------------
                                   1375 ; Function moveAlexSuelo
                                   1376 ; ---------------------------------
      00089A                       1377 _moveAlexSuelo::
      00089A DD E5            [15] 1378 	push	ix
      00089C DD 21 00 00      [14] 1379 	ld	ix,#0
      0008A0 DD 39            [15] 1380 	add	ix,sp
      0008A2 F5               [11] 1381 	push	af
      0008A3 F5               [11] 1382 	push	af
      0008A4 F5               [11] 1383 	push	af
      0008A5 DD 75 FE         [19] 1384 	ld	-2 (ix), l
      0008A8 DD 74 FF         [19] 1385 	ld	-1 (ix), h
                                   1386 ;./alex.c:46: if (keys & PORT_A_KEY_LEFT)
      0008AB DD 7E FE         [19] 1387 	ld	a, -2 (ix)
      0008AE E6 04            [ 7] 1388 	and	a, #0x04
      0008B0 DD 77 FA         [19] 1389 	ld	-6 (ix), a
      0008B3 DD 36 FB 00      [19] 1390 	ld	-5 (ix), #0x00
                                   1391 ;./alex.c:48: if (keys & PORT_A_KEY_RIGHT)
      0008B7 DD 7E FE         [19] 1392 	ld	a, -2 (ix)
      0008BA E6 08            [ 7] 1393 	and	a, #0x08
      0008BC DD 77 FC         [19] 1394 	ld	-4 (ix), a
      0008BF DD 36 FD 00      [19] 1395 	ld	-3 (ix), #0x00
                                   1396 ;./alex.c:45: if ((keys & PORT_A_KEY_DOWN)){
      0008C3 DD CB FE 4E      [20] 1397 	bit	1, -2 (ix)
      0008C7 28 33            [12] 1398 	jr	Z, 00109$
                                   1399 ;./alex.c:46: if (keys & PORT_A_KEY_LEFT)
      0008C9 AF               [ 4] 1400 	xor	a, a
      0008CA DD B6 FA         [19] 1401 	or	a, -6 (ix)
      0008CD 28 05            [12] 1402 	jr	Z, 00102$
                                   1403 ;./alex.c:47: alex.oriented = 1;
      0008CF 21r07r00         [10] 1404 	ld	hl, #_alex+4
      0008D2 36 01            [10] 1405 	ld	(hl), #0x01
      0008D4                       1406 00102$:
                                   1407 ;./alex.c:48: if (keys & PORT_A_KEY_RIGHT)
      0008D4 AF               [ 4] 1408 	xor	a, a
      0008D5 DD B6 FC         [19] 1409 	or	a, -4 (ix)
      0008D8 28 05            [12] 1410 	jr	Z, 00104$
                                   1411 ;./alex.c:49: alex.oriented = 0;
      0008DA 21r07r00         [10] 1412 	ld	hl, #_alex+4
      0008DD 36 00            [10] 1413 	ld	(hl), #0x00
      0008DF                       1414 00104$:
                                   1415 ;./alex.c:50: if (!alex.oriented)
      0008DF 3Ar07r00         [13] 1416 	ld	a,(#_alex + 4)
                                   1417 ;./alex.c:51: alex.frame = 7;
                                   1418 ;./alex.c:50: if (!alex.oriented)
      0008E2 DD 77 FD         [19] 1419 	ld	-3 (ix), a
      0008E5 B7               [ 4] 1420 	or	a, a
      0008E6 20 07            [12] 1421 	jr	NZ, 00106$
                                   1422 ;./alex.c:51: alex.frame = 7;
      0008E8 21r05r00         [10] 1423 	ld	hl, #(_alex + 2)
      0008EB 36 07            [10] 1424 	ld	(hl), #0x07
      0008ED 18 05            [12] 1425 	jr	00107$
      0008EF                       1426 00106$:
                                   1427 ;./alex.c:53: alex.frame = 15;
      0008EF 21r05r00         [10] 1428 	ld	hl, #(_alex + 2)
      0008F2 36 0F            [10] 1429 	ld	(hl), #0x0f
      0008F4                       1430 00107$:
                                   1431 ;./alex.c:54: alex.lastChangeFrame = 15;
      0008F4 21r06r00         [10] 1432 	ld	hl, #_alex + 3
      0008F7 36 0F            [10] 1433 	ld	(hl), #0x0f
                                   1434 ;./alex.c:55: return; // not move
      0008F9 C3r5Dr0A         [10] 1435 	jp	00146$
      0008FC                       1436 00109$:
                                   1437 ;./alex.c:58: if (keys & PORT_A_KEY_2) {
      0008FC DD CB FE 6E      [20] 1438 	bit	5, -2 (ix)
      000900 28 2A            [12] 1439 	jr	Z, 00116$
                                   1440 ;./alex.c:59: if (alex.y > 100)
      000902 01r04r00         [10] 1441 	ld	bc, #_alex+1
      000905 0A               [ 7] 1442 	ld	a, (bc)
      000906 5F               [ 4] 1443 	ld	e, a
      000907 3E 64            [ 7] 1444 	ld	a, #0x64
      000909 93               [ 4] 1445 	sub	a, e
      00090A 30 09            [12] 1446 	jr	NC, 00111$
                                   1447 ;./alex.c:60: maxSalto = alex.y - 100;
      00090C 7B               [ 4] 1448 	ld	a, e
      00090D 21r02r00         [10] 1449 	ld	hl, #_maxSalto
      000910 C6 9C            [ 7] 1450 	add	a, #0x9c
      000912 77               [ 7] 1451 	ld	(hl), a
      000913 18 05            [12] 1452 	jr	00112$
      000915                       1453 00111$:
                                   1454 ;./alex.c:62: maxSalto = 0;
      000915 21r02r00         [10] 1455 	ld	hl, #_maxSalto
      000918 36 00            [10] 1456 	ld	(hl), #0x00
      00091A                       1457 00112$:
                                   1458 ;./alex.c:63: alex.y--;
      00091A 0A               [ 7] 1459 	ld	a, (bc)
      00091B 3D               [ 4] 1460 	dec	a
      00091C 02               [ 7] 1461 	ld	(bc), a
                                   1462 ;./alex.c:64: alex.y--;
      00091D 3D               [ 4] 1463 	dec	a
      00091E 02               [ 7] 1464 	ld	(bc), a
                                   1465 ;./alex.c:65: PSGSFXPlay(salto_psg, SFX_CHANNEL1);
      00091F 3E 08            [ 7] 1466 	ld	a, #0x08
      000921 F5               [11] 1467 	push	af
      000922 33               [ 6] 1468 	inc	sp
      000923 21r00r00         [10] 1469 	ld	hl, #_salto_psg
      000926 CDr00r00         [17] 1470 	call	_PSGSFXPlay
                                   1471 ;./alex.c:66: return;
      000929 C3r5Dr0A         [10] 1472 	jp	00146$
      00092C                       1473 00116$:
                                   1474 ;./alex.c:68: else if (keys & PORT_A_KEY_1) {
      00092C DD CB FE 66      [20] 1475 	bit	4, -2 (ix)
      000930 28 0A            [12] 1476 	jr	Z, 00117$
                                   1477 ;./alex.c:69: alex.state = PUÑETAZO_SUELO;
      000932 21r08r00         [10] 1478 	ld	hl, #_alex + 5
      000935 36 20            [10] 1479 	ld	(hl), #0x20
                                   1480 ;./alex.c:70: alex.lastChangeFrame = 15;
      000937 21r06r00         [10] 1481 	ld	hl, #_alex + 3
      00093A 36 0F            [10] 1482 	ld	(hl), #0x0f
      00093C                       1483 00117$:
                                   1484 ;./alex.c:72: if(alex.state != PUÑETAZO_SUELO) {
      00093C 21r08r00         [10] 1485 	ld	hl, #(_alex + 5)
      00093F 5E               [ 7] 1486 	ld	e, (hl)
                                   1487 ;./alex.c:77: alex.oriented = 1;
                                   1488 ;./alex.c:78: alex.lastChangeFrame++;
      000940 01r06r00         [10] 1489 	ld	bc, #_alex + 3
                                   1490 ;./alex.c:81: alex.frame++;
                                   1491 ;./alex.c:72: if(alex.state != PUÑETAZO_SUELO) {
      000943 7B               [ 4] 1492 	ld	a, e
      000944 D6 20            [ 7] 1493 	sub	a, #0x20
      000946 CArDDr09         [10] 1494 	jp	Z,00144$
                                   1495 ;./alex.c:73: SpriteTableY2[4] = 234;
      000949 2Ar00r03         [16] 1496 	ld	hl, (_SpriteTableY2)
      00094C 11 04 00         [10] 1497 	ld	de, #0x0004
      00094F 19               [11] 1498 	add	hl, de
      000950 36 EA            [10] 1499 	ld	(hl), #0xea
                                   1500 ;./alex.c:74: if ((keys & PORT_A_KEY_LEFT) && alex.x > 8 )
      000952 AF               [ 4] 1501 	xor	a, a
      000953 DD B6 FA         [19] 1502 	or	a, -6 (ix)
      000956 28 3A            [12] 1503 	jr	Z, 00135$
      000958 21r03r00         [10] 1504 	ld	hl, #_alex
      00095B 5E               [ 7] 1505 	ld	e, (hl)
      00095C 3E 08            [ 7] 1506 	ld	a, #0x08
      00095E 93               [ 4] 1507 	sub	a, e
      00095F 30 31            [12] 1508 	jr	NC, 00135$
                                   1509 ;./alex.c:76: alex.x -= 1;
      000961 1D               [ 4] 1510 	dec	e
      000962 21r03r00         [10] 1511 	ld	hl, #_alex
      000965 73               [ 7] 1512 	ld	(hl), e
                                   1513 ;./alex.c:77: alex.oriented = 1;
      000966 21r07r00         [10] 1514 	ld	hl, #(_alex + 4)
      000969 36 01            [10] 1515 	ld	(hl), #0x01
                                   1516 ;./alex.c:78: alex.lastChangeFrame++;
      00096B 0A               [ 7] 1517 	ld	a, (bc)
      00096C 3C               [ 4] 1518 	inc	a
      00096D 02               [ 7] 1519 	ld	(bc), a
                                   1520 ;./alex.c:79: if (alex.lastChangeFrame == 11) {
      00096E D6 0B            [ 7] 1521 	sub	a, #0x0b
      000970 20 09            [12] 1522 	jr	NZ, 00119$
                                   1523 ;./alex.c:80: alex.lastChangeFrame = 0;
      000972 AF               [ 4] 1524 	xor	a, a
      000973 02               [ 7] 1525 	ld	(bc), a
                                   1526 ;./alex.c:81: alex.frame++;
      000974 3Ar05r00         [13] 1527 	ld	a, (#(_alex + 2) + 0)
      000977 3C               [ 4] 1528 	inc	a
      000978 32r05r00         [13] 1529 	ld	(#(_alex + 2)),a
      00097B                       1530 00119$:
                                   1531 ;./alex.c:83: if (alex.frame > 11 || alex.frame < 8)
      00097B 21r05r00         [10] 1532 	ld	hl, #(_alex + 2)
      00097E 4E               [ 7] 1533 	ld	c, (hl)
      00097F 3E 0B            [ 7] 1534 	ld	a, #0x0b
      000981 91               [ 4] 1535 	sub	a, c
      000982 38 06            [12] 1536 	jr	C, 00120$
      000984 79               [ 4] 1537 	ld	a, c
      000985 D6 08            [ 7] 1538 	sub	a, #0x08
      000987 D2r5Dr0A         [10] 1539 	jp	NC, 00146$
      00098A                       1540 00120$:
                                   1541 ;./alex.c:84: alex.frame = 8;
      00098A 21r05r00         [10] 1542 	ld	hl, #(_alex + 2)
      00098D 36 08            [10] 1543 	ld	(hl), #0x08
      00098F C3r5Dr0A         [10] 1544 	jp	00146$
      000992                       1545 00135$:
                                   1546 ;./alex.c:86: else if ((keys & PORT_A_KEY_RIGHT) && alex.x <240)
      000992 AF               [ 4] 1547 	xor	a, a
      000993 DD B6 FC         [19] 1548 	or	a, -4 (ix)
      000996 28 32            [12] 1549 	jr	Z, 00131$
      000998 3Ar03r00         [13] 1550 	ld	a, (#_alex + 0)
      00099B FE F0            [ 7] 1551 	cp	a, #0xf0
      00099D 30 2B            [12] 1552 	jr	NC, 00131$
                                   1553 ;./alex.c:88: alex.x += 1;
      00099F 3C               [ 4] 1554 	inc	a
      0009A0 32r03r00         [13] 1555 	ld	(#_alex),a
                                   1556 ;./alex.c:89: alex.oriented = 0;
      0009A3 21r07r00         [10] 1557 	ld	hl, #(_alex + 4)
      0009A6 36 00            [10] 1558 	ld	(hl), #0x00
                                   1559 ;./alex.c:90: alex.lastChangeFrame++;
      0009A8 0A               [ 7] 1560 	ld	a, (bc)
      0009A9 3C               [ 4] 1561 	inc	a
      0009AA 02               [ 7] 1562 	ld	(bc), a
                                   1563 ;./alex.c:91: if (alex.lastChangeFrame == 11) {
      0009AB D6 0B            [ 7] 1564 	sub	a, #0x0b
      0009AD 20 09            [12] 1565 	jr	NZ, 00124$
                                   1566 ;./alex.c:92: alex.lastChangeFrame = 0;
      0009AF AF               [ 4] 1567 	xor	a, a
      0009B0 02               [ 7] 1568 	ld	(bc), a
                                   1569 ;./alex.c:93: alex.frame++;
      0009B1 3Ar05r00         [13] 1570 	ld	a, (#(_alex + 2) + 0)
      0009B4 3C               [ 4] 1571 	inc	a
      0009B5 32r05r00         [13] 1572 	ld	(#(_alex + 2)),a
      0009B8                       1573 00124$:
                                   1574 ;./alex.c:95: if (alex.frame > 3 || alex.frame < 0)
      0009B8 21r05r00         [10] 1575 	ld	hl, #(_alex + 2)
      0009BB 4E               [ 7] 1576 	ld	c, (hl)
      0009BC 3E 03            [ 7] 1577 	ld	a, #0x03
      0009BE 91               [ 4] 1578 	sub	a, c
      0009BF D2r5Dr0A         [10] 1579 	jp	NC, 00146$
                                   1580 ;./alex.c:96: alex.frame = 0;
      0009C2 21r05r00         [10] 1581 	ld	hl, #(_alex + 2)
      0009C5 36 00            [10] 1582 	ld	(hl), #0x00
      0009C7 C3r5Dr0A         [10] 1583 	jp	00146$
      0009CA                       1584 00131$:
                                   1585 ;./alex.c:100: alex.frame = 4;
      0009CA 21r05r00         [10] 1586 	ld	hl, #(_alex + 2)
      0009CD 36 04            [10] 1587 	ld	(hl), #0x04
                                   1588 ;./alex.c:101: if (alex.oriented)
      0009CF 3Ar07r00         [13] 1589 	ld	a, (#(_alex + 4) + 0)
      0009D2 B7               [ 4] 1590 	or	a, a
      0009D3 28 02            [12] 1591 	jr	Z, 00129$
                                   1592 ;./alex.c:102: alex.frame = 12;
      0009D5 36 0C            [10] 1593 	ld	(hl), #0x0c
      0009D7                       1594 00129$:
                                   1595 ;./alex.c:103: alex.lastChangeFrame = 10;
      0009D7 3E 0A            [ 7] 1596 	ld	a, #0x0a
      0009D9 02               [ 7] 1597 	ld	(bc), a
      0009DA C3r5Dr0A         [10] 1598 	jp	00146$
      0009DD                       1599 00144$:
                                   1600 ;./alex.c:107: if (!alex.oriented) {
                                   1601 ;./alex.c:112: SpriteTableY2[4] = alex.y + 9;
                                   1602 ;./alex.c:107: if (!alex.oriented) {
      0009DD 3Ar07r00         [13] 1603 	ld	a, (#(_alex + 4) + 0)
      0009E0 B7               [ 4] 1604 	or	a, a
      0009E1 20 34            [12] 1605 	jr	NZ, 00139$
                                   1606 ;./alex.c:108: alex.frame = 5;
      0009E3 21r05r00         [10] 1607 	ld	hl, #(_alex + 2)
      0009E6 36 05            [10] 1608 	ld	(hl), #0x05
                                   1609 ;./alex.c:110: SpriteTableXN2[8] = alex.x + 16;
      0009E8 3Ar02r03         [13] 1610 	ld	a, (_SpriteTableXN2+0)
      0009EB C6 08            [ 7] 1611 	add	a, #0x08
      0009ED 5F               [ 4] 1612 	ld	e, a
      0009EE 3Ar03r03         [13] 1613 	ld	a, (_SpriteTableXN2+1)
      0009F1 CE 00            [ 7] 1614 	adc	a, #0x00
      0009F3 57               [ 4] 1615 	ld	d, a
      0009F4 3Ar03r00         [13] 1616 	ld	a, (#_alex + 0)
      0009F7 C6 10            [ 7] 1617 	add	a, #0x10
      0009F9 12               [ 7] 1618 	ld	(de), a
                                   1619 ;./alex.c:111: SpriteTableXN2[9] = 9;
      0009FA 2Ar02r03         [16] 1620 	ld	hl, (_SpriteTableXN2)
      0009FD 11 09 00         [10] 1621 	ld	de, #0x0009
      000A00 19               [11] 1622 	add	hl, de
      000A01 36 09            [10] 1623 	ld	(hl), #0x09
                                   1624 ;./alex.c:112: SpriteTableY2[4] = alex.y + 9;
      000A03 3Ar00r03         [13] 1625 	ld	a, (_SpriteTableY2+0)
      000A06 C6 04            [ 7] 1626 	add	a, #0x04
      000A08 5F               [ 4] 1627 	ld	e, a
      000A09 3Ar01r03         [13] 1628 	ld	a, (_SpriteTableY2+1)
      000A0C CE 00            [ 7] 1629 	adc	a, #0x00
      000A0E 57               [ 4] 1630 	ld	d, a
      000A0F 3Ar04r00         [13] 1631 	ld	a, (#(_alex + 1) + 0)
      000A12 C6 09            [ 7] 1632 	add	a, #0x09
      000A14 12               [ 7] 1633 	ld	(de), a
      000A15 18 32            [12] 1634 	jr	00140$
      000A17                       1635 00139$:
                                   1636 ;./alex.c:115: alex.frame = 13;
      000A17 21r05r00         [10] 1637 	ld	hl, #(_alex + 2)
      000A1A 36 0D            [10] 1638 	ld	(hl), #0x0d
                                   1639 ;./alex.c:117: SpriteTableXN2[8] = alex.x - 8;
      000A1C 3Ar02r03         [13] 1640 	ld	a, (_SpriteTableXN2+0)
      000A1F C6 08            [ 7] 1641 	add	a, #0x08
      000A21 5F               [ 4] 1642 	ld	e, a
      000A22 3Ar03r03         [13] 1643 	ld	a, (_SpriteTableXN2+1)
      000A25 CE 00            [ 7] 1644 	adc	a, #0x00
      000A27 57               [ 4] 1645 	ld	d, a
      000A28 3Ar03r00         [13] 1646 	ld	a, (#_alex + 0)
      000A2B C6 F8            [ 7] 1647 	add	a, #0xf8
      000A2D 12               [ 7] 1648 	ld	(de), a
                                   1649 ;./alex.c:118: SpriteTableXN2[9] = 11;
      000A2E 2Ar02r03         [16] 1650 	ld	hl, (_SpriteTableXN2)
      000A31 11 09 00         [10] 1651 	ld	de, #0x0009
      000A34 19               [11] 1652 	add	hl, de
      000A35 36 0B            [10] 1653 	ld	(hl), #0x0b
                                   1654 ;./alex.c:119: SpriteTableY2[4] = alex.y + 9;
      000A37 3Ar00r03         [13] 1655 	ld	a, (_SpriteTableY2+0)
      000A3A C6 04            [ 7] 1656 	add	a, #0x04
      000A3C 5F               [ 4] 1657 	ld	e, a
      000A3D 3Ar01r03         [13] 1658 	ld	a, (_SpriteTableY2+1)
      000A40 CE 00            [ 7] 1659 	adc	a, #0x00
      000A42 57               [ 4] 1660 	ld	d, a
      000A43 3Ar04r00         [13] 1661 	ld	a, (#(_alex + 1) + 0)
      000A46 C6 09            [ 7] 1662 	add	a, #0x09
      000A48 12               [ 7] 1663 	ld	(de), a
      000A49                       1664 00140$:
                                   1665 ;./alex.c:121: alex.lastChangeFrame--;
      000A49 0A               [ 7] 1666 	ld	a, (bc)
      000A4A 3D               [ 4] 1667 	dec	a
      000A4B 02               [ 7] 1668 	ld	(bc), a
                                   1669 ;./alex.c:122: if(!alex.lastChangeFrame) {
      000A4C B7               [ 4] 1670 	or	a, a
      000A4D 20 0E            [12] 1671 	jr	NZ, 00146$
                                   1672 ;./alex.c:123: alex.state = 0;
      000A4F 21r08r00         [10] 1673 	ld	hl, #(_alex + 5)
      000A52 36 00            [10] 1674 	ld	(hl), #0x00
                                   1675 ;./alex.c:124: SpriteTableY2[4] = 234;
      000A54 2Ar00r03         [16] 1676 	ld	hl, (_SpriteTableY2)
      000A57 11 04 00         [10] 1677 	ld	de, #0x0004
      000A5A 19               [11] 1678 	add	hl, de
      000A5B 36 EA            [10] 1679 	ld	(hl), #0xea
      000A5D                       1680 00146$:
                                   1681 ;./alex.c:127: }
      000A5D DD F9            [10] 1682 	ld	sp, ix
      000A5F DD E1            [14] 1683 	pop	ix
      000A61 C9               [10] 1684 	ret
                                   1685 ;./alex.c:129: void moveAlexAire(int keys, unsigned char puedeSubir, unsigned char puedeDerecha, unsigned char puedeIzquieda) {
                                   1686 ;	---------------------------------
                                   1687 ; Function moveAlexAire
                                   1688 ; ---------------------------------
      000A62                       1689 _moveAlexAire::
      000A62 DD E5            [15] 1690 	push	ix
      000A64 DD 21 00 00      [14] 1691 	ld	ix,#0
      000A68 DD 39            [15] 1692 	add	ix,sp
      000A6A F5               [11] 1693 	push	af
      000A6B 3B               [ 6] 1694 	dec	sp
      000A6C DD 75 FE         [19] 1695 	ld	-2 (ix), l
      000A6F DD 74 FF         [19] 1696 	ld	-1 (ix), h
                                   1697 ;./alex.c:130: if (alex.y > maxSalto) {
      000A72 21r04r00         [10] 1698 	ld	hl, #(_alex + 1)
      000A75 46               [ 7] 1699 	ld	b, (hl)
                                   1700 ;./alex.c:131: alex.y -= 2;
      000A76 48               [ 4] 1701 	ld	c, b
                                   1702 ;./alex.c:130: if (alex.y > maxSalto) {
      000A77 3Ar02r00         [13] 1703 	ld	a, (_maxSalto+0)
      000A7A 90               [ 4] 1704 	sub	a, b
      000A7B 30 08            [12] 1705 	jr	NC, 00102$
                                   1706 ;./alex.c:131: alex.y -= 2;
      000A7D 0D               [ 4] 1707 	dec	c
      000A7E 0D               [ 4] 1708 	dec	c
      000A7F 21r04r00         [10] 1709 	ld	hl, #(_alex + 1)
      000A82 71               [ 7] 1710 	ld	(hl), c
      000A83 18 0E            [12] 1711 	jr	00103$
      000A85                       1712 00102$:
                                   1713 ;./alex.c:134: alex.y += 2; // bajando
      000A85 0C               [ 4] 1714 	inc	c
      000A86 0C               [ 4] 1715 	inc	c
      000A87 21r04r00         [10] 1716 	ld	hl, #(_alex + 1)
      000A8A 71               [ 7] 1717 	ld	(hl), c
                                   1718 ;./alex.c:135: maxSalto = 255;
      000A8B FD 21r02r00      [14] 1719 	ld	iy, #_maxSalto
      000A8F FD 36 00 FF      [19] 1720 	ld	0 (iy), #0xff
      000A93                       1721 00103$:
                                   1722 ;./alex.c:138: if (alex.state != PUÑETAZO_SALTANDO)
                                   1723 ;./alex.c:139: alex.oriented = 1;
                                   1724 ;./alex.c:137: if (keys & PORT_A_KEY_LEFT) {
      000A93 DD CB FE 56      [20] 1725 	bit	2, -2 (ix)
      000A97 28 1A            [12] 1726 	jr	Z, 00109$
                                   1727 ;./alex.c:138: if (alex.state != PUÑETAZO_SALTANDO)
      000A99 3Ar08r00         [13] 1728 	ld	a, (#(_alex + 5) + 0)
      000A9C D6 10            [ 7] 1729 	sub	a, #0x10
      000A9E 28 05            [12] 1730 	jr	Z, 00105$
                                   1731 ;./alex.c:139: alex.oriented = 1;
      000AA0 21r07r00         [10] 1732 	ld	hl, #(_alex + 4)
      000AA3 36 01            [10] 1733 	ld	(hl), #0x01
      000AA5                       1734 00105$:
                                   1735 ;./alex.c:140: if (puedeIzquieda)
      000AA5 DD 7E 06         [19] 1736 	ld	a, 6 (ix)
      000AA8 B7               [ 4] 1737 	or	a, a
      000AA9 28 08            [12] 1738 	jr	Z, 00109$
                                   1739 ;./alex.c:141: alex.x -= 2;
      000AAB 3Ar03r00         [13] 1740 	ld	a, (#_alex + 0)
      000AAE 3D               [ 4] 1741 	dec	a
      000AAF 3D               [ 4] 1742 	dec	a
      000AB0 32r03r00         [13] 1743 	ld	(#_alex),a
      000AB3                       1744 00109$:
                                   1745 ;./alex.c:143: if (keys & PORT_A_KEY_RIGHT) {
      000AB3 DD CB FE 5E      [20] 1746 	bit	3, -2 (ix)
      000AB7 28 1A            [12] 1747 	jr	Z, 00115$
                                   1748 ;./alex.c:144: if (alex.state != PUÑETAZO_SALTANDO)
      000AB9 3Ar08r00         [13] 1749 	ld	a, (#(_alex + 5) + 0)
      000ABC D6 10            [ 7] 1750 	sub	a, #0x10
      000ABE 28 05            [12] 1751 	jr	Z, 00111$
                                   1752 ;./alex.c:145: alex.oriented = 0;
      000AC0 21r07r00         [10] 1753 	ld	hl, #(_alex + 4)
      000AC3 36 00            [10] 1754 	ld	(hl), #0x00
      000AC5                       1755 00111$:
                                   1756 ;./alex.c:146: if (puedeDerecha)
      000AC5 DD 7E 05         [19] 1757 	ld	a, 5 (ix)
      000AC8 B7               [ 4] 1758 	or	a, a
      000AC9 28 08            [12] 1759 	jr	Z, 00115$
                                   1760 ;./alex.c:147: alex.x += 2;
      000ACB 3Ar03r00         [13] 1761 	ld	a, (#_alex + 0)
      000ACE C6 02            [ 7] 1762 	add	a, #0x02
      000AD0 32r03r00         [13] 1763 	ld	(#_alex),a
      000AD3                       1764 00115$:
                                   1765 ;./alex.c:149: if (alex.state == PUÑETAZO_SALTANDO) {
      000AD3 21r08r00         [10] 1766 	ld	hl, #(_alex + 5)
      000AD6 4E               [ 7] 1767 	ld	c, (hl)
                                   1768 ;./alex.c:150: alex.lastChangeFrame--;
                                   1769 ;./alex.c:156: alex.frame = 5;
                                   1770 ;./alex.c:149: if (alex.state == PUÑETAZO_SALTANDO) {
      000AD7 79               [ 4] 1771 	ld	a, c
      000AD8 D6 10            [ 7] 1772 	sub	a, #0x10
      000ADA C2r66r0B         [10] 1773 	jp	NZ,00127$
                                   1774 ;./alex.c:150: alex.lastChangeFrame--;
      000ADD 21r06r00         [10] 1775 	ld	hl, #(_alex + 3)
      000AE0 4E               [ 7] 1776 	ld	c, (hl)
      000AE1 0D               [ 4] 1777 	dec	c
      000AE2 21r06r00         [10] 1778 	ld	hl, #(_alex + 3)
                                   1779 ;./alex.c:151: if  (!alex.lastChangeFrame) {
      000AE5 79               [ 4] 1780 	ld	a,c
      000AE6 77               [ 7] 1781 	ld	(hl),a
      000AE7 B7               [ 4] 1782 	or	a, a
      000AE8 20 0E            [12] 1783 	jr	NZ, 00117$
                                   1784 ;./alex.c:152: alex.state = 0;
      000AEA 21r08r00         [10] 1785 	ld	hl, #(_alex + 5)
      000AED 36 00            [10] 1786 	ld	(hl), #0x00
                                   1787 ;./alex.c:153: SpriteTableY2[4] = 234;
      000AEF 2Ar00r03         [16] 1788 	ld	hl, (_SpriteTableY2)
      000AF2 11 04 00         [10] 1789 	ld	de, #0x0004
      000AF5 19               [11] 1790 	add	hl, de
      000AF6 36 EA            [10] 1791 	ld	(hl), #0xea
      000AF8                       1792 00117$:
                                   1793 ;./alex.c:155: if (!alex.oriented) {
      000AF8 3Ar07r00         [13] 1794 	ld	a, (#(_alex + 4) + 0)
      000AFB B7               [ 4] 1795 	or	a, a
      000AFC 20 34            [12] 1796 	jr	NZ, 00119$
                                   1797 ;./alex.c:156: alex.frame = 5;
      000AFE 21r05r00         [10] 1798 	ld	hl, #(_alex + 2)
      000B01 36 05            [10] 1799 	ld	(hl), #0x05
                                   1800 ;./alex.c:158: SpriteTableXN2[8] = alex.x + 16;
      000B03 3Ar02r03         [13] 1801 	ld	a, (_SpriteTableXN2+0)
      000B06 C6 08            [ 7] 1802 	add	a, #0x08
      000B08 4F               [ 4] 1803 	ld	c, a
      000B09 3Ar03r03         [13] 1804 	ld	a, (_SpriteTableXN2+1)
      000B0C CE 00            [ 7] 1805 	adc	a, #0x00
      000B0E 47               [ 4] 1806 	ld	b, a
      000B0F 3Ar03r00         [13] 1807 	ld	a, (#_alex + 0)
      000B12 C6 10            [ 7] 1808 	add	a, #0x10
      000B14 02               [ 7] 1809 	ld	(bc), a
                                   1810 ;./alex.c:159: SpriteTableXN2[9] = 9;
      000B15 2Ar02r03         [16] 1811 	ld	hl, (_SpriteTableXN2)
      000B18 11 09 00         [10] 1812 	ld	de, #0x0009
      000B1B 19               [11] 1813 	add	hl, de
      000B1C 36 09            [10] 1814 	ld	(hl), #0x09
                                   1815 ;./alex.c:160: SpriteTableY2[4] = alex.y + 9;
      000B1E 3Ar00r03         [13] 1816 	ld	a, (_SpriteTableY2+0)
      000B21 C6 04            [ 7] 1817 	add	a, #0x04
      000B23 4F               [ 4] 1818 	ld	c, a
      000B24 3Ar01r03         [13] 1819 	ld	a, (_SpriteTableY2+1)
      000B27 CE 00            [ 7] 1820 	adc	a, #0x00
      000B29 47               [ 4] 1821 	ld	b, a
      000B2A 3Ar04r00         [13] 1822 	ld	a, (#(_alex + 1) + 0)
      000B2D C6 09            [ 7] 1823 	add	a, #0x09
      000B2F 02               [ 7] 1824 	ld	(bc), a
      000B30 18 62            [12] 1825 	jr	00129$
      000B32                       1826 00119$:
                                   1827 ;./alex.c:163: alex.frame = 13;
      000B32 21r05r00         [10] 1828 	ld	hl, #(_alex + 2)
      000B35 36 0D            [10] 1829 	ld	(hl), #0x0d
                                   1830 ;./alex.c:165: SpriteTableXN2[8] = alex.x - 8;
      000B37 3Ar02r03         [13] 1831 	ld	a, (_SpriteTableXN2+0)
      000B3A C6 08            [ 7] 1832 	add	a, #0x08
      000B3C 4F               [ 4] 1833 	ld	c, a
      000B3D 3Ar03r03         [13] 1834 	ld	a, (_SpriteTableXN2+1)
      000B40 CE 00            [ 7] 1835 	adc	a, #0x00
      000B42 47               [ 4] 1836 	ld	b, a
      000B43 3Ar03r00         [13] 1837 	ld	a, (#_alex + 0)
      000B46 C6 F8            [ 7] 1838 	add	a, #0xf8
      000B48 02               [ 7] 1839 	ld	(bc), a
                                   1840 ;./alex.c:166: SpriteTableXN2[9] = 11;
      000B49 2Ar02r03         [16] 1841 	ld	hl, (_SpriteTableXN2)
      000B4C 11 09 00         [10] 1842 	ld	de, #0x0009
      000B4F 19               [11] 1843 	add	hl, de
      000B50 36 0B            [10] 1844 	ld	(hl), #0x0b
                                   1845 ;./alex.c:167: SpriteTableY2[4] = alex.y + 9;
      000B52 3Ar00r03         [13] 1846 	ld	a, (_SpriteTableY2+0)
      000B55 C6 04            [ 7] 1847 	add	a, #0x04
      000B57 4F               [ 4] 1848 	ld	c, a
      000B58 3Ar01r03         [13] 1849 	ld	a, (_SpriteTableY2+1)
      000B5B CE 00            [ 7] 1850 	adc	a, #0x00
      000B5D 47               [ 4] 1851 	ld	b, a
      000B5E 3Ar04r00         [13] 1852 	ld	a, (#(_alex + 1) + 0)
      000B61 C6 09            [ 7] 1853 	add	a, #0x09
      000B63 02               [ 7] 1854 	ld	(bc), a
      000B64 18 2E            [12] 1855 	jr	00129$
      000B66                       1856 00127$:
                                   1857 ;./alex.c:171: SpriteTableY2[4] = 234;
      000B66 2Ar00r03         [16] 1858 	ld	hl, (_SpriteTableY2)
      000B69 11 04 00         [10] 1859 	ld	de, #0x0004
      000B6C 19               [11] 1860 	add	hl, de
      000B6D 36 EA            [10] 1861 	ld	(hl), #0xea
                                   1862 ;./alex.c:172: if (!alex.oriented)
      000B6F 3Ar07r00         [13] 1863 	ld	a, (#(_alex + 4) + 0)
      000B72 DD 77 FD         [19] 1864 	ld	-3 (ix), a
      000B75 B7               [ 4] 1865 	or	a, a
      000B76 20 07            [12] 1866 	jr	NZ, 00122$
                                   1867 ;./alex.c:173: alex.frame = 6;
      000B78 21r05r00         [10] 1868 	ld	hl, #(_alex + 2)
      000B7B 36 06            [10] 1869 	ld	(hl), #0x06
      000B7D 18 05            [12] 1870 	jr	00123$
      000B7F                       1871 00122$:
                                   1872 ;./alex.c:175: alex.frame = 14;
      000B7F 21r05r00         [10] 1873 	ld	hl, #(_alex + 2)
      000B82 36 0E            [10] 1874 	ld	(hl), #0x0e
      000B84                       1875 00123$:
                                   1876 ;./alex.c:176: if (keys & PORT_A_KEY_1) {
      000B84 DD CB FE 66      [20] 1877 	bit	4, -2 (ix)
      000B88 28 0A            [12] 1878 	jr	Z, 00129$
                                   1879 ;./alex.c:177: alex.state = PUÑETAZO_SALTANDO;
      000B8A 21r08r00         [10] 1880 	ld	hl, #(_alex + 5)
      000B8D 36 10            [10] 1881 	ld	(hl), #0x10
                                   1882 ;./alex.c:178: alex.lastChangeFrame = 20;
      000B8F 21r06r00         [10] 1883 	ld	hl, #(_alex + 3)
      000B92 36 14            [10] 1884 	ld	(hl), #0x14
      000B94                       1885 00129$:
                                   1886 ;./alex.c:182: }
      000B94 DD F9            [10] 1887 	ld	sp, ix
      000B96 DD E1            [14] 1888 	pop	ix
      000B98 E1               [10] 1889 	pop	hl
      000B99 F1               [10] 1890 	pop	af
      000B9A 33               [ 6] 1891 	inc	sp
      000B9B E9               [ 4] 1892 	jp	(hl)
                                   1893 ;./alex.c:184: void drawAlex() {
                                   1894 ;	---------------------------------
                                   1895 ; Function drawAlex
                                   1896 ; ---------------------------------
      000B9C                       1897 _drawAlex::
                                   1898 ;./alex.c:185: SpriteTableXN2[0] = alex.x;
      000B9C ED 5Br02r03      [20] 1899 	ld	de, (_SpriteTableXN2)
      000BA0 01r03r00         [10] 1900 	ld	bc, #_alex+0
      000BA3 0A               [ 7] 1901 	ld	a, (bc)
      000BA4 12               [ 7] 1902 	ld	(de), a
                                   1903 ;./alex.c:186: SpriteTableXN2[2] = alex.x + 8;
      000BA5 2Ar02r03         [16] 1904 	ld	hl, (_SpriteTableXN2)
      000BA8 23               [ 6] 1905 	inc	hl
      000BA9 23               [ 6] 1906 	inc	hl
      000BAA 0A               [ 7] 1907 	ld	a, (bc)
      000BAB C6 08            [ 7] 1908 	add	a, #0x08
      000BAD 77               [ 7] 1909 	ld	(hl), a
                                   1910 ;./alex.c:187: SpriteTableXN2[4] = alex.x;
      000BAE 2Ar02r03         [16] 1911 	ld	hl, (_SpriteTableXN2)
      000BB1 11 04 00         [10] 1912 	ld	de, #0x0004
      000BB4 19               [11] 1913 	add	hl, de
      000BB5 0A               [ 7] 1914 	ld	a, (bc)
      000BB6 77               [ 7] 1915 	ld	(hl), a
                                   1916 ;./alex.c:188: SpriteTableXN2[6] = alex.x + 8;
      000BB7 2Ar02r03         [16] 1917 	ld	hl, (_SpriteTableXN2)
      000BBA 11 06 00         [10] 1918 	ld	de, #0x0006
      000BBD 19               [11] 1919 	add	hl, de
      000BBE 0A               [ 7] 1920 	ld	a, (bc)
      000BBF C6 08            [ 7] 1921 	add	a, #0x08
      000BC1 77               [ 7] 1922 	ld	(hl), a
                                   1923 ;./alex.c:189: SpriteTableY2[0] = alex.y;
      000BC2 ED 5Br00r03      [20] 1924 	ld	de, (_SpriteTableY2)
      000BC6 01r04r00         [10] 1925 	ld	bc, #_alex + 1
      000BC9 0A               [ 7] 1926 	ld	a, (bc)
      000BCA 12               [ 7] 1927 	ld	(de), a
                                   1928 ;./alex.c:190: SpriteTableY2[1] = alex.y;
      000BCB 2Ar00r03         [16] 1929 	ld	hl, (_SpriteTableY2)
      000BCE 23               [ 6] 1930 	inc	hl
      000BCF 0A               [ 7] 1931 	ld	a, (bc)
      000BD0 77               [ 7] 1932 	ld	(hl), a
                                   1933 ;./alex.c:191: SpriteTableY2[2] = alex.y + 16;
      000BD1 2Ar00r03         [16] 1934 	ld	hl, (_SpriteTableY2)
      000BD4 23               [ 6] 1935 	inc	hl
      000BD5 23               [ 6] 1936 	inc	hl
      000BD6 0A               [ 7] 1937 	ld	a, (bc)
      000BD7 C6 10            [ 7] 1938 	add	a, #0x10
      000BD9 77               [ 7] 1939 	ld	(hl), a
                                   1940 ;./alex.c:192: SpriteTableY2[3] = alex.y + 16;
      000BDA 2Ar00r03         [16] 1941 	ld	hl, (_SpriteTableY2)
      000BDD 23               [ 6] 1942 	inc	hl
      000BDE 23               [ 6] 1943 	inc	hl
      000BDF 23               [ 6] 1944 	inc	hl
      000BE0 0A               [ 7] 1945 	ld	a, (bc)
      000BE1 C6 10            [ 7] 1946 	add	a, #0x10
      000BE3 77               [ 7] 1947 	ld	(hl), a
                                   1948 ;./alex.c:193: int frame = 8*alex.frame*32;
      000BE4 3Ar05r00         [13] 1949 	ld	a, (#_alex + 2)
      000BE7 57               [ 4] 1950 	ld	d, a
      000BE8 1E 00            [ 7] 1951 	ld	e, #0x00
                                   1952 ;./alex.c:194: SMS_loadTiles(alex.sprite->data + frame,alex.sprite->beginVRAM,255);
      000BEA ED 4Br0Br00      [20] 1953 	ld	bc, (#_alex + 8)
      000BEE C5               [11] 1954 	push	bc
      000BEF FD E1            [14] 1955 	pop	iy
      000BF1 FD 6E 07         [19] 1956 	ld	l, 7 (iy)
                                   1957 ;	spillPairReg hl
      000BF4 FD 66 08         [19] 1958 	ld	h, 8 (iy)
                                   1959 ;	spillPairReg hl
      000BF7 19               [11] 1960 	add	hl, de
      000BF8 EB               [ 4] 1961 	ex	de, hl
      000BF9 21 04 00         [10] 1962 	ld	hl, #4
      000BFC 09               [11] 1963 	add	hl, bc
      000BFD 7E               [ 7] 1964 	ld	a, (hl)
      000BFE 23               [ 6] 1965 	inc	hl
      000BFF 66               [ 7] 1966 	ld	h, (hl)
                                   1967 ;	spillPairReg hl
      000C00 6F               [ 4] 1968 	ld	l, a
                                   1969 ;	spillPairReg hl
                                   1970 ;	spillPairReg hl
      000C01 29               [11] 1971 	add	hl, hl
      000C02 29               [11] 1972 	add	hl, hl
      000C03 29               [11] 1973 	add	hl, hl
      000C04 29               [11] 1974 	add	hl, hl
      000C05 29               [11] 1975 	add	hl, hl
      000C06 CB F4            [ 8] 1976 	set	6, h
      000C08 01 FF 00         [10] 1977 	ld	bc, #0x00ff
      000C0B C5               [11] 1978 	push	bc
      000C0C CDr00r00         [17] 1979 	call	_SMS_VRAMmemcpy
                                   1980 ;./alex.c:196: }
      000C0F C9               [10] 1981 	ret
                                   1982 ;./alex.c:199: void moveAlex(int keys) {
                                   1983 ;	---------------------------------
                                   1984 ; Function moveAlex
                                   1985 ; ---------------------------------
      000C10                       1986 _moveAlex::
      000C10 DD E5            [15] 1987 	push	ix
      000C12 DD 21 00 00      [14] 1988 	ld	ix,#0
      000C16 DD 39            [15] 1989 	add	ix,sp
      000C18 3B               [ 6] 1990 	dec	sp
                                   1991 ;./alex.c:200: unsigned char puedeBajar = canDown();
      000C19 E5               [11] 1992 	push	hl
      000C1A CDr72r08         [17] 1993 	call	_canDown
      000C1D 4F               [ 4] 1994 	ld	c, a
      000C1E C5               [11] 1995 	push	bc
      000C1F CDr66r08         [17] 1996 	call	_canUp
      000C22 DD 77 FF         [19] 1997 	ld	-1 (ix), a
      000C25 CDr8Cr08         [17] 1998 	call	_canRight
      000C28 5F               [ 4] 1999 	ld	e, a
      000C29 D5               [11] 2000 	push	de
      000C2A CDr80r08         [17] 2001 	call	_canLeft
      000C2D D1               [10] 2002 	pop	de
      000C2E C1               [10] 2003 	pop	bc
      000C2F E1               [10] 2004 	pop	hl
                                   2005 ;./alex.c:204: if (puedeBajar)
      000C30 0C               [ 4] 2006 	inc	c
      000C31 0D               [ 4] 2007 	dec	c
      000C32 28 0C            [12] 2008 	jr	Z, 00102$
                                   2009 ;./alex.c:205: moveAlexAire(keys, puedeSubir, puedeDerecha, puedeIzquierda);
      000C34 57               [ 4] 2010 	ld	d,a
      000C35 D5               [11] 2011 	push	de
      000C36 DD 7E FF         [19] 2012 	ld	a, -1 (ix)
      000C39 F5               [11] 2013 	push	af
      000C3A 33               [ 6] 2014 	inc	sp
      000C3B CDr62r0A         [17] 2015 	call	_moveAlexAire
      000C3E 18 03            [12] 2016 	jr	00103$
      000C40                       2017 00102$:
                                   2018 ;./alex.c:207: moveAlexSuelo(keys);
      000C40 CDr9Ar08         [17] 2019 	call	_moveAlexSuelo
      000C43                       2020 00103$:
                                   2021 ;./alex.c:208: drawAlex();
      000C43 CDr9Cr0B         [17] 2022 	call	_drawAlex
                                   2023 ;./alex.c:209: }
      000C46 33               [ 6] 2024 	inc	sp
      000C47 DD E1            [14] 2025 	pop	ix
      000C49 C9               [10] 2026 	ret
                                   2027 ;main.c:20: void inicializaPajaros()
                                   2028 ;	---------------------------------
                                   2029 ; Function inicializaPajaros
                                   2030 ; ---------------------------------
      000C4A                       2031 _inicializaPajaros::
      000C4A DD E5            [15] 2032 	push	ix
      000C4C DD 21 00 00      [14] 2033 	ld	ix,#0
      000C50 DD 39            [15] 2034 	add	ix,sp
      000C52 21 F9 FF         [10] 2035 	ld	hl, #-7
      000C55 39               [11] 2036 	add	hl, sp
      000C56 F9               [ 6] 2037 	ld	sp, hl
                                   2038 ;main.c:23: for (i = 0; i < NUM_PAJAROS; i++)
      000C57 DD 36 FF 00      [19] 2039 	ld	-1 (ix), #0x00
      000C5B                       2040 00108$:
                                   2041 ;main.c:25: pajaros[i].x = 15 + 32 * i;
      000C5B DD 4E FF         [19] 2042 	ld	c, -1 (ix)
      000C5E 06 00            [ 7] 2043 	ld	b, #0x00
      000C60 69               [ 4] 2044 	ld	l, c
      000C61 60               [ 4] 2045 	ld	h, b
      000C62 29               [11] 2046 	add	hl, hl
      000C63 29               [11] 2047 	add	hl, hl
      000C64 09               [11] 2048 	add	hl, bc
      000C65 29               [11] 2049 	add	hl, hl
      000C66 11r06r03         [10] 2050 	ld	de, #_pajaros
      000C69 19               [11] 2051 	add	hl, de
      000C6A E3               [19] 2052 	ex	(sp), hl
      000C6B DD 7E FF         [19] 2053 	ld	a, -1 (ix)
      000C6E 0F               [ 4] 2054 	rrca
      000C6F 0F               [ 4] 2055 	rrca
      000C70 0F               [ 4] 2056 	rrca
      000C71 E6 E0            [ 7] 2057 	and	a, #0xe0
      000C73 C6 0F            [ 7] 2058 	add	a, #0x0f
      000C75 E1               [10] 2059 	pop	hl
      000C76 E5               [11] 2060 	push	hl
      000C77 77               [ 7] 2061 	ld	(hl), a
                                   2062 ;main.c:26: pajaros[i].y = 16 * (i / 2);
      000C78 DD 7E F9         [19] 2063 	ld	a, -7 (ix)
      000C7B C6 01            [ 7] 2064 	add	a, #0x01
      000C7D DD 77 FB         [19] 2065 	ld	-5 (ix), a
      000C80 DD 7E FA         [19] 2066 	ld	a, -6 (ix)
      000C83 CE 00            [ 7] 2067 	adc	a, #0x00
      000C85 DD 77 FC         [19] 2068 	ld	-4 (ix), a
      000C88 DD 4E FF         [19] 2069 	ld	c, -1 (ix)
      000C8B 06 00            [ 7] 2070 	ld	b, #0x00
      000C8D DD 71 FD         [19] 2071 	ld	-3 (ix), c
      000C90 DD 70 FE         [19] 2072 	ld	-2 (ix), b
      000C93 CB 78            [ 8] 2073 	bit	7, b
      000C95 28 08            [12] 2074 	jr	Z, 00112$
      000C97 DD 36 FD 01      [19] 2075 	ld	-3 (ix), #0x01
      000C9B DD 36 FE 00      [19] 2076 	ld	-2 (ix), #0
      000C9F                       2077 00112$:
      000C9F DD 4E FD         [19] 2078 	ld	c, -3 (ix)
      000CA2 1E 00            [ 7] 2079 	ld	e, #0x00
      000CA4 CB 2B            [ 8] 2080 	sra	e
      000CA6 CB 19            [ 8] 2081 	rr	c
      000CA8 79               [ 4] 2082 	ld	a, c
      000CA9 87               [ 4] 2083 	add	a, a
      000CAA 87               [ 4] 2084 	add	a, a
      000CAB 87               [ 4] 2085 	add	a, a
      000CAC 87               [ 4] 2086 	add	a, a
      000CAD C1               [10] 2087 	pop	bc
      000CAE E1               [10] 2088 	pop	hl
      000CAF E5               [11] 2089 	push	hl
      000CB0 C5               [11] 2090 	push	bc
      000CB1 77               [ 7] 2091 	ld	(hl), a
                                   2092 ;main.c:27: pajaros[i].lastChangeFrame = i * 3;
      000CB2 C1               [10] 2093 	pop	bc
      000CB3 C5               [11] 2094 	push	bc
      000CB4 03               [ 6] 2095 	inc	bc
      000CB5 03               [ 6] 2096 	inc	bc
      000CB6 03               [ 6] 2097 	inc	bc
      000CB7 DD 7E FF         [19] 2098 	ld	a, -1 (ix)
      000CBA 5F               [ 4] 2099 	ld	e, a
      000CBB 87               [ 4] 2100 	add	a, a
      000CBC 83               [ 4] 2101 	add	a, e
      000CBD 02               [ 7] 2102 	ld	(bc), a
                                   2103 ;main.c:28: pajaros[i].initSprite = 255;
      000CBE DD 7E F9         [19] 2104 	ld	a, -7 (ix)
      000CC1 C6 06            [ 7] 2105 	add	a, #0x06
      000CC3 5F               [ 4] 2106 	ld	e, a
      000CC4 DD 7E FA         [19] 2107 	ld	a, -6 (ix)
      000CC7 CE 00            [ 7] 2108 	adc	a, #0x00
      000CC9 57               [ 4] 2109 	ld	d, a
      000CCA 3E FF            [ 7] 2110 	ld	a, #0xff
      000CCC 12               [ 7] 2111 	ld	(de), a
                                   2112 ;main.c:30: pajaros[i].x++;
      000CCD E1               [10] 2113 	pop	hl
      000CCE E5               [11] 2114 	push	hl
      000CCF 7E               [ 7] 2115 	ld	a, (hl)
      000CD0 3C               [ 4] 2116 	inc	a
      000CD1 E1               [10] 2117 	pop	hl
      000CD2 E5               [11] 2118 	push	hl
      000CD3 77               [ 7] 2119 	ld	(hl), a
                                   2120 ;main.c:31: pajaros[i].lastChangeFrame++;
      000CD4 0A               [ 7] 2121 	ld	a, (bc)
      000CD5 3C               [ 4] 2122 	inc	a
      000CD6 02               [ 7] 2123 	ld	(bc), a
                                   2124 ;main.c:32: if (pajaros[i].lastChangeFrame == 20)
      000CD7 D6 14            [ 7] 2125 	sub	a, #0x14
      000CD9 20 15            [12] 2126 	jr	NZ, 00104$
                                   2127 ;main.c:34: pajaros[i].frame++;
      000CDB E1               [10] 2128 	pop	hl
      000CDC E5               [11] 2129 	push	hl
      000CDD 23               [ 6] 2130 	inc	hl
      000CDE 23               [ 6] 2131 	inc	hl
      000CDF 7E               [ 7] 2132 	ld	a, (hl)
      000CE0 3C               [ 4] 2133 	inc	a
      000CE1 DD 77 FE         [19] 2134 	ld	-2 (ix), a
      000CE4 77               [ 7] 2135 	ld	(hl), a
                                   2136 ;main.c:35: if (pajaros[i].frame > 1)
      000CE5 3E 01            [ 7] 2137 	ld	a, #0x01
      000CE7 DD 96 FE         [19] 2138 	sub	a, -2 (ix)
      000CEA 30 02            [12] 2139 	jr	NC, 00102$
                                   2140 ;main.c:36: pajaros[i].frame = 0;
      000CEC 36 00            [10] 2141 	ld	(hl), #0x00
      000CEE                       2142 00102$:
                                   2143 ;main.c:37: pajaros[i].lastChangeFrame = 0;
      000CEE AF               [ 4] 2144 	xor	a, a
      000CEF 02               [ 7] 2145 	ld	(bc), a
      000CF0                       2146 00104$:
                                   2147 ;main.c:39: if(pajaros[i].initSprite == 255) {
      000CF0 1A               [ 7] 2148 	ld	a, (de)
      000CF1 3C               [ 4] 2149 	inc	a
      000CF2 20 08            [12] 2150 	jr	NZ, 00109$
                                   2151 ;main.c:40: draw_entidad(&(pajaros[i]), &spritePajaro);
      000CF4 11r17r00         [10] 2152 	ld	de, #_spritePajaro
      000CF7 E1               [10] 2153 	pop	hl
      000CF8 E5               [11] 2154 	push	hl
      000CF9 CDr40r04         [17] 2155 	call	_draw_entidad
      000CFC                       2156 00109$:
                                   2157 ;main.c:23: for (i = 0; i < NUM_PAJAROS; i++)
      000CFC DD 34 FF         [23] 2158 	inc	-1 (ix)
      000CFF DD 7E FF         [19] 2159 	ld	a, -1 (ix)
      000D02 D6 13            [ 7] 2160 	sub	a, #0x13
      000D04 DAr5Br0C         [10] 2161 	jp	C, 00108$
                                   2162 ;main.c:43: }
      000D07 DD F9            [10] 2163 	ld	sp, ix
      000D09 DD E1            [14] 2164 	pop	ix
      000D0B C9               [10] 2165 	ret
                                   2166 ;main.c:45: void loadGrapVRAM()
                                   2167 ;	---------------------------------
                                   2168 ; Function loadGrapVRAM
                                   2169 ; ---------------------------------
      000D0C                       2170 _loadGrapVRAM::
      000D0C DD E5            [15] 2171 	push	ix
      000D0E DD 21 00 00      [14] 2172 	ld	ix,#0
      000D12 DD 39            [15] 2173 	add	ix,sp
      000D14 21 E2 FF         [10] 2174 	ld	hl, #-30
      000D17 39               [11] 2175 	add	hl, sp
      000D18 F9               [ 6] 2176 	ld	sp, hl
                                   2177 ;main.c:47: SMS_init();
      000D19 CDr00r00         [17] 2178 	call	_SMS_init
                                   2179 ;main.c:50: SMS_setSpriteMode(SPRITEMODE_TALL);
      000D1C 2E 01            [ 7] 2180 	ld	l, #0x01
                                   2181 ;	spillPairReg hl
                                   2182 ;	spillPairReg hl
      000D1E CDr00r00         [17] 2183 	call	_SMS_setSpriteMode
                                   2184 ;main.c:51: SMS_displayOn();
      000D21 21 40 01         [10] 2185 	ld	hl, #0x0140
      000D24 CDr00r00         [17] 2186 	call	_SMS_VDPturnOnFeature
                                   2187 ;main.c:52: SMS_loadBGPalette(sonicpalette_inc);
      000D27 21r00r00         [10] 2188 	ld	hl, #_sonicpalette_inc
      000D2A CDr00r00         [17] 2189 	call	_SMS_loadBGPalette
                                   2190 ;main.c:53: SMS_loadSpritePalette(palleteAlex_inc);
      000D2D 21r00r00         [10] 2191 	ld	hl, #_palleteAlex_inc
      000D30 CDr00r00         [17] 2192 	call	_SMS_loadSpritePalette
                                   2193 ;main.c:55: spriteAlex = generateSpriteNoRAM(2, 2, spriteAlex_inc_size, spriteAlex_inc);
      000D33 21r00r00         [10] 2194 	ld	hl, #_spriteAlex_inc
      000D36 E5               [11] 2195 	push	hl
      000D37 21 00 10         [10] 2196 	ld	hl, #0x1000
      000D3A E5               [11] 2197 	push	hl
                                   2198 ;	spillPairReg hl
                                   2199 ;	spillPairReg hl
      000D3B 3E 02            [ 7] 2200 	ld	a,#0x02
      000D3D 6F               [ 4] 2201 	ld	l,a
      000D3E E5               [11] 2202 	push	hl
      000D3F 21 06 00         [10] 2203 	ld	hl, #0x0006
      000D42 39               [11] 2204 	add	hl, sp
      000D43 EB               [ 4] 2205 	ex	de,hl
      000D44 E1               [10] 2206 	pop	hl
      000D45 D5               [11] 2207 	push	de
      000D46 CDrAAr00         [17] 2208 	call	_generateSpriteNoRAM
      000D49 F1               [10] 2209 	pop	af
      000D4A F1               [10] 2210 	pop	af
      000D4B F1               [10] 2211 	pop	af
      000D4C 11r0Dr00         [10] 2212 	ld	de, #_spriteAlex
      000D4F 21 00 00         [10] 2213 	ld	hl, #0
      000D52 39               [11] 2214 	add	hl, sp
      000D53 01 0A 00         [10] 2215 	ld	bc, #0x000a
      000D56 ED B0            [21] 2216 	ldir
                                   2217 ;main.c:56: spritePuno = generateSprite(1, 2, puno_inc_size, puno_inc);
      000D58 21r00r00         [10] 2218 	ld	hl, #_puno_inc
      000D5B E5               [11] 2219 	push	hl
      000D5C 21 80 00         [10] 2220 	ld	hl, #0x0080
      000D5F E5               [11] 2221 	push	hl
      000D60 2E 02            [ 7] 2222 	ld	l, #0x02
                                   2223 ;	spillPairReg hl
                                   2224 ;	spillPairReg hl
      000D62 3E 01            [ 7] 2225 	ld	a, #0x01
      000D64 E5               [11] 2226 	push	hl
      000D65 21 10 00         [10] 2227 	ld	hl, #0x0010
      000D68 39               [11] 2228 	add	hl, sp
      000D69 EB               [ 4] 2229 	ex	de,hl
      000D6A E1               [10] 2230 	pop	hl
      000D6B D5               [11] 2231 	push	de
      000D6C CDr00r00         [17] 2232 	call	_generateSprite
      000D6F F1               [10] 2233 	pop	af
      000D70 F1               [10] 2234 	pop	af
      000D71 F1               [10] 2235 	pop	af
      000D72 11r21r00         [10] 2236 	ld	de, #_spritePuno
      000D75 21 0A 00         [10] 2237 	ld	hl, #10
      000D78 39               [11] 2238 	add	hl, sp
      000D79 01 0A 00         [10] 2239 	ld	bc, #0x000a
      000D7C ED B0            [21] 2240 	ldir
                                   2241 ;main.c:57: spritePajaro = generateSprite(3, 1, spritePajaro_inc_size, spritePajaro_inc);
      000D7E 21r00r00         [10] 2242 	ld	hl, #_spritePajaro_inc
      000D81 E5               [11] 2243 	push	hl
      000D82 21 80 01         [10] 2244 	ld	hl, #0x0180
      000D85 E5               [11] 2245 	push	hl
      000D86 2E 01            [ 7] 2246 	ld	l, #0x01
                                   2247 ;	spillPairReg hl
                                   2248 ;	spillPairReg hl
      000D88 3E 03            [ 7] 2249 	ld	a, #0x03
      000D8A E5               [11] 2250 	push	hl
      000D8B 21 1A 00         [10] 2251 	ld	hl, #0x001a
      000D8E 39               [11] 2252 	add	hl, sp
      000D8F EB               [ 4] 2253 	ex	de,hl
      000D90 E1               [10] 2254 	pop	hl
      000D91 D5               [11] 2255 	push	de
      000D92 CDr00r00         [17] 2256 	call	_generateSprite
      000D95 F1               [10] 2257 	pop	af
      000D96 F1               [10] 2258 	pop	af
      000D97 F1               [10] 2259 	pop	af
      000D98 11r17r00         [10] 2260 	ld	de, #_spritePajaro
      000D9B 21 14 00         [10] 2261 	ld	hl, #20
      000D9E 39               [11] 2262 	add	hl, sp
      000D9F 01 0A 00         [10] 2263 	ld	bc, #0x000a
      000DA2 ED B0            [21] 2264 	ldir
                                   2265 ;main.c:58: SMS_initSprites();
      000DA4 CDr00r00         [17] 2266 	call	_SMS_initSprites
                                   2267 ;main.c:59: alex.initSprite = 255;
      000DA7 21r09r00         [10] 2268 	ld	hl, #_alex + 6
      000DAA 36 FF            [10] 2269 	ld	(hl), #0xff
                                   2270 ;main.c:60: draw_entidad(&alex, &spriteAlex);
      000DAC 11r0Dr00         [10] 2271 	ld	de, #_spriteAlex
      000DAF 21r03r00         [10] 2272 	ld	hl, #_alex
      000DB2 CDr40r04         [17] 2273 	call	_draw_entidad
                                   2274 ;main.c:61: SMS_addSprite (0, 0, 9); // puno
      000DB5 11 09 00         [10] 2275 	ld	de, #0x0009
      000DB8 21 00 00         [10] 2276 	ld	hl, #0x0000
      000DBB CDr00r00         [17] 2277 	call	_SMS_addSprite_f
                                   2278 ;main.c:62: inicializaPajaros();
      000DBE CDr4Ar0C         [17] 2279 	call	_inicializaPajaros
                                   2280 ;main.c:67: SMS_loadTiles(tiles_de_prueba2_inc, 0, tiles_de_prueba2_inc_size);
      000DC1 21 A0 00         [10] 2281 	ld	hl, #0x00a0
      000DC4 E5               [11] 2282 	push	hl
      000DC5 11r00r00         [10] 2283 	ld	de, #_tiles_de_prueba2_inc
      000DC8 21 00 40         [10] 2284 	ld	hl, #0x4000
      000DCB CDr00r00         [17] 2285 	call	_SMS_VRAMmemcpy
                                   2286 ;main.c:68: SMS_loadTileMap(0, 0, tilemap_de_prueba2_inc, tilemap_de_prueba2_inc_size);
      000DCE 21 80 07         [10] 2287 	ld	hl, #0x0780
      000DD1 E5               [11] 2288 	push	hl
      000DD2 11r00r00         [10] 2289 	ld	de, #_tilemap_de_prueba2_inc
      000DD5 21 00 78         [10] 2290 	ld	hl, #0x7800
      000DD8 CDr00r00         [17] 2291 	call	_SMS_VRAMmemcpy
                                   2292 ;main.c:69: SMS_loadBGPalette(paleta_de_prueba2_inc);
      000DDB 21r00r00         [10] 2293 	ld	hl, #_paleta_de_prueba2_inc
      000DDE CDr00r00         [17] 2294 	call	_SMS_loadBGPalette
                                   2295 ;main.c:70: SMS_setSpritePaletteColor(0,0);
                                   2296 ;	spillPairReg hl
                                   2297 ;	spillPairReg hl
      000DE1 AF               [ 4] 2298 	xor	a, a
      000DE2 6F               [ 4] 2299 	ld	l, a
      000DE3 CDr00r00         [17] 2300 	call	_SMS_setSpritePaletteColor
                                   2301 ;main.c:71: }
      000DE6 DD F9            [10] 2302 	ld	sp, ix
      000DE8 DD E1            [14] 2303 	pop	ix
      000DEA C9               [10] 2304 	ret
                                   2305 ;main.c:73: void dibujaPajaros()
                                   2306 ;	---------------------------------
                                   2307 ; Function dibujaPajaros
                                   2308 ; ---------------------------------
      000DEB                       2309 _dibujaPajaros::
      000DEB DD E5            [15] 2310 	push	ix
      000DED DD 21 00 00      [14] 2311 	ld	ix,#0
      000DF1 DD 39            [15] 2312 	add	ix,sp
      000DF3 21 F6 FF         [10] 2313 	ld	hl, #-10
      000DF6 39               [11] 2314 	add	hl, sp
      000DF7 F9               [ 6] 2315 	ld	sp, hl
                                   2316 ;main.c:78: unsigned char initPajaros = pajaros[0].initSprite;
      000DF8 3Ar0Cr03         [13] 2317 	ld	a,(#_pajaros + 6)
      000DFB DD 77 FA         [19] 2318 	ld	-6 (ix), a
                                   2319 ;main.c:79: for (i = 0; i < NUM_PAJAROS; i++)
      000DFE DD 36 FE 00      [19] 2320 	ld	-2 (ix), #0x00
      000E02                       2321 00119$:
                                   2322 ;main.c:81: T_entidad *p = &pajaros[i];
      000E02 DD 4E FE         [19] 2323 	ld	c, -2 (ix)
      000E05 06 00            [ 7] 2324 	ld	b, #0x00
      000E07 69               [ 4] 2325 	ld	l, c
      000E08 60               [ 4] 2326 	ld	h, b
      000E09 29               [11] 2327 	add	hl, hl
      000E0A 29               [11] 2328 	add	hl, hl
      000E0B 09               [11] 2329 	add	hl, bc
      000E0C 29               [11] 2330 	add	hl, hl
      000E0D 11r06r03         [10] 2331 	ld	de, #_pajaros
      000E10 19               [11] 2332 	add	hl, de
                                   2333 ;main.c:82: p->x++;
      000E11 DD 75 FB         [19] 2334 	ld	-5 (ix), l
      000E14 DD 74 FC         [19] 2335 	ld	-4 (ix), h
      000E17 7E               [ 7] 2336 	ld	a, (hl)
      000E18 3C               [ 4] 2337 	inc	a
      000E19 DD 6E FB         [19] 2338 	ld	l, -5 (ix)
      000E1C DD 66 FC         [19] 2339 	ld	h, -4 (ix)
      000E1F 77               [ 7] 2340 	ld	(hl), a
                                   2341 ;main.c:83: p->lastChangeFrame++;
      000E20 DD 7E FB         [19] 2342 	ld	a, -5 (ix)
      000E23 C6 03            [ 7] 2343 	add	a, #0x03
      000E25 DD 77 F6         [19] 2344 	ld	-10 (ix), a
      000E28 DD 7E FC         [19] 2345 	ld	a, -4 (ix)
      000E2B CE 00            [ 7] 2346 	adc	a, #0x00
      000E2D DD 77 F7         [19] 2347 	ld	-9 (ix), a
      000E30 E1               [10] 2348 	pop	hl
      000E31 E5               [11] 2349 	push	hl
      000E32 7E               [ 7] 2350 	ld	a, (hl)
      000E33 3C               [ 4] 2351 	inc	a
      000E34 E1               [10] 2352 	pop	hl
      000E35 E5               [11] 2353 	push	hl
      000E36 77               [ 7] 2354 	ld	(hl), a
                                   2355 ;main.c:85: if (p->lastChangeFrame == 20)
      000E37 D6 14            [ 7] 2356 	sub	a, #0x14
      000E39 C2rCEr0E         [10] 2357 	jp	NZ,00108$
                                   2358 ;main.c:87: p->frame++;
      000E3C DD 7E FB         [19] 2359 	ld	a, -5 (ix)
      000E3F C6 02            [ 7] 2360 	add	a, #0x02
      000E41 DD 77 F8         [19] 2361 	ld	-8 (ix), a
      000E44 DD 7E FC         [19] 2362 	ld	a, -4 (ix)
      000E47 CE 00            [ 7] 2363 	adc	a, #0x00
      000E49 DD 77 F9         [19] 2364 	ld	-7 (ix), a
      000E4C DD 6E F8         [19] 2365 	ld	l, -8 (ix)
      000E4F DD 66 F9         [19] 2366 	ld	h, -7 (ix)
      000E52 4E               [ 7] 2367 	ld	c, (hl)
      000E53 0C               [ 4] 2368 	inc	c
      000E54 D1               [10] 2369 	pop	de
      000E55 E1               [10] 2370 	pop	hl
      000E56 E5               [11] 2371 	push	hl
      000E57 D5               [11] 2372 	push	de
      000E58 71               [ 7] 2373 	ld	(hl), c
                                   2374 ;main.c:88: if (p->frame > 1)
      000E59 3E 01            [ 7] 2375 	ld	a, #0x01
      000E5B 91               [ 4] 2376 	sub	a, c
      000E5C 30 06            [12] 2377 	jr	NC, 00104$
                                   2378 ;main.c:89: p->frame = 0;
      000E5E C1               [10] 2379 	pop	bc
      000E5F E1               [10] 2380 	pop	hl
      000E60 E5               [11] 2381 	push	hl
      000E61 C5               [11] 2382 	push	bc
      000E62 36 00            [10] 2383 	ld	(hl), #0x00
      000E64                       2384 00104$:
                                   2385 ;main.c:90: p->lastChangeFrame = 0;
      000E64 E1               [10] 2386 	pop	hl
      000E65 36 00            [10] 2387 	ld	(hl), #0x00
      000E67 E5               [11] 2388 	push	hl
                                   2389 ;main.c:91: int frame = spritePajaro.tamano*p->frame + spritePajaro.beginVRAM;
      000E68 21r19r00         [10] 2390 	ld	hl, #_spritePajaro + 2
      000E6B 5E               [ 7] 2391 	ld	e, (hl)
      000E6C DD 6E F8         [19] 2392 	ld	l, -8 (ix)
      000E6F DD 66 F9         [19] 2393 	ld	h, -7 (ix)
      000E72 66               [ 7] 2394 	ld	h, (hl)
                                   2395 ;	spillPairReg hl
      000E73 2E 00            [ 7] 2396 	ld	l, #0x00
      000E75 55               [ 4] 2397 	ld	d, l
      000E76 06 08            [ 7] 2398 	ld	b, #0x08
      000E78                       2399 00191$:
      000E78 29               [11] 2400 	add	hl, hl
      000E79 30 01            [12] 2401 	jr	NC, 00192$
      000E7B 19               [11] 2402 	add	hl, de
      000E7C                       2403 00192$:
      000E7C 10 FA            [13] 2404 	djnz	00191$
      000E7E 4D               [ 4] 2405 	ld	c, l
      000E7F 3Ar1Br00         [13] 2406 	ld	a, (#_spritePajaro + 4)
      000E82 81               [ 4] 2407 	add	a, c
      000E83 DD 77 FD         [19] 2408 	ld	-3 (ix), a
                                   2409 ;main.c:92: for(j=0;j<spritePajaro.alto;j++) {
      000E86 DD 36 FF 00      [19] 2410 	ld	-1 (ix), #0x00
      000E8A                       2411 00117$:
      000E8A 21r17r00         [10] 2412 	ld	hl, #_spritePajaro
      000E8D DD 7E FF         [19] 2413 	ld	a,-1 (ix)
      000E90 96               [ 7] 2414 	sub	a,(hl)
      000E91 30 3B            [12] 2415 	jr	NC, 00108$
                                   2416 ;main.c:93: unsigned char desplazado = (j<<2);
      000E93 DD 7E FF         [19] 2417 	ld	a, -1 (ix)
      000E96 87               [ 4] 2418 	add	a, a
      000E97 87               [ 4] 2419 	add	a, a
                                   2420 ;main.c:94: unsigned char jCalculated = desplazado + frame, y = p->y+(desplazado<<2);
      000E98 DD 86 FD         [19] 2421 	add	a, -3 (ix)
      000E9B 5F               [ 4] 2422 	ld	e, a
                                   2423 ;main.c:95: for(i2=0;i2<spritePajaro.ancho;i2++) {
      000E9C 16 00            [ 7] 2424 	ld	d, #0x00
      000E9E                       2425 00114$:
      000E9E 21r18r00         [10] 2426 	ld	hl, #_spritePajaro + 1
      000EA1 4E               [ 7] 2427 	ld	c, (hl)
      000EA2 7A               [ 4] 2428 	ld	a, d
      000EA3 91               [ 4] 2429 	sub	a, c
      000EA4 30 23            [12] 2430 	jr	NC, 00118$
                                   2431 ;main.c:96: SpriteTableXN2[(i2+initPajaros)*2+1] = jCalculated + (i2<<1);
      000EA6 4A               [ 4] 2432 	ld	c, d
      000EA7 06 00            [ 7] 2433 	ld	b, #0x00
      000EA9 DD 6E FA         [19] 2434 	ld	l, -6 (ix)
                                   2435 ;	spillPairReg hl
                                   2436 ;	spillPairReg hl
      000EAC 26 00            [ 7] 2437 	ld	h, #0x00
                                   2438 ;	spillPairReg hl
                                   2439 ;	spillPairReg hl
      000EAE 09               [11] 2440 	add	hl, bc
      000EAF 29               [11] 2441 	add	hl, hl
      000EB0 23               [ 6] 2442 	inc	hl
      000EB1 4D               [ 4] 2443 	ld	c, l
      000EB2 44               [ 4] 2444 	ld	b, h
      000EB3 79               [ 4] 2445 	ld	a, c
      000EB4 FD 21r02r03      [14] 2446 	ld	iy, #_SpriteTableXN2
      000EB8 FD 86 00         [19] 2447 	add	a, 0 (iy)
      000EBB 4F               [ 4] 2448 	ld	c, a
      000EBC 78               [ 4] 2449 	ld	a, b
      000EBD FD 8E 01         [19] 2450 	adc	a, 1 (iy)
      000EC0 47               [ 4] 2451 	ld	b, a
      000EC1 7A               [ 4] 2452 	ld	a, d
      000EC2 87               [ 4] 2453 	add	a, a
      000EC3 6B               [ 4] 2454 	ld	l, e
                                   2455 ;	spillPairReg hl
                                   2456 ;	spillPairReg hl
      000EC4 85               [ 4] 2457 	add	a, l
      000EC5 02               [ 7] 2458 	ld	(bc), a
                                   2459 ;main.c:95: for(i2=0;i2<spritePajaro.ancho;i2++) {
      000EC6 14               [ 4] 2460 	inc	d
      000EC7 18 D5            [12] 2461 	jr	00114$
      000EC9                       2462 00118$:
                                   2463 ;main.c:92: for(j=0;j<spritePajaro.alto;j++) {
      000EC9 DD 34 FF         [23] 2464 	inc	-1 (ix)
      000ECC 18 BC            [12] 2465 	jr	00117$
      000ECE                       2466 00108$:
                                   2467 ;main.c:100: initPajaros +=3;
      000ECE DD 7E FA         [19] 2468 	ld	a, -6 (ix)
      000ED1 C6 03            [ 7] 2469 	add	a, #0x03
      000ED3 DD 77 FA         [19] 2470 	ld	-6 (ix), a
                                   2471 ;main.c:101: end = p->len;
      000ED6 DD 4E FB         [19] 2472 	ld	c, -5 (ix)
      000ED9 DD 46 FC         [19] 2473 	ld	b, -4 (ix)
      000EDC 21 07 00         [10] 2474 	ld	hl, #7
      000EDF 09               [11] 2475 	add	hl, bc
      000EE0 4E               [ 7] 2476 	ld	c, (hl)
                                   2477 ;main.c:102: i2 = p->initSprite << 1;
      000EE1 DD 5E FB         [19] 2478 	ld	e, -5 (ix)
      000EE4 DD 56 FC         [19] 2479 	ld	d, -4 (ix)
      000EE7 21 06 00         [10] 2480 	ld	hl, #6
      000EEA 19               [11] 2481 	add	hl, de
      000EEB 7E               [ 7] 2482 	ld	a, (hl)
      000EEC 87               [ 4] 2483 	add	a, a
      000EED 47               [ 4] 2484 	ld	b, a
                                   2485 ;main.c:103: while(i2<end) {
      000EEE                       2486 00109$:
                                   2487 ;main.c:104: SpriteTableXN2[i2] += 1;
      000EEE 78               [ 4] 2488 	ld	a,b
      000EEF B9               [ 4] 2489 	cp	a,c
      000EF0 30 11            [12] 2490 	jr	NC, 00120$
      000EF2 21r02r03         [10] 2491 	ld	hl, #_SpriteTableXN2
      000EF5 86               [ 7] 2492 	add	a, (hl)
      000EF6 23               [ 6] 2493 	inc	hl
      000EF7 5F               [ 4] 2494 	ld	e, a
      000EF8 3E 00            [ 7] 2495 	ld	a, #0x00
      000EFA 8E               [ 7] 2496 	adc	a, (hl)
      000EFB 57               [ 4] 2497 	ld	d, a
      000EFC 1A               [ 7] 2498 	ld	a, (de)
      000EFD 3C               [ 4] 2499 	inc	a
      000EFE 12               [ 7] 2500 	ld	(de), a
                                   2501 ;main.c:105: i2 +=2;
      000EFF 04               [ 4] 2502 	inc	b
      000F00 04               [ 4] 2503 	inc	b
      000F01 18 EB            [12] 2504 	jr	00109$
      000F03                       2505 00120$:
                                   2506 ;main.c:79: for (i = 0; i < NUM_PAJAROS; i++)
      000F03 DD 34 FE         [23] 2507 	inc	-2 (ix)
      000F06 DD 7E FE         [19] 2508 	ld	a, -2 (ix)
      000F09 D6 13            [ 7] 2509 	sub	a, #0x13
      000F0B DAr02r0E         [10] 2510 	jp	C, 00119$
                                   2511 ;main.c:110: }
      000F0E DD F9            [10] 2512 	ld	sp, ix
      000F10 DD E1            [14] 2513 	pop	ix
      000F12 C9               [10] 2514 	ret
                                   2515 ;main.c:112: void playMusic() {
                                   2516 ;	---------------------------------
                                   2517 ; Function playMusic
                                   2518 ; ---------------------------------
      000F13                       2519 _playMusic::
                                   2520 ;main.c:113: PSGFrame();
      000F13 CDr00r00         [17] 2521 	call	_PSGFrame
                                   2522 ;main.c:114: PSGSFXFrame();
                                   2523 ;main.c:115: }
      000F16 C3r00r00         [10] 2524 	jp	_PSGSFXFrame
                                   2525 ;main.c:117: void disableSprites() {
                                   2526 ;	---------------------------------
                                   2527 ; Function disableSprites
                                   2528 ; ---------------------------------
      000F19                       2529 _disableSprites::
                                   2530 ;main.c:120: while (i < 64) {
      000F19 0E 00            [ 7] 2531 	ld	c, #0x00
      000F1B                       2532 00101$:
      000F1B 79               [ 4] 2533 	ld	a, c
      000F1C D6 40            [ 7] 2534 	sub	a, #0x40
      000F1E 30 10            [12] 2535 	jr	NC, 00103$
                                   2536 ;main.c:121: SMS_updateSpritePosition(i,10,240); 
      000F20 41               [ 4] 2537 	ld	b, c
      000F21 C5               [11] 2538 	push	bc
      000F22 3E F0            [ 7] 2539 	ld	a, #0xf0
      000F24 F5               [11] 2540 	push	af
      000F25 33               [ 6] 2541 	inc	sp
      000F26 2E 0A            [ 7] 2542 	ld	l, #0x0a
                                   2543 ;	spillPairReg hl
                                   2544 ;	spillPairReg hl
      000F28 78               [ 4] 2545 	ld	a, b
      000F29 CDr00r00         [17] 2546 	call	_SMS_updateSpritePosition
      000F2C C1               [10] 2547 	pop	bc
                                   2548 ;main.c:122: i++;
      000F2D 0C               [ 4] 2549 	inc	c
      000F2E 18 EB            [12] 2550 	jr	00101$
      000F30                       2551 00103$:
                                   2552 ;main.c:124: numSprites = 0;
      000F30 21 00 00         [10] 2553 	ld	hl, #0x0000
      000F33 22rC4r03         [16] 2554 	ld	(_numSprites), hl
                                   2555 ;main.c:125: }
      000F36 C9               [10] 2556 	ret
                                   2557 ;main.c:127: void main(void)
                                   2558 ;	---------------------------------
                                   2559 ; Function main
                                   2560 ; ---------------------------------
      000F37                       2561 _main::
      000F37 DD E5            [15] 2562 	push	ix
      000F39 DD 21 00 00      [14] 2563 	ld	ix,#0
      000F3D DD 39            [15] 2564 	add	ix,sp
      000F3F F5               [11] 2565 	push	af
                                   2566 ;main.c:132: SMS_VRAMmemsetW(0, 0x0000, 16384);
      000F40 DD 36 FF 00      [19] 2567 	ld	-1 (ix), #0x00
      000F44 DD 36 FE 00      [19] 2568 	ld	-2 (ix), #0x00
      000F48 21 00 40         [10] 2569 	ld	hl, #0x4000
      000F4B E5               [11] 2570 	push	hl
      000F4C 11 00 00         [10] 2571 	ld	de, #0x0000
      000F4F 65               [ 4] 2572 	ld	h, l
      000F50 CDr00r00         [17] 2573 	call	_SMS_VRAMmemsetW
                                   2574 ;main.c:142: printf("Hello, World! [1/3]");
      000F53 21r00r10         [10] 2575 	ld	hl, #___str_0
      000F56 E5               [11] 2576 	push	hl
      000F57 CDr00r00         [17] 2577 	call	_printf
      000F5A F1               [10] 2578 	pop	af
                                   2579 ;main.c:147: SMS_displayOn();
      000F5B 21 40 01         [10] 2580 	ld	hl, #0x0140
      000F5E CDr00r00         [17] 2581 	call	_SMS_VDPturnOnFeature
                                   2582 ;main.c:148: SMS_setBGScrollX(scroll_x);
      000F61 2E 00            [ 7] 2583 	ld	l, #0x00
                                   2584 ;	spillPairReg hl
                                   2585 ;	spillPairReg hl
      000F63 CDr00r00         [17] 2586 	call	_SMS_setBGScrollX
                                   2587 ;main.c:149: SMS_setBGScrollY(scroll_y);
      000F66 2E 00            [ 7] 2588 	ld	l, #0x00
                                   2589 ;	spillPairReg hl
                                   2590 ;	spillPairReg hl
      000F68 CDr00r00         [17] 2591 	call	_SMS_setBGScrollY
                                   2592 ;main.c:150: SMS_init();
      000F6B CDr00r00         [17] 2593 	call	_SMS_init
                                   2594 ;main.c:151: initSpritesVariables();
      000F6E CDrDDr03         [17] 2595 	call	_initSpritesVariables
                                   2596 ;main.c:152: loadGrapVRAM();
      000F71 CDr0Cr0D         [17] 2597 	call	_loadGrapVRAM
                                   2598 ;main.c:158: PSGPlay(special_psg);
      000F74 21r00r00         [10] 2599 	ld	hl, #_special_psg
      000F77 CDr00r00         [17] 2600 	call	_PSGPlay
                                   2601 ;main.c:159: SMS_VDPturnOnFeature(VDPFEATURE_LEFTCOLBLANK);
      000F7A 21 20 00         [10] 2602 	ld	hl, #0x0020
      000F7D CDr00r00         [17] 2603 	call	_SMS_VDPturnOnFeature
                                   2604 ;main.c:163: SMS_setFrameInterruptHandler(playMusic);
      000F80 21r13r0F         [10] 2605 	ld	hl, #_playMusic
      000F83 CDr00r00         [17] 2606 	call	_SMS_setFrameInterruptHandler
      000F86                       2607 00115$:
                                   2608 ;main.c:168: if (SMS_queryPauseRequested())
      000F86 CDr00r00         [17] 2609 	call	_SMS_queryPauseRequested
      000F89 CB 47            [ 8] 2610 	bit	0,a
      000F8B 28 1E            [12] 2611 	jr	Z, 00105$
                                   2612 ;main.c:170: PSGPlay(emeraldhill_psg);
      000F8D 21r00r00         [10] 2613 	ld	hl, #_emeraldhill_psg
      000F90 CDr00r00         [17] 2614 	call	_PSGPlay
                                   2615 ;main.c:171: SMS_resetPauseRequest();
      000F93 CDr00r00         [17] 2616 	call	_SMS_resetPauseRequest
                                   2617 ;main.c:172: while (!SMS_queryPauseRequested())
      000F96                       2618 00101$:
      000F96 CDr00r00         [17] 2619 	call	_SMS_queryPauseRequested
      000F99 CB 47            [ 8] 2620 	bit	0,a
      000F9B 20 05            [12] 2621 	jr	NZ, 00103$
                                   2622 ;main.c:174: SMS_waitForVBlank();
      000F9D CDr00r00         [17] 2623 	call	_SMS_waitForVBlank
      000FA0 18 F4            [12] 2624 	jr	00101$
      000FA2                       2625 00103$:
                                   2626 ;main.c:178: SMS_resetPauseRequest();
      000FA2 CDr00r00         [17] 2627 	call	_SMS_resetPauseRequest
                                   2628 ;main.c:179: PSGPlay(titulo_psg);
      000FA5 21r00r00         [10] 2629 	ld	hl, #_titulo_psg
      000FA8 CDr00r00         [17] 2630 	call	_PSGPlay
      000FAB                       2631 00105$:
                                   2632 ;main.c:183: int keys = SMS_getKeysHeld();
      000FAB CDr00r00         [17] 2633 	call	_SMS_getKeysHeld
      000FAE EB               [ 4] 2634 	ex	de, hl
                                   2635 ;main.c:184: if(keys & PORT_A_KEY_2)
      000FAF CB 6D            [ 8] 2636 	bit	5, l
      000FB1 28 04            [12] 2637 	jr	Z, 00107$
                                   2638 ;main.c:185: keys = keys  ^ PORT_A_KEY_2;
      000FB3 7D               [ 4] 2639 	ld	a, l
      000FB4 EE 20            [ 7] 2640 	xor	a, #0x20
      000FB6 6F               [ 4] 2641 	ld	l, a
                                   2642 ;	spillPairReg hl
                                   2643 ;	spillPairReg hl
      000FB7                       2644 00107$:
                                   2645 ;main.c:186: if(keys & PORT_A_KEY_1)
      000FB7 CB 65            [ 8] 2646 	bit	4, l
      000FB9 28 04            [12] 2647 	jr	Z, 00109$
                                   2648 ;main.c:187: keys = keys  ^ PORT_A_KEY_1;
      000FBB 7D               [ 4] 2649 	ld	a, l
      000FBC EE 10            [ 7] 2650 	xor	a, #0x10
      000FBE 6F               [ 4] 2651 	ld	l, a
                                   2652 ;	spillPairReg hl
                                   2653 ;	spillPairReg hl
      000FBF                       2654 00109$:
                                   2655 ;main.c:189: keys = keys | (SMS_getKeysPressed() & (PORT_A_KEY_2 | PORT_A_KEY_1));
      000FBF E5               [11] 2656 	push	hl
      000FC0 CDr00r00         [17] 2657 	call	_SMS_getKeysPressed
      000FC3 E1               [10] 2658 	pop	hl
      000FC4 7B               [ 4] 2659 	ld	a, e
      000FC5 E6 30            [ 7] 2660 	and	a, #0x30
      000FC7 B5               [ 4] 2661 	or	a, l
      000FC8 6F               [ 4] 2662 	ld	l, a
                                   2663 ;	spillPairReg hl
                                   2664 ;	spillPairReg hl
                                   2665 ;main.c:192: moveAlex(keys);
      000FC9 CDr10r0C         [17] 2666 	call	_moveAlex
                                   2667 ;main.c:194: dibujaPajaros();
      000FCC CDrEBr0D         [17] 2668 	call	_dibujaPajaros
                                   2669 ;main.c:199: SMS_waitForVBlank();
      000FCF CDr00r00         [17] 2670 	call	_SMS_waitForVBlank
                                   2671 ;main.c:202: SMS_displayOff();
      000FD2 21 40 01         [10] 2672 	ld	hl, #0x0140
      000FD5 CDr00r00         [17] 2673 	call	_SMS_VDPturnOffFeature
                                   2674 ;main.c:205: copySpritestoSAT();
      000FD8 CDr0Cr04         [17] 2675 	call	_copySpritestoSAT
                                   2676 ;main.c:212: if (scroll_y % 2 == 0)
      000FDB DD CB FF 46      [20] 2677 	bit	0, -1 (ix)
      000FDF 20 03            [12] 2678 	jr	NZ, 00111$
                                   2679 ;main.c:213: scroll_x += 1;
      000FE1 DD 34 FE         [23] 2680 	inc	-2 (ix)
      000FE4                       2681 00111$:
                                   2682 ;main.c:214: scroll_y++;
      000FE4 DD 34 FF         [23] 2683 	inc	-1 (ix)
                                   2684 ;main.c:215: if (scroll_y == 224)
      000FE7 DD 7E FF         [19] 2685 	ld	a, -1 (ix)
      000FEA D6 E0            [ 7] 2686 	sub	a, #0xe0
      000FEC 20 04            [12] 2687 	jr	NZ, 00113$
                                   2688 ;main.c:216: scroll_y = 0;
      000FEE DD 36 FF 00      [19] 2689 	ld	-1 (ix), #0x00
      000FF2                       2690 00113$:
                                   2691 ;main.c:218: SMS_setBGScrollX(scroll_x);
      000FF2 DD 6E FE         [19] 2692 	ld	l, -2 (ix)
                                   2693 ;	spillPairReg hl
                                   2694 ;	spillPairReg hl
      000FF5 CDr00r00         [17] 2695 	call	_SMS_setBGScrollX
                                   2696 ;main.c:220: SMS_displayOn();
      000FF8 21 40 01         [10] 2697 	ld	hl, #0x0140
      000FFB CDr00r00         [17] 2698 	call	_SMS_VDPturnOnFeature
                                   2699 ;main.c:222: }
      000FFE 18 86            [12] 2700 	jr	00115$
      001000                       2701 ___str_0:
      001000 48 65 6C 6C 6F 2C 20  2702 	.ascii "Hello, World! [1/3]"
             57 6F 72 6C 64 21 20
             5B 31 2F 33 5D
      001013 00                    2703 	.db 0x00
                                   2704 	.area _CODE
      001014                       2705 __str_1:
      001014 53 45 47 41           2706 	.ascii "SEGA"
      001018 00                    2707 	.db 0x00
      001019                       2708 __str_2:
      001019 62 61 73 69 63 20 65  2709 	.ascii "basic example"
             78 61 6D 70 6C 65
      001026 00                    2710 	.db 0x00
      001027                       2711 __str_3:
      001027 41 20 73 69 6D 70 6C  2712 	.ascii "A simple example"
             65 20 65 78 61 6D 70
             6C 65
      001037 00                    2713 	.db 0x00
                                   2714 	.area _INITIALIZER
      000000                       2715 __xinit__nextVRAMsprites:
      000000 00 01                 2716 	.dw #0x0100
      000002                       2717 __xinit__maxSalto:
      000002 FF                    2718 	.db #0xff	; 255
      000003                       2719 __xinit__alex:
      000003 1E                    2720 	.db #0x1e	; 30
      000004 96                    2721 	.db #0x96	; 150
      000005 00                    2722 	.db #0x00	; 0
      000006 00                    2723 	.db #0x00	; 0
      000007 00                    2724 	.db #0x00	; 0
      000008 00                    2725 	.db #0x00	; 0
      000009 FF                    2726 	.db #0xff	; 255
      00000A 00                    2727 	.db #0x00	; 0
      00000B 00 00                 2728 	.dw #0x0000
      00000D                       2729 __xinit__spriteAlex:
      00000D 02                    2730 	.db #0x02	; 2
      00000E 02                    2731 	.db #0x02	; 2
      00000F 08                    2732 	.db #0x08	; 8
      000010 00                    2733 	.db #0x00	; 0
      000011 00 00                 2734 	.dw #0x0000
      000013 00                    2735 	.db #0x00	; 0
      000014 00 00                 2736 	.dw #0x0000
      000016 00                    2737 	.db #0x00	; 0
      000017                       2738 __xinit__spritePajaro:
      000017 02                    2739 	.db #0x02	; 2
      000018 02                    2740 	.db #0x02	; 2
      000019 08                    2741 	.db #0x08	; 8
      00001A 00                    2742 	.db #0x00	; 0
      00001B 00 00                 2743 	.dw #0x0000
      00001D 00                    2744 	.db #0x00	; 0
      00001E 00 00                 2745 	.dw #0x0000
      000020 00                    2746 	.db #0x00	; 0
      000021                       2747 __xinit__spritePuno:
      000021 02                    2748 	.db #0x02	; 2
      000022 02                    2749 	.db #0x02	; 2
      000023 08                    2750 	.db #0x08	; 8
      000024 00                    2751 	.db #0x00	; 0
      000025 00 00                 2752 	.dw #0x0000
      000027 00                    2753 	.db #0x00	; 0
      000028 00 00                 2754 	.dw #0x0000
      00002A 00                    2755 	.db #0x00	; 0
                                   2756 	.area _CABS (ABS)
      007FF0                       2757 	.org 0x7FF0
      007FF0                       2758 ___SMS__SEGA_signature:
      007FF0 54                    2759 	.db #0x54	; 84	'T'
      007FF1 4D                    2760 	.db #0x4d	; 77	'M'
      007FF2 52                    2761 	.db #0x52	; 82	'R'
      007FF3 20                    2762 	.db #0x20	; 32
      007FF4 53                    2763 	.db #0x53	; 83	'S'
      007FF5 45                    2764 	.db #0x45	; 69	'E'
      007FF6 47                    2765 	.db #0x47	; 71	'G'
      007FF7 41                    2766 	.db #0x41	; 65	'A'
      007FF8 FF                    2767 	.db #0xff	; 255
      007FF9 FF                    2768 	.db #0xff	; 255
      007FFA FF                    2769 	.db #0xff	; 255
      007FFB FF                    2770 	.db #0xff	; 255
      007FFC 99                    2771 	.db #0x99	; 153
      007FFD 09                    2772 	.db #0x09	; 9
      007FFE 00                    2773 	.db #0x00	; 0
      007FFF 4C                    2774 	.db #0x4c	; 76	'L'
      007FDB                       2775 	.org 0x7FDB
      007FDB                       2776 ___SMS__SDSC_author:
      007FDB 53 45 47 41           2777 	.ascii "SEGA"
      007FDF 00                    2778 	.db 0x00
      007FCD                       2779 	.org 0x7FCD
      007FCD                       2780 ___SMS__SDSC_name:
      007FCD 62 61 73 69 63 20 65  2781 	.ascii "basic example"
             78 61 6D 70 6C 65
      007FDA 00                    2782 	.db 0x00
      007FBC                       2783 	.org 0x7FBC
      007FBC                       2784 ___SMS__SDSC_descr:
      007FBC 41 20 73 69 6D 70 6C  2785 	.ascii "A simple example"
             65 20 65 78 61 6D 70
             6C 65
      007FCC 00                    2786 	.db 0x00
      007FE0                       2787 	.org 0x7FE0
      007FE0                       2788 ___SMS__SDSC_signature:
      007FE0 53                    2789 	.db #0x53	; 83	'S'
      007FE1 44                    2790 	.db #0x44	; 68	'D'
      007FE2 53                    2791 	.db #0x53	; 83	'S'
      007FE3 43                    2792 	.db #0x43	; 67	'C'
      007FE4 01                    2793 	.db #0x01	; 1
      007FE5 00                    2794 	.db #0x00	; 0
      007FE6 00                    2795 	.db #0x00	; 0
      007FE7 00                    2796 	.db #0x00	; 0
      007FE8 00                    2797 	.db #0x00	; 0
      007FE9 00                    2798 	.db #0x00	; 0
      007FEA DB                    2799 	.db #0xdb	; 219
      007FEB 7F                    2800 	.db #0x7f	; 127
      007FEC CD                    2801 	.db #0xcd	; 205
      007FED 7F                    2802 	.db #0x7f	; 127
      007FEE BC                    2803 	.db #0xbc	; 188
      007FEF 7F                    2804 	.db #0x7f	; 127
