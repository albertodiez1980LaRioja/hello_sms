                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14549 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___SMS__SDSC_signature
                                     12 	.globl ___SMS__SDSC_descr
                                     13 	.globl ___SMS__SDSC_name
                                     14 	.globl ___SMS__SDSC_author
                                     15 	.globl ___SMS__SEGA_signature
                                     16 	.globl _main
                                     17 	.globl _disableSprites
                                     18 	.globl _playMusic
                                     19 	.globl _dibujaPajaros
                                     20 	.globl _loadGrapVRAM
                                     21 	.globl _inicializaPajaros
                                     22 	.globl _moveAlex
                                     23 	.globl _moveAlexAire
                                     24 	.globl _moveAlexSuelo
                                     25 	.globl _canRight
                                     26 	.globl _canLeft
                                     27 	.globl _canDown
                                     28 	.globl _canUp
                                     29 	.globl _PSGSFXFrame
                                     30 	.globl _PSGFrame
                                     31 	.globl _PSGSFXPlay
                                     32 	.globl _PSGPlay
                                     33 	.globl _SMS_VRAMmemsetW
                                     34 	.globl _SMS_VRAMmemcpy
                                     35 	.globl _SMS_setFrameInterruptHandler
                                     36 	.globl _SMS_resetPauseRequest
                                     37 	.globl _SMS_queryPauseRequested
                                     38 	.globl _SMS_getKeysHeld
                                     39 	.globl _SMS_getKeysPressed
                                     40 	.globl _SMS_loadSpritePalette
                                     41 	.globl _SMS_loadBGPalette
                                     42 	.globl _SMS_setSpritePaletteColor
                                     43 	.globl _SMS_updateSpritePosition
                                     44 	.globl _SMS_addSprite_f
                                     45 	.globl _SMS_waitForVBlank
                                     46 	.globl _SMS_setSpriteMode
                                     47 	.globl _SMS_setBGScrollY
                                     48 	.globl _SMS_setBGScrollX
                                     49 	.globl _SMS_VDPturnOffFeature
                                     50 	.globl _SMS_VDPturnOnFeature
                                     51 	.globl _SMS_init
                                     52 	.globl _copySpritestoSAT
                                     53 	.globl _addHardwareSprite
                                     54 	.globl _generateSpriteNoRAM
                                     55 	.globl _printf
                                     56 	.globl _spritePuno
                                     57 	.globl _spritePajaro
                                     58 	.globl _spriteAlex
                                     59 	.globl _alex
                                     60 	.globl _maxSalto
                                     61 	.globl _nextVRAMsprites
                                     62 	.globl _numSprites
                                     63 	.globl _pajaros
                                     64 	.globl _SMS_SRAM
                                     65 	.globl _SRAM_bank_to_be_mapped_on_slot2
                                     66 	.globl _ROM_bank_to_be_mapped_on_slot0
                                     67 	.globl _ROM_bank_to_be_mapped_on_slot1
                                     68 	.globl _ROM_bank_to_be_mapped_on_slot2
                                     69 	.globl _SpriteNextFree2
                                     70 	.globl _SpriteTableXN2
                                     71 	.globl _SpriteTableY2
                                     72 	.globl _hardwareSprites
                                     73 	.globl _generateSprite
                                     74 	.globl _initSpritesVariables
                                     75 	.globl _draw_entidad
                                     76 ;--------------------------------------------------------
                                     77 ; special function registers
                                     78 ;--------------------------------------------------------
                           0000BF    79 _VDPControlPort	=	0x00bf
                           0000BF    80 _VDPStatusPort	=	0x00bf
                           0000BE    81 _VDPDataPort	=	0x00be
                           00007E    82 _VDPVCounterPort	=	0x007e
                           00007F    83 _VDPHCounterPort	=	0x007f
                                     84 ;--------------------------------------------------------
                                     85 ; ram data
                                     86 ;--------------------------------------------------------
                                     87 	.area _DATA
      000000                         88 _hardwareSprites::
      000000                         89 	.ds 768
      000300                         90 _SpriteTableY2::
      000300                         91 	.ds 2
      000302                         92 _SpriteTableXN2::
      000302                         93 	.ds 2
      000304                         94 _SpriteNextFree2::
      000304                         95 	.ds 2
                           00FFFF    96 _ROM_bank_to_be_mapped_on_slot2	=	0xffff
                           00FFFE    97 _ROM_bank_to_be_mapped_on_slot1	=	0xfffe
                           00FFFD    98 _ROM_bank_to_be_mapped_on_slot0	=	0xfffd
                           00FFFC    99 _SRAM_bank_to_be_mapped_on_slot2	=	0xfffc
                           008000   100 _SMS_SRAM	=	0x8000
      000306                        101 _pajaros::
      000306                        102 	.ds 152
      00039E                        103 _numSprites::
      00039E                        104 	.ds 2
                                    105 ;--------------------------------------------------------
                                    106 ; ram data
                                    107 ;--------------------------------------------------------
                                    108 	.area _INITIALIZED
      000000                        109 _nextVRAMsprites::
      000000                        110 	.ds 2
      000002                        111 _maxSalto::
      000002                        112 	.ds 1
      000003                        113 _alex::
      000003                        114 	.ds 8
      00000B                        115 _spriteAlex::
      00000B                        116 	.ds 10
      000015                        117 _spritePajaro::
      000015                        118 	.ds 10
      00001F                        119 _spritePuno::
      00001F                        120 	.ds 10
                                    121 ;--------------------------------------------------------
                                    122 ; absolute external ram data
                                    123 ;--------------------------------------------------------
                                    124 	.area _DABS (ABS)
                                    125 ;--------------------------------------------------------
                                    126 ; global & static initialisations
                                    127 ;--------------------------------------------------------
                                    128 	.area _HOME
                                    129 	.area _GSINIT
                                    130 	.area _GSFINAL
                                    131 	.area _GSINIT
                                    132 ;--------------------------------------------------------
                                    133 ; Home
                                    134 ;--------------------------------------------------------
                                    135 	.area _HOME
                                    136 	.area _HOME
                                    137 ;--------------------------------------------------------
                                    138 ; code
                                    139 ;--------------------------------------------------------
                                    140 	.area _CODE
                                    141 ;./lib/./sprite.c:20: T_sprite generateSprite(unsigned char ancho, unsigned char alto, int tam,const unsigned char data[]) {
                                    142 ;	---------------------------------
                                    143 ; Function generateSprite
                                    144 ; ---------------------------------
      000000                        145 _generateSprite::
      000000 DD E5            [15]  146 	push	ix
      000002 DD 21 00 00      [14]  147 	ld	ix,#0
      000006 DD 39            [15]  148 	add	ix,sp
      000008 FD 21 F6 FF      [14]  149 	ld	iy, #-10
      00000C FD 39            [15]  150 	add	iy, sp
      00000E FD F9            [10]  151 	ld	sp, iy
      000010 5F               [ 4]  152 	ld	e, a
      000011 55               [ 4]  153 	ld	d, l
                                    154 ;./lib/./sprite.c:21: unsigned char tamano = alto*ancho*2;
      000012 D5               [11]  155 	push	de
      000013 62               [ 4]  156 	ld	h, d
                                    157 ;	spillPairReg hl
                                    158 ;	spillPairReg hl
      000014 2E 00            [ 7]  159 	ld	l, #0x00
      000016 55               [ 4]  160 	ld	d, l
      000017 06 08            [ 7]  161 	ld	b, #0x08
      000019                        162 00103$:
      000019 29               [11]  163 	add	hl, hl
      00001A 30 01            [12]  164 	jr	NC, 00104$
      00001C 19               [11]  165 	add	hl, de
      00001D                        166 00104$:
      00001D 10 FA            [13]  167 	djnz	00103$
      00001F D1               [10]  168 	pop	de
      000020 4D               [ 4]  169 	ld	c, l
      000021 CB 21            [ 8]  170 	sla	c
                                    171 ;./lib/./sprite.c:22: T_sprite sprite = {alto,ancho,tamano,tam/(tamano*32),nextVRAMsprites, 1,0};
      000023 DD 72 F6         [19]  172 	ld	-10 (ix), d
      000026 DD 73 F7         [19]  173 	ld	-9 (ix), e
      000029 DD 71 F8         [19]  174 	ld	-8 (ix), c
      00002C 69               [ 4]  175 	ld	l, c
                                    176 ;	spillPairReg hl
                                    177 ;	spillPairReg hl
      00002D 26 00            [ 7]  178 	ld	h, #0x00
                                    179 ;	spillPairReg hl
                                    180 ;	spillPairReg hl
      00002F 29               [11]  181 	add	hl, hl
      000030 29               [11]  182 	add	hl, hl
      000031 29               [11]  183 	add	hl, hl
      000032 29               [11]  184 	add	hl, hl
      000033 29               [11]  185 	add	hl, hl
      000034 C5               [11]  186 	push	bc
      000035 EB               [ 4]  187 	ex	de, hl
      000036 DD 6E 06         [19]  188 	ld	l, 6 (ix)
                                    189 ;	spillPairReg hl
                                    190 ;	spillPairReg hl
      000039 DD 66 07         [19]  191 	ld	h, 7 (ix)
                                    192 ;	spillPairReg hl
                                    193 ;	spillPairReg hl
      00003C CDr00r00         [17]  194 	call	__divsint
      00003F C1               [10]  195 	pop	bc
      000040 DD 73 F9         [19]  196 	ld	-7 (ix), e
      000043 3Ar00r00         [13]  197 	ld	a, (_nextVRAMsprites+0)
      000046 DD 77 FA         [19]  198 	ld	-6 (ix), a
      000049 3Ar01r00         [13]  199 	ld	a, (_nextVRAMsprites+1)
      00004C DD 77 FB         [19]  200 	ld	-5 (ix), a
      00004F DD 36 FC 01      [19]  201 	ld	-4 (ix), #0x01
      000053 AF               [ 4]  202 	xor	a, a
      000054 DD 77 FD         [19]  203 	ld	-3 (ix), a
      000057 DD 77 FE         [19]  204 	ld	-2 (ix), a
      00005A DD 36 FF 00      [19]  205 	ld	-1 (ix), #0x00
                                    206 ;./lib/./sprite.c:23: SMS_loadTiles(data,nextVRAMsprites,tam);
      00005E DD 5E 08         [19]  207 	ld	e, 8 (ix)
      000061 DD 56 09         [19]  208 	ld	d, 9 (ix)
      000064 2Ar00r00         [16]  209 	ld	hl, (_nextVRAMsprites)
      000067 29               [11]  210 	add	hl, hl
      000068 29               [11]  211 	add	hl, hl
      000069 29               [11]  212 	add	hl, hl
      00006A 29               [11]  213 	add	hl, hl
      00006B 29               [11]  214 	add	hl, hl
      00006C CB F4            [ 8]  215 	set	6, h
      00006E C5               [11]  216 	push	bc
      00006F E5               [11]  217 	push	hl
      000070 DD 6E 06         [19]  218 	ld	l, 6 (ix)
                                    219 ;	spillPairReg hl
                                    220 ;	spillPairReg hl
      000073 DD 66 07         [19]  221 	ld	h, 7 (ix)
                                    222 ;	spillPairReg hl
                                    223 ;	spillPairReg hl
      000076 E3               [19]  224 	ex	(sp), hl
      000077 CDr00r00         [17]  225 	call	_SMS_VRAMmemcpy
      00007A C1               [10]  226 	pop	bc
                                    227 ;./lib/./sprite.c:24: nextVRAMsprites = nextVRAMsprites + (tamano*sprite.numFrames);
      00007B DD 5E F9         [19]  228 	ld	e, -7 (ix)
      00007E 61               [ 4]  229 	ld	h, c
                                    230 ;	spillPairReg hl
                                    231 ;	spillPairReg hl
      00007F 2E 00            [ 7]  232 	ld	l, #0x00
      000081 55               [ 4]  233 	ld	d, l
      000082 06 08            [ 7]  234 	ld	b, #0x08
      000084                        235 00105$:
      000084 29               [11]  236 	add	hl, hl
      000085 30 01            [12]  237 	jr	NC, 00106$
      000087 19               [11]  238 	add	hl, de
      000088                        239 00106$:
      000088 10 FA            [13]  240 	djnz	00105$
      00008A EB               [ 4]  241 	ex	de, hl
      00008B 21r00r00         [10]  242 	ld	hl, #_nextVRAMsprites
      00008E 7E               [ 7]  243 	ld	a, (hl)
      00008F 83               [ 4]  244 	add	a, e
      000090 77               [ 7]  245 	ld	(hl), a
      000091 23               [ 6]  246 	inc	hl
      000092 7E               [ 7]  247 	ld	a, (hl)
      000093 8A               [ 4]  248 	adc	a, d
      000094 77               [ 7]  249 	ld	(hl), a
                                    250 ;./lib/./sprite.c:25: return sprite;
      000095 21 0E 00         [10]  251 	ld	hl, #14
      000098 39               [11]  252 	add	hl, sp
      000099 5E               [ 7]  253 	ld	e, (hl)
      00009A 23               [ 6]  254 	inc	hl
      00009B 56               [ 7]  255 	ld	d, (hl)
      00009C 21 00 00         [10]  256 	ld	hl, #0
      00009F 39               [11]  257 	add	hl, sp
      0000A0 01 0A 00         [10]  258 	ld	bc, #10
      0000A3 ED B0            [21]  259 	ldir
                                    260 ;./lib/./sprite.c:26: }
      0000A5 DD F9            [10]  261 	ld	sp, ix
      0000A7 DD E1            [14]  262 	pop	ix
      0000A9 C9               [10]  263 	ret
                                    264 ;./lib/./sprite.c:29: T_sprite generateSpriteNoRAM(unsigned char ancho, unsigned char alto, int tam,const unsigned char data[]) {
                                    265 ;	---------------------------------
                                    266 ; Function generateSpriteNoRAM
                                    267 ; ---------------------------------
      0000AA                        268 _generateSpriteNoRAM::
      0000AA DD E5            [15]  269 	push	ix
      0000AC DD 21 00 00      [14]  270 	ld	ix,#0
      0000B0 DD 39            [15]  271 	add	ix,sp
      0000B2 FD 21 F4 FF      [14]  272 	ld	iy, #-12
      0000B6 FD 39            [15]  273 	add	iy, sp
      0000B8 FD F9            [10]  274 	ld	sp, iy
      0000BA 5F               [ 4]  275 	ld	e, a
      0000BB 55               [ 4]  276 	ld	d, l
                                    277 ;./lib/./sprite.c:30: unsigned char tamano = alto*ancho*2;
      0000BC D5               [11]  278 	push	de
      0000BD 62               [ 4]  279 	ld	h, d
                                    280 ;	spillPairReg hl
                                    281 ;	spillPairReg hl
      0000BE 2E 00            [ 7]  282 	ld	l, #0x00
      0000C0 55               [ 4]  283 	ld	d, l
      0000C1 06 08            [ 7]  284 	ld	b, #0x08
      0000C3                        285 00103$:
      0000C3 29               [11]  286 	add	hl, hl
      0000C4 30 01            [12]  287 	jr	NC, 00104$
      0000C6 19               [11]  288 	add	hl, de
      0000C7                        289 00104$:
      0000C7 10 FA            [13]  290 	djnz	00103$
      0000C9 D1               [10]  291 	pop	de
      0000CA 4D               [ 4]  292 	ld	c, l
      0000CB CB 21            [ 8]  293 	sla	c
                                    294 ;./lib/./sprite.c:31: T_sprite sprite = {alto,ancho,tamano,tam/(tamano*32),nextVRAMsprites, 0,0};
      0000CD DD 72 F4         [19]  295 	ld	-12 (ix), d
      0000D0 DD 73 F5         [19]  296 	ld	-11 (ix), e
      0000D3 DD 71 F6         [19]  297 	ld	-10 (ix), c
                                    298 ;	spillPairReg hl
                                    299 ;	spillPairReg hl
      0000D6 DD 71 FE         [19]  300 	ld	-2 (ix), c
      0000D9 DD 36 FF 00      [19]  301 	ld	-1 (ix), #0x00
      0000DD 69               [ 4]  302 	ld	l, c
      0000DE 26 00            [ 7]  303 	ld	h, #0x00
                                    304 ;	spillPairReg hl
                                    305 ;	spillPairReg hl
      0000E0 29               [11]  306 	add	hl, hl
      0000E1 29               [11]  307 	add	hl, hl
      0000E2 29               [11]  308 	add	hl, hl
      0000E3 29               [11]  309 	add	hl, hl
      0000E4 29               [11]  310 	add	hl, hl
      0000E5 EB               [ 4]  311 	ex	de,hl
      0000E6 D5               [11]  312 	push	de
      0000E7 DD 6E 06         [19]  313 	ld	l, 6 (ix)
                                    314 ;	spillPairReg hl
                                    315 ;	spillPairReg hl
      0000EA DD 66 07         [19]  316 	ld	h, 7 (ix)
                                    317 ;	spillPairReg hl
                                    318 ;	spillPairReg hl
      0000ED CDr00r00         [17]  319 	call	__divsint
      0000F0 EB               [ 4]  320 	ex	de, hl
      0000F1 D1               [10]  321 	pop	de
      0000F2 DD 75 F7         [19]  322 	ld	-9 (ix), l
      0000F5 3Ar00r00         [13]  323 	ld	a, (_nextVRAMsprites+0)
      0000F8 DD 77 F8         [19]  324 	ld	-8 (ix), a
      0000FB 3Ar01r00         [13]  325 	ld	a, (_nextVRAMsprites+1)
      0000FE DD 77 F9         [19]  326 	ld	-7 (ix), a
      000101 DD 36 FA 00      [19]  327 	ld	-6 (ix), #0x00
      000105 AF               [ 4]  328 	xor	a, a
      000106 DD 77 FB         [19]  329 	ld	-5 (ix), a
      000109 DD 77 FC         [19]  330 	ld	-4 (ix), a
      00010C DD 36 FD 00      [19]  331 	ld	-3 (ix), #0x00
                                    332 ;./lib/./sprite.c:32: sprite.data = data;
      000110 DD 7E 08         [19]  333 	ld	a, 8 (ix)
      000113 DD 77 FB         [19]  334 	ld	-5 (ix), a
      000116 DD 7E 09         [19]  335 	ld	a, 9 (ix)
      000119 DD 77 FC         [19]  336 	ld	-4 (ix), a
                                    337 ;./lib/./sprite.c:33: sprite.frameInVRAM = 0;
      00011C DD 36 FD 00      [19]  338 	ld	-3 (ix), #0x00
                                    339 ;./lib/./sprite.c:34: SMS_loadTiles(data,nextVRAMsprites,tamano*32);
      000120 DD 4E 08         [19]  340 	ld	c, 8 (ix)
      000123 DD 46 09         [19]  341 	ld	b, 9 (ix)
      000126 2Ar00r00         [16]  342 	ld	hl, (_nextVRAMsprites)
      000129 29               [11]  343 	add	hl, hl
      00012A 29               [11]  344 	add	hl, hl
      00012B 29               [11]  345 	add	hl, hl
      00012C 29               [11]  346 	add	hl, hl
      00012D 29               [11]  347 	add	hl, hl
      00012E CB F4            [ 8]  348 	set	6, h
      000130 D5               [11]  349 	push	de
      000131 59               [ 4]  350 	ld	e, c
      000132 50               [ 4]  351 	ld	d, b
      000133 CDr00r00         [17]  352 	call	_SMS_VRAMmemcpy
                                    353 ;./lib/./sprite.c:35: nextVRAMsprites = nextVRAMsprites + (tamano);
      000136 21r00r00         [10]  354 	ld	hl, #_nextVRAMsprites
      000139 7E               [ 7]  355 	ld	a, (hl)
      00013A DD 86 FE         [19]  356 	add	a, -2 (ix)
      00013D 77               [ 7]  357 	ld	(hl), a
      00013E 23               [ 6]  358 	inc	hl
      00013F 7E               [ 7]  359 	ld	a, (hl)
      000140 DD 8E FF         [19]  360 	adc	a, -1 (ix)
      000143 77               [ 7]  361 	ld	(hl), a
                                    362 ;./lib/./sprite.c:36: return sprite;
      000144 21 10 00         [10]  363 	ld	hl, #16
      000147 39               [11]  364 	add	hl, sp
      000148 5E               [ 7]  365 	ld	e, (hl)
      000149 23               [ 6]  366 	inc	hl
      00014A 56               [ 7]  367 	ld	d, (hl)
      00014B 21 00 00         [10]  368 	ld	hl, #0
      00014E 39               [11]  369 	add	hl, sp
      00014F 01 0A 00         [10]  370 	ld	bc, #10
      000152 ED B0            [21]  371 	ldir
                                    372 ;./lib/./sprite.c:37: }
      000154 DD F9            [10]  373 	ld	sp, ix
      000156 DD E1            [14]  374 	pop	ix
      000158 C9               [10]  375 	ret
                                    376 ;./lib/./sprite.c:48: unsigned int addHardwareSprite(unsigned int x,unsigned int y,unsigned int vx,unsigned int vy,unsigned int lx,
                                    377 ;	---------------------------------
                                    378 ; Function addHardwareSprite
                                    379 ; ---------------------------------
      000159                        380 _addHardwareSprite::
      000159 DD E5            [15]  381 	push	ix
      00015B DD 21 00 00      [14]  382 	ld	ix,#0
      00015F DD 39            [15]  383 	add	ix,sp
      000161 FD 21 EA FF      [14]  384 	ld	iy, #-22
      000165 FD 39            [15]  385 	add	iy, sp
      000167 FD F9            [10]  386 	ld	sp, iy
      000169 DD 75 F4         [19]  387 	ld	-12 (ix), l
      00016C DD 74 F5         [19]  388 	ld	-11 (ix), h
      00016F DD 73 F2         [19]  389 	ld	-14 (ix), e
      000172 DD 72 F3         [19]  390 	ld	-13 (ix), d
                                    391 ;./lib/./sprite.c:50: unsigned int i = MAX_HARDWARE_SPRITES;
      000175 21 40 00         [10]  392 	ld	hl, #0x0040
      000178 E3               [19]  393 	ex	(sp), hl
                                    394 ;./lib/./sprite.c:51: while (i) {
      000179 DD 36 FE 40      [19]  395 	ld	-2 (ix), #0x40
      00017D DD 36 FF 00      [19]  396 	ld	-1 (ix), #0
      000181                        397 00109$:
      000181 DD 7E FF         [19]  398 	ld	a, -1 (ix)
      000184 DD B6 FE         [19]  399 	or	a, -2 (ix)
      000187 CArD0r03         [10]  400 	jp	Z, 00111$
                                    401 ;./lib/./sprite.c:52: if (!hardwareSprites[i].len) {
      00018A DD 4E FE         [19]  402 	ld	c, -2 (ix)
      00018D DD 46 FF         [19]  403 	ld	b, -1 (ix)
      000190 69               [ 4]  404 	ld	l, c
      000191 60               [ 4]  405 	ld	h, b
      000192 29               [11]  406 	add	hl, hl
      000193 09               [11]  407 	add	hl, bc
      000194 29               [11]  408 	add	hl, hl
      000195 29               [11]  409 	add	hl, hl
      000196 DD 75 FC         [19]  410 	ld	-4 (ix), l
      000199 DD 74 FD         [19]  411 	ld	-3 (ix), h
      00019C 3Er00            [ 7]  412 	ld	a, #<(_hardwareSprites)
      00019E DD 86 FC         [19]  413 	add	a, -4 (ix)
      0001A1 DD 77 FA         [19]  414 	ld	-6 (ix), a
      0001A4 3Es00            [ 7]  415 	ld	a, #>(_hardwareSprites)
      0001A6 DD 8E FD         [19]  416 	adc	a, -3 (ix)
      0001A9 DD 77 FB         [19]  417 	ld	-5 (ix), a
      0001AC DD 7E FA         [19]  418 	ld	a, -6 (ix)
      0001AF DD 77 FC         [19]  419 	ld	-4 (ix), a
      0001B2 DD 7E FB         [19]  420 	ld	a, -5 (ix)
      0001B5 DD 77 FD         [19]  421 	ld	-3 (ix), a
      0001B8 DD 6E FC         [19]  422 	ld	l, -4 (ix)
      0001BB DD 66 FD         [19]  423 	ld	h, -3 (ix)
      0001BE 11 0A 00         [10]  424 	ld	de, #0x000a
      0001C1 19               [11]  425 	add	hl, de
      0001C2 7E               [ 7]  426 	ld	a, (hl)
      0001C3 DD 77 FC         [19]  427 	ld	-4 (ix), a
      0001C6 23               [ 6]  428 	inc	hl
      0001C7 7E               [ 7]  429 	ld	a, (hl)
      0001C8 DD 77 FD         [19]  430 	ld	-3 (ix), a
      0001CB DD B6 FC         [19]  431 	or	a, -4 (ix)
      0001CE C2rB4r03         [10]  432 	jp	NZ, 00108$
                                    433 ;./lib/./sprite.c:53: T_HardwareSprite *p = &hardwareSprites[i]; 
      0001D1 DD 7E FA         [19]  434 	ld	a, -6 (ix)
      0001D4 DD 77 FE         [19]  435 	ld	-2 (ix), a
      0001D7 DD 7E FB         [19]  436 	ld	a, -5 (ix)
      0001DA DD 77 FF         [19]  437 	ld	-1 (ix), a
      0001DD DD 7E FE         [19]  438 	ld	a, -2 (ix)
      0001E0 DD 77 EC         [19]  439 	ld	-20 (ix), a
      0001E3 DD 7E FF         [19]  440 	ld	a, -1 (ix)
      0001E6 DD 77 ED         [19]  441 	ld	-19 (ix), a
                                    442 ;./lib/./sprite.c:54: p->x = x;
      0001E9 DD 7E EC         [19]  443 	ld	a, -20 (ix)
      0001EC C6 04            [ 7]  444 	add	a, #0x04
      0001EE DD 77 FE         [19]  445 	ld	-2 (ix), a
      0001F1 DD 7E ED         [19]  446 	ld	a, -19 (ix)
      0001F4 CE 00            [ 7]  447 	adc	a, #0x00
      0001F6 DD 77 FF         [19]  448 	ld	-1 (ix), a
      0001F9 DD 6E FE         [19]  449 	ld	l, -2 (ix)
      0001FC DD 66 FF         [19]  450 	ld	h, -1 (ix)
      0001FF DD 7E F4         [19]  451 	ld	a, -12 (ix)
      000202 77               [ 7]  452 	ld	(hl), a
      000203 23               [ 6]  453 	inc	hl
      000204 DD 7E F5         [19]  454 	ld	a, -11 (ix)
      000207 77               [ 7]  455 	ld	(hl), a
                                    456 ;./lib/./sprite.c:55: p->y = y;
      000208 D1               [10]  457 	pop	de
      000209 E1               [10]  458 	pop	hl
      00020A E5               [11]  459 	push	hl
      00020B D5               [11]  460 	push	de
      00020C 11 06 00         [10]  461 	ld	de, #0x0006
      00020F 19               [11]  462 	add	hl, de
      000210 DD 7E F2         [19]  463 	ld	a, -14 (ix)
      000213 77               [ 7]  464 	ld	(hl), a
      000214 23               [ 6]  465 	inc	hl
      000215 DD 7E F3         [19]  466 	ld	a, -13 (ix)
      000218 77               [ 7]  467 	ld	(hl), a
                                    468 ;./lib/./sprite.c:56: p->vx = vx;
      000219 C1               [10]  469 	pop	bc
      00021A E1               [10]  470 	pop	hl
      00021B E5               [11]  471 	push	hl
      00021C C5               [11]  472 	push	bc
      00021D DD 7E 04         [19]  473 	ld	a, 4 (ix)
      000220 77               [ 7]  474 	ld	(hl), a
      000221 23               [ 6]  475 	inc	hl
      000222 DD 7E 05         [19]  476 	ld	a, 5 (ix)
      000225 77               [ 7]  477 	ld	(hl), a
                                    478 ;./lib/./sprite.c:57: p->vy = vy;
      000226 E1               [10]  479 	pop	hl
      000227 C1               [10]  480 	pop	bc
      000228 C5               [11]  481 	push	bc
      000229 E5               [11]  482 	push	hl
      00022A 03               [ 6]  483 	inc	bc
      00022B 03               [ 6]  484 	inc	bc
      00022C DD 7E 06         [19]  485 	ld	a, 6 (ix)
      00022F 02               [ 7]  486 	ld	(bc), a
      000230 03               [ 6]  487 	inc	bc
      000231 DD 7E 07         [19]  488 	ld	a, 7 (ix)
      000234 02               [ 7]  489 	ld	(bc), a
                                    490 ;./lib/./sprite.c:58: unsigned int iTile = 0;
      000235 AF               [ 4]  491 	xor	a, a
      000236 DD 77 FE         [19]  492 	ld	-2 (ix), a
      000239 DD 77 FF         [19]  493 	ld	-1 (ix), a
                                    494 ;./lib/./sprite.c:59: for (int iy=0;iy<ly;iy++) {
      00023C DD 7E F2         [19]  495 	ld	a, -14 (ix)
      00023F DD 77 F6         [19]  496 	ld	-10 (ix), a
      000242 DD 7E F3         [19]  497 	ld	a, -13 (ix)
      000245 DD 77 F7         [19]  498 	ld	-9 (ix), a
      000248 AF               [ 4]  499 	xor	a, a
      000249 DD 77 F8         [19]  500 	ld	-8 (ix), a
      00024C DD 77 F9         [19]  501 	ld	-7 (ix), a
      00024F                        502 00116$:
      00024F DD 7E F8         [19]  503 	ld	a, -8 (ix)
      000252 DD 77 FC         [19]  504 	ld	-4 (ix), a
      000255 DD 7E F9         [19]  505 	ld	a, -7 (ix)
      000258 DD 77 FD         [19]  506 	ld	-3 (ix), a
                                    507 ;./lib/./sprite.c:62: p->initSprite = SMS_addSprite(x,y, tiles[iTile]);
      00025B DD 7E EC         [19]  508 	ld	a, -20 (ix)
      00025E C6 08            [ 7]  509 	add	a, #0x08
      000260 DD 77 EE         [19]  510 	ld	-18 (ix), a
      000263 DD 7E ED         [19]  511 	ld	a, -19 (ix)
      000266 CE 00            [ 7]  512 	adc	a, #0x00
      000268 DD 77 EF         [19]  513 	ld	-17 (ix), a
                                    514 ;./lib/./sprite.c:59: for (int iy=0;iy<ly;iy++) {
      00026B DD 7E FC         [19]  515 	ld	a, -4 (ix)
      00026E DD 96 0A         [19]  516 	sub	a, 10 (ix)
      000271 DD 7E FD         [19]  517 	ld	a, -3 (ix)
      000274 DD 9E 0B         [19]  518 	sbc	a, 11 (ix)
      000277 D2r5Br03         [10]  519 	jp	NC, 00106$
                                    520 ;./lib/./sprite.c:60: for (int ix=0;ix<lx;ix++){
      00027A DD 7E FE         [19]  521 	ld	a, -2 (ix)
      00027D DD 77 FA         [19]  522 	ld	-6 (ix), a
      000280 DD 7E FF         [19]  523 	ld	a, -1 (ix)
      000283 DD 77 FB         [19]  524 	ld	-5 (ix), a
      000286 DD 7E F4         [19]  525 	ld	a, -12 (ix)
      000289 DD 77 FC         [19]  526 	ld	-4 (ix), a
      00028C DD 7E F5         [19]  527 	ld	a, -11 (ix)
      00028F DD 77 FD         [19]  528 	ld	-3 (ix), a
      000292 AF               [ 4]  529 	xor	a, a
      000293 DD 77 FE         [19]  530 	ld	-2 (ix), a
      000296 DD 77 FF         [19]  531 	ld	-1 (ix), a
      000299                        532 00113$:
      000299 DD 7E FE         [19]  533 	ld	a, -2 (ix)
      00029C DD 77 F0         [19]  534 	ld	-16 (ix), a
      00029F DD 7E FF         [19]  535 	ld	a, -1 (ix)
      0002A2 DD 77 F1         [19]  536 	ld	-15 (ix), a
      0002A5 DD 7E F0         [19]  537 	ld	a, -16 (ix)
      0002A8 DD 96 08         [19]  538 	sub	a, 8 (ix)
      0002AB DD 7E F1         [19]  539 	ld	a, -15 (ix)
      0002AE DD 9E 09         [19]  540 	sbc	a, 9 (ix)
      0002B1 30 77            [12]  541 	jr	NC, 00129$
                                    542 ;./lib/./sprite.c:62: p->initSprite = SMS_addSprite(x,y, tiles[iTile]);
      0002B3 DD 46 FC         [19]  543 	ld	b, -4 (ix)
      0002B6 DD 6E FA         [19]  544 	ld	l, -6 (ix)
                                    545 ;	spillPairReg hl
                                    546 ;	spillPairReg hl
      0002B9 DD 66 FB         [19]  547 	ld	h, -5 (ix)
                                    548 ;	spillPairReg hl
                                    549 ;	spillPairReg hl
      0002BC 29               [11]  550 	add	hl, hl
      0002BD EB               [ 4]  551 	ex	de,hl
      0002BE DD 6E 0C         [19]  552 	ld	l, 12 (ix)
                                    553 ;	spillPairReg hl
                                    554 ;	spillPairReg hl
      0002C1 DD 66 0D         [19]  555 	ld	h, 13 (ix)
                                    556 ;	spillPairReg hl
                                    557 ;	spillPairReg hl
      0002C4 19               [11]  558 	add	hl, de
      0002C5 5E               [ 7]  559 	ld	e, (hl)
      0002C6 DD 73 F0         [19]  560 	ld	-16 (ix), e
      0002C9 DD 70 F1         [19]  561 	ld	-15 (ix), b
                                    562 ;./lib/./sprite.c:61: if(ix==0 && iy == 0) {
      0002CC DD 7E FF         [19]  563 	ld	a, -1 (ix)
      0002CF DD B6 FE         [19]  564 	or	a, -2 (ix)
      0002D2 20 26            [12]  565 	jr	NZ, 00102$
      0002D4 DD 7E F9         [19]  566 	ld	a, -7 (ix)
      0002D7 DD B6 F8         [19]  567 	or	a, -8 (ix)
      0002DA 20 1E            [12]  568 	jr	NZ, 00102$
                                    569 ;./lib/./sprite.c:62: p->initSprite = SMS_addSprite(x,y, tiles[iTile]);
      0002DC DD 5E F0         [19]  570 	ld	e, -16 (ix)
      0002DF DD 56 F1         [19]  571 	ld	d, -15 (ix)
      0002E2 DD 6E F6         [19]  572 	ld	l, -10 (ix)
                                    573 ;	spillPairReg hl
                                    574 ;	spillPairReg hl
      0002E5 DD 66 F7         [19]  575 	ld	h, -9 (ix)
                                    576 ;	spillPairReg hl
                                    577 ;	spillPairReg hl
      0002E8 CDr00r00         [17]  578 	call	_SMS_addSprite_f
      0002EB 4F               [ 4]  579 	ld	c, a
      0002EC 07               [ 4]  580 	rlca
      0002ED 9F               [ 4]  581 	sbc	a, a
      0002EE 47               [ 4]  582 	ld	b, a
      0002EF DD 6E EE         [19]  583 	ld	l, -18 (ix)
      0002F2 DD 66 EF         [19]  584 	ld	h, -17 (ix)
      0002F5 71               [ 7]  585 	ld	(hl), c
      0002F6 23               [ 6]  586 	inc	hl
      0002F7 70               [ 7]  587 	ld	(hl), b
      0002F8 18 0F            [12]  588 	jr	00103$
      0002FA                        589 00102$:
                                    590 ;./lib/./sprite.c:65: SMS_addSprite(x,y, tiles[iTile]);
      0002FA DD 5E F0         [19]  591 	ld	e, -16 (ix)
      0002FD DD 56 F1         [19]  592 	ld	d, -15 (ix)
      000300 DD 6E F6         [19]  593 	ld	l, -10 (ix)
                                    594 ;	spillPairReg hl
                                    595 ;	spillPairReg hl
      000303 DD 66 F7         [19]  596 	ld	h, -9 (ix)
                                    597 ;	spillPairReg hl
                                    598 ;	spillPairReg hl
      000306 CDr00r00         [17]  599 	call	_SMS_addSprite_f
      000309                        600 00103$:
                                    601 ;./lib/./sprite.c:67: iTile++;
      000309 DD 34 FA         [23]  602 	inc	-6 (ix)
      00030C 20 03            [12]  603 	jr	NZ, 00185$
      00030E DD 34 FB         [23]  604 	inc	-5 (ix)
      000311                        605 00185$:
                                    606 ;./lib/./sprite.c:68: x += 8;
      000311 DD 7E FC         [19]  607 	ld	a, -4 (ix)
      000314 C6 08            [ 7]  608 	add	a, #0x08
      000316 DD 77 FC         [19]  609 	ld	-4 (ix), a
      000319 30 03            [12]  610 	jr	NC, 00186$
      00031B DD 34 FD         [23]  611 	inc	-3 (ix)
      00031E                        612 00186$:
                                    613 ;./lib/./sprite.c:60: for (int ix=0;ix<lx;ix++){
      00031E DD 34 FE         [23]  614 	inc	-2 (ix)
      000321 C2r99r02         [10]  615 	jp	NZ,00113$
      000324 DD 34 FF         [23]  616 	inc	-1 (ix)
      000327 C3r99r02         [10]  617 	jp	00113$
      00032A                        618 00129$:
      00032A DD 7E FA         [19]  619 	ld	a, -6 (ix)
      00032D DD 77 FE         [19]  620 	ld	-2 (ix), a
      000330 DD 7E FB         [19]  621 	ld	a, -5 (ix)
      000333 DD 77 FF         [19]  622 	ld	-1 (ix), a
      000336 DD 7E FC         [19]  623 	ld	a, -4 (ix)
      000339 DD 77 F4         [19]  624 	ld	-12 (ix), a
      00033C DD 7E FD         [19]  625 	ld	a, -3 (ix)
      00033F DD 77 F5         [19]  626 	ld	-11 (ix), a
                                    627 ;./lib/./sprite.c:70: y += 16;
      000342 DD 7E F6         [19]  628 	ld	a, -10 (ix)
      000345 C6 10            [ 7]  629 	add	a, #0x10
      000347 DD 77 F6         [19]  630 	ld	-10 (ix), a
      00034A 30 03            [12]  631 	jr	NC, 00188$
      00034C DD 34 F7         [23]  632 	inc	-9 (ix)
      00034F                        633 00188$:
                                    634 ;./lib/./sprite.c:59: for (int iy=0;iy<ly;iy++) {
      00034F DD 34 F8         [23]  635 	inc	-8 (ix)
      000352 C2r4Fr02         [10]  636 	jp	NZ,00116$
      000355 DD 34 F9         [23]  637 	inc	-7 (ix)
      000358 C3r4Fr02         [10]  638 	jp	00116$
      00035B                        639 00106$:
                                    640 ;./lib/./sprite.c:72: p->len = p->initSprite + lx*ly;
      00035B DD 7E EC         [19]  641 	ld	a, -20 (ix)
      00035E C6 0A            [ 7]  642 	add	a, #0x0a
      000360 DD 77 FE         [19]  643 	ld	-2 (ix), a
      000363 DD 7E ED         [19]  644 	ld	a, -19 (ix)
      000366 CE 00            [ 7]  645 	adc	a, #0x00
      000368 DD 77 FF         [19]  646 	ld	-1 (ix), a
      00036B DD 6E EE         [19]  647 	ld	l, -18 (ix)
      00036E DD 66 EF         [19]  648 	ld	h, -17 (ix)
      000371 7E               [ 7]  649 	ld	a, (hl)
      000372 DD 77 FC         [19]  650 	ld	-4 (ix), a
      000375 23               [ 6]  651 	inc	hl
      000376 7E               [ 7]  652 	ld	a, (hl)
      000377 DD 77 FD         [19]  653 	ld	-3 (ix), a
      00037A DD 5E 0A         [19]  654 	ld	e, 10 (ix)
      00037D DD 56 0B         [19]  655 	ld	d, 11 (ix)
      000380 DD 6E 08         [19]  656 	ld	l, 8 (ix)
                                    657 ;	spillPairReg hl
                                    658 ;	spillPairReg hl
      000383 DD 66 09         [19]  659 	ld	h, 9 (ix)
                                    660 ;	spillPairReg hl
                                    661 ;	spillPairReg hl
      000386 CDr00r00         [17]  662 	call	__mulint
      000389 DD 73 F8         [19]  663 	ld	-8 (ix), e
      00038C DD 72 F9         [19]  664 	ld	-7 (ix), d
      00038F DD 7E F8         [19]  665 	ld	a, -8 (ix)
      000392 DD 86 FC         [19]  666 	add	a, -4 (ix)
      000395 DD 77 FA         [19]  667 	ld	-6 (ix), a
      000398 DD 7E F9         [19]  668 	ld	a, -7 (ix)
      00039B DD 8E FD         [19]  669 	adc	a, -3 (ix)
      00039E DD 77 FB         [19]  670 	ld	-5 (ix), a
      0003A1 DD 6E FE         [19]  671 	ld	l, -2 (ix)
      0003A4 DD 66 FF         [19]  672 	ld	h, -1 (ix)
      0003A7 DD 7E FA         [19]  673 	ld	a, -6 (ix)
      0003AA 77               [ 7]  674 	ld	(hl), a
      0003AB 23               [ 6]  675 	inc	hl
      0003AC DD 7E FB         [19]  676 	ld	a, -5 (ix)
      0003AF 77               [ 7]  677 	ld	(hl), a
                                    678 ;./lib/./sprite.c:73: return i;
      0003B0 D1               [10]  679 	pop	de
      0003B1 D5               [11]  680 	push	de
      0003B2 18 1E            [12]  681 	jr	00118$
      0003B4                        682 00108$:
                                    683 ;./lib/./sprite.c:75: i--;
      0003B4 DD 6E FE         [19]  684 	ld	l, -2 (ix)
      0003B7 DD 66 FF         [19]  685 	ld	h, -1 (ix)
      0003BA 2B               [ 6]  686 	dec	hl
      0003BB DD 75 FE         [19]  687 	ld	-2 (ix), l
      0003BE DD 74 FF         [19]  688 	ld	-1 (ix), h
      0003C1 DD 7E FE         [19]  689 	ld	a, -2 (ix)
      0003C4 DD 77 EA         [19]  690 	ld	-22 (ix), a
      0003C7 DD 7E FF         [19]  691 	ld	a, -1 (ix)
      0003CA DD 77 EB         [19]  692 	ld	-21 (ix), a
      0003CD C3r81r01         [10]  693 	jp	00109$
      0003D0                        694 00111$:
                                    695 ;./lib/./sprite.c:77: return i;
      0003D0 D1               [10]  696 	pop	de
      0003D1 D5               [11]  697 	push	de
      0003D2                        698 00118$:
                                    699 ;./lib/./sprite.c:78: }
      0003D2 DD F9            [10]  700 	ld	sp, ix
      0003D4 DD E1            [14]  701 	pop	ix
      0003D6 E1               [10]  702 	pop	hl
      0003D7 F1               [10]  703 	pop	af
      0003D8 F1               [10]  704 	pop	af
      0003D9 F1               [10]  705 	pop	af
      0003DA F1               [10]  706 	pop	af
      0003DB F1               [10]  707 	pop	af
      0003DC E9               [ 4]  708 	jp	(hl)
                                    709 ;./lib/./sprite.c:90: void initSpritesVariables (void) {
                                    710 ;	---------------------------------
                                    711 ; Function initSpritesVariables
                                    712 ; ---------------------------------
      0003DD                        713 _initSpritesVariables::
                                    714 ;./lib/./sprite.c:92: while (i) {
      0003DD 01 40 00         [10]  715 	ld	bc, #0x0040
      0003E0                        716 00101$:
      0003E0 78               [ 4]  717 	ld	a, b
      0003E1 B1               [ 4]  718 	or	a, c
      0003E2 28 15            [12]  719 	jr	Z, 00103$
                                    720 ;./lib/./sprite.c:93: hardwareSprites[i].len = 0;
      0003E4 69               [ 4]  721 	ld	l, c
      0003E5 60               [ 4]  722 	ld	h, b
      0003E6 29               [11]  723 	add	hl, hl
      0003E7 09               [11]  724 	add	hl, bc
      0003E8 29               [11]  725 	add	hl, hl
      0003E9 29               [11]  726 	add	hl, hl
      0003EA 11r00r00         [10]  727 	ld	de, #_hardwareSprites
      0003ED 19               [11]  728 	add	hl, de
      0003EE 11 0A 00         [10]  729 	ld	de, #0x000a
      0003F1 19               [11]  730 	add	hl, de
      0003F2 AF               [ 4]  731 	xor	a, a
      0003F3 77               [ 7]  732 	ld	(hl), a
      0003F4 23               [ 6]  733 	inc	hl
      0003F5 77               [ 7]  734 	ld	(hl), a
                                    735 ;./lib/./sprite.c:94: i--;
      0003F6 0B               [ 6]  736 	dec	bc
      0003F7 18 E7            [12]  737 	jr	00101$
      0003F9                        738 00103$:
                                    739 ;./lib/./sprite.c:107: __endasm;
      0003F9 21r00r00         [10]  740 	ld	hl, #_SpriteNextFree
      0003FC 22r04r03         [16]  741 	ld	(#_SpriteNextFree2), hl
      0003FF 21r00r00         [10]  742 	ld	hl, #_SpriteTableY
      000402 22r00r03         [16]  743 	ld	(#_SpriteTableY2), hl
      000405 21r00r00         [10]  744 	ld	hl, #_SpriteTableXN
      000408 22r02r03         [16]  745 	ld	(#_SpriteTableXN2), hl
                                    746 ;./lib/./sprite.c:110: }
      00040B C9               [10]  747 	ret
                                    748 ;./lib/./sprite.c:127: void copySpritestoSAT (void) {
                                    749 ;	---------------------------------
                                    750 ; Function copySpritestoSAT
                                    751 ; ---------------------------------
      00040C                        752 _copySpritestoSAT::
                                    753 ;./lib/./sprite.c:128: SMS_setAddr(SMS_SATAddress);
      00040C 21 00 7F         [10]  754 	ld	hl, #0x7f00
      00040F CF               [11]  755 	rst	#0x08
                                    756 ;./lib/./sprite.c:144: __endasm;
      000410 3Ar00r00         [13]  757 	ld	a,(#_SpriteNextFree)
      000413 B7               [ 4]  758 	or	a
      000414 28 25            [12]  759 	jr	z,_no_sprites
      000416 47               [ 4]  760 	ld	b,a
      000417 0E BE            [ 7]  761 	ld	c,#_VDPDataPort
      000419 21r00r00         [10]  762 	ld	hl,#_SpriteTableY
      00041C                        763 _next_spriteY:
      00041C ED A3            [16]  764 	outi	; 16 cycles
      00041E 20 FC            [12]  765 	jr	nz,_next_spriteY ; 12 cycles = 28 (VRAM safe on GG too)
      000420 FE 40            [ 7]  766 	cp	#64 ; 7 cycles
      000422 28 04            [12]  767 	jr	z,_no_sprite_term ; 7 cycles
      000424 3E D0            [ 7]  768 	ld	a,#0xD0 ; 7 cycles => VRAM safe
      000426 ED 79            [12]  769 	out	(c),a
      000428                        770 _no_sprite_term:
                                    771 ;./lib/./sprite.c:145: SMS_setAddr(SMS_SATAddress+128);
      000428 21 80 7F         [10]  772 	ld	hl, #0x7f80
      00042B CF               [11]  773 	rst	#0x08
                                    774 ;./lib/./sprite.c:160: __endasm;
      00042C 0E BE            [ 7]  775 	ld	c,#_VDPDataPort
      00042E 3Ar00r00         [13]  776 	ld	a,(#_SpriteNextFree)
      000431 87               [ 4]  777 	add	a,a
      000432 47               [ 4]  778 	ld	b,a
      000433 21r00r00         [10]  779 	ld	hl,#_SpriteTableXN
      000436                        780 _next_spriteXN:
      000436 ED A3            [16]  781 	outi	; 16 cycles
      000438 20 FC            [12]  782 	jr	nz,_next_spriteXN ; 12 cycles = 28 (VRAM safe on GG too)
      00043A C9               [10]  783 	ret
      00043B                        784 _no_sprites:
      00043B 3E D0            [ 7]  785 	ld	a,#0xD0
      00043D D3 BE            [11]  786 	out	(#_VDPDataPort),a
                                    787 ;./lib/./sprite.c:161: }
      00043F C9               [10]  788 	ret
                                    789 ;./lib/entities.c:11: void draw_entidad(T_entidad *entidad, T_sprite *sprite){
                                    790 ;	---------------------------------
                                    791 ; Function draw_entidad
                                    792 ; ---------------------------------
      000440                        793 _draw_entidad::
      000440 DD E5            [15]  794 	push	ix
      000442 DD 21 00 00      [14]  795 	ld	ix,#0
      000446 DD 39            [15]  796 	add	ix,sp
      000448 FD 21 E8 FF      [14]  797 	ld	iy, #-24
      00044C FD 39            [15]  798 	add	iy, sp
      00044E FD F9            [10]  799 	ld	sp, iy
      000450 DD 75 FC         [19]  800 	ld	-4 (ix), l
      000453 DD 74 FD         [19]  801 	ld	-3 (ix), h
                                    802 ;./lib/entities.c:13: if (sprite->allInRAM == 1){
      000456 DD 73 FA         [19]  803 	ld	-6 (ix), e
      000459 DD 72 FB         [19]  804 	ld	-5 (ix), d
      00045C 4B               [ 4]  805 	ld	c, e
      00045D 42               [ 4]  806 	ld	b, d
      00045E 21 06 00         [10]  807 	ld	hl, #6
      000461 09               [11]  808 	add	hl, bc
      000462 4E               [ 7]  809 	ld	c, (hl)
                                    810 ;./lib/entities.c:14: if (entidad->initSprite == 255) {
      000463 DD 7E FC         [19]  811 	ld	a, -4 (ix)
      000466 C6 06            [ 7]  812 	add	a, #0x06
      000468 DD 77 ED         [19]  813 	ld	-19 (ix), a
      00046B DD 7E FD         [19]  814 	ld	a, -3 (ix)
      00046E CE 00            [ 7]  815 	adc	a, #0x00
      000470 DD 77 EE         [19]  816 	ld	-18 (ix), a
      000473 DD 6E ED         [19]  817 	ld	l, -19 (ix)
      000476 DD 66 EE         [19]  818 	ld	h, -18 (ix)
      000479 46               [ 7]  819 	ld	b, (hl)
                                    820 ;./lib/entities.c:15: int frame = sprite->tamano*entidad->frame + sprite->beginVRAM;
      00047A DD 7E FA         [19]  821 	ld	a, -6 (ix)
      00047D C6 02            [ 7]  822 	add	a, #0x02
      00047F DD 77 EB         [19]  823 	ld	-21 (ix), a
      000482 DD 7E FB         [19]  824 	ld	a, -5 (ix)
      000485 CE 00            [ 7]  825 	adc	a, #0x00
      000487 DD 77 EC         [19]  826 	ld	-20 (ix), a
      00048A DD 7E FC         [19]  827 	ld	a, -4 (ix)
      00048D C6 02            [ 7]  828 	add	a, #0x02
      00048F DD 77 EF         [19]  829 	ld	-17 (ix), a
      000492 DD 7E FD         [19]  830 	ld	a, -3 (ix)
      000495 CE 00            [ 7]  831 	adc	a, #0x00
      000497 DD 77 F0         [19]  832 	ld	-16 (ix), a
      00049A DD 7E FA         [19]  833 	ld	a, -6 (ix)
      00049D C6 04            [ 7]  834 	add	a, #0x04
      00049F DD 77 F1         [19]  835 	ld	-15 (ix), a
      0004A2 DD 7E FB         [19]  836 	ld	a, -5 (ix)
      0004A5 CE 00            [ 7]  837 	adc	a, #0x00
      0004A7 DD 77 F2         [19]  838 	ld	-14 (ix), a
                                    839 ;./lib/entities.c:16: for(j=0;j<sprite->alto;j++) {
      0004AA DD 7E FC         [19]  840 	ld	a, -4 (ix)
      0004AD C6 01            [ 7]  841 	add	a, #0x01
      0004AF DD 77 F8         [19]  842 	ld	-8 (ix), a
      0004B2 DD 7E FD         [19]  843 	ld	a, -3 (ix)
      0004B5 CE 00            [ 7]  844 	adc	a, #0x00
      0004B7 DD 77 F9         [19]  845 	ld	-7 (ix), a
      0004BA DD 7E FA         [19]  846 	ld	a, -6 (ix)
      0004BD C6 01            [ 7]  847 	add	a, #0x01
      0004BF DD 77 FE         [19]  848 	ld	-2 (ix), a
      0004C2 DD 7E FB         [19]  849 	ld	a, -5 (ix)
      0004C5 CE 00            [ 7]  850 	adc	a, #0x00
      0004C7 DD 77 FF         [19]  851 	ld	-1 (ix), a
                                    852 ;./lib/entities.c:26: entidad->len = (sprite->alto * sprite->ancho + entidad->initSprite)*2;
      0004CA DD 7E FC         [19]  853 	ld	a, -4 (ix)
      0004CD C6 07            [ 7]  854 	add	a, #0x07
      0004CF DD 77 E8         [19]  855 	ld	-24 (ix), a
      0004D2 DD 7E FD         [19]  856 	ld	a, -3 (ix)
      0004D5 CE 00            [ 7]  857 	adc	a, #0x00
      0004D7 DD 77 E9         [19]  858 	ld	-23 (ix), a
                                    859 ;./lib/entities.c:14: if (entidad->initSprite == 255) {
      0004DA 04               [ 4]  860 	inc	b
      0004DB 3E 01            [ 7]  861 	ld	a, #0x01
      0004DD 28 01            [12]  862 	jr	Z, 00253$
      0004DF AF               [ 4]  863 	xor	a, a
      0004E0                        864 00253$:
      0004E0 DD 77 F3         [19]  865 	ld	-13 (ix), a
                                    866 ;./lib/entities.c:13: if (sprite->allInRAM == 1){
      0004E3 0D               [ 4]  867 	dec	c
      0004E4 C2r0Cr06         [10]  868 	jp	NZ,00120$
                                    869 ;./lib/entities.c:14: if (entidad->initSprite == 255) {
      0004E7 DD 7E ED         [19]  870 	ld	a, -19 (ix)
      0004EA DD 77 F6         [19]  871 	ld	-10 (ix), a
      0004ED DD 7E EE         [19]  872 	ld	a, -18 (ix)
      0004F0 DD 77 F7         [19]  873 	ld	-9 (ix), a
      0004F3 DD 7E F3         [19]  874 	ld	a, -13 (ix)
      0004F6 B7               [ 4]  875 	or	a, a
      0004F7 CArD3r07         [10]  876 	jp	Z, 00134$
                                    877 ;./lib/entities.c:15: int frame = sprite->tamano*entidad->frame + sprite->beginVRAM;
      0004FA DD 6E EB         [19]  878 	ld	l, -21 (ix)
      0004FD DD 66 EC         [19]  879 	ld	h, -20 (ix)
      000500 5E               [ 7]  880 	ld	e, (hl)
      000501 DD 6E EF         [19]  881 	ld	l, -17 (ix)
      000504 DD 66 F0         [19]  882 	ld	h, -16 (ix)
      000507 66               [ 7]  883 	ld	h, (hl)
                                    884 ;	spillPairReg hl
      000508 2E 00            [ 7]  885 	ld	l, #0x00
      00050A 55               [ 4]  886 	ld	d, l
      00050B 06 08            [ 7]  887 	ld	b, #0x08
      00050D                        888 00256$:
      00050D 29               [11]  889 	add	hl, hl
      00050E 30 01            [12]  890 	jr	NC, 00257$
      000510 19               [11]  891 	add	hl, de
      000511                        892 00257$:
      000511 10 FA            [13]  893 	djnz	00256$
      000513 4D               [ 4]  894 	ld	c, l
      000514 DD 6E F1         [19]  895 	ld	l, -15 (ix)
      000517 DD 66 F2         [19]  896 	ld	h, -14 (ix)
      00051A 7E               [ 7]  897 	ld	a, (hl)
      00051B 81               [ 4]  898 	add	a, c
      00051C DD 77 F5         [19]  899 	ld	-11 (ix), a
                                    900 ;./lib/entities.c:16: for(j=0;j<sprite->alto;j++) {
      00051F DD 7E FE         [19]  901 	ld	a, -2 (ix)
      000522 DD 77 F3         [19]  902 	ld	-13 (ix), a
      000525 DD 7E FF         [19]  903 	ld	a, -1 (ix)
      000528 DD 77 F4         [19]  904 	ld	-12 (ix), a
      00052B DD 36 FE 00      [19]  905 	ld	-2 (ix), #0x00
      00052F                        906 00126$:
      00052F DD 6E FA         [19]  907 	ld	l, -6 (ix)
      000532 DD 66 FB         [19]  908 	ld	h, -5 (ix)
      000535 7E               [ 7]  909 	ld	a, (hl)
      000536 DD 77 FF         [19]  910 	ld	-1 (ix), a
      000539 DD 7E FE         [19]  911 	ld	a, -2 (ix)
      00053C DD 96 FF         [19]  912 	sub	a, -1 (ix)
      00053F D2rE7r05         [10]  913 	jp	NC, 00106$
                                    914 ;./lib/entities.c:17: unsigned char desplazado = (j<<2);
      000542 DD 7E FE         [19]  915 	ld	a, -2 (ix)
      000545 87               [ 4]  916 	add	a, a
      000546 87               [ 4]  917 	add	a, a
                                    918 ;./lib/entities.c:18: unsigned char jCalculated = desplazado + frame, y = entidad->y+(desplazado<<2);
      000547 47               [ 4]  919 	ld	b, a
      000548 DD 86 F5         [19]  920 	add	a, -11 (ix)
      00054B DD 77 ED         [19]  921 	ld	-19 (ix), a
      00054E DD 6E F8         [19]  922 	ld	l, -8 (ix)
      000551 DD 66 F9         [19]  923 	ld	h, -7 (ix)
      000554 4E               [ 7]  924 	ld	c, (hl)
      000555 78               [ 4]  925 	ld	a, b
      000556 87               [ 4]  926 	add	a, a
      000557 87               [ 4]  927 	add	a, a
      000558 81               [ 4]  928 	add	a, c
      000559 DD 77 EE         [19]  929 	ld	-18 (ix), a
                                    930 ;./lib/entities.c:19: for(i=0;i<sprite->ancho;i++) {
      00055C DD 36 FF 00      [19]  931 	ld	-1 (ix), #0x00
      000560                        932 00123$:
      000560 DD 6E F3         [19]  933 	ld	l, -13 (ix)
      000563 DD 66 F4         [19]  934 	ld	h, -12 (ix)
      000566 DD 7E FF         [19]  935 	ld	a,-1 (ix)
      000569 96               [ 7]  936 	sub	a,(hl)
      00056A 30 75            [12]  937 	jr	NC, 00127$
                                    938 ;./lib/entities.c:21: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      00056C DD 6E FC         [19]  939 	ld	l, -4 (ix)
      00056F DD 66 FD         [19]  940 	ld	h, -3 (ix)
      000572 5E               [ 7]  941 	ld	e, (hl)
      000573 DD 4E FF         [19]  942 	ld	c, -1 (ix)
      000576 06 00            [ 7]  943 	ld	b, #0x00
      000578 DD 7E ED         [19]  944 	ld	a, -19 (ix)
      00057B DD 77 F1         [19]  945 	ld	-15 (ix), a
      00057E DD 36 F2 00      [19]  946 	ld	-14 (ix), #0x00
      000582 DD 7E EE         [19]  947 	ld	a, -18 (ix)
      000585 DD 77 EF         [19]  948 	ld	-17 (ix), a
      000588 DD 36 F0 00      [19]  949 	ld	-16 (ix), #0x00
      00058C 16 00            [ 7]  950 	ld	d, #0x00
      00058E 69               [ 4]  951 	ld	l, c
      00058F 60               [ 4]  952 	ld	h, b
      000590 29               [11]  953 	add	hl, hl
      000591 29               [11]  954 	add	hl, hl
      000592 29               [11]  955 	add	hl, hl
      000593 CB 21            [ 8]  956 	sla	c
      000595 CB 10            [ 8]  957 	rl	b
      000597 19               [11]  958 	add	hl, de
      000598 EB               [ 4]  959 	ex	de, hl
      000599 DD 6E F1         [19]  960 	ld	l, -15 (ix)
                                    961 ;	spillPairReg hl
                                    962 ;	spillPairReg hl
      00059C 26 00            [ 7]  963 	ld	h, #0x00
                                    964 ;	spillPairReg hl
                                    965 ;	spillPairReg hl
      00059E 09               [11]  966 	add	hl, bc
                                    967 ;	spillPairReg hl
                                    968 ;	spillPairReg hl
      00059F AF               [ 4]  969 	xor	a, a
      0005A0 67               [ 4]  970 	ld	h,a
      0005A1 B5               [ 4]  971 	or	a, l
      0005A2 DD 77 F1         [19]  972 	ld	-15 (ix), a
      0005A5 7B               [ 4]  973 	ld	a, e
      0005A6 B4               [ 4]  974 	or	a, h
      0005A7 DD 77 F2         [19]  975 	ld	-14 (ix), a
                                    976 ;./lib/entities.c:20: if(i==0 && j==0)
      0005AA DD 7E FF         [19]  977 	ld	a, -1 (ix)
      0005AD B7               [ 4]  978 	or	a, a
      0005AE 20 1D            [12]  979 	jr	NZ, 00102$
      0005B0 DD 7E FE         [19]  980 	ld	a, -2 (ix)
      0005B3 B7               [ 4]  981 	or	a, a
      0005B4 20 17            [12]  982 	jr	NZ, 00102$
                                    983 ;./lib/entities.c:21: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      0005B6 DD 5E F1         [19]  984 	ld	e, -15 (ix)
      0005B9 DD 56 F2         [19]  985 	ld	d, -14 (ix)
      0005BC DD 6E EF         [19]  986 	ld	l, -17 (ix)
                                    987 ;	spillPairReg hl
                                    988 ;	spillPairReg hl
      0005BF 26 00            [ 7]  989 	ld	h, #0x00
                                    990 ;	spillPairReg hl
                                    991 ;	spillPairReg hl
      0005C1 CDr00r00         [17]  992 	call	_SMS_addSprite_f
      0005C4 DD 6E F6         [19]  993 	ld	l, -10 (ix)
      0005C7 DD 66 F7         [19]  994 	ld	h, -9 (ix)
      0005CA 77               [ 7]  995 	ld	(hl), a
      0005CB 18 0E            [12]  996 	jr	00124$
      0005CD                        997 00102$:
                                    998 ;./lib/entities.c:23: SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      0005CD DD 5E F1         [19]  999 	ld	e, -15 (ix)
      0005D0 DD 56 F2         [19] 1000 	ld	d, -14 (ix)
      0005D3 DD 6E EF         [19] 1001 	ld	l, -17 (ix)
                                   1002 ;	spillPairReg hl
                                   1003 ;	spillPairReg hl
      0005D6 26 00            [ 7] 1004 	ld	h, #0x00
                                   1005 ;	spillPairReg hl
                                   1006 ;	spillPairReg hl
      0005D8 CDr00r00         [17] 1007 	call	_SMS_addSprite_f
      0005DB                       1008 00124$:
                                   1009 ;./lib/entities.c:19: for(i=0;i<sprite->ancho;i++) {
      0005DB DD 34 FF         [23] 1010 	inc	-1 (ix)
      0005DE C3r60r05         [10] 1011 	jp	00123$
      0005E1                       1012 00127$:
                                   1013 ;./lib/entities.c:16: for(j=0;j<sprite->alto;j++) {
      0005E1 DD 34 FE         [23] 1014 	inc	-2 (ix)
      0005E4 C3r2Fr05         [10] 1015 	jp	00126$
      0005E7                       1016 00106$:
                                   1017 ;./lib/entities.c:26: entidad->len = (sprite->alto * sprite->ancho + entidad->initSprite)*2;
      0005E7 DD 6E F3         [19] 1018 	ld	l, -13 (ix)
      0005EA DD 66 F4         [19] 1019 	ld	h, -12 (ix)
      0005ED 5E               [ 7] 1020 	ld	e, (hl)
      0005EE DD 66 FF         [19] 1021 	ld	h, -1 (ix)
                                   1022 ;	spillPairReg hl
                                   1023 ;	spillPairReg hl
      0005F1 2E 00            [ 7] 1024 	ld	l, #0x00
      0005F3 55               [ 4] 1025 	ld	d, l
      0005F4 06 08            [ 7] 1026 	ld	b, #0x08
      0005F6                       1027 00259$:
      0005F6 29               [11] 1028 	add	hl, hl
      0005F7 30 01            [12] 1029 	jr	NC, 00260$
      0005F9 19               [11] 1030 	add	hl, de
      0005FA                       1031 00260$:
      0005FA 10 FA            [13] 1032 	djnz	00259$
      0005FC 4D               [ 4] 1033 	ld	c, l
      0005FD DD 6E F6         [19] 1034 	ld	l, -10 (ix)
      000600 DD 66 F7         [19] 1035 	ld	h, -9 (ix)
      000603 7E               [ 7] 1036 	ld	a, (hl)
      000604 81               [ 4] 1037 	add	a, c
      000605 87               [ 4] 1038 	add	a, a
      000606 E1               [10] 1039 	pop	hl
      000607 E5               [11] 1040 	push	hl
      000608 77               [ 7] 1041 	ld	(hl), a
      000609 C3rD3r07         [10] 1042 	jp	00134$
      00060C                       1043 00120$:
                                   1044 ;./lib/entities.c:30: int frame = sprite->tamano*entidad->frame*32;
      00060C DD 6E EB         [19] 1045 	ld	l, -21 (ix)
      00060F DD 66 EC         [19] 1046 	ld	h, -20 (ix)
      000612 7E               [ 7] 1047 	ld	a, (hl)
      000613 DD 77 F4         [19] 1048 	ld	-12 (ix), a
      000616 DD 6E EF         [19] 1049 	ld	l, -17 (ix)
      000619 DD 66 F0         [19] 1050 	ld	h, -16 (ix)
      00061C 7E               [ 7] 1051 	ld	a, (hl)
      00061D DD 77 F5         [19] 1052 	ld	-11 (ix), a
      000620 5F               [ 4] 1053 	ld	e, a
      000621 DD 66 F4         [19] 1054 	ld	h, -12 (ix)
                                   1055 ;	spillPairReg hl
                                   1056 ;	spillPairReg hl
      000624 2E 00            [ 7] 1057 	ld	l, #0x00
      000626 55               [ 4] 1058 	ld	d, l
      000627 06 08            [ 7] 1059 	ld	b, #0x08
      000629                       1060 00261$:
      000629 29               [11] 1061 	add	hl, hl
      00062A 30 01            [12] 1062 	jr	NC, 00262$
      00062C 19               [11] 1063 	add	hl, de
      00062D                       1064 00262$:
      00062D 10 FA            [13] 1065 	djnz	00261$
      00062F 29               [11] 1066 	add	hl, hl
      000630 29               [11] 1067 	add	hl, hl
      000631 29               [11] 1068 	add	hl, hl
      000632 29               [11] 1069 	add	hl, hl
      000633 29               [11] 1070 	add	hl, hl
      000634 DD 75 F6         [19] 1071 	ld	-10 (ix), l
      000637 DD 74 F7         [19] 1072 	ld	-9 (ix), h
                                   1073 ;./lib/entities.c:31: if (entidad->initSprite == 255) {
      00063A DD 7E ED         [19] 1074 	ld	a, -19 (ix)
      00063D DD 77 EA         [19] 1075 	ld	-22 (ix), a
      000640 DD 7E EE         [19] 1076 	ld	a, -18 (ix)
      000643 DD 77 EB         [19] 1077 	ld	-21 (ix), a
      000646 DD 7E F3         [19] 1078 	ld	a, -13 (ix)
      000649 B7               [ 4] 1079 	or	a, a
      00064A CArD3r07         [10] 1080 	jp	Z, 00134$
                                   1081 ;./lib/entities.c:32: if (entidad->frame != sprite->frameInVRAM){
      00064D DD 7E FA         [19] 1082 	ld	a, -6 (ix)
      000650 C6 09            [ 7] 1083 	add	a, #0x09
      000652 DD 77 ED         [19] 1084 	ld	-19 (ix), a
      000655 DD 7E FB         [19] 1085 	ld	a, -5 (ix)
      000658 CE 00            [ 7] 1086 	adc	a, #0x00
      00065A DD 77 EE         [19] 1087 	ld	-18 (ix), a
      00065D DD 6E ED         [19] 1088 	ld	l, -19 (ix)
      000660 DD 66 EE         [19] 1089 	ld	h, -18 (ix)
      000663 DD 7E F5         [19] 1090 	ld	a,-11 (ix)
      000666 96               [ 7] 1091 	sub	a,(hl)
      000667 28 44            [12] 1092 	jr	Z, 00151$
                                   1093 ;./lib/entities.c:33: SMS_loadTiles(sprite->data + frame,sprite->beginVRAM,sprite->tamano<<5);
      000669 DD 6E F4         [19] 1094 	ld	l, -12 (ix)
                                   1095 ;	spillPairReg hl
                                   1096 ;	spillPairReg hl
      00066C 26 00            [ 7] 1097 	ld	h, #0x00
                                   1098 ;	spillPairReg hl
                                   1099 ;	spillPairReg hl
      00066E 29               [11] 1100 	add	hl, hl
      00066F 29               [11] 1101 	add	hl, hl
      000670 29               [11] 1102 	add	hl, hl
      000671 29               [11] 1103 	add	hl, hl
      000672 29               [11] 1104 	add	hl, hl
      000673 4D               [ 4] 1105 	ld	c, l
      000674 44               [ 4] 1106 	ld	b, h
      000675 DD 5E FA         [19] 1107 	ld	e, -6 (ix)
      000678 DD 56 FB         [19] 1108 	ld	d, -5 (ix)
      00067B 21 07 00         [10] 1109 	ld	hl, #7
      00067E 19               [11] 1110 	add	hl, de
      00067F 5E               [ 7] 1111 	ld	e, (hl)
      000680 23               [ 6] 1112 	inc	hl
      000681 56               [ 7] 1113 	ld	d, (hl)
      000682 DD 6E F6         [19] 1114 	ld	l, -10 (ix)
                                   1115 ;	spillPairReg hl
                                   1116 ;	spillPairReg hl
      000685 DD 66 F7         [19] 1117 	ld	h, -9 (ix)
                                   1118 ;	spillPairReg hl
                                   1119 ;	spillPairReg hl
      000688 19               [11] 1120 	add	hl, de
      000689 EB               [ 4] 1121 	ex	de, hl
      00068A DD 6E F1         [19] 1122 	ld	l, -15 (ix)
      00068D DD 66 F2         [19] 1123 	ld	h, -14 (ix)
      000690 7E               [ 7] 1124 	ld	a, (hl)
      000691 23               [ 6] 1125 	inc	hl
      000692 66               [ 7] 1126 	ld	h, (hl)
                                   1127 ;	spillPairReg hl
      000693 6F               [ 4] 1128 	ld	l, a
                                   1129 ;	spillPairReg hl
                                   1130 ;	spillPairReg hl
      000694 29               [11] 1131 	add	hl, hl
      000695 29               [11] 1132 	add	hl, hl
      000696 29               [11] 1133 	add	hl, hl
      000697 29               [11] 1134 	add	hl, hl
      000698 29               [11] 1135 	add	hl, hl
      000699 CB F4            [ 8] 1136 	set	6, h
      00069B C5               [11] 1137 	push	bc
      00069C CDr00r00         [17] 1138 	call	_SMS_VRAMmemcpy
                                   1139 ;./lib/entities.c:34: sprite->frameInVRAM = entidad->frame;
      00069F DD 6E EF         [19] 1140 	ld	l, -17 (ix)
      0006A2 DD 66 F0         [19] 1141 	ld	h, -16 (ix)
      0006A5 7E               [ 7] 1142 	ld	a, (hl)
      0006A6 DD 6E ED         [19] 1143 	ld	l, -19 (ix)
      0006A9 DD 66 EE         [19] 1144 	ld	h, -18 (ix)
      0006AC 77               [ 7] 1145 	ld	(hl), a
                                   1146 ;./lib/entities.c:36: for(j=0;j<sprite->alto;j++) {
      0006AD                       1147 00151$:
      0006AD DD 7E F8         [19] 1148 	ld	a, -8 (ix)
      0006B0 DD 77 EC         [19] 1149 	ld	-20 (ix), a
      0006B3 DD 7E F9         [19] 1150 	ld	a, -7 (ix)
      0006B6 DD 77 ED         [19] 1151 	ld	-19 (ix), a
      0006B9 DD 7E F8         [19] 1152 	ld	a, -8 (ix)
      0006BC DD 77 EE         [19] 1153 	ld	-18 (ix), a
      0006BF DD 7E F9         [19] 1154 	ld	a, -7 (ix)
      0006C2 DD 77 EF         [19] 1155 	ld	-17 (ix), a
      0006C5 DD 7E FE         [19] 1156 	ld	a, -2 (ix)
      0006C8 DD 77 F0         [19] 1157 	ld	-16 (ix), a
      0006CB DD 7E FF         [19] 1158 	ld	a, -1 (ix)
      0006CE DD 77 F1         [19] 1159 	ld	-15 (ix), a
      0006D1 DD 36 FE 00      [19] 1160 	ld	-2 (ix), #0x00
      0006D5                       1161 00132$:
      0006D5 DD 6E FA         [19] 1162 	ld	l, -6 (ix)
      0006D8 DD 66 FB         [19] 1163 	ld	h, -5 (ix)
      0006DB 5E               [ 7] 1164 	ld	e, (hl)
      0006DC DD 7E FE         [19] 1165 	ld	a, -2 (ix)
      0006DF 93               [ 4] 1166 	sub	a, e
      0006E0 D2rB5r07         [10] 1167 	jp	NC, 00116$
                                   1168 ;./lib/entities.c:37: for(i=0;i<sprite->ancho;i++) {
      0006E3 DD 36 FF 00      [19] 1169 	ld	-1 (ix), #0x00
      0006E7                       1170 00129$:
      0006E7 DD 6E F0         [19] 1171 	ld	l, -16 (ix)
      0006EA DD 66 F1         [19] 1172 	ld	h, -15 (ix)
      0006ED DD 7E FF         [19] 1173 	ld	a,-1 (ix)
      0006F0 96               [ 7] 1174 	sub	a,(hl)
      0006F1 D2rAFr07         [10] 1175 	jp	NC, 00133$
                                   1176 ;./lib/entities.c:21: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      0006F4 DD 6E FC         [19] 1177 	ld	l, -4 (ix)
      0006F7 DD 66 FD         [19] 1178 	ld	h, -3 (ix)
      0006FA 7E               [ 7] 1179 	ld	a, (hl)
                                   1180 ;./lib/entities.c:39: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),entidad->y+(j<<4), (j<<2) + (i<<1) );  
      0006FB DD 4E FF         [19] 1181 	ld	c, -1 (ix)
      0006FE 06 00            [ 7] 1182 	ld	b, #0x00
      000700 DD 5E FE         [19] 1183 	ld	e, -2 (ix)
      000703 16 00            [ 7] 1184 	ld	d, #0x00
                                   1185 ;./lib/entities.c:21: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      000705 DD 77 F6         [19] 1186 	ld	-10 (ix), a
      000708 DD 36 F7 00      [19] 1187 	ld	-9 (ix), #0x00
                                   1188 ;./lib/entities.c:39: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),entidad->y+(j<<4), (j<<2) + (i<<1) );  
      00070C DD 71 F8         [19] 1189 	ld	-8 (ix), c
      00070F DD 70 F9         [19] 1190 	ld	-7 (ix), b
      000712 3E 03            [ 7] 1191 	ld	a, #0x03
      000714                       1192 00264$:
      000714 DD CB F8 26      [23] 1193 	sla	-8 (ix)
      000718 DD CB F9 16      [23] 1194 	rl	-7 (ix)
      00071C 3D               [ 4] 1195 	dec	a
      00071D 20 F5            [12] 1196 	jr	NZ, 00264$
      00071F 6B               [ 4] 1197 	ld	l, e
      000720 62               [ 4] 1198 	ld	h, d
      000721 29               [11] 1199 	add	hl, hl
      000722 29               [11] 1200 	add	hl, hl
      000723 CB 21            [ 8] 1201 	sla	c
      000725 CB 10            [ 8] 1202 	rl	b
      000727 EB               [ 4] 1203 	ex	de, hl
      000728 29               [11] 1204 	add	hl, hl
      000729 29               [11] 1205 	add	hl, hl
      00072A 29               [11] 1206 	add	hl, hl
      00072B 29               [11] 1207 	add	hl, hl
      00072C EB               [ 4] 1208 	ex	de, hl
      00072D DD 73 F2         [19] 1209 	ld	-14 (ix), e
      000730 DD 72 F3         [19] 1210 	ld	-13 (ix), d
      000733 DD 7E F6         [19] 1211 	ld	a, -10 (ix)
      000736 DD 86 F8         [19] 1212 	add	a, -8 (ix)
      000739 5F               [ 4] 1213 	ld	e, a
      00073A 3E 00            [ 7] 1214 	ld	a, #0x00
      00073C DD 8E F9         [19] 1215 	adc	a, -7 (ix)
      00073F 09               [11] 1216 	add	hl, bc
                                   1217 ;	spillPairReg hl
                                   1218 ;	spillPairReg hl
      000740 AF               [ 4] 1219 	xor	a, a
      000741 67               [ 4] 1220 	ld	h,a
      000742 B5               [ 4] 1221 	or	a, l
      000743 DD 77 F4         [19] 1222 	ld	-12 (ix), a
      000746 7B               [ 4] 1223 	ld	a, e
      000747 B4               [ 4] 1224 	or	a, h
      000748 DD 77 F5         [19] 1225 	ld	-11 (ix), a
                                   1226 ;./lib/entities.c:38: if(i==0 && j==0)
      00074B DD 7E FF         [19] 1227 	ld	a, -1 (ix)
      00074E B7               [ 4] 1228 	or	a, a
      00074F 20 3F            [12] 1229 	jr	NZ, 00112$
      000751 DD 7E FE         [19] 1230 	ld	a, -2 (ix)
      000754 B7               [ 4] 1231 	or	a, a
      000755 20 39            [12] 1232 	jr	NZ, 00112$
                                   1233 ;./lib/entities.c:39: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),entidad->y+(j<<4), (j<<2) + (i<<1) );  
      000757 DD 6E EE         [19] 1234 	ld	l, -18 (ix)
      00075A DD 66 EF         [19] 1235 	ld	h, -17 (ix)
      00075D 7E               [ 7] 1236 	ld	a, (hl)
      00075E DD 77 F9         [19] 1237 	ld	-7 (ix), a
      000761 DD 77 F6         [19] 1238 	ld	-10 (ix), a
      000764 DD 36 F7 00      [19] 1239 	ld	-9 (ix), #0x00
      000768 DD 7E F2         [19] 1240 	ld	a, -14 (ix)
      00076B DD 86 F6         [19] 1241 	add	a, -10 (ix)
      00076E DD 77 F8         [19] 1242 	ld	-8 (ix), a
      000771 DD 7E F3         [19] 1243 	ld	a, -13 (ix)
      000774 DD 8E F7         [19] 1244 	adc	a, -9 (ix)
      000777 DD 77 F9         [19] 1245 	ld	-7 (ix), a
      00077A DD 5E F4         [19] 1246 	ld	e, -12 (ix)
      00077D DD 56 F5         [19] 1247 	ld	d, -11 (ix)
      000780 DD 6E F8         [19] 1248 	ld	l, -8 (ix)
                                   1249 ;	spillPairReg hl
                                   1250 ;	spillPairReg hl
      000783 DD 66 F9         [19] 1251 	ld	h, -7 (ix)
                                   1252 ;	spillPairReg hl
                                   1253 ;	spillPairReg hl
      000786 CDr00r00         [17] 1254 	call	_SMS_addSprite_f
      000789 C1               [10] 1255 	pop	bc
      00078A E1               [10] 1256 	pop	hl
      00078B E5               [11] 1257 	push	hl
      00078C C5               [11] 1258 	push	bc
      00078D 77               [ 7] 1259 	ld	(hl), a
      00078E 18 19            [12] 1260 	jr	00130$
      000790                       1261 00112$:
                                   1262 ;./lib/entities.c:41: SMS_addSprite(entidad->x+(i<<3),entidad->y+(j<<4), (j<<2) + (i<<1) );  
      000790 DD 6E EC         [19] 1263 	ld	l, -20 (ix)
      000793 DD 66 ED         [19] 1264 	ld	h, -19 (ix)
      000796 4E               [ 7] 1265 	ld	c, (hl)
      000797 06 00            [ 7] 1266 	ld	b, #0x00
      000799 DD 6E F2         [19] 1267 	ld	l, -14 (ix)
                                   1268 ;	spillPairReg hl
                                   1269 ;	spillPairReg hl
      00079C DD 66 F3         [19] 1270 	ld	h, -13 (ix)
                                   1271 ;	spillPairReg hl
                                   1272 ;	spillPairReg hl
      00079F 09               [11] 1273 	add	hl, bc
      0007A0 DD 5E F4         [19] 1274 	ld	e, -12 (ix)
      0007A3 DD 56 F5         [19] 1275 	ld	d, -11 (ix)
      0007A6 CDr00r00         [17] 1276 	call	_SMS_addSprite_f
      0007A9                       1277 00130$:
                                   1278 ;./lib/entities.c:37: for(i=0;i<sprite->ancho;i++) {
      0007A9 DD 34 FF         [23] 1279 	inc	-1 (ix)
      0007AC C3rE7r06         [10] 1280 	jp	00129$
      0007AF                       1281 00133$:
                                   1282 ;./lib/entities.c:36: for(j=0;j<sprite->alto;j++) {
      0007AF DD 34 FE         [23] 1283 	inc	-2 (ix)
      0007B2 C3rD5r06         [10] 1284 	jp	00132$
      0007B5                       1285 00116$:
                                   1286 ;./lib/entities.c:44: entidad->len = sprite->alto * sprite->ancho + entidad->initSprite;
      0007B5 DD 6E F0         [19] 1287 	ld	l, -16 (ix)
      0007B8 DD 66 F1         [19] 1288 	ld	h, -15 (ix)
      0007BB 66               [ 7] 1289 	ld	h, (hl)
                                   1290 ;	spillPairReg hl
      0007BC 2E 00            [ 7] 1291 	ld	l, #0x00
      0007BE 55               [ 4] 1292 	ld	d, l
      0007BF 06 08            [ 7] 1293 	ld	b, #0x08
      0007C1                       1294 00266$:
      0007C1 29               [11] 1295 	add	hl, hl
      0007C2 30 01            [12] 1296 	jr	NC, 00267$
      0007C4 19               [11] 1297 	add	hl, de
      0007C5                       1298 00267$:
      0007C5 10 FA            [13] 1299 	djnz	00266$
      0007C7 4D               [ 4] 1300 	ld	c, l
      0007C8 DD 6E EA         [19] 1301 	ld	l, -22 (ix)
      0007CB DD 66 EB         [19] 1302 	ld	h, -21 (ix)
      0007CE 7E               [ 7] 1303 	ld	a, (hl)
      0007CF 81               [ 4] 1304 	add	a, c
      0007D0 E1               [10] 1305 	pop	hl
      0007D1 E5               [11] 1306 	push	hl
      0007D2 77               [ 7] 1307 	ld	(hl), a
      0007D3                       1308 00134$:
                                   1309 ;./lib/entities.c:50: }
      0007D3 DD F9            [10] 1310 	ld	sp, ix
      0007D5 DD E1            [14] 1311 	pop	ix
      0007D7 C9               [10] 1312 	ret
                                   1313 ;./alex.c:20: unsigned char canUp(){
                                   1314 ;	---------------------------------
                                   1315 ; Function canUp
                                   1316 ; ---------------------------------
      0007D8                       1317 _canUp::
                                   1318 ;./alex.c:21: if (alex.x < 2)
      0007D8 3Ar03r00         [13] 1319 	ld	a, (#_alex + 0)
      0007DB D6 02            [ 7] 1320 	sub	a, #0x02
      0007DD 30 02            [12] 1321 	jr	NC, 00102$
                                   1322 ;./alex.c:22: return 0;
      0007DF AF               [ 4] 1323 	xor	a, a
      0007E0 C9               [10] 1324 	ret
      0007E1                       1325 00102$:
                                   1326 ;./alex.c:23: return 1;
      0007E1 3E 01            [ 7] 1327 	ld	a, #0x01
                                   1328 ;./alex.c:24: }
      0007E3 C9               [10] 1329 	ret
                                   1330 ;./alex.c:26: unsigned char canDown() {
                                   1331 ;	---------------------------------
                                   1332 ; Function canDown
                                   1333 ; ---------------------------------
      0007E4                       1334 _canDown::
                                   1335 ;./alex.c:27: if (alex.y > 155)
      0007E4 21r04r00         [10] 1336 	ld	hl, #_alex+1
      0007E7 4E               [ 7] 1337 	ld	c, (hl)
      0007E8 3E 9B            [ 7] 1338 	ld	a, #0x9b
      0007EA 91               [ 4] 1339 	sub	a, c
      0007EB 30 02            [12] 1340 	jr	NC, 00102$
                                   1341 ;./alex.c:28: return 0;
      0007ED AF               [ 4] 1342 	xor	a, a
      0007EE C9               [10] 1343 	ret
      0007EF                       1344 00102$:
                                   1345 ;./alex.c:29: return 1;
      0007EF 3E 01            [ 7] 1346 	ld	a, #0x01
                                   1347 ;./alex.c:30: }
      0007F1 C9               [10] 1348 	ret
                                   1349 ;./alex.c:32: unsigned char canLeft() {
                                   1350 ;	---------------------------------
                                   1351 ; Function canLeft
                                   1352 ; ---------------------------------
      0007F2                       1353 _canLeft::
                                   1354 ;./alex.c:33: if (alex.x < 9)
      0007F2 3Ar03r00         [13] 1355 	ld	a, (#_alex + 0)
      0007F5 D6 09            [ 7] 1356 	sub	a, #0x09
      0007F7 30 02            [12] 1357 	jr	NC, 00102$
                                   1358 ;./alex.c:34: return 0;
      0007F9 AF               [ 4] 1359 	xor	a, a
      0007FA C9               [10] 1360 	ret
      0007FB                       1361 00102$:
                                   1362 ;./alex.c:35: return 1;
      0007FB 3E 01            [ 7] 1363 	ld	a, #0x01
                                   1364 ;./alex.c:36: }
      0007FD C9               [10] 1365 	ret
                                   1366 ;./alex.c:38: unsigned char canRight() {
                                   1367 ;	---------------------------------
                                   1368 ; Function canRight
                                   1369 ; ---------------------------------
      0007FE                       1370 _canRight::
                                   1371 ;./alex.c:39: if (alex.x > 238)
      0007FE 21r03r00         [10] 1372 	ld	hl, #_alex+0
      000801 4E               [ 7] 1373 	ld	c, (hl)
      000802 3E EE            [ 7] 1374 	ld	a, #0xee
      000804 91               [ 4] 1375 	sub	a, c
      000805 30 02            [12] 1376 	jr	NC, 00102$
                                   1377 ;./alex.c:40: return 0;
      000807 AF               [ 4] 1378 	xor	a, a
      000808 C9               [10] 1379 	ret
      000809                       1380 00102$:
                                   1381 ;./alex.c:41: return 1;
      000809 3E 01            [ 7] 1382 	ld	a, #0x01
                                   1383 ;./alex.c:42: }
      00080B C9               [10] 1384 	ret
                                   1385 ;./alex.c:44: void moveAlexSuelo(int keys) {
                                   1386 ;	---------------------------------
                                   1387 ; Function moveAlexSuelo
                                   1388 ; ---------------------------------
      00080C                       1389 _moveAlexSuelo::
      00080C DD E5            [15] 1390 	push	ix
      00080E DD 21 00 00      [14] 1391 	ld	ix,#0
      000812 DD 39            [15] 1392 	add	ix,sp
      000814 F5               [11] 1393 	push	af
      000815 F5               [11] 1394 	push	af
      000816 F5               [11] 1395 	push	af
      000817 DD 75 FE         [19] 1396 	ld	-2 (ix), l
      00081A DD 74 FF         [19] 1397 	ld	-1 (ix), h
                                   1398 ;./alex.c:46: if (keys & PORT_A_KEY_LEFT)
      00081D DD 7E FE         [19] 1399 	ld	a, -2 (ix)
      000820 E6 04            [ 7] 1400 	and	a, #0x04
      000822 DD 77 FA         [19] 1401 	ld	-6 (ix), a
      000825 DD 36 FB 00      [19] 1402 	ld	-5 (ix), #0x00
                                   1403 ;./alex.c:48: if (keys & PORT_A_KEY_RIGHT)
      000829 DD 7E FE         [19] 1404 	ld	a, -2 (ix)
      00082C E6 08            [ 7] 1405 	and	a, #0x08
      00082E DD 77 FC         [19] 1406 	ld	-4 (ix), a
      000831 DD 36 FD 00      [19] 1407 	ld	-3 (ix), #0x00
                                   1408 ;./alex.c:45: if ((keys & PORT_A_KEY_DOWN)){
      000835 DD CB FE 4E      [20] 1409 	bit	1, -2 (ix)
      000839 28 33            [12] 1410 	jr	Z, 00109$
                                   1411 ;./alex.c:46: if (keys & PORT_A_KEY_LEFT)
      00083B AF               [ 4] 1412 	xor	a, a
      00083C DD B6 FA         [19] 1413 	or	a, -6 (ix)
      00083F 28 05            [12] 1414 	jr	Z, 00102$
                                   1415 ;./alex.c:47: alex.oriented = 1;
      000841 21r07r00         [10] 1416 	ld	hl, #_alex+4
      000844 36 01            [10] 1417 	ld	(hl), #0x01
      000846                       1418 00102$:
                                   1419 ;./alex.c:48: if (keys & PORT_A_KEY_RIGHT)
      000846 AF               [ 4] 1420 	xor	a, a
      000847 DD B6 FC         [19] 1421 	or	a, -4 (ix)
      00084A 28 05            [12] 1422 	jr	Z, 00104$
                                   1423 ;./alex.c:49: alex.oriented = 0;
      00084C 21r07r00         [10] 1424 	ld	hl, #_alex+4
      00084F 36 00            [10] 1425 	ld	(hl), #0x00
      000851                       1426 00104$:
                                   1427 ;./alex.c:50: if (!alex.oriented)
      000851 3Ar07r00         [13] 1428 	ld	a,(#_alex + 4)
                                   1429 ;./alex.c:51: alex.frame = 7;
                                   1430 ;./alex.c:50: if (!alex.oriented)
      000854 DD 77 FD         [19] 1431 	ld	-3 (ix), a
      000857 B7               [ 4] 1432 	or	a, a
      000858 20 07            [12] 1433 	jr	NZ, 00106$
                                   1434 ;./alex.c:51: alex.frame = 7;
      00085A 21r05r00         [10] 1435 	ld	hl, #(_alex + 2)
      00085D 36 07            [10] 1436 	ld	(hl), #0x07
      00085F 18 05            [12] 1437 	jr	00107$
      000861                       1438 00106$:
                                   1439 ;./alex.c:53: alex.frame = 15;
      000861 21r05r00         [10] 1440 	ld	hl, #(_alex + 2)
      000864 36 0F            [10] 1441 	ld	(hl), #0x0f
      000866                       1442 00107$:
                                   1443 ;./alex.c:54: alex.lastChangeFrame = 15;
      000866 21r06r00         [10] 1444 	ld	hl, #_alex + 3
      000869 36 0F            [10] 1445 	ld	(hl), #0x0f
                                   1446 ;./alex.c:55: return; // not move
      00086B C3r84r09         [10] 1447 	jp	00146$
      00086E                       1448 00109$:
                                   1449 ;./alex.c:58: if (keys & PORT_A_KEY_2) {
      00086E DD CB FE 6E      [20] 1450 	bit	5, -2 (ix)
      000872 28 2A            [12] 1451 	jr	Z, 00116$
                                   1452 ;./alex.c:59: if (alex.y > 100)
      000874 01r04r00         [10] 1453 	ld	bc, #_alex+1
      000877 0A               [ 7] 1454 	ld	a, (bc)
      000878 5F               [ 4] 1455 	ld	e, a
      000879 3E 64            [ 7] 1456 	ld	a, #0x64
      00087B 93               [ 4] 1457 	sub	a, e
      00087C 30 09            [12] 1458 	jr	NC, 00111$
                                   1459 ;./alex.c:60: maxSalto = alex.y - 100;
      00087E 7B               [ 4] 1460 	ld	a, e
      00087F 21r02r00         [10] 1461 	ld	hl, #_maxSalto
      000882 C6 9C            [ 7] 1462 	add	a, #0x9c
      000884 77               [ 7] 1463 	ld	(hl), a
      000885 18 05            [12] 1464 	jr	00112$
      000887                       1465 00111$:
                                   1466 ;./alex.c:62: maxSalto = 0;
      000887 21r02r00         [10] 1467 	ld	hl, #_maxSalto
      00088A 36 00            [10] 1468 	ld	(hl), #0x00
      00088C                       1469 00112$:
                                   1470 ;./alex.c:63: alex.y--;
      00088C 0A               [ 7] 1471 	ld	a, (bc)
      00088D 3D               [ 4] 1472 	dec	a
      00088E 02               [ 7] 1473 	ld	(bc), a
                                   1474 ;./alex.c:64: alex.y--;
      00088F 3D               [ 4] 1475 	dec	a
      000890 02               [ 7] 1476 	ld	(bc), a
                                   1477 ;./alex.c:65: PSGSFXPlay(salto_psg, SFX_CHANNEL1);
      000891 3E 08            [ 7] 1478 	ld	a, #0x08
      000893 F5               [11] 1479 	push	af
      000894 33               [ 6] 1480 	inc	sp
      000895 21r00r00         [10] 1481 	ld	hl, #_salto_psg
      000898 CDr00r00         [17] 1482 	call	_PSGSFXPlay
                                   1483 ;./alex.c:66: return;
      00089B C3r84r09         [10] 1484 	jp	00146$
      00089E                       1485 00116$:
                                   1486 ;./alex.c:68: else if (keys & PORT_A_KEY_1) {
      00089E DD CB FE 66      [20] 1487 	bit	4, -2 (ix)
      0008A2 28 0A            [12] 1488 	jr	Z, 00117$
                                   1489 ;./alex.c:69: alex.state = PUÑETAZO_SUELO;
      0008A4 21r08r00         [10] 1490 	ld	hl, #_alex + 5
      0008A7 36 20            [10] 1491 	ld	(hl), #0x20
                                   1492 ;./alex.c:70: alex.lastChangeFrame = 15;
      0008A9 21r06r00         [10] 1493 	ld	hl, #_alex + 3
      0008AC 36 0F            [10] 1494 	ld	(hl), #0x0f
      0008AE                       1495 00117$:
                                   1496 ;./alex.c:72: if(alex.state != PUÑETAZO_SUELO) {
      0008AE 21r08r00         [10] 1497 	ld	hl, #(_alex + 5)
      0008B1 6E               [ 7] 1498 	ld	l, (hl)
                                   1499 ;	spillPairReg hl
                                   1500 ;./alex.c:76: alex.oriented = 1;
                                   1501 ;./alex.c:77: alex.lastChangeFrame++;
      0008B2 01r06r00         [10] 1502 	ld	bc, #_alex + 3
                                   1503 ;./alex.c:80: alex.frame++;
      0008B5 11r05r00         [10] 1504 	ld	de, #_alex + 2
                                   1505 ;./alex.c:72: if(alex.state != PUÑETAZO_SUELO) {
      0008B8 7D               [ 4] 1506 	ld	a, l
      0008B9 D6 20            [ 7] 1507 	sub	a, #0x20
      0008BB 28 76            [12] 1508 	jr	Z, 00144$
                                   1509 ;./alex.c:73: if ((keys & PORT_A_KEY_LEFT) && alex.x > 8 )
      0008BD AF               [ 4] 1510 	xor	a, a
      0008BE DD B6 FA         [19] 1511 	or	a, -6 (ix)
      0008C1 28 32            [12] 1512 	jr	Z, 00135$
      0008C3 21r03r00         [10] 1513 	ld	hl, #_alex
      0008C6 6E               [ 7] 1514 	ld	l, (hl)
                                   1515 ;	spillPairReg hl
      0008C7 3E 08            [ 7] 1516 	ld	a, #0x08
      0008C9 95               [ 4] 1517 	sub	a, l
      0008CA 30 29            [12] 1518 	jr	NC, 00135$
                                   1519 ;./alex.c:75: alex.x -= 1;
      0008CC 7D               [ 4] 1520 	ld	a, l
      0008CD 3D               [ 4] 1521 	dec	a
      0008CE 32r03r00         [13] 1522 	ld	(#_alex),a
                                   1523 ;./alex.c:76: alex.oriented = 1;
      0008D1 21r07r00         [10] 1524 	ld	hl, #(_alex + 4)
      0008D4 36 01            [10] 1525 	ld	(hl), #0x01
                                   1526 ;./alex.c:77: alex.lastChangeFrame++;
      0008D6 0A               [ 7] 1527 	ld	a, (bc)
      0008D7 3C               [ 4] 1528 	inc	a
      0008D8 02               [ 7] 1529 	ld	(bc), a
                                   1530 ;./alex.c:78: if (alex.lastChangeFrame == 11) {
      0008D9 D6 0B            [ 7] 1531 	sub	a, #0x0b
      0008DB 20 05            [12] 1532 	jr	NZ, 00119$
                                   1533 ;./alex.c:79: alex.lastChangeFrame = 0;
      0008DD AF               [ 4] 1534 	xor	a, a
      0008DE 02               [ 7] 1535 	ld	(bc), a
                                   1536 ;./alex.c:80: alex.frame++;
      0008DF 1A               [ 7] 1537 	ld	a, (de)
      0008E0 3C               [ 4] 1538 	inc	a
      0008E1 12               [ 7] 1539 	ld	(de), a
      0008E2                       1540 00119$:
                                   1541 ;./alex.c:82: if (alex.frame > 11 || alex.frame < 8)
      0008E2 1A               [ 7] 1542 	ld	a, (de)
      0008E3 4F               [ 4] 1543 	ld	c, a
      0008E4 3E 0B            [ 7] 1544 	ld	a, #0x0b
      0008E6 91               [ 4] 1545 	sub	a, c
      0008E7 38 06            [12] 1546 	jr	C, 00120$
      0008E9 79               [ 4] 1547 	ld	a, c
      0008EA D6 08            [ 7] 1548 	sub	a, #0x08
      0008EC D2r84r09         [10] 1549 	jp	NC, 00146$
      0008EF                       1550 00120$:
                                   1551 ;./alex.c:83: alex.frame = 8;
      0008EF 3E 08            [ 7] 1552 	ld	a, #0x08
      0008F1 12               [ 7] 1553 	ld	(de), a
      0008F2 C3r84r09         [10] 1554 	jp	00146$
      0008F5                       1555 00135$:
                                   1556 ;./alex.c:85: else if ((keys & PORT_A_KEY_RIGHT) && alex.x <240)
      0008F5 AF               [ 4] 1557 	xor	a, a
      0008F6 DD B6 FC         [19] 1558 	or	a, -4 (ix)
      0008F9 28 27            [12] 1559 	jr	Z, 00131$
      0008FB 3Ar03r00         [13] 1560 	ld	a, (#_alex + 0)
      0008FE FE F0            [ 7] 1561 	cp	a, #0xf0
      000900 30 20            [12] 1562 	jr	NC, 00131$
                                   1563 ;./alex.c:87: alex.x += 1;
      000902 3C               [ 4] 1564 	inc	a
      000903 32r03r00         [13] 1565 	ld	(#_alex),a
                                   1566 ;./alex.c:88: alex.oriented = 0;
      000906 21r07r00         [10] 1567 	ld	hl, #(_alex + 4)
      000909 36 00            [10] 1568 	ld	(hl), #0x00
                                   1569 ;./alex.c:89: alex.lastChangeFrame++;
      00090B 0A               [ 7] 1570 	ld	a, (bc)
      00090C 3C               [ 4] 1571 	inc	a
      00090D 02               [ 7] 1572 	ld	(bc), a
                                   1573 ;./alex.c:90: if (alex.lastChangeFrame == 11) {
      00090E D6 0B            [ 7] 1574 	sub	a, #0x0b
      000910 20 05            [12] 1575 	jr	NZ, 00124$
                                   1576 ;./alex.c:91: alex.lastChangeFrame = 0;
      000912 AF               [ 4] 1577 	xor	a, a
      000913 02               [ 7] 1578 	ld	(bc), a
                                   1579 ;./alex.c:92: alex.frame++;
      000914 1A               [ 7] 1580 	ld	a, (de)
      000915 3C               [ 4] 1581 	inc	a
      000916 12               [ 7] 1582 	ld	(de), a
      000917                       1583 00124$:
                                   1584 ;./alex.c:94: if (alex.frame > 3 || alex.frame < 0)
      000917 1A               [ 7] 1585 	ld	a, (de)
      000918 4F               [ 4] 1586 	ld	c, a
      000919 3E 03            [ 7] 1587 	ld	a, #0x03
      00091B 91               [ 4] 1588 	sub	a, c
      00091C 30 66            [12] 1589 	jr	NC, 00146$
                                   1590 ;./alex.c:95: alex.frame = 0;
      00091E AF               [ 4] 1591 	xor	a, a
      00091F 12               [ 7] 1592 	ld	(de), a
      000920 18 62            [12] 1593 	jr	00146$
      000922                       1594 00131$:
                                   1595 ;./alex.c:99: alex.frame = 4;
      000922 3E 04            [ 7] 1596 	ld	a, #0x04
      000924 12               [ 7] 1597 	ld	(de), a
                                   1598 ;./alex.c:100: if (alex.oriented)
      000925 3Ar07r00         [13] 1599 	ld	a, (#(_alex + 4) + 0)
      000928 B7               [ 4] 1600 	or	a, a
      000929 28 03            [12] 1601 	jr	Z, 00129$
                                   1602 ;./alex.c:101: alex.frame = 12;
      00092B 3E 0C            [ 7] 1603 	ld	a, #0x0c
      00092D 12               [ 7] 1604 	ld	(de), a
      00092E                       1605 00129$:
                                   1606 ;./alex.c:102: alex.lastChangeFrame = 10;
      00092E 3E 0A            [ 7] 1607 	ld	a, #0x0a
      000930 02               [ 7] 1608 	ld	(bc), a
      000931 18 51            [12] 1609 	jr	00146$
      000933                       1610 00144$:
                                   1611 ;./alex.c:106: if (!alex.oriented) {
      000933 3Ar07r00         [13] 1612 	ld	a, (#(_alex + 4) + 0)
                                   1613 ;./alex.c:108: SMS_addSprite (alex.x + 16, alex.y + 9, 9);
                                   1614 ;./alex.c:106: if (!alex.oriented) {
      000936 DD 77 FD         [19] 1615 	ld	-3 (ix), a
      000939 B7               [ 4] 1616 	or	a, a
      00093A 20 22            [12] 1617 	jr	NZ, 00139$
                                   1618 ;./alex.c:107: alex.frame = 5;
      00093C 3E 05            [ 7] 1619 	ld	a, #0x05
      00093E 12               [ 7] 1620 	ld	(de), a
                                   1621 ;./alex.c:108: SMS_addSprite (alex.x + 16, alex.y + 9, 9);
      00093F 21r03r00         [10] 1622 	ld	hl, #_alex
      000942 5E               [ 7] 1623 	ld	e, (hl)
      000943 16 00            [ 7] 1624 	ld	d, #0x00
      000945 21 10 00         [10] 1625 	ld	hl, #0x0010
      000948 19               [11] 1626 	add	hl, de
      000949 55               [ 4] 1627 	ld	d, l
      00094A 1E 09            [ 7] 1628 	ld	e, #0x09
      00094C 3Ar04r00         [13] 1629 	ld	a, (#(_alex + 1) + 0)
      00094F 26 00            [ 7] 1630 	ld	h, #0x00
                                   1631 ;	spillPairReg hl
                                   1632 ;	spillPairReg hl
      000951 C6 09            [ 7] 1633 	add	a, #0x09
      000953 6F               [ 4] 1634 	ld	l, a
                                   1635 ;	spillPairReg hl
                                   1636 ;	spillPairReg hl
      000954 30 01            [12] 1637 	jr	NC, 00289$
      000956 24               [ 4] 1638 	inc	h
      000957                       1639 00289$:
      000957 C5               [11] 1640 	push	bc
      000958 CDr00r00         [17] 1641 	call	_SMS_addSprite_f
      00095B C1               [10] 1642 	pop	bc
      00095C 18 1B            [12] 1643 	jr	00140$
      00095E                       1644 00139$:
                                   1645 ;./alex.c:111: alex.frame = 13;
      00095E 3E 0D            [ 7] 1646 	ld	a, #0x0d
      000960 12               [ 7] 1647 	ld	(de), a
                                   1648 ;./alex.c:112: SMS_addSprite (alex.x - 8,  alex.y + 9, 11);
      000961 3Ar03r00         [13] 1649 	ld	a, (#_alex + 0)
      000964 C6 F8            [ 7] 1650 	add	a, #0xf8
                                   1651 ;	spillPairReg hl
                                   1652 ;	spillPairReg hl
      000966 57               [ 4] 1653 	ld	d, a
      000967 1E 0B            [ 7] 1654 	ld	e, #0x0b
      000969 3Ar04r00         [13] 1655 	ld	a, (#(_alex + 1) + 0)
      00096C 26 00            [ 7] 1656 	ld	h, #0x00
                                   1657 ;	spillPairReg hl
                                   1658 ;	spillPairReg hl
      00096E C6 09            [ 7] 1659 	add	a, #0x09
      000970 6F               [ 4] 1660 	ld	l, a
                                   1661 ;	spillPairReg hl
                                   1662 ;	spillPairReg hl
      000971 30 01            [12] 1663 	jr	NC, 00290$
      000973 24               [ 4] 1664 	inc	h
      000974                       1665 00290$:
      000974 C5               [11] 1666 	push	bc
      000975 CDr00r00         [17] 1667 	call	_SMS_addSprite_f
      000978 C1               [10] 1668 	pop	bc
      000979                       1669 00140$:
                                   1670 ;./alex.c:114: alex.lastChangeFrame--;
      000979 0A               [ 7] 1671 	ld	a, (bc)
      00097A 3D               [ 4] 1672 	dec	a
      00097B 02               [ 7] 1673 	ld	(bc), a
                                   1674 ;./alex.c:115: if(!alex.lastChangeFrame) {
      00097C B7               [ 4] 1675 	or	a, a
      00097D 20 05            [12] 1676 	jr	NZ, 00146$
                                   1677 ;./alex.c:116: alex.state = 0;
      00097F 21r08r00         [10] 1678 	ld	hl, #(_alex + 5)
      000982 36 00            [10] 1679 	ld	(hl), #0x00
      000984                       1680 00146$:
                                   1681 ;./alex.c:119: }
      000984 DD F9            [10] 1682 	ld	sp, ix
      000986 DD E1            [14] 1683 	pop	ix
      000988 C9               [10] 1684 	ret
                                   1685 ;./alex.c:121: void moveAlexAire(int keys, unsigned char puedeSubir, unsigned char puedeDerecha, unsigned char puedeIzquieda) {
                                   1686 ;	---------------------------------
                                   1687 ; Function moveAlexAire
                                   1688 ; ---------------------------------
      000989                       1689 _moveAlexAire::
      000989 DD E5            [15] 1690 	push	ix
      00098B DD 21 00 00      [14] 1691 	ld	ix,#0
      00098F DD 39            [15] 1692 	add	ix,sp
      000991 F5               [11] 1693 	push	af
      000992 3B               [ 6] 1694 	dec	sp
      000993 DD 75 FE         [19] 1695 	ld	-2 (ix), l
      000996 DD 74 FF         [19] 1696 	ld	-1 (ix), h
                                   1697 ;./alex.c:122: if (alex.y > maxSalto) {
      000999 21r04r00         [10] 1698 	ld	hl, #(_alex + 1)
      00099C 46               [ 7] 1699 	ld	b, (hl)
                                   1700 ;./alex.c:123: alex.y -= 2;
      00099D 48               [ 4] 1701 	ld	c, b
                                   1702 ;./alex.c:122: if (alex.y > maxSalto) {
      00099E 3Ar02r00         [13] 1703 	ld	a, (_maxSalto+0)
      0009A1 90               [ 4] 1704 	sub	a, b
      0009A2 30 08            [12] 1705 	jr	NC, 00102$
                                   1706 ;./alex.c:123: alex.y -= 2;
      0009A4 0D               [ 4] 1707 	dec	c
      0009A5 0D               [ 4] 1708 	dec	c
      0009A6 21r04r00         [10] 1709 	ld	hl, #(_alex + 1)
      0009A9 71               [ 7] 1710 	ld	(hl), c
      0009AA 18 0E            [12] 1711 	jr	00103$
      0009AC                       1712 00102$:
                                   1713 ;./alex.c:126: alex.y += 2; // bajando
      0009AC 0C               [ 4] 1714 	inc	c
      0009AD 0C               [ 4] 1715 	inc	c
      0009AE 21r04r00         [10] 1716 	ld	hl, #(_alex + 1)
      0009B1 71               [ 7] 1717 	ld	(hl), c
                                   1718 ;./alex.c:127: maxSalto = 255;
      0009B2 FD 21r02r00      [14] 1719 	ld	iy, #_maxSalto
      0009B6 FD 36 00 FF      [19] 1720 	ld	0 (iy), #0xff
      0009BA                       1721 00103$:
                                   1722 ;./alex.c:130: if (alex.state != PUÑETAZO_SALTANDO)
                                   1723 ;./alex.c:131: alex.oriented = 1;
                                   1724 ;./alex.c:129: if (keys & PORT_A_KEY_LEFT) {
      0009BA DD CB FE 56      [20] 1725 	bit	2, -2 (ix)
      0009BE 28 1A            [12] 1726 	jr	Z, 00109$
                                   1727 ;./alex.c:130: if (alex.state != PUÑETAZO_SALTANDO)
      0009C0 3Ar08r00         [13] 1728 	ld	a, (#(_alex + 5) + 0)
      0009C3 D6 10            [ 7] 1729 	sub	a, #0x10
      0009C5 28 05            [12] 1730 	jr	Z, 00105$
                                   1731 ;./alex.c:131: alex.oriented = 1;
      0009C7 21r07r00         [10] 1732 	ld	hl, #(_alex + 4)
      0009CA 36 01            [10] 1733 	ld	(hl), #0x01
      0009CC                       1734 00105$:
                                   1735 ;./alex.c:132: if (puedeIzquieda)
      0009CC DD 7E 06         [19] 1736 	ld	a, 6 (ix)
      0009CF B7               [ 4] 1737 	or	a, a
      0009D0 28 08            [12] 1738 	jr	Z, 00109$
                                   1739 ;./alex.c:133: alex.x -= 2;
      0009D2 3Ar03r00         [13] 1740 	ld	a, (#_alex + 0)
      0009D5 3D               [ 4] 1741 	dec	a
      0009D6 3D               [ 4] 1742 	dec	a
      0009D7 32r03r00         [13] 1743 	ld	(#_alex),a
      0009DA                       1744 00109$:
                                   1745 ;./alex.c:135: if (keys & PORT_A_KEY_RIGHT) {
      0009DA DD CB FE 5E      [20] 1746 	bit	3, -2 (ix)
      0009DE 28 1A            [12] 1747 	jr	Z, 00115$
                                   1748 ;./alex.c:136: if (alex.state != PUÑETAZO_SALTANDO)
      0009E0 3Ar08r00         [13] 1749 	ld	a, (#(_alex + 5) + 0)
      0009E3 D6 10            [ 7] 1750 	sub	a, #0x10
      0009E5 28 05            [12] 1751 	jr	Z, 00111$
                                   1752 ;./alex.c:137: alex.oriented = 0;
      0009E7 21r07r00         [10] 1753 	ld	hl, #(_alex + 4)
      0009EA 36 00            [10] 1754 	ld	(hl), #0x00
      0009EC                       1755 00111$:
                                   1756 ;./alex.c:138: if (puedeDerecha)
      0009EC DD 7E 05         [19] 1757 	ld	a, 5 (ix)
      0009EF B7               [ 4] 1758 	or	a, a
      0009F0 28 08            [12] 1759 	jr	Z, 00115$
                                   1760 ;./alex.c:139: alex.x += 2;
      0009F2 3Ar03r00         [13] 1761 	ld	a, (#_alex + 0)
      0009F5 C6 02            [ 7] 1762 	add	a, #0x02
      0009F7 32r03r00         [13] 1763 	ld	(#_alex),a
      0009FA                       1764 00115$:
                                   1765 ;./alex.c:141: if (alex.state == PUÑETAZO_SALTANDO) {
      0009FA 21r08r00         [10] 1766 	ld	hl, #(_alex + 5)
      0009FD 4E               [ 7] 1767 	ld	c, (hl)
                                   1768 ;./alex.c:142: alex.lastChangeFrame--;
                                   1769 ;./alex.c:147: alex.frame = 5;
                                   1770 ;./alex.c:141: if (alex.state == PUÑETAZO_SALTANDO) {
      0009FE 79               [ 4] 1771 	ld	a, c
      0009FF D6 10            [ 7] 1772 	sub	a, #0x10
      000A01 20 55            [12] 1773 	jr	NZ, 00127$
                                   1774 ;./alex.c:142: alex.lastChangeFrame--;
      000A03 21r06r00         [10] 1775 	ld	hl, #(_alex + 3)
      000A06 4E               [ 7] 1776 	ld	c, (hl)
      000A07 0D               [ 4] 1777 	dec	c
      000A08 21r06r00         [10] 1778 	ld	hl, #(_alex + 3)
                                   1779 ;./alex.c:143: if  (!alex.lastChangeFrame) {
      000A0B 79               [ 4] 1780 	ld	a,c
      000A0C 77               [ 7] 1781 	ld	(hl),a
      000A0D B7               [ 4] 1782 	or	a, a
      000A0E 20 05            [12] 1783 	jr	NZ, 00117$
                                   1784 ;./alex.c:144: alex.state = 0;
      000A10 21r08r00         [10] 1785 	ld	hl, #(_alex + 5)
      000A13 36 00            [10] 1786 	ld	(hl), #0x00
      000A15                       1787 00117$:
                                   1788 ;./alex.c:146: if (!alex.oriented) {
      000A15 3Ar07r00         [13] 1789 	ld	a, (#(_alex + 4) + 0)
      000A18 B7               [ 4] 1790 	or	a, a
      000A19 20 21            [12] 1791 	jr	NZ, 00119$
                                   1792 ;./alex.c:147: alex.frame = 5;
      000A1B 21r05r00         [10] 1793 	ld	hl, #(_alex + 2)
      000A1E 36 05            [10] 1794 	ld	(hl), #0x05
                                   1795 ;./alex.c:148: SMS_addSprite (alex.x + 16, alex.y + 9, 9);
      000A20 21r03r00         [10] 1796 	ld	hl, #_alex
      000A23 4E               [ 7] 1797 	ld	c, (hl)
      000A24 06 00            [ 7] 1798 	ld	b, #0x00
      000A26 21 10 00         [10] 1799 	ld	hl, #0x0010
      000A29 09               [11] 1800 	add	hl, bc
      000A2A 55               [ 4] 1801 	ld	d, l
      000A2B 1E 09            [ 7] 1802 	ld	e, #0x09
      000A2D 21r04r00         [10] 1803 	ld	hl, #(_alex + 1)
      000A30 4E               [ 7] 1804 	ld	c, (hl)
      000A31 06 00            [ 7] 1805 	ld	b, #0x00
      000A33 21 09 00         [10] 1806 	ld	hl, #0x0009
      000A36 09               [11] 1807 	add	hl, bc
      000A37 CDr00r00         [17] 1808 	call	_SMS_addSprite_f
      000A3A 18 41            [12] 1809 	jr	00129$
      000A3C                       1810 00119$:
                                   1811 ;./alex.c:151: alex.frame = 13;
      000A3C 21r05r00         [10] 1812 	ld	hl, #(_alex + 2)
      000A3F 36 0D            [10] 1813 	ld	(hl), #0x0d
                                   1814 ;./alex.c:152: SMS_addSprite (alex.x - 8,  alex.y + 9, 11);
      000A41 3Ar03r00         [13] 1815 	ld	a, (#_alex + 0)
      000A44 C6 F8            [ 7] 1816 	add	a, #0xf8
      000A46 57               [ 4] 1817 	ld	d, a
      000A47 1E 0B            [ 7] 1818 	ld	e, #0x0b
      000A49 21r04r00         [10] 1819 	ld	hl, #(_alex + 1)
      000A4C 4E               [ 7] 1820 	ld	c, (hl)
      000A4D 06 00            [ 7] 1821 	ld	b, #0x00
      000A4F 21 09 00         [10] 1822 	ld	hl, #0x0009
      000A52 09               [11] 1823 	add	hl, bc
      000A53 CDr00r00         [17] 1824 	call	_SMS_addSprite_f
      000A56 18 25            [12] 1825 	jr	00129$
      000A58                       1826 00127$:
                                   1827 ;./alex.c:156: if (!alex.oriented)
      000A58 3Ar07r00         [13] 1828 	ld	a, (#(_alex + 4) + 0)
      000A5B DD 77 FD         [19] 1829 	ld	-3 (ix), a
      000A5E B7               [ 4] 1830 	or	a, a
      000A5F 20 07            [12] 1831 	jr	NZ, 00122$
                                   1832 ;./alex.c:157: alex.frame = 6;
      000A61 21r05r00         [10] 1833 	ld	hl, #(_alex + 2)
      000A64 36 06            [10] 1834 	ld	(hl), #0x06
      000A66 18 05            [12] 1835 	jr	00123$
      000A68                       1836 00122$:
                                   1837 ;./alex.c:159: alex.frame = 14;
      000A68 21r05r00         [10] 1838 	ld	hl, #(_alex + 2)
      000A6B 36 0E            [10] 1839 	ld	(hl), #0x0e
      000A6D                       1840 00123$:
                                   1841 ;./alex.c:160: if (keys & PORT_A_KEY_1) {
      000A6D DD CB FE 66      [20] 1842 	bit	4, -2 (ix)
      000A71 28 0A            [12] 1843 	jr	Z, 00129$
                                   1844 ;./alex.c:161: alex.state = PUÑETAZO_SALTANDO;
      000A73 21r08r00         [10] 1845 	ld	hl, #(_alex + 5)
      000A76 36 10            [10] 1846 	ld	(hl), #0x10
                                   1847 ;./alex.c:162: alex.lastChangeFrame = 20;
      000A78 21r06r00         [10] 1848 	ld	hl, #(_alex + 3)
      000A7B 36 14            [10] 1849 	ld	(hl), #0x14
      000A7D                       1850 00129$:
                                   1851 ;./alex.c:166: }
      000A7D DD F9            [10] 1852 	ld	sp, ix
      000A7F DD E1            [14] 1853 	pop	ix
      000A81 E1               [10] 1854 	pop	hl
      000A82 F1               [10] 1855 	pop	af
      000A83 33               [ 6] 1856 	inc	sp
      000A84 E9               [ 4] 1857 	jp	(hl)
                                   1858 ;./alex.c:169: void moveAlex(int keys) {
                                   1859 ;	---------------------------------
                                   1860 ; Function moveAlex
                                   1861 ; ---------------------------------
      000A85                       1862 _moveAlex::
      000A85 DD E5            [15] 1863 	push	ix
      000A87 DD 21 00 00      [14] 1864 	ld	ix,#0
      000A8B DD 39            [15] 1865 	add	ix,sp
      000A8D 3B               [ 6] 1866 	dec	sp
                                   1867 ;./alex.c:170: unsigned char puedeBajar = canDown();
      000A8E E5               [11] 1868 	push	hl
      000A8F CDrE4r07         [17] 1869 	call	_canDown
      000A92 4F               [ 4] 1870 	ld	c, a
      000A93 C5               [11] 1871 	push	bc
      000A94 CDrD8r07         [17] 1872 	call	_canUp
      000A97 DD 77 FF         [19] 1873 	ld	-1 (ix), a
      000A9A CDrFEr07         [17] 1874 	call	_canRight
      000A9D 5F               [ 4] 1875 	ld	e, a
      000A9E D5               [11] 1876 	push	de
      000A9F CDrF2r07         [17] 1877 	call	_canLeft
      000AA2 D1               [10] 1878 	pop	de
      000AA3 C1               [10] 1879 	pop	bc
      000AA4 E1               [10] 1880 	pop	hl
                                   1881 ;./alex.c:174: if (puedeBajar)
      000AA5 0C               [ 4] 1882 	inc	c
      000AA6 0D               [ 4] 1883 	dec	c
      000AA7 28 0C            [12] 1884 	jr	Z, 00102$
                                   1885 ;./alex.c:175: moveAlexAire(keys, puedeSubir, puedeDerecha, puedeIzquierda);
      000AA9 57               [ 4] 1886 	ld	d,a
      000AAA D5               [11] 1887 	push	de
      000AAB DD 7E FF         [19] 1888 	ld	a, -1 (ix)
      000AAE F5               [11] 1889 	push	af
      000AAF 33               [ 6] 1890 	inc	sp
      000AB0 CDr89r09         [17] 1891 	call	_moveAlexAire
      000AB3 18 03            [12] 1892 	jr	00104$
      000AB5                       1893 00102$:
                                   1894 ;./alex.c:177: moveAlexSuelo(keys);
      000AB5 CDr0Cr08         [17] 1895 	call	_moveAlexSuelo
      000AB8                       1896 00104$:
                                   1897 ;./alex.c:178: }
      000AB8 33               [ 6] 1898 	inc	sp
      000AB9 DD E1            [14] 1899 	pop	ix
      000ABB C9               [10] 1900 	ret
                                   1901 ;main.c:20: void inicializaPajaros()
                                   1902 ;	---------------------------------
                                   1903 ; Function inicializaPajaros
                                   1904 ; ---------------------------------
      000ABC                       1905 _inicializaPajaros::
      000ABC DD E5            [15] 1906 	push	ix
      000ABE DD 21 00 00      [14] 1907 	ld	ix,#0
      000AC2 DD 39            [15] 1908 	add	ix,sp
      000AC4 21 F9 FF         [10] 1909 	ld	hl, #-7
      000AC7 39               [11] 1910 	add	hl, sp
      000AC8 F9               [ 6] 1911 	ld	sp, hl
                                   1912 ;main.c:23: for (i = 0; i < NUM_PAJAROS; i++)
      000AC9 DD 36 FF 00      [19] 1913 	ld	-1 (ix), #0x00
      000ACD                       1914 00108$:
                                   1915 ;main.c:25: pajaros[i].x = 15 + 32 * i;
      000ACD DD 4E FF         [19] 1916 	ld	c, -1 (ix)
      000AD0 06 00            [ 7] 1917 	ld	b, #0x00
      000AD2 69               [ 4] 1918 	ld	l, c
      000AD3 60               [ 4] 1919 	ld	h, b
      000AD4 29               [11] 1920 	add	hl, hl
      000AD5 29               [11] 1921 	add	hl, hl
      000AD6 29               [11] 1922 	add	hl, hl
      000AD7 7D               [ 4] 1923 	ld	a, l
      000AD8 C6r06            [ 7] 1924 	add	a, #<(_pajaros)
      000ADA DD 77 F9         [19] 1925 	ld	-7 (ix), a
      000ADD 7C               [ 4] 1926 	ld	a, h
      000ADE CEs03            [ 7] 1927 	adc	a, #>(_pajaros)
      000AE0 DD 77 FA         [19] 1928 	ld	-6 (ix), a
      000AE3 DD 7E FF         [19] 1929 	ld	a, -1 (ix)
      000AE6 0F               [ 4] 1930 	rrca
      000AE7 0F               [ 4] 1931 	rrca
      000AE8 0F               [ 4] 1932 	rrca
      000AE9 E6 E0            [ 7] 1933 	and	a, #0xe0
      000AEB C6 0F            [ 7] 1934 	add	a, #0x0f
      000AED E1               [10] 1935 	pop	hl
      000AEE E5               [11] 1936 	push	hl
      000AEF 77               [ 7] 1937 	ld	(hl), a
                                   1938 ;main.c:26: pajaros[i].y = 16 * (i / 2);
      000AF0 DD 7E F9         [19] 1939 	ld	a, -7 (ix)
      000AF3 C6 01            [ 7] 1940 	add	a, #0x01
      000AF5 DD 77 FB         [19] 1941 	ld	-5 (ix), a
      000AF8 DD 7E FA         [19] 1942 	ld	a, -6 (ix)
      000AFB CE 00            [ 7] 1943 	adc	a, #0x00
      000AFD DD 77 FC         [19] 1944 	ld	-4 (ix), a
      000B00 DD 71 FD         [19] 1945 	ld	-3 (ix), c
      000B03 DD 70 FE         [19] 1946 	ld	-2 (ix), b
      000B06 CB 78            [ 8] 1947 	bit	7, b
      000B08 28 08            [12] 1948 	jr	Z, 00112$
      000B0A DD 36 FD 01      [19] 1949 	ld	-3 (ix), #0x01
      000B0E DD 36 FE 00      [19] 1950 	ld	-2 (ix), #0
      000B12                       1951 00112$:
      000B12 DD 4E FD         [19] 1952 	ld	c, -3 (ix)
      000B15 1E 00            [ 7] 1953 	ld	e, #0x00
      000B17 CB 2B            [ 8] 1954 	sra	e
      000B19 CB 19            [ 8] 1955 	rr	c
      000B1B 79               [ 4] 1956 	ld	a, c
      000B1C 87               [ 4] 1957 	add	a, a
      000B1D 87               [ 4] 1958 	add	a, a
      000B1E 87               [ 4] 1959 	add	a, a
      000B1F 87               [ 4] 1960 	add	a, a
      000B20 C1               [10] 1961 	pop	bc
      000B21 E1               [10] 1962 	pop	hl
      000B22 E5               [11] 1963 	push	hl
      000B23 C5               [11] 1964 	push	bc
      000B24 77               [ 7] 1965 	ld	(hl), a
                                   1966 ;main.c:27: pajaros[i].lastChangeFrame = i * 3;
      000B25 C1               [10] 1967 	pop	bc
      000B26 C5               [11] 1968 	push	bc
      000B27 03               [ 6] 1969 	inc	bc
      000B28 03               [ 6] 1970 	inc	bc
      000B29 03               [ 6] 1971 	inc	bc
      000B2A DD 7E FF         [19] 1972 	ld	a, -1 (ix)
      000B2D 5F               [ 4] 1973 	ld	e, a
      000B2E 87               [ 4] 1974 	add	a, a
      000B2F 83               [ 4] 1975 	add	a, e
      000B30 02               [ 7] 1976 	ld	(bc), a
                                   1977 ;main.c:28: pajaros[i].initSprite = 255;
      000B31 DD 7E F9         [19] 1978 	ld	a, -7 (ix)
      000B34 C6 06            [ 7] 1979 	add	a, #0x06
      000B36 5F               [ 4] 1980 	ld	e, a
      000B37 DD 7E FA         [19] 1981 	ld	a, -6 (ix)
      000B3A CE 00            [ 7] 1982 	adc	a, #0x00
      000B3C 57               [ 4] 1983 	ld	d, a
      000B3D 3E FF            [ 7] 1984 	ld	a, #0xff
      000B3F 12               [ 7] 1985 	ld	(de), a
                                   1986 ;main.c:30: pajaros[i].x++;
      000B40 E1               [10] 1987 	pop	hl
      000B41 E5               [11] 1988 	push	hl
      000B42 7E               [ 7] 1989 	ld	a, (hl)
      000B43 3C               [ 4] 1990 	inc	a
      000B44 E1               [10] 1991 	pop	hl
      000B45 E5               [11] 1992 	push	hl
      000B46 77               [ 7] 1993 	ld	(hl), a
                                   1994 ;main.c:31: pajaros[i].lastChangeFrame++;
      000B47 0A               [ 7] 1995 	ld	a, (bc)
      000B48 3C               [ 4] 1996 	inc	a
      000B49 02               [ 7] 1997 	ld	(bc), a
                                   1998 ;main.c:32: if (pajaros[i].lastChangeFrame == 20)
      000B4A D6 14            [ 7] 1999 	sub	a, #0x14
      000B4C 20 15            [12] 2000 	jr	NZ, 00104$
                                   2001 ;main.c:34: pajaros[i].frame++;
      000B4E E1               [10] 2002 	pop	hl
      000B4F E5               [11] 2003 	push	hl
      000B50 23               [ 6] 2004 	inc	hl
      000B51 23               [ 6] 2005 	inc	hl
      000B52 7E               [ 7] 2006 	ld	a, (hl)
      000B53 3C               [ 4] 2007 	inc	a
      000B54 DD 77 FE         [19] 2008 	ld	-2 (ix), a
      000B57 77               [ 7] 2009 	ld	(hl), a
                                   2010 ;main.c:35: if (pajaros[i].frame > 1)
      000B58 3E 01            [ 7] 2011 	ld	a, #0x01
      000B5A DD 96 FE         [19] 2012 	sub	a, -2 (ix)
      000B5D 30 02            [12] 2013 	jr	NC, 00102$
                                   2014 ;main.c:36: pajaros[i].frame = 0;
      000B5F 36 00            [10] 2015 	ld	(hl), #0x00
      000B61                       2016 00102$:
                                   2017 ;main.c:37: pajaros[i].lastChangeFrame = 0;
      000B61 AF               [ 4] 2018 	xor	a, a
      000B62 02               [ 7] 2019 	ld	(bc), a
      000B63                       2020 00104$:
                                   2021 ;main.c:39: if(pajaros[i].initSprite == 255) {
      000B63 1A               [ 7] 2022 	ld	a, (de)
      000B64 3C               [ 4] 2023 	inc	a
      000B65 20 08            [12] 2024 	jr	NZ, 00109$
                                   2025 ;main.c:40: draw_entidad(&(pajaros[i]), &spritePajaro);
      000B67 11r15r00         [10] 2026 	ld	de, #_spritePajaro
      000B6A E1               [10] 2027 	pop	hl
      000B6B E5               [11] 2028 	push	hl
      000B6C CDr40r04         [17] 2029 	call	_draw_entidad
      000B6F                       2030 00109$:
                                   2031 ;main.c:23: for (i = 0; i < NUM_PAJAROS; i++)
      000B6F DD 34 FF         [23] 2032 	inc	-1 (ix)
      000B72 DD 7E FF         [19] 2033 	ld	a, -1 (ix)
      000B75 D6 13            [ 7] 2034 	sub	a, #0x13
      000B77 DArCDr0A         [10] 2035 	jp	C, 00108$
                                   2036 ;main.c:43: }
      000B7A DD F9            [10] 2037 	ld	sp, ix
      000B7C DD E1            [14] 2038 	pop	ix
      000B7E C9               [10] 2039 	ret
                                   2040 ;main.c:45: void loadGrapVRAM()
                                   2041 ;	---------------------------------
                                   2042 ; Function loadGrapVRAM
                                   2043 ; ---------------------------------
      000B7F                       2044 _loadGrapVRAM::
      000B7F DD E5            [15] 2045 	push	ix
      000B81 DD 21 00 00      [14] 2046 	ld	ix,#0
      000B85 DD 39            [15] 2047 	add	ix,sp
      000B87 21 E2 FF         [10] 2048 	ld	hl, #-30
      000B8A 39               [11] 2049 	add	hl, sp
      000B8B F9               [ 6] 2050 	ld	sp, hl
                                   2051 ;main.c:47: SMS_init();
      000B8C CDr00r00         [17] 2052 	call	_SMS_init
                                   2053 ;main.c:50: SMS_setSpriteMode(SPRITEMODE_TALL);
      000B8F 2E 01            [ 7] 2054 	ld	l, #0x01
                                   2055 ;	spillPairReg hl
                                   2056 ;	spillPairReg hl
      000B91 CDr00r00         [17] 2057 	call	_SMS_setSpriteMode
                                   2058 ;main.c:51: SMS_displayOn();
      000B94 21 40 01         [10] 2059 	ld	hl, #0x0140
      000B97 CDr00r00         [17] 2060 	call	_SMS_VDPturnOnFeature
                                   2061 ;main.c:52: SMS_loadBGPalette(sonicpalette_inc);
      000B9A 21r00r00         [10] 2062 	ld	hl, #_sonicpalette_inc
      000B9D CDr00r00         [17] 2063 	call	_SMS_loadBGPalette
                                   2064 ;main.c:53: SMS_loadSpritePalette(palleteAlex_inc);
      000BA0 21r00r00         [10] 2065 	ld	hl, #_palleteAlex_inc
      000BA3 CDr00r00         [17] 2066 	call	_SMS_loadSpritePalette
                                   2067 ;main.c:55: spriteAlex = generateSpriteNoRAM(2, 2, spriteAlex_inc_size, spriteAlex_inc);
      000BA6 21r00r00         [10] 2068 	ld	hl, #_spriteAlex_inc
      000BA9 E5               [11] 2069 	push	hl
      000BAA 21 00 10         [10] 2070 	ld	hl, #0x1000
      000BAD E5               [11] 2071 	push	hl
                                   2072 ;	spillPairReg hl
                                   2073 ;	spillPairReg hl
      000BAE 3E 02            [ 7] 2074 	ld	a,#0x02
      000BB0 6F               [ 4] 2075 	ld	l,a
      000BB1 E5               [11] 2076 	push	hl
      000BB2 21 06 00         [10] 2077 	ld	hl, #0x0006
      000BB5 39               [11] 2078 	add	hl, sp
      000BB6 EB               [ 4] 2079 	ex	de,hl
      000BB7 E1               [10] 2080 	pop	hl
      000BB8 D5               [11] 2081 	push	de
      000BB9 CDrAAr00         [17] 2082 	call	_generateSpriteNoRAM
      000BBC F1               [10] 2083 	pop	af
      000BBD F1               [10] 2084 	pop	af
      000BBE F1               [10] 2085 	pop	af
      000BBF 11r0Br00         [10] 2086 	ld	de, #_spriteAlex
      000BC2 21 00 00         [10] 2087 	ld	hl, #0
      000BC5 39               [11] 2088 	add	hl, sp
      000BC6 01 0A 00         [10] 2089 	ld	bc, #0x000a
      000BC9 ED B0            [21] 2090 	ldir
                                   2091 ;main.c:56: spritePuno = generateSprite(1, 2, puno_inc_size, puno_inc);
      000BCB 21r00r00         [10] 2092 	ld	hl, #_puno_inc
      000BCE E5               [11] 2093 	push	hl
      000BCF 21 80 00         [10] 2094 	ld	hl, #0x0080
      000BD2 E5               [11] 2095 	push	hl
      000BD3 2E 02            [ 7] 2096 	ld	l, #0x02
                                   2097 ;	spillPairReg hl
                                   2098 ;	spillPairReg hl
      000BD5 3E 01            [ 7] 2099 	ld	a, #0x01
      000BD7 E5               [11] 2100 	push	hl
      000BD8 21 10 00         [10] 2101 	ld	hl, #0x0010
      000BDB 39               [11] 2102 	add	hl, sp
      000BDC EB               [ 4] 2103 	ex	de,hl
      000BDD E1               [10] 2104 	pop	hl
      000BDE D5               [11] 2105 	push	de
      000BDF CDr00r00         [17] 2106 	call	_generateSprite
      000BE2 F1               [10] 2107 	pop	af
      000BE3 F1               [10] 2108 	pop	af
      000BE4 F1               [10] 2109 	pop	af
      000BE5 11r1Fr00         [10] 2110 	ld	de, #_spritePuno
      000BE8 21 0A 00         [10] 2111 	ld	hl, #10
      000BEB 39               [11] 2112 	add	hl, sp
      000BEC 01 0A 00         [10] 2113 	ld	bc, #0x000a
      000BEF ED B0            [21] 2114 	ldir
                                   2115 ;main.c:57: spritePajaro = generateSprite(3, 1, spritePajaro_inc_size, spritePajaro_inc);
      000BF1 21r00r00         [10] 2116 	ld	hl, #_spritePajaro_inc
      000BF4 E5               [11] 2117 	push	hl
      000BF5 21 80 01         [10] 2118 	ld	hl, #0x0180
      000BF8 E5               [11] 2119 	push	hl
      000BF9 2E 01            [ 7] 2120 	ld	l, #0x01
                                   2121 ;	spillPairReg hl
                                   2122 ;	spillPairReg hl
      000BFB 3E 03            [ 7] 2123 	ld	a, #0x03
      000BFD E5               [11] 2124 	push	hl
      000BFE 21 1A 00         [10] 2125 	ld	hl, #0x001a
      000C01 39               [11] 2126 	add	hl, sp
      000C02 EB               [ 4] 2127 	ex	de,hl
      000C03 E1               [10] 2128 	pop	hl
      000C04 D5               [11] 2129 	push	de
      000C05 CDr00r00         [17] 2130 	call	_generateSprite
      000C08 F1               [10] 2131 	pop	af
      000C09 F1               [10] 2132 	pop	af
      000C0A F1               [10] 2133 	pop	af
      000C0B 11r15r00         [10] 2134 	ld	de, #_spritePajaro
      000C0E 21 14 00         [10] 2135 	ld	hl, #20
      000C11 39               [11] 2136 	add	hl, sp
      000C12 01 0A 00         [10] 2137 	ld	bc, #0x000a
      000C15 ED B0            [21] 2138 	ldir
                                   2139 ;main.c:58: inicializaPajaros();
      000C17 CDrBCr0A         [17] 2140 	call	_inicializaPajaros
                                   2141 ;main.c:63: SMS_loadTiles(tiles_de_prueba2_inc, 0, tiles_de_prueba2_inc_size);
      000C1A 21 A0 00         [10] 2142 	ld	hl, #0x00a0
      000C1D E5               [11] 2143 	push	hl
      000C1E 11r00r00         [10] 2144 	ld	de, #_tiles_de_prueba2_inc
      000C21 21 00 40         [10] 2145 	ld	hl, #0x4000
      000C24 CDr00r00         [17] 2146 	call	_SMS_VRAMmemcpy
                                   2147 ;main.c:64: SMS_loadTileMap(0, 0, tilemap_de_prueba2_inc, tilemap_de_prueba2_inc_size);
      000C27 21 80 07         [10] 2148 	ld	hl, #0x0780
      000C2A E5               [11] 2149 	push	hl
      000C2B 11r00r00         [10] 2150 	ld	de, #_tilemap_de_prueba2_inc
      000C2E 21 00 78         [10] 2151 	ld	hl, #0x7800
      000C31 CDr00r00         [17] 2152 	call	_SMS_VRAMmemcpy
                                   2153 ;main.c:65: SMS_loadBGPalette(paleta_de_prueba2_inc);
      000C34 21r00r00         [10] 2154 	ld	hl, #_paleta_de_prueba2_inc
      000C37 CDr00r00         [17] 2155 	call	_SMS_loadBGPalette
                                   2156 ;main.c:66: SMS_setSpritePaletteColor(0,0);
                                   2157 ;	spillPairReg hl
                                   2158 ;	spillPairReg hl
      000C3A AF               [ 4] 2159 	xor	a, a
      000C3B 6F               [ 4] 2160 	ld	l, a
      000C3C CDr00r00         [17] 2161 	call	_SMS_setSpritePaletteColor
                                   2162 ;main.c:67: }
      000C3F DD F9            [10] 2163 	ld	sp, ix
      000C41 DD E1            [14] 2164 	pop	ix
      000C43 C9               [10] 2165 	ret
                                   2166 ;main.c:69: void dibujaPajaros()
                                   2167 ;	---------------------------------
                                   2168 ; Function dibujaPajaros
                                   2169 ; ---------------------------------
      000C44                       2170 _dibujaPajaros::
      000C44 DD E5            [15] 2171 	push	ix
      000C46 DD 21 00 00      [14] 2172 	ld	ix,#0
      000C4A DD 39            [15] 2173 	add	ix,sp
      000C4C 21 F5 FF         [10] 2174 	ld	hl, #-11
      000C4F 39               [11] 2175 	add	hl, sp
      000C50 F9               [ 6] 2176 	ld	sp, hl
                                   2177 ;main.c:72: for (i = 0; i < NUM_PAJAROS; i++)
      000C51 DD 36 FE 00      [19] 2178 	ld	-2 (ix), #0x00
      000C55                       2179 00117$:
                                   2180 ;main.c:74: T_entidad *p = &pajaros[i];
      000C55 DD 7E FE         [19] 2181 	ld	a, -2 (ix)
      000C58 DD 77 F9         [19] 2182 	ld	-7 (ix), a
      000C5B DD 36 FA 00      [19] 2183 	ld	-6 (ix), #0x00
      000C5F 6F               [ 4] 2184 	ld	l, a
      000C60 26 00            [ 7] 2185 	ld	h, #0x00
      000C62 29               [11] 2186 	add	hl, hl
      000C63 29               [11] 2187 	add	hl, hl
      000C64 29               [11] 2188 	add	hl, hl
      000C65 11r06r03         [10] 2189 	ld	de, #_pajaros
      000C68 19               [11] 2190 	add	hl, de
                                   2191 ;main.c:75: p->x++;
      000C69 DD 75 FB         [19] 2192 	ld	-5 (ix), l
      000C6C DD 74 FC         [19] 2193 	ld	-4 (ix), h
      000C6F 7E               [ 7] 2194 	ld	a, (hl)
      000C70 3C               [ 4] 2195 	inc	a
      000C71 DD 6E FB         [19] 2196 	ld	l, -5 (ix)
      000C74 DD 66 FC         [19] 2197 	ld	h, -4 (ix)
      000C77 77               [ 7] 2198 	ld	(hl), a
                                   2199 ;main.c:76: p->lastChangeFrame++;
      000C78 DD 7E FB         [19] 2200 	ld	a, -5 (ix)
      000C7B C6 03            [ 7] 2201 	add	a, #0x03
      000C7D DD 77 F5         [19] 2202 	ld	-11 (ix), a
      000C80 DD 7E FC         [19] 2203 	ld	a, -4 (ix)
      000C83 CE 00            [ 7] 2204 	adc	a, #0x00
      000C85 DD 77 F6         [19] 2205 	ld	-10 (ix), a
      000C88 E1               [10] 2206 	pop	hl
      000C89 E5               [11] 2207 	push	hl
      000C8A 7E               [ 7] 2208 	ld	a, (hl)
      000C8B 3C               [ 4] 2209 	inc	a
      000C8C E1               [10] 2210 	pop	hl
      000C8D E5               [11] 2211 	push	hl
      000C8E 77               [ 7] 2212 	ld	(hl), a
                                   2213 ;main.c:77: if (p->lastChangeFrame == 20)
      000C8F D6 14            [ 7] 2214 	sub	a, #0x14
      000C91 C2r2Dr0D         [10] 2215 	jp	NZ,00106$
                                   2216 ;main.c:79: p->frame++;
      000C94 DD 7E FB         [19] 2217 	ld	a, -5 (ix)
      000C97 C6 02            [ 7] 2218 	add	a, #0x02
      000C99 DD 77 F7         [19] 2219 	ld	-9 (ix), a
      000C9C DD 7E FC         [19] 2220 	ld	a, -4 (ix)
      000C9F CE 00            [ 7] 2221 	adc	a, #0x00
      000CA1 DD 77 F8         [19] 2222 	ld	-8 (ix), a
      000CA4 DD 6E F7         [19] 2223 	ld	l, -9 (ix)
      000CA7 DD 66 F8         [19] 2224 	ld	h, -8 (ix)
      000CAA 4E               [ 7] 2225 	ld	c, (hl)
      000CAB 0C               [ 4] 2226 	inc	c
      000CAC D1               [10] 2227 	pop	de
      000CAD E1               [10] 2228 	pop	hl
      000CAE E5               [11] 2229 	push	hl
      000CAF D5               [11] 2230 	push	de
      000CB0 71               [ 7] 2231 	ld	(hl), c
                                   2232 ;main.c:80: if (p->frame > 1)
      000CB1 3E 01            [ 7] 2233 	ld	a, #0x01
      000CB3 91               [ 4] 2234 	sub	a, c
      000CB4 30 06            [12] 2235 	jr	NC, 00102$
                                   2236 ;main.c:81: p->frame = 0;
      000CB6 C1               [10] 2237 	pop	bc
      000CB7 E1               [10] 2238 	pop	hl
      000CB8 E5               [11] 2239 	push	hl
      000CB9 C5               [11] 2240 	push	bc
      000CBA 36 00            [10] 2241 	ld	(hl), #0x00
      000CBC                       2242 00102$:
                                   2243 ;main.c:82: p->lastChangeFrame = 0;
      000CBC E1               [10] 2244 	pop	hl
      000CBD 36 00            [10] 2245 	ld	(hl), #0x00
      000CBF E5               [11] 2246 	push	hl
                                   2247 ;main.c:83: int frame = spritePajaro.tamano*p->frame + spritePajaro.beginVRAM;
      000CC0 21r17r00         [10] 2248 	ld	hl, #_spritePajaro + 2
      000CC3 5E               [ 7] 2249 	ld	e, (hl)
      000CC4 DD 6E F7         [19] 2250 	ld	l, -9 (ix)
      000CC7 DD 66 F8         [19] 2251 	ld	h, -8 (ix)
      000CCA 66               [ 7] 2252 	ld	h, (hl)
                                   2253 ;	spillPairReg hl
      000CCB 2E 00            [ 7] 2254 	ld	l, #0x00
      000CCD 55               [ 4] 2255 	ld	d, l
      000CCE 06 08            [ 7] 2256 	ld	b, #0x08
      000CD0                       2257 00189$:
      000CD0 29               [11] 2258 	add	hl, hl
      000CD1 30 01            [12] 2259 	jr	NC, 00190$
      000CD3 19               [11] 2260 	add	hl, de
      000CD4                       2261 00190$:
      000CD4 10 FA            [13] 2262 	djnz	00189$
      000CD6 4D               [ 4] 2263 	ld	c, l
      000CD7 3Ar19r00         [13] 2264 	ld	a, (#_spritePajaro + 4)
      000CDA 81               [ 4] 2265 	add	a, c
      000CDB DD 77 FD         [19] 2266 	ld	-3 (ix), a
                                   2267 ;main.c:84: for(j=0;j<spritePajaro.alto;j++) {
      000CDE DD 36 FF 00      [19] 2268 	ld	-1 (ix), #0x00
      000CE2                       2269 00115$:
      000CE2 21r15r00         [10] 2270 	ld	hl, #_spritePajaro
      000CE5 DD 7E FF         [19] 2271 	ld	a,-1 (ix)
      000CE8 96               [ 7] 2272 	sub	a,(hl)
      000CE9 30 42            [12] 2273 	jr	NC, 00106$
                                   2274 ;main.c:85: unsigned char desplazado = (j<<2);
      000CEB DD 7E FF         [19] 2275 	ld	a, -1 (ix)
      000CEE 87               [ 4] 2276 	add	a, a
      000CEF 87               [ 4] 2277 	add	a, a
                                   2278 ;main.c:86: unsigned char jCalculated = desplazado + frame, y = p->y+(desplazado<<2);
      000CF0 DD 86 FD         [19] 2279 	add	a, -3 (ix)
      000CF3 5F               [ 4] 2280 	ld	e, a
                                   2281 ;main.c:87: for(i2=0;i2<spritePajaro.ancho;i2++) {
      000CF4 16 00            [ 7] 2282 	ld	d, #0x00
      000CF6                       2283 00112$:
      000CF6 21r16r00         [10] 2284 	ld	hl, #_spritePajaro + 1
      000CF9 4E               [ 7] 2285 	ld	c, (hl)
      000CFA 7A               [ 4] 2286 	ld	a, d
      000CFB 91               [ 4] 2287 	sub	a, c
      000CFC 30 2A            [12] 2288 	jr	NC, 00116$
                                   2289 ;main.c:88: SpriteTableXN2[(i2+i*3)*2+1] = jCalculated + (i2<<1);
      000CFE 4A               [ 4] 2290 	ld	c, d
      000CFF 06 00            [ 7] 2291 	ld	b, #0x00
      000D01 D5               [11] 2292 	push	de
      000D02 DD 5E F9         [19] 2293 	ld	e, -7 (ix)
      000D05 DD 56 FA         [19] 2294 	ld	d, -6 (ix)
      000D08 6B               [ 4] 2295 	ld	l, e
      000D09 62               [ 4] 2296 	ld	h, d
      000D0A 29               [11] 2297 	add	hl, hl
      000D0B 19               [11] 2298 	add	hl, de
      000D0C D1               [10] 2299 	pop	de
      000D0D 09               [11] 2300 	add	hl, bc
      000D0E 29               [11] 2301 	add	hl, hl
      000D0F 23               [ 6] 2302 	inc	hl
      000D10 4D               [ 4] 2303 	ld	c, l
      000D11 44               [ 4] 2304 	ld	b, h
      000D12 79               [ 4] 2305 	ld	a, c
      000D13 FD 21r02r03      [14] 2306 	ld	iy, #_SpriteTableXN2
      000D17 FD 86 00         [19] 2307 	add	a, 0 (iy)
      000D1A 4F               [ 4] 2308 	ld	c, a
      000D1B 78               [ 4] 2309 	ld	a, b
      000D1C FD 8E 01         [19] 2310 	adc	a, 1 (iy)
      000D1F 47               [ 4] 2311 	ld	b, a
      000D20 7A               [ 4] 2312 	ld	a, d
      000D21 87               [ 4] 2313 	add	a, a
      000D22 6B               [ 4] 2314 	ld	l, e
                                   2315 ;	spillPairReg hl
                                   2316 ;	spillPairReg hl
      000D23 85               [ 4] 2317 	add	a, l
      000D24 02               [ 7] 2318 	ld	(bc), a
                                   2319 ;main.c:87: for(i2=0;i2<spritePajaro.ancho;i2++) {
      000D25 14               [ 4] 2320 	inc	d
      000D26 18 CE            [12] 2321 	jr	00112$
      000D28                       2322 00116$:
                                   2323 ;main.c:84: for(j=0;j<spritePajaro.alto;j++) {
      000D28 DD 34 FF         [23] 2324 	inc	-1 (ix)
      000D2B 18 B5            [12] 2325 	jr	00115$
      000D2D                       2326 00106$:
                                   2327 ;main.c:92: end = p->len;
      000D2D DD 4E FB         [19] 2328 	ld	c, -5 (ix)
      000D30 DD 46 FC         [19] 2329 	ld	b, -4 (ix)
      000D33 21 07 00         [10] 2330 	ld	hl, #7
      000D36 09               [11] 2331 	add	hl, bc
      000D37 4E               [ 7] 2332 	ld	c, (hl)
                                   2333 ;main.c:93: i2 = p->initSprite << 1;
      000D38 DD 5E FB         [19] 2334 	ld	e, -5 (ix)
      000D3B DD 56 FC         [19] 2335 	ld	d, -4 (ix)
      000D3E 21 06 00         [10] 2336 	ld	hl, #6
      000D41 19               [11] 2337 	add	hl, de
      000D42 7E               [ 7] 2338 	ld	a, (hl)
      000D43 87               [ 4] 2339 	add	a, a
      000D44 47               [ 4] 2340 	ld	b, a
                                   2341 ;main.c:94: while(i2<end) {
      000D45                       2342 00107$:
                                   2343 ;main.c:95: SpriteTableXN2[i2] += 1;
      000D45 78               [ 4] 2344 	ld	a,b
      000D46 B9               [ 4] 2345 	cp	a,c
      000D47 30 11            [12] 2346 	jr	NC, 00118$
      000D49 21r02r03         [10] 2347 	ld	hl, #_SpriteTableXN2
      000D4C 86               [ 7] 2348 	add	a, (hl)
      000D4D 23               [ 6] 2349 	inc	hl
      000D4E 5F               [ 4] 2350 	ld	e, a
      000D4F 3E 00            [ 7] 2351 	ld	a, #0x00
      000D51 8E               [ 7] 2352 	adc	a, (hl)
      000D52 57               [ 4] 2353 	ld	d, a
      000D53 1A               [ 7] 2354 	ld	a, (de)
      000D54 3C               [ 4] 2355 	inc	a
      000D55 12               [ 7] 2356 	ld	(de), a
                                   2357 ;main.c:96: i2 +=2;
      000D56 04               [ 4] 2358 	inc	b
      000D57 04               [ 4] 2359 	inc	b
      000D58 18 EB            [12] 2360 	jr	00107$
      000D5A                       2361 00118$:
                                   2362 ;main.c:72: for (i = 0; i < NUM_PAJAROS; i++)
      000D5A DD 34 FE         [23] 2363 	inc	-2 (ix)
      000D5D DD 7E FE         [19] 2364 	ld	a, -2 (ix)
      000D60 D6 13            [ 7] 2365 	sub	a, #0x13
      000D62 DAr55r0C         [10] 2366 	jp	C, 00117$
                                   2367 ;main.c:101: }
      000D65 DD F9            [10] 2368 	ld	sp, ix
      000D67 DD E1            [14] 2369 	pop	ix
      000D69 C9               [10] 2370 	ret
                                   2371 ;main.c:103: void playMusic() {
                                   2372 ;	---------------------------------
                                   2373 ; Function playMusic
                                   2374 ; ---------------------------------
      000D6A                       2375 _playMusic::
                                   2376 ;main.c:104: PSGFrame();
      000D6A CDr00r00         [17] 2377 	call	_PSGFrame
                                   2378 ;main.c:105: PSGSFXFrame();
                                   2379 ;main.c:106: }
      000D6D C3r00r00         [10] 2380 	jp	_PSGSFXFrame
                                   2381 ;main.c:108: void disableSprites() {
                                   2382 ;	---------------------------------
                                   2383 ; Function disableSprites
                                   2384 ; ---------------------------------
      000D70                       2385 _disableSprites::
                                   2386 ;main.c:111: while (i < 64) {
      000D70 0E 00            [ 7] 2387 	ld	c, #0x00
      000D72                       2388 00101$:
      000D72 79               [ 4] 2389 	ld	a, c
      000D73 D6 40            [ 7] 2390 	sub	a, #0x40
      000D75 30 10            [12] 2391 	jr	NC, 00103$
                                   2392 ;main.c:112: SMS_updateSpritePosition(i,10,240); 
      000D77 41               [ 4] 2393 	ld	b, c
      000D78 C5               [11] 2394 	push	bc
      000D79 3E F0            [ 7] 2395 	ld	a, #0xf0
      000D7B F5               [11] 2396 	push	af
      000D7C 33               [ 6] 2397 	inc	sp
      000D7D 2E 0A            [ 7] 2398 	ld	l, #0x0a
                                   2399 ;	spillPairReg hl
                                   2400 ;	spillPairReg hl
      000D7F 78               [ 4] 2401 	ld	a, b
      000D80 CDr00r00         [17] 2402 	call	_SMS_updateSpritePosition
      000D83 C1               [10] 2403 	pop	bc
                                   2404 ;main.c:113: i++;
      000D84 0C               [ 4] 2405 	inc	c
      000D85 18 EB            [12] 2406 	jr	00101$
      000D87                       2407 00103$:
                                   2408 ;main.c:115: numSprites = 0;
      000D87 21 00 00         [10] 2409 	ld	hl, #0x0000
      000D8A 22r9Er03         [16] 2410 	ld	(_numSprites), hl
                                   2411 ;main.c:116: }
      000D8D C9               [10] 2412 	ret
                                   2413 ;main.c:118: void main(void)
                                   2414 ;	---------------------------------
                                   2415 ; Function main
                                   2416 ; ---------------------------------
      000D8E                       2417 _main::
      000D8E DD E5            [15] 2418 	push	ix
      000D90 DD 21 00 00      [14] 2419 	ld	ix,#0
      000D94 DD 39            [15] 2420 	add	ix,sp
      000D96 F5               [11] 2421 	push	af
                                   2422 ;main.c:123: SMS_VRAMmemsetW(0, 0x0000, 16384);
      000D97 DD 36 FF 00      [19] 2423 	ld	-1 (ix), #0x00
      000D9B DD 36 FE 00      [19] 2424 	ld	-2 (ix), #0x00
      000D9F 21 00 40         [10] 2425 	ld	hl, #0x4000
      000DA2 E5               [11] 2426 	push	hl
      000DA3 11 00 00         [10] 2427 	ld	de, #0x0000
      000DA6 65               [ 4] 2428 	ld	h, l
      000DA7 CDr00r00         [17] 2429 	call	_SMS_VRAMmemsetW
                                   2430 ;main.c:133: printf("Hello, World! [1/3]");
      000DAA 21r61r0E         [10] 2431 	ld	hl, #___str_0
      000DAD E5               [11] 2432 	push	hl
      000DAE CDr00r00         [17] 2433 	call	_printf
      000DB1 F1               [10] 2434 	pop	af
                                   2435 ;main.c:138: SMS_displayOn();
      000DB2 21 40 01         [10] 2436 	ld	hl, #0x0140
      000DB5 CDr00r00         [17] 2437 	call	_SMS_VDPturnOnFeature
                                   2438 ;main.c:139: SMS_setBGScrollX(scroll_x);
      000DB8 2E 00            [ 7] 2439 	ld	l, #0x00
                                   2440 ;	spillPairReg hl
                                   2441 ;	spillPairReg hl
      000DBA CDr00r00         [17] 2442 	call	_SMS_setBGScrollX
                                   2443 ;main.c:140: SMS_setBGScrollY(scroll_y);
      000DBD 2E 00            [ 7] 2444 	ld	l, #0x00
                                   2445 ;	spillPairReg hl
                                   2446 ;	spillPairReg hl
      000DBF CDr00r00         [17] 2447 	call	_SMS_setBGScrollY
                                   2448 ;main.c:141: SMS_init();
      000DC2 CDr00r00         [17] 2449 	call	_SMS_init
                                   2450 ;main.c:142: initSpritesVariables();
      000DC5 CDrDDr03         [17] 2451 	call	_initSpritesVariables
                                   2452 ;main.c:143: loadGrapVRAM();
      000DC8 CDr7Fr0B         [17] 2453 	call	_loadGrapVRAM
                                   2454 ;main.c:149: PSGPlay(special_psg);
      000DCB 21r00r00         [10] 2455 	ld	hl, #_special_psg
      000DCE CDr00r00         [17] 2456 	call	_PSGPlay
                                   2457 ;main.c:150: SMS_VDPturnOnFeature(VDPFEATURE_LEFTCOLBLANK);
      000DD1 21 20 00         [10] 2458 	ld	hl, #0x0020
      000DD4 CDr00r00         [17] 2459 	call	_SMS_VDPturnOnFeature
                                   2460 ;main.c:154: SMS_setFrameInterruptHandler(playMusic);
      000DD7 21r6Ar0D         [10] 2461 	ld	hl, #_playMusic
      000DDA CDr00r00         [17] 2462 	call	_SMS_setFrameInterruptHandler
      000DDD                       2463 00115$:
                                   2464 ;main.c:159: if (SMS_queryPauseRequested())
      000DDD CDr00r00         [17] 2465 	call	_SMS_queryPauseRequested
      000DE0 CB 47            [ 8] 2466 	bit	0,a
      000DE2 28 1E            [12] 2467 	jr	Z, 00105$
                                   2468 ;main.c:161: PSGPlay(emeraldhill_psg);
      000DE4 21r00r00         [10] 2469 	ld	hl, #_emeraldhill_psg
      000DE7 CDr00r00         [17] 2470 	call	_PSGPlay
                                   2471 ;main.c:162: SMS_resetPauseRequest();
      000DEA CDr00r00         [17] 2472 	call	_SMS_resetPauseRequest
                                   2473 ;main.c:163: while (!SMS_queryPauseRequested())
      000DED                       2474 00101$:
      000DED CDr00r00         [17] 2475 	call	_SMS_queryPauseRequested
      000DF0 CB 47            [ 8] 2476 	bit	0,a
      000DF2 20 05            [12] 2477 	jr	NZ, 00103$
                                   2478 ;main.c:165: SMS_waitForVBlank();
      000DF4 CDr00r00         [17] 2479 	call	_SMS_waitForVBlank
      000DF7 18 F4            [12] 2480 	jr	00101$
      000DF9                       2481 00103$:
                                   2482 ;main.c:169: SMS_resetPauseRequest();
      000DF9 CDr00r00         [17] 2483 	call	_SMS_resetPauseRequest
                                   2484 ;main.c:170: PSGPlay(titulo_psg);
      000DFC 21r00r00         [10] 2485 	ld	hl, #_titulo_psg
      000DFF CDr00r00         [17] 2486 	call	_PSGPlay
      000E02                       2487 00105$:
                                   2488 ;main.c:174: int keys = SMS_getKeysHeld();
      000E02 CDr00r00         [17] 2489 	call	_SMS_getKeysHeld
      000E05 EB               [ 4] 2490 	ex	de, hl
                                   2491 ;main.c:175: if(keys & PORT_A_KEY_2)
      000E06 CB 6D            [ 8] 2492 	bit	5, l
      000E08 28 04            [12] 2493 	jr	Z, 00107$
                                   2494 ;main.c:176: keys = keys  ^ PORT_A_KEY_2;
      000E0A 7D               [ 4] 2495 	ld	a, l
      000E0B EE 20            [ 7] 2496 	xor	a, #0x20
      000E0D 6F               [ 4] 2497 	ld	l, a
                                   2498 ;	spillPairReg hl
                                   2499 ;	spillPairReg hl
      000E0E                       2500 00107$:
                                   2501 ;main.c:177: if(keys & PORT_A_KEY_1)
      000E0E CB 65            [ 8] 2502 	bit	4, l
      000E10 28 04            [12] 2503 	jr	Z, 00109$
                                   2504 ;main.c:178: keys = keys  ^ PORT_A_KEY_1;
      000E12 7D               [ 4] 2505 	ld	a, l
      000E13 EE 10            [ 7] 2506 	xor	a, #0x10
      000E15 6F               [ 4] 2507 	ld	l, a
                                   2508 ;	spillPairReg hl
                                   2509 ;	spillPairReg hl
      000E16                       2510 00109$:
                                   2511 ;main.c:180: keys = keys | (SMS_getKeysPressed() & (PORT_A_KEY_2 | PORT_A_KEY_1));
      000E16 E5               [11] 2512 	push	hl
      000E17 CDr00r00         [17] 2513 	call	_SMS_getKeysPressed
      000E1A E1               [10] 2514 	pop	hl
      000E1B 7B               [ 4] 2515 	ld	a, e
      000E1C E6 30            [ 7] 2516 	and	a, #0x30
      000E1E B5               [ 4] 2517 	or	a, l
      000E1F 6F               [ 4] 2518 	ld	l, a
                                   2519 ;	spillPairReg hl
                                   2520 ;	spillPairReg hl
                                   2521 ;main.c:183: moveAlex(keys);
      000E20 CDr85r0A         [17] 2522 	call	_moveAlex
                                   2523 ;main.c:184: draw_entidad(&alex, &spriteAlex);
      000E23 11r0Br00         [10] 2524 	ld	de, #_spriteAlex
      000E26 21r03r00         [10] 2525 	ld	hl, #_alex
      000E29 CDr40r04         [17] 2526 	call	_draw_entidad
                                   2527 ;main.c:185: dibujaPajaros();
      000E2C CDr44r0C         [17] 2528 	call	_dibujaPajaros
                                   2529 ;main.c:190: SMS_waitForVBlank();
      000E2F CDr00r00         [17] 2530 	call	_SMS_waitForVBlank
                                   2531 ;main.c:193: SMS_displayOff();
      000E32 21 40 01         [10] 2532 	ld	hl, #0x0140
      000E35 CDr00r00         [17] 2533 	call	_SMS_VDPturnOffFeature
                                   2534 ;main.c:196: copySpritestoSAT();
      000E38 CDr0Cr04         [17] 2535 	call	_copySpritestoSAT
                                   2536 ;main.c:203: if (scroll_y % 2 == 0)
      000E3B DD CB FF 46      [20] 2537 	bit	0, -1 (ix)
      000E3F 20 03            [12] 2538 	jr	NZ, 00111$
                                   2539 ;main.c:204: scroll_x += 1;
      000E41 DD 34 FE         [23] 2540 	inc	-2 (ix)
      000E44                       2541 00111$:
                                   2542 ;main.c:205: scroll_y++;
      000E44 DD 34 FF         [23] 2543 	inc	-1 (ix)
                                   2544 ;main.c:206: if (scroll_y == 224)
      000E47 DD 7E FF         [19] 2545 	ld	a, -1 (ix)
      000E4A D6 E0            [ 7] 2546 	sub	a, #0xe0
      000E4C 20 04            [12] 2547 	jr	NZ, 00113$
                                   2548 ;main.c:207: scroll_y = 0;
      000E4E DD 36 FF 00      [19] 2549 	ld	-1 (ix), #0x00
      000E52                       2550 00113$:
                                   2551 ;main.c:209: SMS_setBGScrollX(scroll_x);
      000E52 DD 6E FE         [19] 2552 	ld	l, -2 (ix)
                                   2553 ;	spillPairReg hl
                                   2554 ;	spillPairReg hl
      000E55 CDr00r00         [17] 2555 	call	_SMS_setBGScrollX
                                   2556 ;main.c:211: SMS_displayOn();
      000E58 21 40 01         [10] 2557 	ld	hl, #0x0140
      000E5B CDr00r00         [17] 2558 	call	_SMS_VDPturnOnFeature
                                   2559 ;main.c:213: }
      000E5E C3rDDr0D         [10] 2560 	jp	00115$
      000E61                       2561 ___str_0:
      000E61 48 65 6C 6C 6F 2C 20  2562 	.ascii "Hello, World! [1/3]"
             57 6F 72 6C 64 21 20
             5B 31 2F 33 5D
      000E74 00                    2563 	.db 0x00
                                   2564 	.area _CODE
      000E75                       2565 __str_1:
      000E75 53 45 47 41           2566 	.ascii "SEGA"
      000E79 00                    2567 	.db 0x00
      000E7A                       2568 __str_2:
      000E7A 62 61 73 69 63 20 65  2569 	.ascii "basic example"
             78 61 6D 70 6C 65
      000E87 00                    2570 	.db 0x00
      000E88                       2571 __str_3:
      000E88 41 20 73 69 6D 70 6C  2572 	.ascii "A simple example"
             65 20 65 78 61 6D 70
             6C 65
      000E98 00                    2573 	.db 0x00
                                   2574 	.area _INITIALIZER
      000000                       2575 __xinit__nextVRAMsprites:
      000000 00 01                 2576 	.dw #0x0100
      000002                       2577 __xinit__maxSalto:
      000002 FF                    2578 	.db #0xff	; 255
      000003                       2579 __xinit__alex:
      000003 1E                    2580 	.db #0x1e	; 30
      000004 A0                    2581 	.db #0xa0	; 160
      000005 00                    2582 	.db #0x00	; 0
      000006 00                    2583 	.db #0x00	; 0
      000007 00                    2584 	.db #0x00	; 0
      000008 00                    2585 	.db #0x00	; 0
      000009 FF                    2586 	.db #0xff	; 255
      00000A 00                    2587 	.db #0x00	; 0
      00000B                       2588 __xinit__spriteAlex:
      00000B 02                    2589 	.db #0x02	; 2
      00000C 02                    2590 	.db #0x02	; 2
      00000D 08                    2591 	.db #0x08	; 8
      00000E 00                    2592 	.db #0x00	; 0
      00000F 00 00                 2593 	.dw #0x0000
      000011 00                    2594 	.db #0x00	; 0
      000012 00 00                 2595 	.dw #0x0000
      000014 00                    2596 	.db #0x00	; 0
      000015                       2597 __xinit__spritePajaro:
      000015 02                    2598 	.db #0x02	; 2
      000016 02                    2599 	.db #0x02	; 2
      000017 08                    2600 	.db #0x08	; 8
      000018 00                    2601 	.db #0x00	; 0
      000019 00 00                 2602 	.dw #0x0000
      00001B 00                    2603 	.db #0x00	; 0
      00001C 00 00                 2604 	.dw #0x0000
      00001E 00                    2605 	.db #0x00	; 0
      00001F                       2606 __xinit__spritePuno:
      00001F 02                    2607 	.db #0x02	; 2
      000020 02                    2608 	.db #0x02	; 2
      000021 08                    2609 	.db #0x08	; 8
      000022 00                    2610 	.db #0x00	; 0
      000023 00 00                 2611 	.dw #0x0000
      000025 00                    2612 	.db #0x00	; 0
      000026 00 00                 2613 	.dw #0x0000
      000028 00                    2614 	.db #0x00	; 0
                                   2615 	.area _CABS (ABS)
      007FF0                       2616 	.org 0x7FF0
      007FF0                       2617 ___SMS__SEGA_signature:
      007FF0 54                    2618 	.db #0x54	; 84	'T'
      007FF1 4D                    2619 	.db #0x4d	; 77	'M'
      007FF2 52                    2620 	.db #0x52	; 82	'R'
      007FF3 20                    2621 	.db #0x20	; 32
      007FF4 53                    2622 	.db #0x53	; 83	'S'
      007FF5 45                    2623 	.db #0x45	; 69	'E'
      007FF6 47                    2624 	.db #0x47	; 71	'G'
      007FF7 41                    2625 	.db #0x41	; 65	'A'
      007FF8 FF                    2626 	.db #0xff	; 255
      007FF9 FF                    2627 	.db #0xff	; 255
      007FFA FF                    2628 	.db #0xff	; 255
      007FFB FF                    2629 	.db #0xff	; 255
      007FFC 99                    2630 	.db #0x99	; 153
      007FFD 09                    2631 	.db #0x09	; 9
      007FFE 00                    2632 	.db #0x00	; 0
      007FFF 4C                    2633 	.db #0x4c	; 76	'L'
      007FDB                       2634 	.org 0x7FDB
      007FDB                       2635 ___SMS__SDSC_author:
      007FDB 53 45 47 41           2636 	.ascii "SEGA"
      007FDF 00                    2637 	.db 0x00
      007FCD                       2638 	.org 0x7FCD
      007FCD                       2639 ___SMS__SDSC_name:
      007FCD 62 61 73 69 63 20 65  2640 	.ascii "basic example"
             78 61 6D 70 6C 65
      007FDA 00                    2641 	.db 0x00
      007FBC                       2642 	.org 0x7FBC
      007FBC                       2643 ___SMS__SDSC_descr:
      007FBC 41 20 73 69 6D 70 6C  2644 	.ascii "A simple example"
             65 20 65 78 61 6D 70
             6C 65
      007FCC 00                    2645 	.db 0x00
      007FE0                       2646 	.org 0x7FE0
      007FE0                       2647 ___SMS__SDSC_signature:
      007FE0 53                    2648 	.db #0x53	; 83	'S'
      007FE1 44                    2649 	.db #0x44	; 68	'D'
      007FE2 53                    2650 	.db #0x53	; 83	'S'
      007FE3 43                    2651 	.db #0x43	; 67	'C'
      007FE4 01                    2652 	.db #0x01	; 1
      007FE5 00                    2653 	.db #0x00	; 0
      007FE6 00                    2654 	.db #0x00	; 0
      007FE7 00                    2655 	.db #0x00	; 0
      007FE8 00                    2656 	.db #0x00	; 0
      007FE9 00                    2657 	.db #0x00	; 0
      007FEA DB                    2658 	.db #0xdb	; 219
      007FEB 7F                    2659 	.db #0x7f	; 127
      007FEC CD                    2660 	.db #0xcd	; 205
      007FED 7F                    2661 	.db #0x7f	; 127
      007FEE BC                    2662 	.db #0xbc	; 188
      007FEF 7F                    2663 	.db #0x7f	; 127
