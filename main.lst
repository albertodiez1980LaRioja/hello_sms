                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14549 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___SMS__SDSC_signature
                                     12 	.globl ___SMS__SDSC_descr
                                     13 	.globl ___SMS__SDSC_name
                                     14 	.globl ___SMS__SDSC_author
                                     15 	.globl ___SMS__SEGA_signature
                                     16 	.globl _main
                                     17 	.globl _disableSprites
                                     18 	.globl _playMusic
                                     19 	.globl _dibujaPajaros
                                     20 	.globl _loadGrapVRAM
                                     21 	.globl _inicializaPajaros
                                     22 	.globl _moveAlex
                                     23 	.globl _drawAlex
                                     24 	.globl _moveAlexAire
                                     25 	.globl _moveAlexSuelo
                                     26 	.globl _canRight
                                     27 	.globl _canLeft
                                     28 	.globl _canDown
                                     29 	.globl _canUp
                                     30 	.globl _PSGSFXFrame
                                     31 	.globl _PSGFrame
                                     32 	.globl _PSGSFXPlay
                                     33 	.globl _PSGPlay
                                     34 	.globl _SMS_VRAMmemsetW
                                     35 	.globl _SMS_VRAMmemcpy
                                     36 	.globl _SMS_setFrameInterruptHandler
                                     37 	.globl _SMS_resetPauseRequest
                                     38 	.globl _SMS_queryPauseRequested
                                     39 	.globl _SMS_getKeysHeld
                                     40 	.globl _SMS_getKeysPressed
                                     41 	.globl _SMS_loadSpritePalette
                                     42 	.globl _SMS_loadBGPalette
                                     43 	.globl _SMS_setSpritePaletteColor
                                     44 	.globl _SMS_updateSpritePosition
                                     45 	.globl _SMS_addSprite_f
                                     46 	.globl _SMS_initSprites
                                     47 	.globl _SMS_waitForVBlank
                                     48 	.globl _SMS_setSpriteMode
                                     49 	.globl _SMS_setBGScrollY
                                     50 	.globl _SMS_setBGScrollX
                                     51 	.globl _SMS_VDPturnOffFeature
                                     52 	.globl _SMS_VDPturnOnFeature
                                     53 	.globl _SMS_init
                                     54 	.globl _copySpritestoSAT
                                     55 	.globl _addHardwareSprite
                                     56 	.globl _generateSpriteNoRAM
                                     57 	.globl _printf
                                     58 	.globl _spritePuno
                                     59 	.globl _spritePajaro
                                     60 	.globl _spriteAlex
                                     61 	.globl _alex
                                     62 	.globl _maxSalto
                                     63 	.globl _nextVRAMsprites
                                     64 	.globl _numSprites
                                     65 	.globl _pajaros
                                     66 	.globl _SMS_SRAM
                                     67 	.globl _SRAM_bank_to_be_mapped_on_slot2
                                     68 	.globl _ROM_bank_to_be_mapped_on_slot0
                                     69 	.globl _ROM_bank_to_be_mapped_on_slot1
                                     70 	.globl _ROM_bank_to_be_mapped_on_slot2
                                     71 	.globl _SpriteNextFree2
                                     72 	.globl _SpriteTableXN2
                                     73 	.globl _SpriteTableY2
                                     74 	.globl _hardwareSprites
                                     75 	.globl _generateSprite
                                     76 	.globl _initSpritesVariables
                                     77 	.globl _draw_entidad
                                     78 ;--------------------------------------------------------
                                     79 ; special function registers
                                     80 ;--------------------------------------------------------
                           0000BF    81 _VDPControlPort	=	0x00bf
                           0000BF    82 _VDPStatusPort	=	0x00bf
                           0000BE    83 _VDPDataPort	=	0x00be
                           00007E    84 _VDPVCounterPort	=	0x007e
                           00007F    85 _VDPHCounterPort	=	0x007f
                                     86 ;--------------------------------------------------------
                                     87 ; ram data
                                     88 ;--------------------------------------------------------
                                     89 	.area _DATA
      000000                         90 _hardwareSprites::
      000000                         91 	.ds 768
      000300                         92 _SpriteTableY2::
      000300                         93 	.ds 2
      000302                         94 _SpriteTableXN2::
      000302                         95 	.ds 2
      000304                         96 _SpriteNextFree2::
      000304                         97 	.ds 2
                           00FFFF    98 _ROM_bank_to_be_mapped_on_slot2	=	0xffff
                           00FFFE    99 _ROM_bank_to_be_mapped_on_slot1	=	0xfffe
                           00FFFD   100 _ROM_bank_to_be_mapped_on_slot0	=	0xfffd
                           00FFFC   101 _SRAM_bank_to_be_mapped_on_slot2	=	0xfffc
                           008000   102 _SMS_SRAM	=	0x8000
      000306                        103 _pajaros::
      000306                        104 	.ds 152
      00039E                        105 _numSprites::
      00039E                        106 	.ds 2
                                    107 ;--------------------------------------------------------
                                    108 ; ram data
                                    109 ;--------------------------------------------------------
                                    110 	.area _INITIALIZED
      000000                        111 _nextVRAMsprites::
      000000                        112 	.ds 2
      000002                        113 _maxSalto::
      000002                        114 	.ds 1
      000003                        115 _alex::
      000003                        116 	.ds 8
      00000B                        117 _spriteAlex::
      00000B                        118 	.ds 10
      000015                        119 _spritePajaro::
      000015                        120 	.ds 10
      00001F                        121 _spritePuno::
      00001F                        122 	.ds 10
                                    123 ;--------------------------------------------------------
                                    124 ; absolute external ram data
                                    125 ;--------------------------------------------------------
                                    126 	.area _DABS (ABS)
                                    127 ;--------------------------------------------------------
                                    128 ; global & static initialisations
                                    129 ;--------------------------------------------------------
                                    130 	.area _HOME
                                    131 	.area _GSINIT
                                    132 	.area _GSFINAL
                                    133 	.area _GSINIT
                                    134 ;--------------------------------------------------------
                                    135 ; Home
                                    136 ;--------------------------------------------------------
                                    137 	.area _HOME
                                    138 	.area _HOME
                                    139 ;--------------------------------------------------------
                                    140 ; code
                                    141 ;--------------------------------------------------------
                                    142 	.area _CODE
                                    143 ;./lib/./sprite.c:20: T_sprite generateSprite(unsigned char ancho, unsigned char alto, int tam,const unsigned char data[]) {
                                    144 ;	---------------------------------
                                    145 ; Function generateSprite
                                    146 ; ---------------------------------
      000000                        147 _generateSprite::
      000000 DD E5            [15]  148 	push	ix
      000002 DD 21 00 00      [14]  149 	ld	ix,#0
      000006 DD 39            [15]  150 	add	ix,sp
      000008 FD 21 F6 FF      [14]  151 	ld	iy, #-10
      00000C FD 39            [15]  152 	add	iy, sp
      00000E FD F9            [10]  153 	ld	sp, iy
      000010 5F               [ 4]  154 	ld	e, a
      000011 55               [ 4]  155 	ld	d, l
                                    156 ;./lib/./sprite.c:21: unsigned char tamano = alto*ancho*2;
      000012 D5               [11]  157 	push	de
      000013 62               [ 4]  158 	ld	h, d
                                    159 ;	spillPairReg hl
                                    160 ;	spillPairReg hl
      000014 2E 00            [ 7]  161 	ld	l, #0x00
      000016 55               [ 4]  162 	ld	d, l
      000017 06 08            [ 7]  163 	ld	b, #0x08
      000019                        164 00103$:
      000019 29               [11]  165 	add	hl, hl
      00001A 30 01            [12]  166 	jr	NC, 00104$
      00001C 19               [11]  167 	add	hl, de
      00001D                        168 00104$:
      00001D 10 FA            [13]  169 	djnz	00103$
      00001F D1               [10]  170 	pop	de
      000020 4D               [ 4]  171 	ld	c, l
      000021 CB 21            [ 8]  172 	sla	c
                                    173 ;./lib/./sprite.c:22: T_sprite sprite = {alto,ancho,tamano,tam/(tamano*32),nextVRAMsprites, 1,0};
      000023 DD 72 F6         [19]  174 	ld	-10 (ix), d
      000026 DD 73 F7         [19]  175 	ld	-9 (ix), e
      000029 DD 71 F8         [19]  176 	ld	-8 (ix), c
      00002C 69               [ 4]  177 	ld	l, c
                                    178 ;	spillPairReg hl
                                    179 ;	spillPairReg hl
      00002D 26 00            [ 7]  180 	ld	h, #0x00
                                    181 ;	spillPairReg hl
                                    182 ;	spillPairReg hl
      00002F 29               [11]  183 	add	hl, hl
      000030 29               [11]  184 	add	hl, hl
      000031 29               [11]  185 	add	hl, hl
      000032 29               [11]  186 	add	hl, hl
      000033 29               [11]  187 	add	hl, hl
      000034 C5               [11]  188 	push	bc
      000035 EB               [ 4]  189 	ex	de, hl
      000036 DD 6E 06         [19]  190 	ld	l, 6 (ix)
                                    191 ;	spillPairReg hl
                                    192 ;	spillPairReg hl
      000039 DD 66 07         [19]  193 	ld	h, 7 (ix)
                                    194 ;	spillPairReg hl
                                    195 ;	spillPairReg hl
      00003C CDr00r00         [17]  196 	call	__divsint
      00003F C1               [10]  197 	pop	bc
      000040 DD 73 F9         [19]  198 	ld	-7 (ix), e
      000043 3Ar00r00         [13]  199 	ld	a, (_nextVRAMsprites+0)
      000046 DD 77 FA         [19]  200 	ld	-6 (ix), a
      000049 3Ar01r00         [13]  201 	ld	a, (_nextVRAMsprites+1)
      00004C DD 77 FB         [19]  202 	ld	-5 (ix), a
      00004F DD 36 FC 01      [19]  203 	ld	-4 (ix), #0x01
      000053 AF               [ 4]  204 	xor	a, a
      000054 DD 77 FD         [19]  205 	ld	-3 (ix), a
      000057 DD 77 FE         [19]  206 	ld	-2 (ix), a
      00005A DD 36 FF 00      [19]  207 	ld	-1 (ix), #0x00
                                    208 ;./lib/./sprite.c:23: SMS_loadTiles(data,nextVRAMsprites,tam);
      00005E DD 5E 08         [19]  209 	ld	e, 8 (ix)
      000061 DD 56 09         [19]  210 	ld	d, 9 (ix)
      000064 2Ar00r00         [16]  211 	ld	hl, (_nextVRAMsprites)
      000067 29               [11]  212 	add	hl, hl
      000068 29               [11]  213 	add	hl, hl
      000069 29               [11]  214 	add	hl, hl
      00006A 29               [11]  215 	add	hl, hl
      00006B 29               [11]  216 	add	hl, hl
      00006C CB F4            [ 8]  217 	set	6, h
      00006E C5               [11]  218 	push	bc
      00006F E5               [11]  219 	push	hl
      000070 DD 6E 06         [19]  220 	ld	l, 6 (ix)
                                    221 ;	spillPairReg hl
                                    222 ;	spillPairReg hl
      000073 DD 66 07         [19]  223 	ld	h, 7 (ix)
                                    224 ;	spillPairReg hl
                                    225 ;	spillPairReg hl
      000076 E3               [19]  226 	ex	(sp), hl
      000077 CDr00r00         [17]  227 	call	_SMS_VRAMmemcpy
      00007A C1               [10]  228 	pop	bc
                                    229 ;./lib/./sprite.c:24: nextVRAMsprites = nextVRAMsprites + (tamano*sprite.numFrames);
      00007B DD 5E F9         [19]  230 	ld	e, -7 (ix)
      00007E 61               [ 4]  231 	ld	h, c
                                    232 ;	spillPairReg hl
                                    233 ;	spillPairReg hl
      00007F 2E 00            [ 7]  234 	ld	l, #0x00
      000081 55               [ 4]  235 	ld	d, l
      000082 06 08            [ 7]  236 	ld	b, #0x08
      000084                        237 00105$:
      000084 29               [11]  238 	add	hl, hl
      000085 30 01            [12]  239 	jr	NC, 00106$
      000087 19               [11]  240 	add	hl, de
      000088                        241 00106$:
      000088 10 FA            [13]  242 	djnz	00105$
      00008A EB               [ 4]  243 	ex	de, hl
      00008B 21r00r00         [10]  244 	ld	hl, #_nextVRAMsprites
      00008E 7E               [ 7]  245 	ld	a, (hl)
      00008F 83               [ 4]  246 	add	a, e
      000090 77               [ 7]  247 	ld	(hl), a
      000091 23               [ 6]  248 	inc	hl
      000092 7E               [ 7]  249 	ld	a, (hl)
      000093 8A               [ 4]  250 	adc	a, d
      000094 77               [ 7]  251 	ld	(hl), a
                                    252 ;./lib/./sprite.c:25: return sprite;
      000095 21 0E 00         [10]  253 	ld	hl, #14
      000098 39               [11]  254 	add	hl, sp
      000099 5E               [ 7]  255 	ld	e, (hl)
      00009A 23               [ 6]  256 	inc	hl
      00009B 56               [ 7]  257 	ld	d, (hl)
      00009C 21 00 00         [10]  258 	ld	hl, #0
      00009F 39               [11]  259 	add	hl, sp
      0000A0 01 0A 00         [10]  260 	ld	bc, #10
      0000A3 ED B0            [21]  261 	ldir
                                    262 ;./lib/./sprite.c:26: }
      0000A5 DD F9            [10]  263 	ld	sp, ix
      0000A7 DD E1            [14]  264 	pop	ix
      0000A9 C9               [10]  265 	ret
                                    266 ;./lib/./sprite.c:29: T_sprite generateSpriteNoRAM(unsigned char ancho, unsigned char alto, int tam,const unsigned char data[]) {
                                    267 ;	---------------------------------
                                    268 ; Function generateSpriteNoRAM
                                    269 ; ---------------------------------
      0000AA                        270 _generateSpriteNoRAM::
      0000AA DD E5            [15]  271 	push	ix
      0000AC DD 21 00 00      [14]  272 	ld	ix,#0
      0000B0 DD 39            [15]  273 	add	ix,sp
      0000B2 FD 21 F4 FF      [14]  274 	ld	iy, #-12
      0000B6 FD 39            [15]  275 	add	iy, sp
      0000B8 FD F9            [10]  276 	ld	sp, iy
      0000BA 5F               [ 4]  277 	ld	e, a
      0000BB 55               [ 4]  278 	ld	d, l
                                    279 ;./lib/./sprite.c:30: unsigned char tamano = alto*ancho*2;
      0000BC D5               [11]  280 	push	de
      0000BD 62               [ 4]  281 	ld	h, d
                                    282 ;	spillPairReg hl
                                    283 ;	spillPairReg hl
      0000BE 2E 00            [ 7]  284 	ld	l, #0x00
      0000C0 55               [ 4]  285 	ld	d, l
      0000C1 06 08            [ 7]  286 	ld	b, #0x08
      0000C3                        287 00103$:
      0000C3 29               [11]  288 	add	hl, hl
      0000C4 30 01            [12]  289 	jr	NC, 00104$
      0000C6 19               [11]  290 	add	hl, de
      0000C7                        291 00104$:
      0000C7 10 FA            [13]  292 	djnz	00103$
      0000C9 D1               [10]  293 	pop	de
      0000CA 4D               [ 4]  294 	ld	c, l
      0000CB CB 21            [ 8]  295 	sla	c
                                    296 ;./lib/./sprite.c:31: T_sprite sprite = {alto,ancho,tamano,tam/(tamano*32),nextVRAMsprites, 0,0};
      0000CD DD 72 F4         [19]  297 	ld	-12 (ix), d
      0000D0 DD 73 F5         [19]  298 	ld	-11 (ix), e
      0000D3 DD 71 F6         [19]  299 	ld	-10 (ix), c
                                    300 ;	spillPairReg hl
                                    301 ;	spillPairReg hl
      0000D6 DD 71 FE         [19]  302 	ld	-2 (ix), c
      0000D9 DD 36 FF 00      [19]  303 	ld	-1 (ix), #0x00
      0000DD 69               [ 4]  304 	ld	l, c
      0000DE 26 00            [ 7]  305 	ld	h, #0x00
                                    306 ;	spillPairReg hl
                                    307 ;	spillPairReg hl
      0000E0 29               [11]  308 	add	hl, hl
      0000E1 29               [11]  309 	add	hl, hl
      0000E2 29               [11]  310 	add	hl, hl
      0000E3 29               [11]  311 	add	hl, hl
      0000E4 29               [11]  312 	add	hl, hl
      0000E5 EB               [ 4]  313 	ex	de,hl
      0000E6 D5               [11]  314 	push	de
      0000E7 DD 6E 06         [19]  315 	ld	l, 6 (ix)
                                    316 ;	spillPairReg hl
                                    317 ;	spillPairReg hl
      0000EA DD 66 07         [19]  318 	ld	h, 7 (ix)
                                    319 ;	spillPairReg hl
                                    320 ;	spillPairReg hl
      0000ED CDr00r00         [17]  321 	call	__divsint
      0000F0 EB               [ 4]  322 	ex	de, hl
      0000F1 D1               [10]  323 	pop	de
      0000F2 DD 75 F7         [19]  324 	ld	-9 (ix), l
      0000F5 3Ar00r00         [13]  325 	ld	a, (_nextVRAMsprites+0)
      0000F8 DD 77 F8         [19]  326 	ld	-8 (ix), a
      0000FB 3Ar01r00         [13]  327 	ld	a, (_nextVRAMsprites+1)
      0000FE DD 77 F9         [19]  328 	ld	-7 (ix), a
      000101 DD 36 FA 00      [19]  329 	ld	-6 (ix), #0x00
      000105 AF               [ 4]  330 	xor	a, a
      000106 DD 77 FB         [19]  331 	ld	-5 (ix), a
      000109 DD 77 FC         [19]  332 	ld	-4 (ix), a
      00010C DD 36 FD 00      [19]  333 	ld	-3 (ix), #0x00
                                    334 ;./lib/./sprite.c:32: sprite.data = data;
      000110 DD 7E 08         [19]  335 	ld	a, 8 (ix)
      000113 DD 77 FB         [19]  336 	ld	-5 (ix), a
      000116 DD 7E 09         [19]  337 	ld	a, 9 (ix)
      000119 DD 77 FC         [19]  338 	ld	-4 (ix), a
                                    339 ;./lib/./sprite.c:33: sprite.frameInVRAM = 0;
      00011C DD 36 FD 00      [19]  340 	ld	-3 (ix), #0x00
                                    341 ;./lib/./sprite.c:34: SMS_loadTiles(data,nextVRAMsprites,tamano*32);
      000120 DD 4E 08         [19]  342 	ld	c, 8 (ix)
      000123 DD 46 09         [19]  343 	ld	b, 9 (ix)
      000126 2Ar00r00         [16]  344 	ld	hl, (_nextVRAMsprites)
      000129 29               [11]  345 	add	hl, hl
      00012A 29               [11]  346 	add	hl, hl
      00012B 29               [11]  347 	add	hl, hl
      00012C 29               [11]  348 	add	hl, hl
      00012D 29               [11]  349 	add	hl, hl
      00012E CB F4            [ 8]  350 	set	6, h
      000130 D5               [11]  351 	push	de
      000131 59               [ 4]  352 	ld	e, c
      000132 50               [ 4]  353 	ld	d, b
      000133 CDr00r00         [17]  354 	call	_SMS_VRAMmemcpy
                                    355 ;./lib/./sprite.c:35: nextVRAMsprites = nextVRAMsprites + (tamano);
      000136 21r00r00         [10]  356 	ld	hl, #_nextVRAMsprites
      000139 7E               [ 7]  357 	ld	a, (hl)
      00013A DD 86 FE         [19]  358 	add	a, -2 (ix)
      00013D 77               [ 7]  359 	ld	(hl), a
      00013E 23               [ 6]  360 	inc	hl
      00013F 7E               [ 7]  361 	ld	a, (hl)
      000140 DD 8E FF         [19]  362 	adc	a, -1 (ix)
      000143 77               [ 7]  363 	ld	(hl), a
                                    364 ;./lib/./sprite.c:36: return sprite;
      000144 21 10 00         [10]  365 	ld	hl, #16
      000147 39               [11]  366 	add	hl, sp
      000148 5E               [ 7]  367 	ld	e, (hl)
      000149 23               [ 6]  368 	inc	hl
      00014A 56               [ 7]  369 	ld	d, (hl)
      00014B 21 00 00         [10]  370 	ld	hl, #0
      00014E 39               [11]  371 	add	hl, sp
      00014F 01 0A 00         [10]  372 	ld	bc, #10
      000152 ED B0            [21]  373 	ldir
                                    374 ;./lib/./sprite.c:37: }
      000154 DD F9            [10]  375 	ld	sp, ix
      000156 DD E1            [14]  376 	pop	ix
      000158 C9               [10]  377 	ret
                                    378 ;./lib/./sprite.c:48: unsigned int addHardwareSprite(unsigned int x,unsigned int y,unsigned int vx,unsigned int vy,unsigned int lx,
                                    379 ;	---------------------------------
                                    380 ; Function addHardwareSprite
                                    381 ; ---------------------------------
      000159                        382 _addHardwareSprite::
      000159 DD E5            [15]  383 	push	ix
      00015B DD 21 00 00      [14]  384 	ld	ix,#0
      00015F DD 39            [15]  385 	add	ix,sp
      000161 FD 21 EA FF      [14]  386 	ld	iy, #-22
      000165 FD 39            [15]  387 	add	iy, sp
      000167 FD F9            [10]  388 	ld	sp, iy
      000169 DD 75 F4         [19]  389 	ld	-12 (ix), l
      00016C DD 74 F5         [19]  390 	ld	-11 (ix), h
      00016F DD 73 F2         [19]  391 	ld	-14 (ix), e
      000172 DD 72 F3         [19]  392 	ld	-13 (ix), d
                                    393 ;./lib/./sprite.c:50: unsigned int i = MAX_HARDWARE_SPRITES;
      000175 21 40 00         [10]  394 	ld	hl, #0x0040
      000178 E3               [19]  395 	ex	(sp), hl
                                    396 ;./lib/./sprite.c:51: while (i) {
      000179 DD 36 FE 40      [19]  397 	ld	-2 (ix), #0x40
      00017D DD 36 FF 00      [19]  398 	ld	-1 (ix), #0
      000181                        399 00109$:
      000181 DD 7E FF         [19]  400 	ld	a, -1 (ix)
      000184 DD B6 FE         [19]  401 	or	a, -2 (ix)
      000187 CArD0r03         [10]  402 	jp	Z, 00111$
                                    403 ;./lib/./sprite.c:52: if (!hardwareSprites[i].len) {
      00018A DD 4E FE         [19]  404 	ld	c, -2 (ix)
      00018D DD 46 FF         [19]  405 	ld	b, -1 (ix)
      000190 69               [ 4]  406 	ld	l, c
      000191 60               [ 4]  407 	ld	h, b
      000192 29               [11]  408 	add	hl, hl
      000193 09               [11]  409 	add	hl, bc
      000194 29               [11]  410 	add	hl, hl
      000195 29               [11]  411 	add	hl, hl
      000196 DD 75 FC         [19]  412 	ld	-4 (ix), l
      000199 DD 74 FD         [19]  413 	ld	-3 (ix), h
      00019C 3Er00            [ 7]  414 	ld	a, #<(_hardwareSprites)
      00019E DD 86 FC         [19]  415 	add	a, -4 (ix)
      0001A1 DD 77 FA         [19]  416 	ld	-6 (ix), a
      0001A4 3Es00            [ 7]  417 	ld	a, #>(_hardwareSprites)
      0001A6 DD 8E FD         [19]  418 	adc	a, -3 (ix)
      0001A9 DD 77 FB         [19]  419 	ld	-5 (ix), a
      0001AC DD 7E FA         [19]  420 	ld	a, -6 (ix)
      0001AF DD 77 FC         [19]  421 	ld	-4 (ix), a
      0001B2 DD 7E FB         [19]  422 	ld	a, -5 (ix)
      0001B5 DD 77 FD         [19]  423 	ld	-3 (ix), a
      0001B8 DD 6E FC         [19]  424 	ld	l, -4 (ix)
      0001BB DD 66 FD         [19]  425 	ld	h, -3 (ix)
      0001BE 11 0A 00         [10]  426 	ld	de, #0x000a
      0001C1 19               [11]  427 	add	hl, de
      0001C2 7E               [ 7]  428 	ld	a, (hl)
      0001C3 DD 77 FC         [19]  429 	ld	-4 (ix), a
      0001C6 23               [ 6]  430 	inc	hl
      0001C7 7E               [ 7]  431 	ld	a, (hl)
      0001C8 DD 77 FD         [19]  432 	ld	-3 (ix), a
      0001CB DD B6 FC         [19]  433 	or	a, -4 (ix)
      0001CE C2rB4r03         [10]  434 	jp	NZ, 00108$
                                    435 ;./lib/./sprite.c:53: T_HardwareSprite *p = &hardwareSprites[i]; 
      0001D1 DD 7E FA         [19]  436 	ld	a, -6 (ix)
      0001D4 DD 77 FE         [19]  437 	ld	-2 (ix), a
      0001D7 DD 7E FB         [19]  438 	ld	a, -5 (ix)
      0001DA DD 77 FF         [19]  439 	ld	-1 (ix), a
      0001DD DD 7E FE         [19]  440 	ld	a, -2 (ix)
      0001E0 DD 77 EC         [19]  441 	ld	-20 (ix), a
      0001E3 DD 7E FF         [19]  442 	ld	a, -1 (ix)
      0001E6 DD 77 ED         [19]  443 	ld	-19 (ix), a
                                    444 ;./lib/./sprite.c:54: p->x = x;
      0001E9 DD 7E EC         [19]  445 	ld	a, -20 (ix)
      0001EC C6 04            [ 7]  446 	add	a, #0x04
      0001EE DD 77 FE         [19]  447 	ld	-2 (ix), a
      0001F1 DD 7E ED         [19]  448 	ld	a, -19 (ix)
      0001F4 CE 00            [ 7]  449 	adc	a, #0x00
      0001F6 DD 77 FF         [19]  450 	ld	-1 (ix), a
      0001F9 DD 6E FE         [19]  451 	ld	l, -2 (ix)
      0001FC DD 66 FF         [19]  452 	ld	h, -1 (ix)
      0001FF DD 7E F4         [19]  453 	ld	a, -12 (ix)
      000202 77               [ 7]  454 	ld	(hl), a
      000203 23               [ 6]  455 	inc	hl
      000204 DD 7E F5         [19]  456 	ld	a, -11 (ix)
      000207 77               [ 7]  457 	ld	(hl), a
                                    458 ;./lib/./sprite.c:55: p->y = y;
      000208 D1               [10]  459 	pop	de
      000209 E1               [10]  460 	pop	hl
      00020A E5               [11]  461 	push	hl
      00020B D5               [11]  462 	push	de
      00020C 11 06 00         [10]  463 	ld	de, #0x0006
      00020F 19               [11]  464 	add	hl, de
      000210 DD 7E F2         [19]  465 	ld	a, -14 (ix)
      000213 77               [ 7]  466 	ld	(hl), a
      000214 23               [ 6]  467 	inc	hl
      000215 DD 7E F3         [19]  468 	ld	a, -13 (ix)
      000218 77               [ 7]  469 	ld	(hl), a
                                    470 ;./lib/./sprite.c:56: p->vx = vx;
      000219 C1               [10]  471 	pop	bc
      00021A E1               [10]  472 	pop	hl
      00021B E5               [11]  473 	push	hl
      00021C C5               [11]  474 	push	bc
      00021D DD 7E 04         [19]  475 	ld	a, 4 (ix)
      000220 77               [ 7]  476 	ld	(hl), a
      000221 23               [ 6]  477 	inc	hl
      000222 DD 7E 05         [19]  478 	ld	a, 5 (ix)
      000225 77               [ 7]  479 	ld	(hl), a
                                    480 ;./lib/./sprite.c:57: p->vy = vy;
      000226 E1               [10]  481 	pop	hl
      000227 C1               [10]  482 	pop	bc
      000228 C5               [11]  483 	push	bc
      000229 E5               [11]  484 	push	hl
      00022A 03               [ 6]  485 	inc	bc
      00022B 03               [ 6]  486 	inc	bc
      00022C DD 7E 06         [19]  487 	ld	a, 6 (ix)
      00022F 02               [ 7]  488 	ld	(bc), a
      000230 03               [ 6]  489 	inc	bc
      000231 DD 7E 07         [19]  490 	ld	a, 7 (ix)
      000234 02               [ 7]  491 	ld	(bc), a
                                    492 ;./lib/./sprite.c:58: unsigned int iTile = 0;
      000235 AF               [ 4]  493 	xor	a, a
      000236 DD 77 FE         [19]  494 	ld	-2 (ix), a
      000239 DD 77 FF         [19]  495 	ld	-1 (ix), a
                                    496 ;./lib/./sprite.c:59: for (int iy=0;iy<ly;iy++) {
      00023C DD 7E F2         [19]  497 	ld	a, -14 (ix)
      00023F DD 77 F6         [19]  498 	ld	-10 (ix), a
      000242 DD 7E F3         [19]  499 	ld	a, -13 (ix)
      000245 DD 77 F7         [19]  500 	ld	-9 (ix), a
      000248 AF               [ 4]  501 	xor	a, a
      000249 DD 77 F8         [19]  502 	ld	-8 (ix), a
      00024C DD 77 F9         [19]  503 	ld	-7 (ix), a
      00024F                        504 00116$:
      00024F DD 7E F8         [19]  505 	ld	a, -8 (ix)
      000252 DD 77 FC         [19]  506 	ld	-4 (ix), a
      000255 DD 7E F9         [19]  507 	ld	a, -7 (ix)
      000258 DD 77 FD         [19]  508 	ld	-3 (ix), a
                                    509 ;./lib/./sprite.c:62: p->initSprite = SMS_addSprite(x,y, tiles[iTile]);
      00025B DD 7E EC         [19]  510 	ld	a, -20 (ix)
      00025E C6 08            [ 7]  511 	add	a, #0x08
      000260 DD 77 EE         [19]  512 	ld	-18 (ix), a
      000263 DD 7E ED         [19]  513 	ld	a, -19 (ix)
      000266 CE 00            [ 7]  514 	adc	a, #0x00
      000268 DD 77 EF         [19]  515 	ld	-17 (ix), a
                                    516 ;./lib/./sprite.c:59: for (int iy=0;iy<ly;iy++) {
      00026B DD 7E FC         [19]  517 	ld	a, -4 (ix)
      00026E DD 96 0A         [19]  518 	sub	a, 10 (ix)
      000271 DD 7E FD         [19]  519 	ld	a, -3 (ix)
      000274 DD 9E 0B         [19]  520 	sbc	a, 11 (ix)
      000277 D2r5Br03         [10]  521 	jp	NC, 00106$
                                    522 ;./lib/./sprite.c:60: for (int ix=0;ix<lx;ix++){
      00027A DD 7E FE         [19]  523 	ld	a, -2 (ix)
      00027D DD 77 FA         [19]  524 	ld	-6 (ix), a
      000280 DD 7E FF         [19]  525 	ld	a, -1 (ix)
      000283 DD 77 FB         [19]  526 	ld	-5 (ix), a
      000286 DD 7E F4         [19]  527 	ld	a, -12 (ix)
      000289 DD 77 FC         [19]  528 	ld	-4 (ix), a
      00028C DD 7E F5         [19]  529 	ld	a, -11 (ix)
      00028F DD 77 FD         [19]  530 	ld	-3 (ix), a
      000292 AF               [ 4]  531 	xor	a, a
      000293 DD 77 FE         [19]  532 	ld	-2 (ix), a
      000296 DD 77 FF         [19]  533 	ld	-1 (ix), a
      000299                        534 00113$:
      000299 DD 7E FE         [19]  535 	ld	a, -2 (ix)
      00029C DD 77 F0         [19]  536 	ld	-16 (ix), a
      00029F DD 7E FF         [19]  537 	ld	a, -1 (ix)
      0002A2 DD 77 F1         [19]  538 	ld	-15 (ix), a
      0002A5 DD 7E F0         [19]  539 	ld	a, -16 (ix)
      0002A8 DD 96 08         [19]  540 	sub	a, 8 (ix)
      0002AB DD 7E F1         [19]  541 	ld	a, -15 (ix)
      0002AE DD 9E 09         [19]  542 	sbc	a, 9 (ix)
      0002B1 30 77            [12]  543 	jr	NC, 00129$
                                    544 ;./lib/./sprite.c:62: p->initSprite = SMS_addSprite(x,y, tiles[iTile]);
      0002B3 DD 46 FC         [19]  545 	ld	b, -4 (ix)
      0002B6 DD 6E FA         [19]  546 	ld	l, -6 (ix)
                                    547 ;	spillPairReg hl
                                    548 ;	spillPairReg hl
      0002B9 DD 66 FB         [19]  549 	ld	h, -5 (ix)
                                    550 ;	spillPairReg hl
                                    551 ;	spillPairReg hl
      0002BC 29               [11]  552 	add	hl, hl
      0002BD EB               [ 4]  553 	ex	de,hl
      0002BE DD 6E 0C         [19]  554 	ld	l, 12 (ix)
                                    555 ;	spillPairReg hl
                                    556 ;	spillPairReg hl
      0002C1 DD 66 0D         [19]  557 	ld	h, 13 (ix)
                                    558 ;	spillPairReg hl
                                    559 ;	spillPairReg hl
      0002C4 19               [11]  560 	add	hl, de
      0002C5 5E               [ 7]  561 	ld	e, (hl)
      0002C6 DD 73 F0         [19]  562 	ld	-16 (ix), e
      0002C9 DD 70 F1         [19]  563 	ld	-15 (ix), b
                                    564 ;./lib/./sprite.c:61: if(ix==0 && iy == 0) {
      0002CC DD 7E FF         [19]  565 	ld	a, -1 (ix)
      0002CF DD B6 FE         [19]  566 	or	a, -2 (ix)
      0002D2 20 26            [12]  567 	jr	NZ, 00102$
      0002D4 DD 7E F9         [19]  568 	ld	a, -7 (ix)
      0002D7 DD B6 F8         [19]  569 	or	a, -8 (ix)
      0002DA 20 1E            [12]  570 	jr	NZ, 00102$
                                    571 ;./lib/./sprite.c:62: p->initSprite = SMS_addSprite(x,y, tiles[iTile]);
      0002DC DD 5E F0         [19]  572 	ld	e, -16 (ix)
      0002DF DD 56 F1         [19]  573 	ld	d, -15 (ix)
      0002E2 DD 6E F6         [19]  574 	ld	l, -10 (ix)
                                    575 ;	spillPairReg hl
                                    576 ;	spillPairReg hl
      0002E5 DD 66 F7         [19]  577 	ld	h, -9 (ix)
                                    578 ;	spillPairReg hl
                                    579 ;	spillPairReg hl
      0002E8 CDr00r00         [17]  580 	call	_SMS_addSprite_f
      0002EB 4F               [ 4]  581 	ld	c, a
      0002EC 07               [ 4]  582 	rlca
      0002ED 9F               [ 4]  583 	sbc	a, a
      0002EE 47               [ 4]  584 	ld	b, a
      0002EF DD 6E EE         [19]  585 	ld	l, -18 (ix)
      0002F2 DD 66 EF         [19]  586 	ld	h, -17 (ix)
      0002F5 71               [ 7]  587 	ld	(hl), c
      0002F6 23               [ 6]  588 	inc	hl
      0002F7 70               [ 7]  589 	ld	(hl), b
      0002F8 18 0F            [12]  590 	jr	00103$
      0002FA                        591 00102$:
                                    592 ;./lib/./sprite.c:65: SMS_addSprite(x,y, tiles[iTile]);
      0002FA DD 5E F0         [19]  593 	ld	e, -16 (ix)
      0002FD DD 56 F1         [19]  594 	ld	d, -15 (ix)
      000300 DD 6E F6         [19]  595 	ld	l, -10 (ix)
                                    596 ;	spillPairReg hl
                                    597 ;	spillPairReg hl
      000303 DD 66 F7         [19]  598 	ld	h, -9 (ix)
                                    599 ;	spillPairReg hl
                                    600 ;	spillPairReg hl
      000306 CDr00r00         [17]  601 	call	_SMS_addSprite_f
      000309                        602 00103$:
                                    603 ;./lib/./sprite.c:67: iTile++;
      000309 DD 34 FA         [23]  604 	inc	-6 (ix)
      00030C 20 03            [12]  605 	jr	NZ, 00185$
      00030E DD 34 FB         [23]  606 	inc	-5 (ix)
      000311                        607 00185$:
                                    608 ;./lib/./sprite.c:68: x += 8;
      000311 DD 7E FC         [19]  609 	ld	a, -4 (ix)
      000314 C6 08            [ 7]  610 	add	a, #0x08
      000316 DD 77 FC         [19]  611 	ld	-4 (ix), a
      000319 30 03            [12]  612 	jr	NC, 00186$
      00031B DD 34 FD         [23]  613 	inc	-3 (ix)
      00031E                        614 00186$:
                                    615 ;./lib/./sprite.c:60: for (int ix=0;ix<lx;ix++){
      00031E DD 34 FE         [23]  616 	inc	-2 (ix)
      000321 C2r99r02         [10]  617 	jp	NZ,00113$
      000324 DD 34 FF         [23]  618 	inc	-1 (ix)
      000327 C3r99r02         [10]  619 	jp	00113$
      00032A                        620 00129$:
      00032A DD 7E FA         [19]  621 	ld	a, -6 (ix)
      00032D DD 77 FE         [19]  622 	ld	-2 (ix), a
      000330 DD 7E FB         [19]  623 	ld	a, -5 (ix)
      000333 DD 77 FF         [19]  624 	ld	-1 (ix), a
      000336 DD 7E FC         [19]  625 	ld	a, -4 (ix)
      000339 DD 77 F4         [19]  626 	ld	-12 (ix), a
      00033C DD 7E FD         [19]  627 	ld	a, -3 (ix)
      00033F DD 77 F5         [19]  628 	ld	-11 (ix), a
                                    629 ;./lib/./sprite.c:70: y += 16;
      000342 DD 7E F6         [19]  630 	ld	a, -10 (ix)
      000345 C6 10            [ 7]  631 	add	a, #0x10
      000347 DD 77 F6         [19]  632 	ld	-10 (ix), a
      00034A 30 03            [12]  633 	jr	NC, 00188$
      00034C DD 34 F7         [23]  634 	inc	-9 (ix)
      00034F                        635 00188$:
                                    636 ;./lib/./sprite.c:59: for (int iy=0;iy<ly;iy++) {
      00034F DD 34 F8         [23]  637 	inc	-8 (ix)
      000352 C2r4Fr02         [10]  638 	jp	NZ,00116$
      000355 DD 34 F9         [23]  639 	inc	-7 (ix)
      000358 C3r4Fr02         [10]  640 	jp	00116$
      00035B                        641 00106$:
                                    642 ;./lib/./sprite.c:72: p->len = p->initSprite + lx*ly;
      00035B DD 7E EC         [19]  643 	ld	a, -20 (ix)
      00035E C6 0A            [ 7]  644 	add	a, #0x0a
      000360 DD 77 FE         [19]  645 	ld	-2 (ix), a
      000363 DD 7E ED         [19]  646 	ld	a, -19 (ix)
      000366 CE 00            [ 7]  647 	adc	a, #0x00
      000368 DD 77 FF         [19]  648 	ld	-1 (ix), a
      00036B DD 6E EE         [19]  649 	ld	l, -18 (ix)
      00036E DD 66 EF         [19]  650 	ld	h, -17 (ix)
      000371 7E               [ 7]  651 	ld	a, (hl)
      000372 DD 77 FC         [19]  652 	ld	-4 (ix), a
      000375 23               [ 6]  653 	inc	hl
      000376 7E               [ 7]  654 	ld	a, (hl)
      000377 DD 77 FD         [19]  655 	ld	-3 (ix), a
      00037A DD 5E 0A         [19]  656 	ld	e, 10 (ix)
      00037D DD 56 0B         [19]  657 	ld	d, 11 (ix)
      000380 DD 6E 08         [19]  658 	ld	l, 8 (ix)
                                    659 ;	spillPairReg hl
                                    660 ;	spillPairReg hl
      000383 DD 66 09         [19]  661 	ld	h, 9 (ix)
                                    662 ;	spillPairReg hl
                                    663 ;	spillPairReg hl
      000386 CDr00r00         [17]  664 	call	__mulint
      000389 DD 73 F8         [19]  665 	ld	-8 (ix), e
      00038C DD 72 F9         [19]  666 	ld	-7 (ix), d
      00038F DD 7E F8         [19]  667 	ld	a, -8 (ix)
      000392 DD 86 FC         [19]  668 	add	a, -4 (ix)
      000395 DD 77 FA         [19]  669 	ld	-6 (ix), a
      000398 DD 7E F9         [19]  670 	ld	a, -7 (ix)
      00039B DD 8E FD         [19]  671 	adc	a, -3 (ix)
      00039E DD 77 FB         [19]  672 	ld	-5 (ix), a
      0003A1 DD 6E FE         [19]  673 	ld	l, -2 (ix)
      0003A4 DD 66 FF         [19]  674 	ld	h, -1 (ix)
      0003A7 DD 7E FA         [19]  675 	ld	a, -6 (ix)
      0003AA 77               [ 7]  676 	ld	(hl), a
      0003AB 23               [ 6]  677 	inc	hl
      0003AC DD 7E FB         [19]  678 	ld	a, -5 (ix)
      0003AF 77               [ 7]  679 	ld	(hl), a
                                    680 ;./lib/./sprite.c:73: return i;
      0003B0 D1               [10]  681 	pop	de
      0003B1 D5               [11]  682 	push	de
      0003B2 18 1E            [12]  683 	jr	00118$
      0003B4                        684 00108$:
                                    685 ;./lib/./sprite.c:75: i--;
      0003B4 DD 6E FE         [19]  686 	ld	l, -2 (ix)
      0003B7 DD 66 FF         [19]  687 	ld	h, -1 (ix)
      0003BA 2B               [ 6]  688 	dec	hl
      0003BB DD 75 FE         [19]  689 	ld	-2 (ix), l
      0003BE DD 74 FF         [19]  690 	ld	-1 (ix), h
      0003C1 DD 7E FE         [19]  691 	ld	a, -2 (ix)
      0003C4 DD 77 EA         [19]  692 	ld	-22 (ix), a
      0003C7 DD 7E FF         [19]  693 	ld	a, -1 (ix)
      0003CA DD 77 EB         [19]  694 	ld	-21 (ix), a
      0003CD C3r81r01         [10]  695 	jp	00109$
      0003D0                        696 00111$:
                                    697 ;./lib/./sprite.c:77: return i;
      0003D0 D1               [10]  698 	pop	de
      0003D1 D5               [11]  699 	push	de
      0003D2                        700 00118$:
                                    701 ;./lib/./sprite.c:78: }
      0003D2 DD F9            [10]  702 	ld	sp, ix
      0003D4 DD E1            [14]  703 	pop	ix
      0003D6 E1               [10]  704 	pop	hl
      0003D7 F1               [10]  705 	pop	af
      0003D8 F1               [10]  706 	pop	af
      0003D9 F1               [10]  707 	pop	af
      0003DA F1               [10]  708 	pop	af
      0003DB F1               [10]  709 	pop	af
      0003DC E9               [ 4]  710 	jp	(hl)
                                    711 ;./lib/./sprite.c:90: void initSpritesVariables (void) {
                                    712 ;	---------------------------------
                                    713 ; Function initSpritesVariables
                                    714 ; ---------------------------------
      0003DD                        715 _initSpritesVariables::
                                    716 ;./lib/./sprite.c:92: while (i) {
      0003DD 01 40 00         [10]  717 	ld	bc, #0x0040
      0003E0                        718 00101$:
      0003E0 78               [ 4]  719 	ld	a, b
      0003E1 B1               [ 4]  720 	or	a, c
      0003E2 28 15            [12]  721 	jr	Z, 00103$
                                    722 ;./lib/./sprite.c:93: hardwareSprites[i].len = 0;
      0003E4 69               [ 4]  723 	ld	l, c
      0003E5 60               [ 4]  724 	ld	h, b
      0003E6 29               [11]  725 	add	hl, hl
      0003E7 09               [11]  726 	add	hl, bc
      0003E8 29               [11]  727 	add	hl, hl
      0003E9 29               [11]  728 	add	hl, hl
      0003EA 11r00r00         [10]  729 	ld	de, #_hardwareSprites
      0003ED 19               [11]  730 	add	hl, de
      0003EE 11 0A 00         [10]  731 	ld	de, #0x000a
      0003F1 19               [11]  732 	add	hl, de
      0003F2 AF               [ 4]  733 	xor	a, a
      0003F3 77               [ 7]  734 	ld	(hl), a
      0003F4 23               [ 6]  735 	inc	hl
      0003F5 77               [ 7]  736 	ld	(hl), a
                                    737 ;./lib/./sprite.c:94: i--;
      0003F6 0B               [ 6]  738 	dec	bc
      0003F7 18 E7            [12]  739 	jr	00101$
      0003F9                        740 00103$:
                                    741 ;./lib/./sprite.c:107: __endasm;
      0003F9 21r00r00         [10]  742 	ld	hl, #_SpriteNextFree
      0003FC 22r04r03         [16]  743 	ld	(#_SpriteNextFree2), hl
      0003FF 21r00r00         [10]  744 	ld	hl, #_SpriteTableY
      000402 22r00r03         [16]  745 	ld	(#_SpriteTableY2), hl
      000405 21r00r00         [10]  746 	ld	hl, #_SpriteTableXN
      000408 22r02r03         [16]  747 	ld	(#_SpriteTableXN2), hl
                                    748 ;./lib/./sprite.c:110: }
      00040B C9               [10]  749 	ret
                                    750 ;./lib/./sprite.c:127: void copySpritestoSAT (void) {
                                    751 ;	---------------------------------
                                    752 ; Function copySpritestoSAT
                                    753 ; ---------------------------------
      00040C                        754 _copySpritestoSAT::
                                    755 ;./lib/./sprite.c:128: SMS_setAddr(SMS_SATAddress);
      00040C 21 00 7F         [10]  756 	ld	hl, #0x7f00
      00040F CF               [11]  757 	rst	#0x08
                                    758 ;./lib/./sprite.c:144: __endasm;
      000410 3Ar00r00         [13]  759 	ld	a,(#_SpriteNextFree)
      000413 B7               [ 4]  760 	or	a
      000414 28 25            [12]  761 	jr	z,_no_sprites
      000416 47               [ 4]  762 	ld	b,a
      000417 0E BE            [ 7]  763 	ld	c,#_VDPDataPort
      000419 21r00r00         [10]  764 	ld	hl,#_SpriteTableY
      00041C                        765 _next_spriteY:
      00041C ED A3            [16]  766 	outi	; 16 cycles
      00041E 20 FC            [12]  767 	jr	nz,_next_spriteY ; 12 cycles = 28 (VRAM safe on GG too)
      000420 FE 40            [ 7]  768 	cp	#64 ; 7 cycles
      000422 28 04            [12]  769 	jr	z,_no_sprite_term ; 7 cycles
      000424 3E D0            [ 7]  770 	ld	a,#0xD0 ; 7 cycles => VRAM safe
      000426 ED 79            [12]  771 	out	(c),a
      000428                        772 _no_sprite_term:
                                    773 ;./lib/./sprite.c:145: SMS_setAddr(SMS_SATAddress+128);
      000428 21 80 7F         [10]  774 	ld	hl, #0x7f80
      00042B CF               [11]  775 	rst	#0x08
                                    776 ;./lib/./sprite.c:160: __endasm;
      00042C 0E BE            [ 7]  777 	ld	c,#_VDPDataPort
      00042E 3Ar00r00         [13]  778 	ld	a,(#_SpriteNextFree)
      000431 87               [ 4]  779 	add	a,a
      000432 47               [ 4]  780 	ld	b,a
      000433 21r00r00         [10]  781 	ld	hl,#_SpriteTableXN
      000436                        782 _next_spriteXN:
      000436 ED A3            [16]  783 	outi	; 16 cycles
      000438 20 FC            [12]  784 	jr	nz,_next_spriteXN ; 12 cycles = 28 (VRAM safe on GG too)
      00043A C9               [10]  785 	ret
      00043B                        786 _no_sprites:
      00043B 3E D0            [ 7]  787 	ld	a,#0xD0
      00043D D3 BE            [11]  788 	out	(#_VDPDataPort),a
                                    789 ;./lib/./sprite.c:161: }
      00043F C9               [10]  790 	ret
                                    791 ;./lib/entities.c:11: void draw_entidad(T_entidad *entidad, T_sprite *sprite){
                                    792 ;	---------------------------------
                                    793 ; Function draw_entidad
                                    794 ; ---------------------------------
      000440                        795 _draw_entidad::
      000440 DD E5            [15]  796 	push	ix
      000442 DD 21 00 00      [14]  797 	ld	ix,#0
      000446 DD 39            [15]  798 	add	ix,sp
      000448 FD 21 E3 FF      [14]  799 	ld	iy, #-29
      00044C FD 39            [15]  800 	add	iy, sp
      00044E FD F9            [10]  801 	ld	sp, iy
      000450 DD 75 FC         [19]  802 	ld	-4 (ix), l
      000453 DD 74 FD         [19]  803 	ld	-3 (ix), h
                                    804 ;./lib/entities.c:13: if (sprite->allInRAM == 1){
      000456 DD 73 FA         [19]  805 	ld	-6 (ix), e
      000459 DD 72 FB         [19]  806 	ld	-5 (ix), d
      00045C 4B               [ 4]  807 	ld	c, e
      00045D 42               [ 4]  808 	ld	b, d
      00045E 21 06 00         [10]  809 	ld	hl, #6
      000461 09               [11]  810 	add	hl, bc
      000462 4E               [ 7]  811 	ld	c, (hl)
                                    812 ;./lib/entities.c:14: if (entidad->initSprite == 255) {
      000463 DD 7E FC         [19]  813 	ld	a, -4 (ix)
      000466 C6 06            [ 7]  814 	add	a, #0x06
      000468 DD 77 F2         [19]  815 	ld	-14 (ix), a
      00046B DD 7E FD         [19]  816 	ld	a, -3 (ix)
      00046E CE 00            [ 7]  817 	adc	a, #0x00
      000470 DD 77 F3         [19]  818 	ld	-13 (ix), a
      000473 DD 6E F2         [19]  819 	ld	l, -14 (ix)
      000476 DD 66 F3         [19]  820 	ld	h, -13 (ix)
      000479 46               [ 7]  821 	ld	b, (hl)
                                    822 ;./lib/entities.c:15: int frame = sprite->tamano*entidad->frame + sprite->beginVRAM;
      00047A DD 7E FC         [19]  823 	ld	a, -4 (ix)
      00047D C6 02            [ 7]  824 	add	a, #0x02
      00047F DD 77 F4         [19]  825 	ld	-12 (ix), a
      000482 DD 7E FD         [19]  826 	ld	a, -3 (ix)
      000485 CE 00            [ 7]  827 	adc	a, #0x00
      000487 DD 77 F5         [19]  828 	ld	-11 (ix), a
                                    829 ;./lib/entities.c:16: for(j=0;j<sprite->alto;j++) {
      00048A DD 7E FC         [19]  830 	ld	a, -4 (ix)
      00048D C6 01            [ 7]  831 	add	a, #0x01
      00048F DD 77 F8         [19]  832 	ld	-8 (ix), a
      000492 DD 7E FD         [19]  833 	ld	a, -3 (ix)
      000495 CE 00            [ 7]  834 	adc	a, #0x00
      000497 DD 77 F9         [19]  835 	ld	-7 (ix), a
      00049A DD 7E FA         [19]  836 	ld	a, -6 (ix)
      00049D C6 01            [ 7]  837 	add	a, #0x01
      00049F DD 77 FE         [19]  838 	ld	-2 (ix), a
      0004A2 DD 7E FB         [19]  839 	ld	a, -5 (ix)
      0004A5 CE 00            [ 7]  840 	adc	a, #0x00
      0004A7 DD 77 FF         [19]  841 	ld	-1 (ix), a
                                    842 ;./lib/entities.c:26: entidad->len = (sprite->alto * sprite->ancho + entidad->initSprite)*2;
      0004AA DD 7E FC         [19]  843 	ld	a, -4 (ix)
      0004AD C6 07            [ 7]  844 	add	a, #0x07
      0004AF DD 77 E3         [19]  845 	ld	-29 (ix), a
      0004B2 DD 7E FD         [19]  846 	ld	a, -3 (ix)
      0004B5 CE 00            [ 7]  847 	adc	a, #0x00
      0004B7 DD 77 E4         [19]  848 	ld	-28 (ix), a
                                    849 ;./lib/entities.c:14: if (entidad->initSprite == 255) {
      0004BA 04               [ 4]  850 	inc	b
      0004BB 3E 01            [ 7]  851 	ld	a, #0x01
      0004BD 28 01            [12]  852 	jr	Z, 00253$
      0004BF AF               [ 4]  853 	xor	a, a
      0004C0                        854 00253$:
      0004C0 DD 77 F7         [19]  855 	ld	-9 (ix), a
                                    856 ;./lib/entities.c:13: if (sprite->allInRAM == 1){
      0004C3 0D               [ 4]  857 	dec	c
      0004C4 C2rD7r06         [10]  858 	jp	NZ,00120$
                                    859 ;./lib/entities.c:14: if (entidad->initSprite == 255) {
      0004C7 DD 7E F2         [19]  860 	ld	a, -14 (ix)
      0004CA DD 77 E5         [19]  861 	ld	-27 (ix), a
      0004CD DD 7E F3         [19]  862 	ld	a, -13 (ix)
      0004D0 DD 77 E6         [19]  863 	ld	-26 (ix), a
      0004D3 DD 7E F7         [19]  864 	ld	a, -9 (ix)
      0004D6 B7               [ 4]  865 	or	a, a
      0004D7 CAr42r08         [10]  866 	jp	Z, 00134$
                                    867 ;./lib/entities.c:15: int frame = sprite->tamano*entidad->frame + sprite->beginVRAM;
      0004DA DD 7E FA         [19]  868 	ld	a, -6 (ix)
      0004DD DD 77 F2         [19]  869 	ld	-14 (ix), a
      0004E0 DD 7E FB         [19]  870 	ld	a, -5 (ix)
      0004E3 DD 77 F3         [19]  871 	ld	-13 (ix), a
      0004E6 DD 6E F2         [19]  872 	ld	l, -14 (ix)
      0004E9 DD 66 F3         [19]  873 	ld	h, -13 (ix)
      0004EC 23               [ 6]  874 	inc	hl
      0004ED 23               [ 6]  875 	inc	hl
      0004EE 7E               [ 7]  876 	ld	a, (hl)
      0004EF DD 77 F6         [19]  877 	ld	-10 (ix), a
      0004F2 DD 6E F4         [19]  878 	ld	l, -12 (ix)
      0004F5 DD 66 F5         [19]  879 	ld	h, -11 (ix)
      0004F8 7E               [ 7]  880 	ld	a, (hl)
      0004F9 DD 77 F7         [19]  881 	ld	-9 (ix), a
      0004FC DD 7E F6         [19]  882 	ld	a, -10 (ix)
      0004FF DD 77 F5         [19]  883 	ld	-11 (ix), a
      000502 DD 5E F7         [19]  884 	ld	e, -9 (ix)
      000505 DD 66 F5         [19]  885 	ld	h, -11 (ix)
                                    886 ;	spillPairReg hl
                                    887 ;	spillPairReg hl
      000508 2E 00            [ 7]  888 	ld	l, #0x00
      00050A 55               [ 4]  889 	ld	d, l
      00050B 06 08            [ 7]  890 	ld	b, #0x08
      00050D                        891 00256$:
      00050D 29               [11]  892 	add	hl, hl
      00050E 30 01            [12]  893 	jr	NC, 00257$
      000510 19               [11]  894 	add	hl, de
      000511                        895 00257$:
      000511 10 FA            [13]  896 	djnz	00256$
      000513 DD 75 F7         [19]  897 	ld	-9 (ix), l
      000516 DD 7E FA         [19]  898 	ld	a, -6 (ix)
      000519 DD 77 F5         [19]  899 	ld	-11 (ix), a
      00051C DD 7E FB         [19]  900 	ld	a, -5 (ix)
      00051F DD 77 F6         [19]  901 	ld	-10 (ix), a
      000522 DD 6E F5         [19]  902 	ld	l, -11 (ix)
      000525 DD 66 F6         [19]  903 	ld	h, -10 (ix)
      000528 11 04 00         [10]  904 	ld	de, #0x0004
      00052B 19               [11]  905 	add	hl, de
      00052C 7E               [ 7]  906 	ld	a, (hl)
      00052D DD 77 F6         [19]  907 	ld	-10 (ix), a
      000530 DD 86 F7         [19]  908 	add	a, -9 (ix)
      000533 DD 77 E7         [19]  909 	ld	-25 (ix), a
                                    910 ;./lib/entities.c:16: for(j=0;j<sprite->alto;j++) {
      000536 DD 7E F8         [19]  911 	ld	a, -8 (ix)
      000539 DD 77 E8         [19]  912 	ld	-24 (ix), a
      00053C DD 7E F9         [19]  913 	ld	a, -7 (ix)
      00053F DD 77 E9         [19]  914 	ld	-23 (ix), a
      000542 DD 7E FE         [19]  915 	ld	a, -2 (ix)
      000545 DD 77 EA         [19]  916 	ld	-22 (ix), a
      000548 DD 7E FF         [19]  917 	ld	a, -1 (ix)
      00054B DD 77 EB         [19]  918 	ld	-21 (ix), a
      00054E DD 36 FE 00      [19]  919 	ld	-2 (ix), #0x00
      000552                        920 00126$:
      000552 DD 6E FA         [19]  921 	ld	l, -6 (ix)
      000555 DD 66 FB         [19]  922 	ld	h, -5 (ix)
      000558 7E               [ 7]  923 	ld	a, (hl)
      000559 DD 77 FF         [19]  924 	ld	-1 (ix), a
      00055C DD 7E FE         [19]  925 	ld	a, -2 (ix)
      00055F DD 96 FF         [19]  926 	sub	a, -1 (ix)
      000562 D2r9Br06         [10]  927 	jp	NC, 00106$
                                    928 ;./lib/entities.c:17: unsigned char desplazado = (j<<2);
      000565 DD 7E FE         [19]  929 	ld	a, -2 (ix)
      000568 DD 77 FF         [19]  930 	ld	-1 (ix), a
      00056B DD CB FF 26      [23]  931 	sla	-1 (ix)
      00056F DD CB FF 26      [23]  932 	sla	-1 (ix)
                                    933 ;./lib/entities.c:18: unsigned char jCalculated = desplazado + frame, y = entidad->y+(desplazado<<2);
      000573 DD 7E FF         [19]  934 	ld	a, -1 (ix)
      000576 DD 77 F9         [19]  935 	ld	-7 (ix), a
      000579 DD 86 E7         [19]  936 	add	a, -25 (ix)
      00057C DD 77 FF         [19]  937 	ld	-1 (ix), a
      00057F DD 77 EC         [19]  938 	ld	-20 (ix), a
      000582 DD 6E E8         [19]  939 	ld	l, -24 (ix)
      000585 DD 66 E9         [19]  940 	ld	h, -23 (ix)
      000588 7E               [ 7]  941 	ld	a, (hl)
      000589 DD 77 FF         [19]  942 	ld	-1 (ix), a
      00058C DD CB F9 26      [23]  943 	sla	-7 (ix)
      000590 DD CB F9 26      [23]  944 	sla	-7 (ix)
      000594 DD 7E FF         [19]  945 	ld	a, -1 (ix)
      000597 DD 86 F9         [19]  946 	add	a, -7 (ix)
      00059A DD 77 FF         [19]  947 	ld	-1 (ix), a
      00059D DD 77 ED         [19]  948 	ld	-19 (ix), a
                                    949 ;./lib/entities.c:19: for(i=0;i<sprite->ancho;i++) {
      0005A0 DD 36 FF 00      [19]  950 	ld	-1 (ix), #0x00
      0005A4                        951 00123$:
      0005A4 DD 6E EA         [19]  952 	ld	l, -22 (ix)
      0005A7 DD 66 EB         [19]  953 	ld	h, -21 (ix)
      0005AA DD 7E FF         [19]  954 	ld	a,-1 (ix)
      0005AD 96               [ 7]  955 	sub	a,(hl)
      0005AE D2r95r06         [10]  956 	jp	NC, 00127$
                                    957 ;./lib/entities.c:21: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      0005B1 DD 6E FC         [19]  958 	ld	l, -4 (ix)
      0005B4 DD 66 FD         [19]  959 	ld	h, -3 (ix)
      0005B7 7E               [ 7]  960 	ld	a, (hl)
      0005B8 DD 77 F7         [19]  961 	ld	-9 (ix), a
      0005BB DD 7E FF         [19]  962 	ld	a, -1 (ix)
      0005BE DD 77 F8         [19]  963 	ld	-8 (ix), a
      0005C1 DD 36 F9 00      [19]  964 	ld	-7 (ix), #0x00
      0005C5 DD 7E EC         [19]  965 	ld	a, -20 (ix)
      0005C8 DD 77 EE         [19]  966 	ld	-18 (ix), a
      0005CB DD 36 EF 00      [19]  967 	ld	-17 (ix), #0x00
      0005CF DD 7E ED         [19]  968 	ld	a, -19 (ix)
      0005D2 DD 77 F0         [19]  969 	ld	-16 (ix), a
      0005D5 DD 36 F1 00      [19]  970 	ld	-15 (ix), #0x00
      0005D9 DD 7E F7         [19]  971 	ld	a, -9 (ix)
      0005DC DD 77 F2         [19]  972 	ld	-14 (ix), a
      0005DF DD 36 F3 00      [19]  973 	ld	-13 (ix), #0x00
      0005E3 DD 7E F8         [19]  974 	ld	a, -8 (ix)
      0005E6 DD 77 F4         [19]  975 	ld	-12 (ix), a
      0005E9 DD 7E F9         [19]  976 	ld	a, -7 (ix)
      0005EC DD 77 F5         [19]  977 	ld	-11 (ix), a
      0005EF 06 03            [ 7]  978 	ld	b, #0x03
      0005F1                        979 00258$:
      0005F1 DD CB F4 26      [23]  980 	sla	-12 (ix)
      0005F5 DD CB F5 16      [23]  981 	rl	-11 (ix)
      0005F9 10 F6            [13]  982 	djnz	00258$
      0005FB DD 7E F8         [19]  983 	ld	a, -8 (ix)
      0005FE DD 77 F6         [19]  984 	ld	-10 (ix), a
      000601 DD 7E F9         [19]  985 	ld	a, -7 (ix)
      000604 DD 77 F7         [19]  986 	ld	-9 (ix), a
      000607 DD CB F6 26      [23]  987 	sla	-10 (ix)
      00060B DD CB F7 16      [23]  988 	rl	-9 (ix)
      00060F DD 7E F4         [19]  989 	ld	a, -12 (ix)
      000612 DD 86 F2         [19]  990 	add	a, -14 (ix)
      000615 DD 77 F8         [19]  991 	ld	-8 (ix), a
      000618 DD 7E F5         [19]  992 	ld	a, -11 (ix)
      00061B DD 8E F3         [19]  993 	adc	a, -13 (ix)
      00061E DD 77 F9         [19]  994 	ld	-7 (ix), a
      000621 DD 7E EE         [19]  995 	ld	a, -18 (ix)
      000624 DD 86 F6         [19]  996 	add	a, -10 (ix)
      000627 DD 77 F4         [19]  997 	ld	-12 (ix), a
      00062A 3E 00            [ 7]  998 	ld	a, #0x00
      00062C DD 8E F7         [19]  999 	adc	a, -9 (ix)
      00062F DD 77 F5         [19] 1000 	ld	-11 (ix), a
      000632 DD 7E F8         [19] 1001 	ld	a, -8 (ix)
      000635 DD 77 F6         [19] 1002 	ld	-10 (ix), a
      000638 DD 36 F7 00      [19] 1003 	ld	-9 (ix), #0x00
      00063C DD 7E F4         [19] 1004 	ld	a, -12 (ix)
      00063F DD 77 F8         [19] 1005 	ld	-8 (ix), a
      000642 DD 36 F9 00      [19] 1006 	ld	-7 (ix), #0x00
      000646 DD 7E F6         [19] 1007 	ld	a, -10 (ix)
      000649 DD 77 F7         [19] 1008 	ld	-9 (ix), a
      00064C DD 36 F6 00      [19] 1009 	ld	-10 (ix), #0x00
      000650 AF               [ 4] 1010 	xor	a, a
      000651 DD B6 F8         [19] 1011 	or	a, -8 (ix)
      000654 DD 77 F4         [19] 1012 	ld	-12 (ix), a
      000657 DD 7E F7         [19] 1013 	ld	a, -9 (ix)
      00065A DD B6 F9         [19] 1014 	or	a, -7 (ix)
      00065D DD 77 F5         [19] 1015 	ld	-11 (ix), a
                                   1016 ;./lib/entities.c:20: if(i==0 && j==0)
      000660 DD 7E FF         [19] 1017 	ld	a, -1 (ix)
      000663 B7               [ 4] 1018 	or	a, a
      000664 20 1B            [12] 1019 	jr	NZ, 00102$
      000666 DD 7E FE         [19] 1020 	ld	a, -2 (ix)
      000669 B7               [ 4] 1021 	or	a, a
      00066A 20 15            [12] 1022 	jr	NZ, 00102$
                                   1023 ;./lib/entities.c:21: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      00066C DD 5E F4         [19] 1024 	ld	e, -12 (ix)
      00066F DD 56 F5         [19] 1025 	ld	d, -11 (ix)
      000672 DD 6E F0         [19] 1026 	ld	l, -16 (ix)
                                   1027 ;	spillPairReg hl
                                   1028 ;	spillPairReg hl
      000675 26 00            [ 7] 1029 	ld	h, #0x00
                                   1030 ;	spillPairReg hl
                                   1031 ;	spillPairReg hl
      000677 CDr00r00         [17] 1032 	call	_SMS_addSprite_f
      00067A C1               [10] 1033 	pop	bc
      00067B E1               [10] 1034 	pop	hl
      00067C E5               [11] 1035 	push	hl
      00067D C5               [11] 1036 	push	bc
      00067E 77               [ 7] 1037 	ld	(hl), a
      00067F 18 0E            [12] 1038 	jr	00124$
      000681                       1039 00102$:
                                   1040 ;./lib/entities.c:23: SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      000681 DD 5E F4         [19] 1041 	ld	e, -12 (ix)
      000684 DD 56 F5         [19] 1042 	ld	d, -11 (ix)
      000687 DD 6E F0         [19] 1043 	ld	l, -16 (ix)
                                   1044 ;	spillPairReg hl
                                   1045 ;	spillPairReg hl
      00068A 26 00            [ 7] 1046 	ld	h, #0x00
                                   1047 ;	spillPairReg hl
                                   1048 ;	spillPairReg hl
      00068C CDr00r00         [17] 1049 	call	_SMS_addSprite_f
      00068F                       1050 00124$:
                                   1051 ;./lib/entities.c:19: for(i=0;i<sprite->ancho;i++) {
      00068F DD 34 FF         [23] 1052 	inc	-1 (ix)
      000692 C3rA4r05         [10] 1053 	jp	00123$
      000695                       1054 00127$:
                                   1055 ;./lib/entities.c:16: for(j=0;j<sprite->alto;j++) {
      000695 DD 34 FE         [23] 1056 	inc	-2 (ix)
      000698 C3r52r05         [10] 1057 	jp	00126$
      00069B                       1058 00106$:
                                   1059 ;./lib/entities.c:26: entidad->len = (sprite->alto * sprite->ancho + entidad->initSprite)*2;
      00069B DD 6E EA         [19] 1060 	ld	l, -22 (ix)
      00069E DD 66 EB         [19] 1061 	ld	h, -21 (ix)
      0006A1 7E               [ 7] 1062 	ld	a, (hl)
      0006A2 DD 77 FE         [19] 1063 	ld	-2 (ix), a
      0006A5 5F               [ 4] 1064 	ld	e, a
      0006A6 DD 66 FF         [19] 1065 	ld	h, -1 (ix)
                                   1066 ;	spillPairReg hl
                                   1067 ;	spillPairReg hl
      0006A9 2E 00            [ 7] 1068 	ld	l, #0x00
      0006AB 55               [ 4] 1069 	ld	d, l
      0006AC 06 08            [ 7] 1070 	ld	b, #0x08
      0006AE                       1071 00260$:
      0006AE 29               [11] 1072 	add	hl, hl
      0006AF 30 01            [12] 1073 	jr	NC, 00261$
      0006B1 19               [11] 1074 	add	hl, de
      0006B2                       1075 00261$:
      0006B2 10 FA            [13] 1076 	djnz	00260$
      0006B4 DD 75 FF         [19] 1077 	ld	-1 (ix), l
      0006B7 DD 6E E5         [19] 1078 	ld	l, -27 (ix)
      0006BA DD 66 E6         [19] 1079 	ld	h, -26 (ix)
      0006BD 7E               [ 7] 1080 	ld	a, (hl)
      0006BE DD 77 FE         [19] 1081 	ld	-2 (ix), a
      0006C1 DD 7E FF         [19] 1082 	ld	a, -1 (ix)
      0006C4 DD 86 FE         [19] 1083 	add	a, -2 (ix)
      0006C7 DD 77 FF         [19] 1084 	ld	-1 (ix), a
      0006CA DD CB FF 26      [23] 1085 	sla	-1 (ix)
      0006CE E1               [10] 1086 	pop	hl
      0006CF E5               [11] 1087 	push	hl
      0006D0 DD 7E FF         [19] 1088 	ld	a, -1 (ix)
      0006D3 77               [ 7] 1089 	ld	(hl), a
      0006D4 C3r42r08         [10] 1090 	jp	00134$
      0006D7                       1091 00120$:
                                   1092 ;./lib/entities.c:31: if (entidad->initSprite == 255) {
      0006D7 DD 7E F2         [19] 1093 	ld	a, -14 (ix)
      0006DA DD 77 EC         [19] 1094 	ld	-20 (ix), a
      0006DD DD 7E F3         [19] 1095 	ld	a, -13 (ix)
      0006E0 DD 77 ED         [19] 1096 	ld	-19 (ix), a
      0006E3 DD 7E F7         [19] 1097 	ld	a, -9 (ix)
      0006E6 B7               [ 4] 1098 	or	a, a
      0006E7 CAr42r08         [10] 1099 	jp	Z, 00134$
                                   1100 ;./lib/entities.c:32: if (entidad->frame != sprite->frameInVRAM){
      0006EA DD 6E F4         [19] 1101 	ld	l, -12 (ix)
      0006ED DD 66 F5         [19] 1102 	ld	h, -11 (ix)
      0006F0 7E               [ 7] 1103 	ld	a, (hl)
      0006F1 DD 77 F7         [19] 1104 	ld	-9 (ix), a
      0006F4 DD 7E FA         [19] 1105 	ld	a, -6 (ix)
      0006F7 C6 09            [ 7] 1106 	add	a, #0x09
      0006F9 DD 77 F5         [19] 1107 	ld	-11 (ix), a
      0006FC DD 7E FB         [19] 1108 	ld	a, -5 (ix)
      0006FF CE 00            [ 7] 1109 	adc	a, #0x00
      000701 DD 77 F6         [19] 1110 	ld	-10 (ix), a
      000704 DD 6E F5         [19] 1111 	ld	l, -11 (ix)
      000707 DD 66 F6         [19] 1112 	ld	h, -10 (ix)
      00070A DD 7E F7         [19] 1113 	ld	a,-9 (ix)
      00070D 96               [ 7] 1114 	sub	a,(hl)
      00070E 28 0A            [12] 1115 	jr	Z, 00151$
                                   1116 ;./lib/entities.c:34: sprite->frameInVRAM = entidad->frame;
      000710 DD 6E F5         [19] 1117 	ld	l, -11 (ix)
      000713 DD 66 F6         [19] 1118 	ld	h, -10 (ix)
      000716 DD 7E F7         [19] 1119 	ld	a, -9 (ix)
      000719 77               [ 7] 1120 	ld	(hl), a
                                   1121 ;./lib/entities.c:36: for(j=0;j<sprite->alto;j++) {
      00071A                       1122 00151$:
      00071A DD 7E F8         [19] 1123 	ld	a, -8 (ix)
      00071D DD 77 EE         [19] 1124 	ld	-18 (ix), a
      000720 DD 7E F9         [19] 1125 	ld	a, -7 (ix)
      000723 DD 77 EF         [19] 1126 	ld	-17 (ix), a
      000726 DD 7E F8         [19] 1127 	ld	a, -8 (ix)
      000729 DD 77 F0         [19] 1128 	ld	-16 (ix), a
      00072C DD 7E F9         [19] 1129 	ld	a, -7 (ix)
      00072F DD 77 F1         [19] 1130 	ld	-15 (ix), a
      000732 DD 7E FE         [19] 1131 	ld	a, -2 (ix)
      000735 DD 77 F2         [19] 1132 	ld	-14 (ix), a
      000738 DD 7E FF         [19] 1133 	ld	a, -1 (ix)
      00073B DD 77 F3         [19] 1134 	ld	-13 (ix), a
      00073E DD 36 FE 00      [19] 1135 	ld	-2 (ix), #0x00
      000742                       1136 00132$:
      000742 DD 6E FA         [19] 1137 	ld	l, -6 (ix)
      000745 DD 66 FB         [19] 1138 	ld	h, -5 (ix)
      000748 7E               [ 7] 1139 	ld	a, (hl)
      000749 DD 77 FF         [19] 1140 	ld	-1 (ix), a
      00074C DD 7E FE         [19] 1141 	ld	a, -2 (ix)
      00074F DD 96 FF         [19] 1142 	sub	a, -1 (ix)
      000752 D2r10r08         [10] 1143 	jp	NC, 00116$
                                   1144 ;./lib/entities.c:37: for(i=0;i<sprite->ancho;i++) {
      000755 DD 36 FF 00      [19] 1145 	ld	-1 (ix), #0x00
      000759                       1146 00129$:
      000759 DD 6E F2         [19] 1147 	ld	l, -14 (ix)
      00075C DD 66 F3         [19] 1148 	ld	h, -13 (ix)
      00075F DD 7E FF         [19] 1149 	ld	a,-1 (ix)
      000762 96               [ 7] 1150 	sub	a,(hl)
      000763 D2r0Ar08         [10] 1151 	jp	NC, 00133$
                                   1152 ;./lib/entities.c:21: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      000766 DD 6E FC         [19] 1153 	ld	l, -4 (ix)
      000769 DD 66 FD         [19] 1154 	ld	h, -3 (ix)
      00076C 7E               [ 7] 1155 	ld	a, (hl)
                                   1156 ;./lib/entities.c:39: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),entidad->y+(j<<4), (j<<2) + (i<<1) );  
      00076D DD 4E FF         [19] 1157 	ld	c, -1 (ix)
      000770 06 00            [ 7] 1158 	ld	b, #0x00
      000772 DD 5E FE         [19] 1159 	ld	e, -2 (ix)
      000775 16 00            [ 7] 1160 	ld	d, #0x00
                                   1161 ;./lib/entities.c:21: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      000777 DD 77 F4         [19] 1162 	ld	-12 (ix), a
      00077A DD 36 F5 00      [19] 1163 	ld	-11 (ix), #0x00
                                   1164 ;./lib/entities.c:39: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),entidad->y+(j<<4), (j<<2) + (i<<1) );  
      00077E DD 71 F6         [19] 1165 	ld	-10 (ix), c
      000781 DD 70 F7         [19] 1166 	ld	-9 (ix), b
      000784 3E 03            [ 7] 1167 	ld	a, #0x03
      000786                       1168 00263$:
      000786 DD CB F6 26      [23] 1169 	sla	-10 (ix)
      00078A DD CB F7 16      [23] 1170 	rl	-9 (ix)
      00078E 3D               [ 4] 1171 	dec	a
      00078F 20 F5            [12] 1172 	jr	NZ, 00263$
      000791 6B               [ 4] 1173 	ld	l, e
      000792 62               [ 4] 1174 	ld	h, d
      000793 29               [11] 1175 	add	hl, hl
      000794 29               [11] 1176 	add	hl, hl
      000795 CB 21            [ 8] 1177 	sla	c
      000797 CB 10            [ 8] 1178 	rl	b
      000799 EB               [ 4] 1179 	ex	de, hl
      00079A 29               [11] 1180 	add	hl, hl
      00079B 29               [11] 1181 	add	hl, hl
      00079C 29               [11] 1182 	add	hl, hl
      00079D 29               [11] 1183 	add	hl, hl
      00079E EB               [ 4] 1184 	ex	de, hl
      00079F DD 73 F8         [19] 1185 	ld	-8 (ix), e
      0007A2 DD 72 F9         [19] 1186 	ld	-7 (ix), d
      0007A5 DD 7E F4         [19] 1187 	ld	a, -12 (ix)
      0007A8 DD 86 F6         [19] 1188 	add	a, -10 (ix)
      0007AB 5F               [ 4] 1189 	ld	e, a
      0007AC 3E 00            [ 7] 1190 	ld	a, #0x00
      0007AE DD 8E F7         [19] 1191 	adc	a, -9 (ix)
      0007B1 09               [11] 1192 	add	hl, bc
                                   1193 ;	spillPairReg hl
                                   1194 ;	spillPairReg hl
      0007B2 AF               [ 4] 1195 	xor	a, a
      0007B3 67               [ 4] 1196 	ld	h,a
      0007B4 B5               [ 4] 1197 	or	a, l
      0007B5 DD 77 F6         [19] 1198 	ld	-10 (ix), a
      0007B8 7B               [ 4] 1199 	ld	a, e
      0007B9 B4               [ 4] 1200 	or	a, h
      0007BA DD 77 F7         [19] 1201 	ld	-9 (ix), a
                                   1202 ;./lib/entities.c:38: if(i==0 && j==0) {
      0007BD DD 7E FF         [19] 1203 	ld	a, -1 (ix)
      0007C0 B7               [ 4] 1204 	or	a, a
      0007C1 20 28            [12] 1205 	jr	NZ, 00112$
      0007C3 DD 7E FE         [19] 1206 	ld	a, -2 (ix)
      0007C6 B7               [ 4] 1207 	or	a, a
      0007C7 20 22            [12] 1208 	jr	NZ, 00112$
                                   1209 ;./lib/entities.c:39: entidad->initSprite = SMS_addSprite(entidad->x+(i<<3),entidad->y+(j<<4), (j<<2) + (i<<1) );  
      0007C9 DD 6E F0         [19] 1210 	ld	l, -16 (ix)
      0007CC DD 66 F1         [19] 1211 	ld	h, -15 (ix)
      0007CF 4E               [ 7] 1212 	ld	c, (hl)
      0007D0 06 00            [ 7] 1213 	ld	b, #0x00
      0007D2 DD 6E F8         [19] 1214 	ld	l, -8 (ix)
                                   1215 ;	spillPairReg hl
                                   1216 ;	spillPairReg hl
      0007D5 DD 66 F9         [19] 1217 	ld	h, -7 (ix)
                                   1218 ;	spillPairReg hl
                                   1219 ;	spillPairReg hl
      0007D8 09               [11] 1220 	add	hl, bc
      0007D9 DD 5E F6         [19] 1221 	ld	e, -10 (ix)
      0007DC DD 56 F7         [19] 1222 	ld	d, -9 (ix)
      0007DF CDr00r00         [17] 1223 	call	_SMS_addSprite_f
      0007E2 DD 6E EC         [19] 1224 	ld	l, -20 (ix)
      0007E5 DD 66 ED         [19] 1225 	ld	h, -19 (ix)
      0007E8 77               [ 7] 1226 	ld	(hl), a
      0007E9 18 19            [12] 1227 	jr	00130$
      0007EB                       1228 00112$:
                                   1229 ;./lib/entities.c:42: SMS_addSprite(entidad->x+(i<<3),entidad->y+(j<<4), (j<<2) + (i<<1) );
      0007EB DD 6E EE         [19] 1230 	ld	l, -18 (ix)
      0007EE DD 66 EF         [19] 1231 	ld	h, -17 (ix)
      0007F1 4E               [ 7] 1232 	ld	c, (hl)
      0007F2 06 00            [ 7] 1233 	ld	b, #0x00
      0007F4 DD 6E F8         [19] 1234 	ld	l, -8 (ix)
                                   1235 ;	spillPairReg hl
                                   1236 ;	spillPairReg hl
      0007F7 DD 66 F9         [19] 1237 	ld	h, -7 (ix)
                                   1238 ;	spillPairReg hl
                                   1239 ;	spillPairReg hl
      0007FA 09               [11] 1240 	add	hl, bc
      0007FB DD 5E F6         [19] 1241 	ld	e, -10 (ix)
      0007FE DD 56 F7         [19] 1242 	ld	d, -9 (ix)
      000801 CDr00r00         [17] 1243 	call	_SMS_addSprite_f
      000804                       1244 00130$:
                                   1245 ;./lib/entities.c:37: for(i=0;i<sprite->ancho;i++) {
      000804 DD 34 FF         [23] 1246 	inc	-1 (ix)
      000807 C3r59r07         [10] 1247 	jp	00129$
      00080A                       1248 00133$:
                                   1249 ;./lib/entities.c:36: for(j=0;j<sprite->alto;j++) {
      00080A DD 34 FE         [23] 1250 	inc	-2 (ix)
      00080D C3r42r07         [10] 1251 	jp	00132$
      000810                       1252 00116$:
                                   1253 ;./lib/entities.c:46: entidad->len = sprite->alto * sprite->ancho + entidad->initSprite;
      000810 DD 6E F2         [19] 1254 	ld	l, -14 (ix)
      000813 DD 66 F3         [19] 1255 	ld	h, -13 (ix)
      000816 7E               [ 7] 1256 	ld	a, (hl)
      000817 DD 77 FE         [19] 1257 	ld	-2 (ix), a
      00081A 5F               [ 4] 1258 	ld	e, a
      00081B DD 66 FF         [19] 1259 	ld	h, -1 (ix)
                                   1260 ;	spillPairReg hl
                                   1261 ;	spillPairReg hl
      00081E 2E 00            [ 7] 1262 	ld	l, #0x00
      000820 55               [ 4] 1263 	ld	d, l
      000821 06 08            [ 7] 1264 	ld	b, #0x08
      000823                       1265 00265$:
      000823 29               [11] 1266 	add	hl, hl
      000824 30 01            [12] 1267 	jr	NC, 00266$
      000826 19               [11] 1268 	add	hl, de
      000827                       1269 00266$:
      000827 10 FA            [13] 1270 	djnz	00265$
      000829 DD 75 FF         [19] 1271 	ld	-1 (ix), l
      00082C DD 6E EC         [19] 1272 	ld	l, -20 (ix)
      00082F DD 66 ED         [19] 1273 	ld	h, -19 (ix)
      000832 7E               [ 7] 1274 	ld	a, (hl)
      000833 DD 77 FE         [19] 1275 	ld	-2 (ix), a
      000836 DD 86 FF         [19] 1276 	add	a, -1 (ix)
      000839 DD 77 FF         [19] 1277 	ld	-1 (ix), a
      00083C E1               [10] 1278 	pop	hl
      00083D E5               [11] 1279 	push	hl
      00083E DD 7E FF         [19] 1280 	ld	a, -1 (ix)
      000841 77               [ 7] 1281 	ld	(hl), a
      000842                       1282 00134$:
                                   1283 ;./lib/entities.c:49: }
      000842 DD F9            [10] 1284 	ld	sp, ix
      000844 DD E1            [14] 1285 	pop	ix
      000846 C9               [10] 1286 	ret
                                   1287 ;./alex.c:20: unsigned char canUp(){
                                   1288 ;	---------------------------------
                                   1289 ; Function canUp
                                   1290 ; ---------------------------------
      000847                       1291 _canUp::
                                   1292 ;./alex.c:21: if (alex.x < 2)
      000847 3Ar03r00         [13] 1293 	ld	a, (#_alex + 0)
      00084A D6 02            [ 7] 1294 	sub	a, #0x02
      00084C 30 02            [12] 1295 	jr	NC, 00102$
                                   1296 ;./alex.c:22: return 0;
      00084E AF               [ 4] 1297 	xor	a, a
      00084F C9               [10] 1298 	ret
      000850                       1299 00102$:
                                   1300 ;./alex.c:23: return 1;
      000850 3E 01            [ 7] 1301 	ld	a, #0x01
                                   1302 ;./alex.c:24: }
      000852 C9               [10] 1303 	ret
                                   1304 ;./alex.c:26: unsigned char canDown() {
                                   1305 ;	---------------------------------
                                   1306 ; Function canDown
                                   1307 ; ---------------------------------
      000853                       1308 _canDown::
                                   1309 ;./alex.c:27: if (alex.y > 155)
      000853 21r04r00         [10] 1310 	ld	hl, #_alex+1
      000856 4E               [ 7] 1311 	ld	c, (hl)
      000857 3E 9B            [ 7] 1312 	ld	a, #0x9b
      000859 91               [ 4] 1313 	sub	a, c
      00085A 30 02            [12] 1314 	jr	NC, 00102$
                                   1315 ;./alex.c:28: return 0;
      00085C AF               [ 4] 1316 	xor	a, a
      00085D C9               [10] 1317 	ret
      00085E                       1318 00102$:
                                   1319 ;./alex.c:29: return 1;
      00085E 3E 01            [ 7] 1320 	ld	a, #0x01
                                   1321 ;./alex.c:30: }
      000860 C9               [10] 1322 	ret
                                   1323 ;./alex.c:32: unsigned char canLeft() {
                                   1324 ;	---------------------------------
                                   1325 ; Function canLeft
                                   1326 ; ---------------------------------
      000861                       1327 _canLeft::
                                   1328 ;./alex.c:33: if (alex.x < 9)
      000861 3Ar03r00         [13] 1329 	ld	a, (#_alex + 0)
      000864 D6 09            [ 7] 1330 	sub	a, #0x09
      000866 30 02            [12] 1331 	jr	NC, 00102$
                                   1332 ;./alex.c:34: return 0;
      000868 AF               [ 4] 1333 	xor	a, a
      000869 C9               [10] 1334 	ret
      00086A                       1335 00102$:
                                   1336 ;./alex.c:35: return 1;
      00086A 3E 01            [ 7] 1337 	ld	a, #0x01
                                   1338 ;./alex.c:36: }
      00086C C9               [10] 1339 	ret
                                   1340 ;./alex.c:38: unsigned char canRight() {
                                   1341 ;	---------------------------------
                                   1342 ; Function canRight
                                   1343 ; ---------------------------------
      00086D                       1344 _canRight::
                                   1345 ;./alex.c:39: if (alex.x > 238)
      00086D 21r03r00         [10] 1346 	ld	hl, #_alex+0
      000870 4E               [ 7] 1347 	ld	c, (hl)
      000871 3E EE            [ 7] 1348 	ld	a, #0xee
      000873 91               [ 4] 1349 	sub	a, c
      000874 30 02            [12] 1350 	jr	NC, 00102$
                                   1351 ;./alex.c:40: return 0;
      000876 AF               [ 4] 1352 	xor	a, a
      000877 C9               [10] 1353 	ret
      000878                       1354 00102$:
                                   1355 ;./alex.c:41: return 1;
      000878 3E 01            [ 7] 1356 	ld	a, #0x01
                                   1357 ;./alex.c:42: }
      00087A C9               [10] 1358 	ret
                                   1359 ;./alex.c:44: void moveAlexSuelo(int keys) {
                                   1360 ;	---------------------------------
                                   1361 ; Function moveAlexSuelo
                                   1362 ; ---------------------------------
      00087B                       1363 _moveAlexSuelo::
      00087B DD E5            [15] 1364 	push	ix
      00087D DD 21 00 00      [14] 1365 	ld	ix,#0
      000881 DD 39            [15] 1366 	add	ix,sp
      000883 F5               [11] 1367 	push	af
      000884 F5               [11] 1368 	push	af
      000885 F5               [11] 1369 	push	af
      000886 DD 75 FE         [19] 1370 	ld	-2 (ix), l
      000889 DD 74 FF         [19] 1371 	ld	-1 (ix), h
                                   1372 ;./alex.c:46: if (keys & PORT_A_KEY_LEFT)
      00088C DD 7E FE         [19] 1373 	ld	a, -2 (ix)
      00088F E6 04            [ 7] 1374 	and	a, #0x04
      000891 DD 77 FA         [19] 1375 	ld	-6 (ix), a
      000894 DD 36 FB 00      [19] 1376 	ld	-5 (ix), #0x00
                                   1377 ;./alex.c:48: if (keys & PORT_A_KEY_RIGHT)
      000898 DD 7E FE         [19] 1378 	ld	a, -2 (ix)
      00089B E6 08            [ 7] 1379 	and	a, #0x08
      00089D DD 77 FC         [19] 1380 	ld	-4 (ix), a
      0008A0 DD 36 FD 00      [19] 1381 	ld	-3 (ix), #0x00
                                   1382 ;./alex.c:45: if ((keys & PORT_A_KEY_DOWN)){
      0008A4 DD CB FE 4E      [20] 1383 	bit	1, -2 (ix)
      0008A8 28 33            [12] 1384 	jr	Z, 00109$
                                   1385 ;./alex.c:46: if (keys & PORT_A_KEY_LEFT)
      0008AA AF               [ 4] 1386 	xor	a, a
      0008AB DD B6 FA         [19] 1387 	or	a, -6 (ix)
      0008AE 28 05            [12] 1388 	jr	Z, 00102$
                                   1389 ;./alex.c:47: alex.oriented = 1;
      0008B0 21r07r00         [10] 1390 	ld	hl, #_alex+4
      0008B3 36 01            [10] 1391 	ld	(hl), #0x01
      0008B5                       1392 00102$:
                                   1393 ;./alex.c:48: if (keys & PORT_A_KEY_RIGHT)
      0008B5 AF               [ 4] 1394 	xor	a, a
      0008B6 DD B6 FC         [19] 1395 	or	a, -4 (ix)
      0008B9 28 05            [12] 1396 	jr	Z, 00104$
                                   1397 ;./alex.c:49: alex.oriented = 0;
      0008BB 21r07r00         [10] 1398 	ld	hl, #_alex+4
      0008BE 36 00            [10] 1399 	ld	(hl), #0x00
      0008C0                       1400 00104$:
                                   1401 ;./alex.c:50: if (!alex.oriented)
      0008C0 3Ar07r00         [13] 1402 	ld	a,(#_alex + 4)
                                   1403 ;./alex.c:51: alex.frame = 7;
                                   1404 ;./alex.c:50: if (!alex.oriented)
      0008C3 DD 77 FD         [19] 1405 	ld	-3 (ix), a
      0008C6 B7               [ 4] 1406 	or	a, a
      0008C7 20 07            [12] 1407 	jr	NZ, 00106$
                                   1408 ;./alex.c:51: alex.frame = 7;
      0008C9 21r05r00         [10] 1409 	ld	hl, #(_alex + 2)
      0008CC 36 07            [10] 1410 	ld	(hl), #0x07
      0008CE 18 05            [12] 1411 	jr	00107$
      0008D0                       1412 00106$:
                                   1413 ;./alex.c:53: alex.frame = 15;
      0008D0 21r05r00         [10] 1414 	ld	hl, #(_alex + 2)
      0008D3 36 0F            [10] 1415 	ld	(hl), #0x0f
      0008D5                       1416 00107$:
                                   1417 ;./alex.c:54: alex.lastChangeFrame = 15;
      0008D5 21r06r00         [10] 1418 	ld	hl, #_alex + 3
      0008D8 36 0F            [10] 1419 	ld	(hl), #0x0f
                                   1420 ;./alex.c:55: return; // not move
      0008DA C3r1Ar0A         [10] 1421 	jp	00146$
      0008DD                       1422 00109$:
                                   1423 ;./alex.c:58: if (keys & PORT_A_KEY_2) {
      0008DD DD CB FE 6E      [20] 1424 	bit	5, -2 (ix)
      0008E1 28 2A            [12] 1425 	jr	Z, 00116$
                                   1426 ;./alex.c:59: if (alex.y > 100)
      0008E3 01r04r00         [10] 1427 	ld	bc, #_alex+1
      0008E6 0A               [ 7] 1428 	ld	a, (bc)
      0008E7 5F               [ 4] 1429 	ld	e, a
      0008E8 3E 64            [ 7] 1430 	ld	a, #0x64
      0008EA 93               [ 4] 1431 	sub	a, e
      0008EB 30 09            [12] 1432 	jr	NC, 00111$
                                   1433 ;./alex.c:60: maxSalto = alex.y - 100;
      0008ED 7B               [ 4] 1434 	ld	a, e
      0008EE 21r02r00         [10] 1435 	ld	hl, #_maxSalto
      0008F1 C6 9C            [ 7] 1436 	add	a, #0x9c
      0008F3 77               [ 7] 1437 	ld	(hl), a
      0008F4 18 05            [12] 1438 	jr	00112$
      0008F6                       1439 00111$:
                                   1440 ;./alex.c:62: maxSalto = 0;
      0008F6 21r02r00         [10] 1441 	ld	hl, #_maxSalto
      0008F9 36 00            [10] 1442 	ld	(hl), #0x00
      0008FB                       1443 00112$:
                                   1444 ;./alex.c:63: alex.y--;
      0008FB 0A               [ 7] 1445 	ld	a, (bc)
      0008FC 3D               [ 4] 1446 	dec	a
      0008FD 02               [ 7] 1447 	ld	(bc), a
                                   1448 ;./alex.c:64: alex.y--;
      0008FE 3D               [ 4] 1449 	dec	a
      0008FF 02               [ 7] 1450 	ld	(bc), a
                                   1451 ;./alex.c:65: PSGSFXPlay(salto_psg, SFX_CHANNEL1);
      000900 3E 08            [ 7] 1452 	ld	a, #0x08
      000902 F5               [11] 1453 	push	af
      000903 33               [ 6] 1454 	inc	sp
      000904 21r00r00         [10] 1455 	ld	hl, #_salto_psg
      000907 CDr00r00         [17] 1456 	call	_PSGSFXPlay
                                   1457 ;./alex.c:66: return;
      00090A C3r1Ar0A         [10] 1458 	jp	00146$
      00090D                       1459 00116$:
                                   1460 ;./alex.c:68: else if (keys & PORT_A_KEY_1) {
      00090D DD CB FE 66      [20] 1461 	bit	4, -2 (ix)
      000911 28 0A            [12] 1462 	jr	Z, 00117$
                                   1463 ;./alex.c:69: alex.state = PUÑETAZO_SUELO;
      000913 21r08r00         [10] 1464 	ld	hl, #_alex + 5
      000916 36 20            [10] 1465 	ld	(hl), #0x20
                                   1466 ;./alex.c:70: alex.lastChangeFrame = 15;
      000918 21r06r00         [10] 1467 	ld	hl, #_alex + 3
      00091B 36 0F            [10] 1468 	ld	(hl), #0x0f
      00091D                       1469 00117$:
                                   1470 ;./alex.c:72: if(alex.state != PUÑETAZO_SUELO) {
      00091D 21r08r00         [10] 1471 	ld	hl, #(_alex + 5)
      000920 6E               [ 7] 1472 	ld	l, (hl)
                                   1473 ;	spillPairReg hl
                                   1474 ;./alex.c:76: alex.oriented = 1;
                                   1475 ;./alex.c:77: alex.lastChangeFrame++;
      000921 01r06r00         [10] 1476 	ld	bc, #_alex + 3
                                   1477 ;./alex.c:80: alex.frame++;
      000924 11r05r00         [10] 1478 	ld	de, #_alex + 2
                                   1479 ;./alex.c:72: if(alex.state != PUÑETAZO_SUELO) {
      000927 7D               [ 4] 1480 	ld	a, l
      000928 D6 20            [ 7] 1481 	sub	a, #0x20
      00092A 28 78            [12] 1482 	jr	Z, 00144$
                                   1483 ;./alex.c:73: if ((keys & PORT_A_KEY_LEFT) && alex.x > 8 )
      00092C AF               [ 4] 1484 	xor	a, a
      00092D DD B6 FA         [19] 1485 	or	a, -6 (ix)
      000930 28 32            [12] 1486 	jr	Z, 00135$
      000932 21r03r00         [10] 1487 	ld	hl, #_alex
      000935 6E               [ 7] 1488 	ld	l, (hl)
                                   1489 ;	spillPairReg hl
      000936 3E 08            [ 7] 1490 	ld	a, #0x08
      000938 95               [ 4] 1491 	sub	a, l
      000939 30 29            [12] 1492 	jr	NC, 00135$
                                   1493 ;./alex.c:75: alex.x -= 1;
      00093B 7D               [ 4] 1494 	ld	a, l
      00093C 3D               [ 4] 1495 	dec	a
      00093D 32r03r00         [13] 1496 	ld	(#_alex),a
                                   1497 ;./alex.c:76: alex.oriented = 1;
      000940 21r07r00         [10] 1498 	ld	hl, #(_alex + 4)
      000943 36 01            [10] 1499 	ld	(hl), #0x01
                                   1500 ;./alex.c:77: alex.lastChangeFrame++;
      000945 0A               [ 7] 1501 	ld	a, (bc)
      000946 3C               [ 4] 1502 	inc	a
      000947 02               [ 7] 1503 	ld	(bc), a
                                   1504 ;./alex.c:78: if (alex.lastChangeFrame == 11) {
      000948 D6 0B            [ 7] 1505 	sub	a, #0x0b
      00094A 20 05            [12] 1506 	jr	NZ, 00119$
                                   1507 ;./alex.c:79: alex.lastChangeFrame = 0;
      00094C AF               [ 4] 1508 	xor	a, a
      00094D 02               [ 7] 1509 	ld	(bc), a
                                   1510 ;./alex.c:80: alex.frame++;
      00094E 1A               [ 7] 1511 	ld	a, (de)
      00094F 3C               [ 4] 1512 	inc	a
      000950 12               [ 7] 1513 	ld	(de), a
      000951                       1514 00119$:
                                   1515 ;./alex.c:82: if (alex.frame > 11 || alex.frame < 8)
      000951 1A               [ 7] 1516 	ld	a, (de)
      000952 4F               [ 4] 1517 	ld	c, a
      000953 3E 0B            [ 7] 1518 	ld	a, #0x0b
      000955 91               [ 4] 1519 	sub	a, c
      000956 38 06            [12] 1520 	jr	C, 00120$
      000958 79               [ 4] 1521 	ld	a, c
      000959 D6 08            [ 7] 1522 	sub	a, #0x08
      00095B D2r1Ar0A         [10] 1523 	jp	NC, 00146$
      00095E                       1524 00120$:
                                   1525 ;./alex.c:83: alex.frame = 8;
      00095E 3E 08            [ 7] 1526 	ld	a, #0x08
      000960 12               [ 7] 1527 	ld	(de), a
      000961 C3r1Ar0A         [10] 1528 	jp	00146$
      000964                       1529 00135$:
                                   1530 ;./alex.c:85: else if ((keys & PORT_A_KEY_RIGHT) && alex.x <240)
      000964 AF               [ 4] 1531 	xor	a, a
      000965 DD B6 FC         [19] 1532 	or	a, -4 (ix)
      000968 28 29            [12] 1533 	jr	Z, 00131$
      00096A 3Ar03r00         [13] 1534 	ld	a, (#_alex + 0)
      00096D FE F0            [ 7] 1535 	cp	a, #0xf0
      00096F 30 22            [12] 1536 	jr	NC, 00131$
                                   1537 ;./alex.c:87: alex.x += 1;
      000971 3C               [ 4] 1538 	inc	a
      000972 32r03r00         [13] 1539 	ld	(#_alex),a
                                   1540 ;./alex.c:88: alex.oriented = 0;
      000975 21r07r00         [10] 1541 	ld	hl, #(_alex + 4)
      000978 36 00            [10] 1542 	ld	(hl), #0x00
                                   1543 ;./alex.c:89: alex.lastChangeFrame++;
      00097A 0A               [ 7] 1544 	ld	a, (bc)
      00097B 3C               [ 4] 1545 	inc	a
      00097C 02               [ 7] 1546 	ld	(bc), a
                                   1547 ;./alex.c:90: if (alex.lastChangeFrame == 11) {
      00097D D6 0B            [ 7] 1548 	sub	a, #0x0b
      00097F 20 05            [12] 1549 	jr	NZ, 00124$
                                   1550 ;./alex.c:91: alex.lastChangeFrame = 0;
      000981 AF               [ 4] 1551 	xor	a, a
      000982 02               [ 7] 1552 	ld	(bc), a
                                   1553 ;./alex.c:92: alex.frame++;
      000983 1A               [ 7] 1554 	ld	a, (de)
      000984 3C               [ 4] 1555 	inc	a
      000985 12               [ 7] 1556 	ld	(de), a
      000986                       1557 00124$:
                                   1558 ;./alex.c:94: if (alex.frame > 3 || alex.frame < 0)
      000986 1A               [ 7] 1559 	ld	a, (de)
      000987 4F               [ 4] 1560 	ld	c, a
      000988 3E 03            [ 7] 1561 	ld	a, #0x03
      00098A 91               [ 4] 1562 	sub	a, c
      00098B D2r1Ar0A         [10] 1563 	jp	NC, 00146$
                                   1564 ;./alex.c:95: alex.frame = 0;
      00098E AF               [ 4] 1565 	xor	a, a
      00098F 12               [ 7] 1566 	ld	(de), a
      000990 C3r1Ar0A         [10] 1567 	jp	00146$
      000993                       1568 00131$:
                                   1569 ;./alex.c:99: alex.frame = 4;
      000993 3E 04            [ 7] 1570 	ld	a, #0x04
      000995 12               [ 7] 1571 	ld	(de), a
                                   1572 ;./alex.c:100: if (alex.oriented)
      000996 3Ar07r00         [13] 1573 	ld	a, (#(_alex + 4) + 0)
      000999 B7               [ 4] 1574 	or	a, a
      00099A 28 03            [12] 1575 	jr	Z, 00129$
                                   1576 ;./alex.c:101: alex.frame = 12;
      00099C 3E 0C            [ 7] 1577 	ld	a, #0x0c
      00099E 12               [ 7] 1578 	ld	(de), a
      00099F                       1579 00129$:
                                   1580 ;./alex.c:102: alex.lastChangeFrame = 10;
      00099F 3E 0A            [ 7] 1581 	ld	a, #0x0a
      0009A1 02               [ 7] 1582 	ld	(bc), a
      0009A2 18 76            [12] 1583 	jr	00146$
      0009A4                       1584 00144$:
                                   1585 ;./alex.c:106: if (!alex.oriented) {
      0009A4 3Ar07r00         [13] 1586 	ld	a, (#(_alex + 4) + 0)
                                   1587 ;./alex.c:111: SpriteTableY2[4] = alex.y + 9;
                                   1588 ;./alex.c:106: if (!alex.oriented) {
      0009A7 DD 77 FD         [19] 1589 	ld	-3 (ix), a
      0009AA B7               [ 4] 1590 	or	a, a
      0009AB 20 32            [12] 1591 	jr	NZ, 00139$
                                   1592 ;./alex.c:107: alex.frame = 5;
      0009AD 3E 05            [ 7] 1593 	ld	a, #0x05
      0009AF 12               [ 7] 1594 	ld	(de), a
                                   1595 ;./alex.c:109: SpriteTableXN2[8] = alex.x + 16;
      0009B0 3Ar02r03         [13] 1596 	ld	a, (_SpriteTableXN2+0)
      0009B3 C6 08            [ 7] 1597 	add	a, #0x08
      0009B5 5F               [ 4] 1598 	ld	e, a
      0009B6 3Ar03r03         [13] 1599 	ld	a, (_SpriteTableXN2+1)
      0009B9 CE 00            [ 7] 1600 	adc	a, #0x00
      0009BB 57               [ 4] 1601 	ld	d, a
      0009BC 3Ar03r00         [13] 1602 	ld	a, (#_alex + 0)
      0009BF C6 10            [ 7] 1603 	add	a, #0x10
      0009C1 12               [ 7] 1604 	ld	(de), a
                                   1605 ;./alex.c:110: SpriteTableXN2[9] = 9;
      0009C2 2Ar02r03         [16] 1606 	ld	hl, (_SpriteTableXN2)
      0009C5 11 09 00         [10] 1607 	ld	de, #0x0009
      0009C8 19               [11] 1608 	add	hl, de
      0009C9 36 09            [10] 1609 	ld	(hl), #0x09
                                   1610 ;./alex.c:111: SpriteTableY2[4] = alex.y + 9;
      0009CB 3Ar00r03         [13] 1611 	ld	a, (_SpriteTableY2+0)
      0009CE C6 04            [ 7] 1612 	add	a, #0x04
      0009D0 5F               [ 4] 1613 	ld	e, a
      0009D1 3Ar01r03         [13] 1614 	ld	a, (_SpriteTableY2+1)
      0009D4 CE 00            [ 7] 1615 	adc	a, #0x00
      0009D6 57               [ 4] 1616 	ld	d, a
      0009D7 3Ar04r00         [13] 1617 	ld	a, (#(_alex + 1) + 0)
      0009DA C6 09            [ 7] 1618 	add	a, #0x09
      0009DC 12               [ 7] 1619 	ld	(de), a
      0009DD 18 30            [12] 1620 	jr	00140$
      0009DF                       1621 00139$:
                                   1622 ;./alex.c:114: alex.frame = 13;
      0009DF 3E 0D            [ 7] 1623 	ld	a, #0x0d
      0009E1 12               [ 7] 1624 	ld	(de), a
                                   1625 ;./alex.c:116: SpriteTableXN2[8] = alex.x - 8;
      0009E2 3Ar02r03         [13] 1626 	ld	a, (_SpriteTableXN2+0)
      0009E5 C6 08            [ 7] 1627 	add	a, #0x08
      0009E7 5F               [ 4] 1628 	ld	e, a
      0009E8 3Ar03r03         [13] 1629 	ld	a, (_SpriteTableXN2+1)
      0009EB CE 00            [ 7] 1630 	adc	a, #0x00
      0009ED 57               [ 4] 1631 	ld	d, a
      0009EE 3Ar03r00         [13] 1632 	ld	a, (#_alex + 0)
      0009F1 C6 F8            [ 7] 1633 	add	a, #0xf8
      0009F3 12               [ 7] 1634 	ld	(de), a
                                   1635 ;./alex.c:117: SpriteTableXN2[9] = 11;
      0009F4 2Ar02r03         [16] 1636 	ld	hl, (_SpriteTableXN2)
      0009F7 11 09 00         [10] 1637 	ld	de, #0x0009
      0009FA 19               [11] 1638 	add	hl, de
      0009FB 36 0B            [10] 1639 	ld	(hl), #0x0b
                                   1640 ;./alex.c:118: SpriteTableY2[4] = alex.y + 9;
      0009FD 3Ar00r03         [13] 1641 	ld	a, (_SpriteTableY2+0)
      000A00 C6 04            [ 7] 1642 	add	a, #0x04
      000A02 5F               [ 4] 1643 	ld	e, a
      000A03 3Ar01r03         [13] 1644 	ld	a, (_SpriteTableY2+1)
      000A06 CE 00            [ 7] 1645 	adc	a, #0x00
      000A08 57               [ 4] 1646 	ld	d, a
      000A09 3Ar04r00         [13] 1647 	ld	a, (#(_alex + 1) + 0)
      000A0C C6 09            [ 7] 1648 	add	a, #0x09
      000A0E 12               [ 7] 1649 	ld	(de), a
      000A0F                       1650 00140$:
                                   1651 ;./alex.c:120: alex.lastChangeFrame--;
      000A0F 0A               [ 7] 1652 	ld	a, (bc)
      000A10 3D               [ 4] 1653 	dec	a
      000A11 02               [ 7] 1654 	ld	(bc), a
                                   1655 ;./alex.c:121: if(!alex.lastChangeFrame) {
      000A12 B7               [ 4] 1656 	or	a, a
      000A13 20 05            [12] 1657 	jr	NZ, 00146$
                                   1658 ;./alex.c:122: alex.state = 0;
      000A15 21r08r00         [10] 1659 	ld	hl, #(_alex + 5)
      000A18 36 00            [10] 1660 	ld	(hl), #0x00
      000A1A                       1661 00146$:
                                   1662 ;./alex.c:125: }
      000A1A DD F9            [10] 1663 	ld	sp, ix
      000A1C DD E1            [14] 1664 	pop	ix
      000A1E C9               [10] 1665 	ret
                                   1666 ;./alex.c:127: void moveAlexAire(int keys, unsigned char puedeSubir, unsigned char puedeDerecha, unsigned char puedeIzquieda) {
                                   1667 ;	---------------------------------
                                   1668 ; Function moveAlexAire
                                   1669 ; ---------------------------------
      000A1F                       1670 _moveAlexAire::
      000A1F DD E5            [15] 1671 	push	ix
      000A21 DD 21 00 00      [14] 1672 	ld	ix,#0
      000A25 DD 39            [15] 1673 	add	ix,sp
      000A27 F5               [11] 1674 	push	af
      000A28 3B               [ 6] 1675 	dec	sp
      000A29 DD 75 FE         [19] 1676 	ld	-2 (ix), l
      000A2C DD 74 FF         [19] 1677 	ld	-1 (ix), h
                                   1678 ;./alex.c:128: if (alex.y > maxSalto) {
      000A2F 21r04r00         [10] 1679 	ld	hl, #(_alex + 1)
      000A32 4E               [ 7] 1680 	ld	c, (hl)
                                   1681 ;./alex.c:129: alex.y -= 2;
      000A33 DD 71 FD         [19] 1682 	ld	-3 (ix), c
                                   1683 ;./alex.c:128: if (alex.y > maxSalto) {
      000A36 3Ar02r00         [13] 1684 	ld	a, (_maxSalto+0)
      000A39 91               [ 4] 1685 	sub	a, c
      000A3A 30 0A            [12] 1686 	jr	NC, 00102$
                                   1687 ;./alex.c:129: alex.y -= 2;
      000A3C DD 7E FD         [19] 1688 	ld	a, -3 (ix)
      000A3F 3D               [ 4] 1689 	dec	a
      000A40 3D               [ 4] 1690 	dec	a
      000A41 32r04r00         [13] 1691 	ld	(#(_alex + 1)),a
      000A44 18 10            [12] 1692 	jr	00103$
      000A46                       1693 00102$:
                                   1694 ;./alex.c:132: alex.y += 2; // bajando
      000A46 DD 7E FD         [19] 1695 	ld	a, -3 (ix)
      000A49 3C               [ 4] 1696 	inc	a
      000A4A 3C               [ 4] 1697 	inc	a
      000A4B 32r04r00         [13] 1698 	ld	(#(_alex + 1)),a
                                   1699 ;./alex.c:133: maxSalto = 255;
      000A4E FD 21r02r00      [14] 1700 	ld	iy, #_maxSalto
      000A52 FD 36 00 FF      [19] 1701 	ld	0 (iy), #0xff
      000A56                       1702 00103$:
                                   1703 ;./alex.c:136: if (alex.state != PUÑETAZO_SALTANDO)
                                   1704 ;./alex.c:137: alex.oriented = 1;
                                   1705 ;./alex.c:135: if (keys & PORT_A_KEY_LEFT) {
      000A56 DD CB FE 56      [20] 1706 	bit	2, -2 (ix)
      000A5A 28 1A            [12] 1707 	jr	Z, 00109$
                                   1708 ;./alex.c:136: if (alex.state != PUÑETAZO_SALTANDO)
      000A5C 3Ar08r00         [13] 1709 	ld	a, (#(_alex + 5) + 0)
      000A5F D6 10            [ 7] 1710 	sub	a, #0x10
      000A61 28 05            [12] 1711 	jr	Z, 00105$
                                   1712 ;./alex.c:137: alex.oriented = 1;
      000A63 21r07r00         [10] 1713 	ld	hl, #(_alex + 4)
      000A66 36 01            [10] 1714 	ld	(hl), #0x01
      000A68                       1715 00105$:
                                   1716 ;./alex.c:138: if (puedeIzquieda)
      000A68 DD 7E 06         [19] 1717 	ld	a, 6 (ix)
      000A6B B7               [ 4] 1718 	or	a, a
      000A6C 28 08            [12] 1719 	jr	Z, 00109$
                                   1720 ;./alex.c:139: alex.x -= 2;
      000A6E 3Ar03r00         [13] 1721 	ld	a, (#_alex + 0)
      000A71 3D               [ 4] 1722 	dec	a
      000A72 3D               [ 4] 1723 	dec	a
      000A73 32r03r00         [13] 1724 	ld	(#_alex),a
      000A76                       1725 00109$:
                                   1726 ;./alex.c:141: if (keys & PORT_A_KEY_RIGHT) {
      000A76 DD CB FE 5E      [20] 1727 	bit	3, -2 (ix)
      000A7A 28 1A            [12] 1728 	jr	Z, 00115$
                                   1729 ;./alex.c:142: if (alex.state != PUÑETAZO_SALTANDO)
      000A7C 3Ar08r00         [13] 1730 	ld	a, (#(_alex + 5) + 0)
      000A7F D6 10            [ 7] 1731 	sub	a, #0x10
      000A81 28 05            [12] 1732 	jr	Z, 00111$
                                   1733 ;./alex.c:143: alex.oriented = 0;
      000A83 21r07r00         [10] 1734 	ld	hl, #(_alex + 4)
      000A86 36 00            [10] 1735 	ld	(hl), #0x00
      000A88                       1736 00111$:
                                   1737 ;./alex.c:144: if (puedeDerecha)
      000A88 DD 7E 05         [19] 1738 	ld	a, 5 (ix)
      000A8B B7               [ 4] 1739 	or	a, a
      000A8C 28 08            [12] 1740 	jr	Z, 00115$
                                   1741 ;./alex.c:145: alex.x += 2;
      000A8E 3Ar03r00         [13] 1742 	ld	a, (#_alex + 0)
      000A91 C6 02            [ 7] 1743 	add	a, #0x02
      000A93 32r03r00         [13] 1744 	ld	(#_alex),a
      000A96                       1745 00115$:
                                   1746 ;./alex.c:147: if (alex.state == PUÑETAZO_SALTANDO) {
      000A96 21r08r00         [10] 1747 	ld	hl, #(_alex + 5)
      000A99 4E               [ 7] 1748 	ld	c, (hl)
                                   1749 ;./alex.c:148: alex.lastChangeFrame--;
                                   1750 ;./alex.c:153: alex.frame = 5;
      000A9A 11r05r00         [10] 1751 	ld	de, #_alex + 2
                                   1752 ;./alex.c:147: if (alex.state == PUÑETAZO_SALTANDO) {
      000A9D 79               [ 4] 1753 	ld	a, c
      000A9E D6 10            [ 7] 1754 	sub	a, #0x10
      000AA0 20 22            [12] 1755 	jr	NZ, 00127$
                                   1756 ;./alex.c:148: alex.lastChangeFrame--;
      000AA2 21r06r00         [10] 1757 	ld	hl, #(_alex + 3)
      000AA5 4E               [ 7] 1758 	ld	c, (hl)
      000AA6 0D               [ 4] 1759 	dec	c
      000AA7 21r06r00         [10] 1760 	ld	hl, #(_alex + 3)
                                   1761 ;./alex.c:149: if  (!alex.lastChangeFrame) {
      000AAA 79               [ 4] 1762 	ld	a,c
      000AAB 77               [ 7] 1763 	ld	(hl),a
      000AAC B7               [ 4] 1764 	or	a, a
      000AAD 20 05            [12] 1765 	jr	NZ, 00117$
                                   1766 ;./alex.c:150: alex.state = 0;
      000AAF 21r08r00         [10] 1767 	ld	hl, #(_alex + 5)
      000AB2 36 00            [10] 1768 	ld	(hl), #0x00
      000AB4                       1769 00117$:
                                   1770 ;./alex.c:152: if (!alex.oriented) {
      000AB4 3Ar07r00         [13] 1771 	ld	a, (#(_alex + 4) + 0)
      000AB7 B7               [ 4] 1772 	or	a, a
      000AB8 20 05            [12] 1773 	jr	NZ, 00119$
                                   1774 ;./alex.c:153: alex.frame = 5;
      000ABA 3E 05            [ 7] 1775 	ld	a, #0x05
      000ABC 12               [ 7] 1776 	ld	(de), a
      000ABD 18 23            [12] 1777 	jr	00129$
      000ABF                       1778 00119$:
                                   1779 ;./alex.c:157: alex.frame = 13;
      000ABF 3E 0D            [ 7] 1780 	ld	a, #0x0d
      000AC1 12               [ 7] 1781 	ld	(de), a
      000AC2 18 1E            [12] 1782 	jr	00129$
      000AC4                       1783 00127$:
                                   1784 ;./alex.c:162: if (!alex.oriented)
      000AC4 3Ar07r00         [13] 1785 	ld	a, (#(_alex + 4) + 0)
      000AC7 B7               [ 4] 1786 	or	a, a
      000AC8 20 05            [12] 1787 	jr	NZ, 00122$
                                   1788 ;./alex.c:163: alex.frame = 6;
      000ACA 3E 06            [ 7] 1789 	ld	a, #0x06
      000ACC 12               [ 7] 1790 	ld	(de), a
      000ACD 18 03            [12] 1791 	jr	00123$
      000ACF                       1792 00122$:
                                   1793 ;./alex.c:165: alex.frame = 14;
      000ACF 3E 0E            [ 7] 1794 	ld	a, #0x0e
      000AD1 12               [ 7] 1795 	ld	(de), a
      000AD2                       1796 00123$:
                                   1797 ;./alex.c:166: if (keys & PORT_A_KEY_1) {
      000AD2 DD CB FE 66      [20] 1798 	bit	4, -2 (ix)
      000AD6 28 0A            [12] 1799 	jr	Z, 00129$
                                   1800 ;./alex.c:167: alex.state = PUÑETAZO_SALTANDO;
      000AD8 21r08r00         [10] 1801 	ld	hl, #(_alex + 5)
      000ADB 36 10            [10] 1802 	ld	(hl), #0x10
                                   1803 ;./alex.c:168: alex.lastChangeFrame = 20;
      000ADD 21r06r00         [10] 1804 	ld	hl, #(_alex + 3)
      000AE0 36 14            [10] 1805 	ld	(hl), #0x14
      000AE2                       1806 00129$:
                                   1807 ;./alex.c:172: }
      000AE2 DD F9            [10] 1808 	ld	sp, ix
      000AE4 DD E1            [14] 1809 	pop	ix
      000AE6 E1               [10] 1810 	pop	hl
      000AE7 F1               [10] 1811 	pop	af
      000AE8 33               [ 6] 1812 	inc	sp
      000AE9 E9               [ 4] 1813 	jp	(hl)
                                   1814 ;./alex.c:174: void drawAlex() {
                                   1815 ;	---------------------------------
                                   1816 ; Function drawAlex
                                   1817 ; ---------------------------------
      000AEA                       1818 _drawAlex::
                                   1819 ;./alex.c:175: SpriteTableXN2[0] = alex.x;
      000AEA ED 5Br02r03      [20] 1820 	ld	de, (_SpriteTableXN2)
      000AEE 01r03r00         [10] 1821 	ld	bc, #_alex+0
      000AF1 0A               [ 7] 1822 	ld	a, (bc)
      000AF2 12               [ 7] 1823 	ld	(de), a
                                   1824 ;./alex.c:176: SpriteTableXN2[2] = alex.x + 8;
      000AF3 2Ar02r03         [16] 1825 	ld	hl, (_SpriteTableXN2)
      000AF6 23               [ 6] 1826 	inc	hl
      000AF7 23               [ 6] 1827 	inc	hl
      000AF8 0A               [ 7] 1828 	ld	a, (bc)
      000AF9 C6 08            [ 7] 1829 	add	a, #0x08
      000AFB 77               [ 7] 1830 	ld	(hl), a
                                   1831 ;./alex.c:177: SpriteTableXN2[4] = alex.x;
      000AFC 2Ar02r03         [16] 1832 	ld	hl, (_SpriteTableXN2)
      000AFF 11 04 00         [10] 1833 	ld	de, #0x0004
      000B02 19               [11] 1834 	add	hl, de
      000B03 0A               [ 7] 1835 	ld	a, (bc)
      000B04 77               [ 7] 1836 	ld	(hl), a
                                   1837 ;./alex.c:178: SpriteTableXN2[6] = alex.x + 8;
      000B05 2Ar02r03         [16] 1838 	ld	hl, (_SpriteTableXN2)
      000B08 11 06 00         [10] 1839 	ld	de, #0x0006
      000B0B 19               [11] 1840 	add	hl, de
      000B0C 0A               [ 7] 1841 	ld	a, (bc)
      000B0D C6 08            [ 7] 1842 	add	a, #0x08
      000B0F 77               [ 7] 1843 	ld	(hl), a
                                   1844 ;./alex.c:179: SpriteTableY2[0] = alex.y;
      000B10 ED 5Br00r03      [20] 1845 	ld	de, (_SpriteTableY2)
      000B14 01r04r00         [10] 1846 	ld	bc, #_alex+1
      000B17 0A               [ 7] 1847 	ld	a, (bc)
      000B18 12               [ 7] 1848 	ld	(de), a
                                   1849 ;./alex.c:180: SpriteTableY2[1] = alex.y;
      000B19 2Ar00r03         [16] 1850 	ld	hl, (_SpriteTableY2)
      000B1C 23               [ 6] 1851 	inc	hl
      000B1D 0A               [ 7] 1852 	ld	a, (bc)
      000B1E 77               [ 7] 1853 	ld	(hl), a
                                   1854 ;./alex.c:181: SpriteTableY2[2] = alex.y + 16;
      000B1F 2Ar00r03         [16] 1855 	ld	hl, (_SpriteTableY2)
      000B22 23               [ 6] 1856 	inc	hl
      000B23 23               [ 6] 1857 	inc	hl
      000B24 0A               [ 7] 1858 	ld	a, (bc)
      000B25 C6 10            [ 7] 1859 	add	a, #0x10
      000B27 77               [ 7] 1860 	ld	(hl), a
                                   1861 ;./alex.c:182: SpriteTableY2[3] = alex.y + 16;
      000B28 2Ar00r03         [16] 1862 	ld	hl, (_SpriteTableY2)
      000B2B 23               [ 6] 1863 	inc	hl
      000B2C 23               [ 6] 1864 	inc	hl
      000B2D 23               [ 6] 1865 	inc	hl
      000B2E 0A               [ 7] 1866 	ld	a, (bc)
      000B2F C6 10            [ 7] 1867 	add	a, #0x10
      000B31 77               [ 7] 1868 	ld	(hl), a
                                   1869 ;./alex.c:183: }
      000B32 C9               [10] 1870 	ret
                                   1871 ;./alex.c:186: void moveAlex(int keys) {
                                   1872 ;	---------------------------------
                                   1873 ; Function moveAlex
                                   1874 ; ---------------------------------
      000B33                       1875 _moveAlex::
      000B33 DD E5            [15] 1876 	push	ix
      000B35 DD 21 00 00      [14] 1877 	ld	ix,#0
      000B39 DD 39            [15] 1878 	add	ix,sp
      000B3B 3B               [ 6] 1879 	dec	sp
                                   1880 ;./alex.c:187: unsigned char puedeBajar = canDown();
      000B3C E5               [11] 1881 	push	hl
      000B3D CDr53r08         [17] 1882 	call	_canDown
      000B40 4F               [ 4] 1883 	ld	c, a
      000B41 C5               [11] 1884 	push	bc
      000B42 CDr47r08         [17] 1885 	call	_canUp
      000B45 DD 77 FF         [19] 1886 	ld	-1 (ix), a
      000B48 CDr6Dr08         [17] 1887 	call	_canRight
      000B4B 5F               [ 4] 1888 	ld	e, a
      000B4C D5               [11] 1889 	push	de
      000B4D CDr61r08         [17] 1890 	call	_canLeft
      000B50 D1               [10] 1891 	pop	de
      000B51 C1               [10] 1892 	pop	bc
      000B52 E1               [10] 1893 	pop	hl
                                   1894 ;./alex.c:191: if (puedeBajar)
      000B53 0C               [ 4] 1895 	inc	c
      000B54 0D               [ 4] 1896 	dec	c
      000B55 28 0C            [12] 1897 	jr	Z, 00102$
                                   1898 ;./alex.c:192: moveAlexAire(keys, puedeSubir, puedeDerecha, puedeIzquierda);
      000B57 57               [ 4] 1899 	ld	d,a
      000B58 D5               [11] 1900 	push	de
      000B59 DD 7E FF         [19] 1901 	ld	a, -1 (ix)
      000B5C F5               [11] 1902 	push	af
      000B5D 33               [ 6] 1903 	inc	sp
      000B5E CDr1Fr0A         [17] 1904 	call	_moveAlexAire
      000B61 18 03            [12] 1905 	jr	00103$
      000B63                       1906 00102$:
                                   1907 ;./alex.c:194: moveAlexSuelo(keys);
      000B63 CDr7Br08         [17] 1908 	call	_moveAlexSuelo
      000B66                       1909 00103$:
                                   1910 ;./alex.c:195: drawAlex();
      000B66 CDrEAr0A         [17] 1911 	call	_drawAlex
                                   1912 ;./alex.c:196: }
      000B69 33               [ 6] 1913 	inc	sp
      000B6A DD E1            [14] 1914 	pop	ix
      000B6C C9               [10] 1915 	ret
                                   1916 ;main.c:20: void inicializaPajaros()
                                   1917 ;	---------------------------------
                                   1918 ; Function inicializaPajaros
                                   1919 ; ---------------------------------
      000B6D                       1920 _inicializaPajaros::
      000B6D DD E5            [15] 1921 	push	ix
      000B6F DD 21 00 00      [14] 1922 	ld	ix,#0
      000B73 DD 39            [15] 1923 	add	ix,sp
      000B75 21 F9 FF         [10] 1924 	ld	hl, #-7
      000B78 39               [11] 1925 	add	hl, sp
      000B79 F9               [ 6] 1926 	ld	sp, hl
                                   1927 ;main.c:23: for (i = 0; i < NUM_PAJAROS; i++)
      000B7A DD 36 FF 00      [19] 1928 	ld	-1 (ix), #0x00
      000B7E                       1929 00108$:
                                   1930 ;main.c:25: pajaros[i].x = 15 + 32 * i;
      000B7E DD 4E FF         [19] 1931 	ld	c, -1 (ix)
      000B81 06 00            [ 7] 1932 	ld	b, #0x00
      000B83 69               [ 4] 1933 	ld	l, c
      000B84 60               [ 4] 1934 	ld	h, b
      000B85 29               [11] 1935 	add	hl, hl
      000B86 29               [11] 1936 	add	hl, hl
      000B87 29               [11] 1937 	add	hl, hl
      000B88 7D               [ 4] 1938 	ld	a, l
      000B89 C6r06            [ 7] 1939 	add	a, #<(_pajaros)
      000B8B DD 77 F9         [19] 1940 	ld	-7 (ix), a
      000B8E 7C               [ 4] 1941 	ld	a, h
      000B8F CEs03            [ 7] 1942 	adc	a, #>(_pajaros)
      000B91 DD 77 FA         [19] 1943 	ld	-6 (ix), a
      000B94 DD 7E FF         [19] 1944 	ld	a, -1 (ix)
      000B97 0F               [ 4] 1945 	rrca
      000B98 0F               [ 4] 1946 	rrca
      000B99 0F               [ 4] 1947 	rrca
      000B9A E6 E0            [ 7] 1948 	and	a, #0xe0
      000B9C C6 0F            [ 7] 1949 	add	a, #0x0f
      000B9E E1               [10] 1950 	pop	hl
      000B9F E5               [11] 1951 	push	hl
      000BA0 77               [ 7] 1952 	ld	(hl), a
                                   1953 ;main.c:26: pajaros[i].y = 16 * (i / 2);
      000BA1 DD 7E F9         [19] 1954 	ld	a, -7 (ix)
      000BA4 C6 01            [ 7] 1955 	add	a, #0x01
      000BA6 DD 77 FB         [19] 1956 	ld	-5 (ix), a
      000BA9 DD 7E FA         [19] 1957 	ld	a, -6 (ix)
      000BAC CE 00            [ 7] 1958 	adc	a, #0x00
      000BAE DD 77 FC         [19] 1959 	ld	-4 (ix), a
      000BB1 DD 71 FD         [19] 1960 	ld	-3 (ix), c
      000BB4 DD 70 FE         [19] 1961 	ld	-2 (ix), b
      000BB7 CB 78            [ 8] 1962 	bit	7, b
      000BB9 28 08            [12] 1963 	jr	Z, 00112$
      000BBB DD 36 FD 01      [19] 1964 	ld	-3 (ix), #0x01
      000BBF DD 36 FE 00      [19] 1965 	ld	-2 (ix), #0
      000BC3                       1966 00112$:
      000BC3 DD 4E FD         [19] 1967 	ld	c, -3 (ix)
      000BC6 1E 00            [ 7] 1968 	ld	e, #0x00
      000BC8 CB 2B            [ 8] 1969 	sra	e
      000BCA CB 19            [ 8] 1970 	rr	c
      000BCC 79               [ 4] 1971 	ld	a, c
      000BCD 87               [ 4] 1972 	add	a, a
      000BCE 87               [ 4] 1973 	add	a, a
      000BCF 87               [ 4] 1974 	add	a, a
      000BD0 87               [ 4] 1975 	add	a, a
      000BD1 C1               [10] 1976 	pop	bc
      000BD2 E1               [10] 1977 	pop	hl
      000BD3 E5               [11] 1978 	push	hl
      000BD4 C5               [11] 1979 	push	bc
      000BD5 77               [ 7] 1980 	ld	(hl), a
                                   1981 ;main.c:27: pajaros[i].lastChangeFrame = i * 3;
      000BD6 C1               [10] 1982 	pop	bc
      000BD7 C5               [11] 1983 	push	bc
      000BD8 03               [ 6] 1984 	inc	bc
      000BD9 03               [ 6] 1985 	inc	bc
      000BDA 03               [ 6] 1986 	inc	bc
      000BDB DD 7E FF         [19] 1987 	ld	a, -1 (ix)
      000BDE 5F               [ 4] 1988 	ld	e, a
      000BDF 87               [ 4] 1989 	add	a, a
      000BE0 83               [ 4] 1990 	add	a, e
      000BE1 02               [ 7] 1991 	ld	(bc), a
                                   1992 ;main.c:28: pajaros[i].initSprite = 255;
      000BE2 DD 7E F9         [19] 1993 	ld	a, -7 (ix)
      000BE5 C6 06            [ 7] 1994 	add	a, #0x06
      000BE7 5F               [ 4] 1995 	ld	e, a
      000BE8 DD 7E FA         [19] 1996 	ld	a, -6 (ix)
      000BEB CE 00            [ 7] 1997 	adc	a, #0x00
      000BED 57               [ 4] 1998 	ld	d, a
      000BEE 3E FF            [ 7] 1999 	ld	a, #0xff
      000BF0 12               [ 7] 2000 	ld	(de), a
                                   2001 ;main.c:30: pajaros[i].x++;
      000BF1 E1               [10] 2002 	pop	hl
      000BF2 E5               [11] 2003 	push	hl
      000BF3 7E               [ 7] 2004 	ld	a, (hl)
      000BF4 3C               [ 4] 2005 	inc	a
      000BF5 E1               [10] 2006 	pop	hl
      000BF6 E5               [11] 2007 	push	hl
      000BF7 77               [ 7] 2008 	ld	(hl), a
                                   2009 ;main.c:31: pajaros[i].lastChangeFrame++;
      000BF8 0A               [ 7] 2010 	ld	a, (bc)
      000BF9 3C               [ 4] 2011 	inc	a
      000BFA 02               [ 7] 2012 	ld	(bc), a
                                   2013 ;main.c:32: if (pajaros[i].lastChangeFrame == 20)
      000BFB D6 14            [ 7] 2014 	sub	a, #0x14
      000BFD 20 15            [12] 2015 	jr	NZ, 00104$
                                   2016 ;main.c:34: pajaros[i].frame++;
      000BFF E1               [10] 2017 	pop	hl
      000C00 E5               [11] 2018 	push	hl
      000C01 23               [ 6] 2019 	inc	hl
      000C02 23               [ 6] 2020 	inc	hl
      000C03 7E               [ 7] 2021 	ld	a, (hl)
      000C04 3C               [ 4] 2022 	inc	a
      000C05 DD 77 FE         [19] 2023 	ld	-2 (ix), a
      000C08 77               [ 7] 2024 	ld	(hl), a
                                   2025 ;main.c:35: if (pajaros[i].frame > 1)
      000C09 3E 01            [ 7] 2026 	ld	a, #0x01
      000C0B DD 96 FE         [19] 2027 	sub	a, -2 (ix)
      000C0E 30 02            [12] 2028 	jr	NC, 00102$
                                   2029 ;main.c:36: pajaros[i].frame = 0;
      000C10 36 00            [10] 2030 	ld	(hl), #0x00
      000C12                       2031 00102$:
                                   2032 ;main.c:37: pajaros[i].lastChangeFrame = 0;
      000C12 AF               [ 4] 2033 	xor	a, a
      000C13 02               [ 7] 2034 	ld	(bc), a
      000C14                       2035 00104$:
                                   2036 ;main.c:39: if(pajaros[i].initSprite == 255) {
      000C14 1A               [ 7] 2037 	ld	a, (de)
      000C15 3C               [ 4] 2038 	inc	a
      000C16 20 08            [12] 2039 	jr	NZ, 00109$
                                   2040 ;main.c:40: draw_entidad(&(pajaros[i]), &spritePajaro);
      000C18 11r15r00         [10] 2041 	ld	de, #_spritePajaro
      000C1B E1               [10] 2042 	pop	hl
      000C1C E5               [11] 2043 	push	hl
      000C1D CDr40r04         [17] 2044 	call	_draw_entidad
      000C20                       2045 00109$:
                                   2046 ;main.c:23: for (i = 0; i < NUM_PAJAROS; i++)
      000C20 DD 34 FF         [23] 2047 	inc	-1 (ix)
      000C23 DD 7E FF         [19] 2048 	ld	a, -1 (ix)
      000C26 D6 13            [ 7] 2049 	sub	a, #0x13
      000C28 DAr7Er0B         [10] 2050 	jp	C, 00108$
                                   2051 ;main.c:43: }
      000C2B DD F9            [10] 2052 	ld	sp, ix
      000C2D DD E1            [14] 2053 	pop	ix
      000C2F C9               [10] 2054 	ret
                                   2055 ;main.c:45: void loadGrapVRAM()
                                   2056 ;	---------------------------------
                                   2057 ; Function loadGrapVRAM
                                   2058 ; ---------------------------------
      000C30                       2059 _loadGrapVRAM::
      000C30 DD E5            [15] 2060 	push	ix
      000C32 DD 21 00 00      [14] 2061 	ld	ix,#0
      000C36 DD 39            [15] 2062 	add	ix,sp
      000C38 21 E2 FF         [10] 2063 	ld	hl, #-30
      000C3B 39               [11] 2064 	add	hl, sp
      000C3C F9               [ 6] 2065 	ld	sp, hl
                                   2066 ;main.c:47: SMS_init();
      000C3D CDr00r00         [17] 2067 	call	_SMS_init
                                   2068 ;main.c:50: SMS_setSpriteMode(SPRITEMODE_TALL);
      000C40 2E 01            [ 7] 2069 	ld	l, #0x01
                                   2070 ;	spillPairReg hl
                                   2071 ;	spillPairReg hl
      000C42 CDr00r00         [17] 2072 	call	_SMS_setSpriteMode
                                   2073 ;main.c:51: SMS_displayOn();
      000C45 21 40 01         [10] 2074 	ld	hl, #0x0140
      000C48 CDr00r00         [17] 2075 	call	_SMS_VDPturnOnFeature
                                   2076 ;main.c:52: SMS_loadBGPalette(sonicpalette_inc);
      000C4B 21r00r00         [10] 2077 	ld	hl, #_sonicpalette_inc
      000C4E CDr00r00         [17] 2078 	call	_SMS_loadBGPalette
                                   2079 ;main.c:53: SMS_loadSpritePalette(palleteAlex_inc);
      000C51 21r00r00         [10] 2080 	ld	hl, #_palleteAlex_inc
      000C54 CDr00r00         [17] 2081 	call	_SMS_loadSpritePalette
                                   2082 ;main.c:55: spriteAlex = generateSpriteNoRAM(2, 2, spriteAlex_inc_size, spriteAlex_inc);
      000C57 21r00r00         [10] 2083 	ld	hl, #_spriteAlex_inc
      000C5A E5               [11] 2084 	push	hl
      000C5B 21 00 10         [10] 2085 	ld	hl, #0x1000
      000C5E E5               [11] 2086 	push	hl
                                   2087 ;	spillPairReg hl
                                   2088 ;	spillPairReg hl
      000C5F 3E 02            [ 7] 2089 	ld	a,#0x02
      000C61 6F               [ 4] 2090 	ld	l,a
      000C62 E5               [11] 2091 	push	hl
      000C63 21 06 00         [10] 2092 	ld	hl, #0x0006
      000C66 39               [11] 2093 	add	hl, sp
      000C67 EB               [ 4] 2094 	ex	de,hl
      000C68 E1               [10] 2095 	pop	hl
      000C69 D5               [11] 2096 	push	de
      000C6A CDrAAr00         [17] 2097 	call	_generateSpriteNoRAM
      000C6D F1               [10] 2098 	pop	af
      000C6E F1               [10] 2099 	pop	af
      000C6F F1               [10] 2100 	pop	af
      000C70 11r0Br00         [10] 2101 	ld	de, #_spriteAlex
      000C73 21 00 00         [10] 2102 	ld	hl, #0
      000C76 39               [11] 2103 	add	hl, sp
      000C77 01 0A 00         [10] 2104 	ld	bc, #0x000a
      000C7A ED B0            [21] 2105 	ldir
                                   2106 ;main.c:56: spritePuno = generateSprite(1, 2, puno_inc_size, puno_inc);
      000C7C 21r00r00         [10] 2107 	ld	hl, #_puno_inc
      000C7F E5               [11] 2108 	push	hl
      000C80 21 80 00         [10] 2109 	ld	hl, #0x0080
      000C83 E5               [11] 2110 	push	hl
      000C84 2E 02            [ 7] 2111 	ld	l, #0x02
                                   2112 ;	spillPairReg hl
                                   2113 ;	spillPairReg hl
      000C86 3E 01            [ 7] 2114 	ld	a, #0x01
      000C88 E5               [11] 2115 	push	hl
      000C89 21 10 00         [10] 2116 	ld	hl, #0x0010
      000C8C 39               [11] 2117 	add	hl, sp
      000C8D EB               [ 4] 2118 	ex	de,hl
      000C8E E1               [10] 2119 	pop	hl
      000C8F D5               [11] 2120 	push	de
      000C90 CDr00r00         [17] 2121 	call	_generateSprite
      000C93 F1               [10] 2122 	pop	af
      000C94 F1               [10] 2123 	pop	af
      000C95 F1               [10] 2124 	pop	af
      000C96 11r1Fr00         [10] 2125 	ld	de, #_spritePuno
      000C99 21 0A 00         [10] 2126 	ld	hl, #10
      000C9C 39               [11] 2127 	add	hl, sp
      000C9D 01 0A 00         [10] 2128 	ld	bc, #0x000a
      000CA0 ED B0            [21] 2129 	ldir
                                   2130 ;main.c:57: spritePajaro = generateSprite(3, 1, spritePajaro_inc_size, spritePajaro_inc);
      000CA2 21r00r00         [10] 2131 	ld	hl, #_spritePajaro_inc
      000CA5 E5               [11] 2132 	push	hl
      000CA6 21 80 01         [10] 2133 	ld	hl, #0x0180
      000CA9 E5               [11] 2134 	push	hl
      000CAA 2E 01            [ 7] 2135 	ld	l, #0x01
                                   2136 ;	spillPairReg hl
                                   2137 ;	spillPairReg hl
      000CAC 3E 03            [ 7] 2138 	ld	a, #0x03
      000CAE E5               [11] 2139 	push	hl
      000CAF 21 1A 00         [10] 2140 	ld	hl, #0x001a
      000CB2 39               [11] 2141 	add	hl, sp
      000CB3 EB               [ 4] 2142 	ex	de,hl
      000CB4 E1               [10] 2143 	pop	hl
      000CB5 D5               [11] 2144 	push	de
      000CB6 CDr00r00         [17] 2145 	call	_generateSprite
      000CB9 F1               [10] 2146 	pop	af
      000CBA F1               [10] 2147 	pop	af
      000CBB F1               [10] 2148 	pop	af
      000CBC 11r15r00         [10] 2149 	ld	de, #_spritePajaro
      000CBF 21 14 00         [10] 2150 	ld	hl, #20
      000CC2 39               [11] 2151 	add	hl, sp
      000CC3 01 0A 00         [10] 2152 	ld	bc, #0x000a
      000CC6 ED B0            [21] 2153 	ldir
                                   2154 ;main.c:58: SMS_initSprites();
      000CC8 CDr00r00         [17] 2155 	call	_SMS_initSprites
                                   2156 ;main.c:59: alex.initSprite = 255;
      000CCB 21r09r00         [10] 2157 	ld	hl, #_alex + 6
      000CCE 36 FF            [10] 2158 	ld	(hl), #0xff
                                   2159 ;main.c:60: draw_entidad(&alex, &spriteAlex);
      000CD0 11r0Br00         [10] 2160 	ld	de, #_spriteAlex
      000CD3 21r03r00         [10] 2161 	ld	hl, #_alex
      000CD6 CDr40r04         [17] 2162 	call	_draw_entidad
                                   2163 ;main.c:61: SMS_addSprite (0, 0, 9);
      000CD9 11 09 00         [10] 2164 	ld	de, #0x0009
      000CDC 21 00 00         [10] 2165 	ld	hl, #0x0000
      000CDF CDr00r00         [17] 2166 	call	_SMS_addSprite_f
                                   2167 ;main.c:62: inicializaPajaros();
      000CE2 CDr6Dr0B         [17] 2168 	call	_inicializaPajaros
                                   2169 ;main.c:67: SMS_loadTiles(tiles_de_prueba2_inc, 0, tiles_de_prueba2_inc_size);
      000CE5 21 A0 00         [10] 2170 	ld	hl, #0x00a0
      000CE8 E5               [11] 2171 	push	hl
      000CE9 11r00r00         [10] 2172 	ld	de, #_tiles_de_prueba2_inc
      000CEC 21 00 40         [10] 2173 	ld	hl, #0x4000
      000CEF CDr00r00         [17] 2174 	call	_SMS_VRAMmemcpy
                                   2175 ;main.c:68: SMS_loadTileMap(0, 0, tilemap_de_prueba2_inc, tilemap_de_prueba2_inc_size);
      000CF2 21 80 07         [10] 2176 	ld	hl, #0x0780
      000CF5 E5               [11] 2177 	push	hl
      000CF6 11r00r00         [10] 2178 	ld	de, #_tilemap_de_prueba2_inc
      000CF9 21 00 78         [10] 2179 	ld	hl, #0x7800
      000CFC CDr00r00         [17] 2180 	call	_SMS_VRAMmemcpy
                                   2181 ;main.c:69: SMS_loadBGPalette(paleta_de_prueba2_inc);
      000CFF 21r00r00         [10] 2182 	ld	hl, #_paleta_de_prueba2_inc
      000D02 CDr00r00         [17] 2183 	call	_SMS_loadBGPalette
                                   2184 ;main.c:70: SMS_setSpritePaletteColor(0,0);
                                   2185 ;	spillPairReg hl
                                   2186 ;	spillPairReg hl
      000D05 AF               [ 4] 2187 	xor	a, a
      000D06 6F               [ 4] 2188 	ld	l, a
      000D07 CDr00r00         [17] 2189 	call	_SMS_setSpritePaletteColor
                                   2190 ;main.c:71: }
      000D0A DD F9            [10] 2191 	ld	sp, ix
      000D0C DD E1            [14] 2192 	pop	ix
      000D0E C9               [10] 2193 	ret
                                   2194 ;main.c:73: void dibujaPajaros()
                                   2195 ;	---------------------------------
                                   2196 ; Function dibujaPajaros
                                   2197 ; ---------------------------------
      000D0F                       2198 _dibujaPajaros::
      000D0F DD E5            [15] 2199 	push	ix
      000D11 DD 21 00 00      [14] 2200 	ld	ix,#0
      000D15 DD 39            [15] 2201 	add	ix,sp
      000D17 21 F6 FF         [10] 2202 	ld	hl, #-10
      000D1A 39               [11] 2203 	add	hl, sp
      000D1B F9               [ 6] 2204 	ld	sp, hl
                                   2205 ;main.c:78: unsigned char initPajaros = pajaros[0].initSprite;
      000D1C 3Ar0Cr03         [13] 2206 	ld	a,(#_pajaros + 6)
      000D1F DD 77 FA         [19] 2207 	ld	-6 (ix), a
                                   2208 ;main.c:79: for (i = 0; i < NUM_PAJAROS; i++)
      000D22 DD 36 FE 00      [19] 2209 	ld	-2 (ix), #0x00
      000D26                       2210 00119$:
                                   2211 ;main.c:81: T_entidad *p = &pajaros[i];
      000D26 DD 6E FE         [19] 2212 	ld	l, -2 (ix)
                                   2213 ;	spillPairReg hl
                                   2214 ;	spillPairReg hl
      000D29 26 00            [ 7] 2215 	ld	h, #0x00
                                   2216 ;	spillPairReg hl
                                   2217 ;	spillPairReg hl
      000D2B 29               [11] 2218 	add	hl, hl
      000D2C 29               [11] 2219 	add	hl, hl
      000D2D 29               [11] 2220 	add	hl, hl
      000D2E 11r06r03         [10] 2221 	ld	de, #_pajaros
      000D31 19               [11] 2222 	add	hl, de
                                   2223 ;main.c:82: p->x++;
      000D32 DD 75 FB         [19] 2224 	ld	-5 (ix), l
      000D35 DD 74 FC         [19] 2225 	ld	-4 (ix), h
      000D38 7E               [ 7] 2226 	ld	a, (hl)
      000D39 3C               [ 4] 2227 	inc	a
      000D3A DD 6E FB         [19] 2228 	ld	l, -5 (ix)
      000D3D DD 66 FC         [19] 2229 	ld	h, -4 (ix)
      000D40 77               [ 7] 2230 	ld	(hl), a
                                   2231 ;main.c:83: p->lastChangeFrame++;
      000D41 DD 7E FB         [19] 2232 	ld	a, -5 (ix)
      000D44 C6 03            [ 7] 2233 	add	a, #0x03
      000D46 DD 77 F6         [19] 2234 	ld	-10 (ix), a
      000D49 DD 7E FC         [19] 2235 	ld	a, -4 (ix)
      000D4C CE 00            [ 7] 2236 	adc	a, #0x00
      000D4E DD 77 F7         [19] 2237 	ld	-9 (ix), a
      000D51 E1               [10] 2238 	pop	hl
      000D52 E5               [11] 2239 	push	hl
      000D53 7E               [ 7] 2240 	ld	a, (hl)
      000D54 3C               [ 4] 2241 	inc	a
      000D55 E1               [10] 2242 	pop	hl
      000D56 E5               [11] 2243 	push	hl
      000D57 77               [ 7] 2244 	ld	(hl), a
                                   2245 ;main.c:85: if (p->lastChangeFrame == 20)
      000D58 D6 14            [ 7] 2246 	sub	a, #0x14
      000D5A C2rEFr0D         [10] 2247 	jp	NZ,00108$
                                   2248 ;main.c:87: p->frame++;
      000D5D DD 7E FB         [19] 2249 	ld	a, -5 (ix)
      000D60 C6 02            [ 7] 2250 	add	a, #0x02
      000D62 DD 77 F8         [19] 2251 	ld	-8 (ix), a
      000D65 DD 7E FC         [19] 2252 	ld	a, -4 (ix)
      000D68 CE 00            [ 7] 2253 	adc	a, #0x00
      000D6A DD 77 F9         [19] 2254 	ld	-7 (ix), a
      000D6D DD 6E F8         [19] 2255 	ld	l, -8 (ix)
      000D70 DD 66 F9         [19] 2256 	ld	h, -7 (ix)
      000D73 4E               [ 7] 2257 	ld	c, (hl)
      000D74 0C               [ 4] 2258 	inc	c
      000D75 D1               [10] 2259 	pop	de
      000D76 E1               [10] 2260 	pop	hl
      000D77 E5               [11] 2261 	push	hl
      000D78 D5               [11] 2262 	push	de
      000D79 71               [ 7] 2263 	ld	(hl), c
                                   2264 ;main.c:88: if (p->frame > 1)
      000D7A 3E 01            [ 7] 2265 	ld	a, #0x01
      000D7C 91               [ 4] 2266 	sub	a, c
      000D7D 30 06            [12] 2267 	jr	NC, 00104$
                                   2268 ;main.c:89: p->frame = 0;
      000D7F C1               [10] 2269 	pop	bc
      000D80 E1               [10] 2270 	pop	hl
      000D81 E5               [11] 2271 	push	hl
      000D82 C5               [11] 2272 	push	bc
      000D83 36 00            [10] 2273 	ld	(hl), #0x00
      000D85                       2274 00104$:
                                   2275 ;main.c:90: p->lastChangeFrame = 0;
      000D85 E1               [10] 2276 	pop	hl
      000D86 36 00            [10] 2277 	ld	(hl), #0x00
      000D88 E5               [11] 2278 	push	hl
                                   2279 ;main.c:91: int frame = spritePajaro.tamano*p->frame + spritePajaro.beginVRAM;
      000D89 21r17r00         [10] 2280 	ld	hl, #_spritePajaro + 2
      000D8C 5E               [ 7] 2281 	ld	e, (hl)
      000D8D DD 6E F8         [19] 2282 	ld	l, -8 (ix)
      000D90 DD 66 F9         [19] 2283 	ld	h, -7 (ix)
      000D93 66               [ 7] 2284 	ld	h, (hl)
                                   2285 ;	spillPairReg hl
      000D94 2E 00            [ 7] 2286 	ld	l, #0x00
      000D96 55               [ 4] 2287 	ld	d, l
      000D97 06 08            [ 7] 2288 	ld	b, #0x08
      000D99                       2289 00191$:
      000D99 29               [11] 2290 	add	hl, hl
      000D9A 30 01            [12] 2291 	jr	NC, 00192$
      000D9C 19               [11] 2292 	add	hl, de
      000D9D                       2293 00192$:
      000D9D 10 FA            [13] 2294 	djnz	00191$
      000D9F 4D               [ 4] 2295 	ld	c, l
      000DA0 3Ar19r00         [13] 2296 	ld	a, (#_spritePajaro + 4)
      000DA3 81               [ 4] 2297 	add	a, c
      000DA4 DD 77 FD         [19] 2298 	ld	-3 (ix), a
                                   2299 ;main.c:92: for(j=0;j<spritePajaro.alto;j++) {
      000DA7 DD 36 FF 00      [19] 2300 	ld	-1 (ix), #0x00
      000DAB                       2301 00117$:
      000DAB 21r15r00         [10] 2302 	ld	hl, #_spritePajaro
      000DAE DD 7E FF         [19] 2303 	ld	a,-1 (ix)
      000DB1 96               [ 7] 2304 	sub	a,(hl)
      000DB2 30 3B            [12] 2305 	jr	NC, 00108$
                                   2306 ;main.c:93: unsigned char desplazado = (j<<2);
      000DB4 DD 7E FF         [19] 2307 	ld	a, -1 (ix)
      000DB7 87               [ 4] 2308 	add	a, a
      000DB8 87               [ 4] 2309 	add	a, a
                                   2310 ;main.c:94: unsigned char jCalculated = desplazado + frame, y = p->y+(desplazado<<2);
      000DB9 DD 86 FD         [19] 2311 	add	a, -3 (ix)
      000DBC 5F               [ 4] 2312 	ld	e, a
                                   2313 ;main.c:95: for(i2=0;i2<spritePajaro.ancho;i2++) {
      000DBD 16 00            [ 7] 2314 	ld	d, #0x00
      000DBF                       2315 00114$:
      000DBF 21r16r00         [10] 2316 	ld	hl, #_spritePajaro + 1
      000DC2 4E               [ 7] 2317 	ld	c, (hl)
      000DC3 7A               [ 4] 2318 	ld	a, d
      000DC4 91               [ 4] 2319 	sub	a, c
      000DC5 30 23            [12] 2320 	jr	NC, 00118$
                                   2321 ;main.c:96: SpriteTableXN2[(i2+initPajaros)*2+1] = jCalculated + (i2<<1);
      000DC7 4A               [ 4] 2322 	ld	c, d
      000DC8 06 00            [ 7] 2323 	ld	b, #0x00
      000DCA DD 6E FA         [19] 2324 	ld	l, -6 (ix)
                                   2325 ;	spillPairReg hl
                                   2326 ;	spillPairReg hl
      000DCD 26 00            [ 7] 2327 	ld	h, #0x00
                                   2328 ;	spillPairReg hl
                                   2329 ;	spillPairReg hl
      000DCF 09               [11] 2330 	add	hl, bc
      000DD0 29               [11] 2331 	add	hl, hl
      000DD1 23               [ 6] 2332 	inc	hl
      000DD2 4D               [ 4] 2333 	ld	c, l
      000DD3 44               [ 4] 2334 	ld	b, h
      000DD4 79               [ 4] 2335 	ld	a, c
      000DD5 FD 21r02r03      [14] 2336 	ld	iy, #_SpriteTableXN2
      000DD9 FD 86 00         [19] 2337 	add	a, 0 (iy)
      000DDC 4F               [ 4] 2338 	ld	c, a
      000DDD 78               [ 4] 2339 	ld	a, b
      000DDE FD 8E 01         [19] 2340 	adc	a, 1 (iy)
      000DE1 47               [ 4] 2341 	ld	b, a
      000DE2 7A               [ 4] 2342 	ld	a, d
      000DE3 87               [ 4] 2343 	add	a, a
      000DE4 6B               [ 4] 2344 	ld	l, e
                                   2345 ;	spillPairReg hl
                                   2346 ;	spillPairReg hl
      000DE5 85               [ 4] 2347 	add	a, l
      000DE6 02               [ 7] 2348 	ld	(bc), a
                                   2349 ;main.c:95: for(i2=0;i2<spritePajaro.ancho;i2++) {
      000DE7 14               [ 4] 2350 	inc	d
      000DE8 18 D5            [12] 2351 	jr	00114$
      000DEA                       2352 00118$:
                                   2353 ;main.c:92: for(j=0;j<spritePajaro.alto;j++) {
      000DEA DD 34 FF         [23] 2354 	inc	-1 (ix)
      000DED 18 BC            [12] 2355 	jr	00117$
      000DEF                       2356 00108$:
                                   2357 ;main.c:100: initPajaros +=3;
      000DEF DD 7E FA         [19] 2358 	ld	a, -6 (ix)
      000DF2 C6 03            [ 7] 2359 	add	a, #0x03
      000DF4 DD 77 FA         [19] 2360 	ld	-6 (ix), a
                                   2361 ;main.c:101: end = p->len;
      000DF7 DD 4E FB         [19] 2362 	ld	c, -5 (ix)
      000DFA DD 46 FC         [19] 2363 	ld	b, -4 (ix)
      000DFD 21 07 00         [10] 2364 	ld	hl, #7
      000E00 09               [11] 2365 	add	hl, bc
      000E01 4E               [ 7] 2366 	ld	c, (hl)
                                   2367 ;main.c:102: i2 = p->initSprite << 1;
      000E02 DD 5E FB         [19] 2368 	ld	e, -5 (ix)
      000E05 DD 56 FC         [19] 2369 	ld	d, -4 (ix)
      000E08 21 06 00         [10] 2370 	ld	hl, #6
      000E0B 19               [11] 2371 	add	hl, de
      000E0C 7E               [ 7] 2372 	ld	a, (hl)
      000E0D 87               [ 4] 2373 	add	a, a
      000E0E 47               [ 4] 2374 	ld	b, a
                                   2375 ;main.c:103: while(i2<end) {
      000E0F                       2376 00109$:
                                   2377 ;main.c:104: SpriteTableXN2[i2] += 1;
      000E0F 78               [ 4] 2378 	ld	a,b
      000E10 B9               [ 4] 2379 	cp	a,c
      000E11 30 11            [12] 2380 	jr	NC, 00120$
      000E13 21r02r03         [10] 2381 	ld	hl, #_SpriteTableXN2
      000E16 86               [ 7] 2382 	add	a, (hl)
      000E17 23               [ 6] 2383 	inc	hl
      000E18 5F               [ 4] 2384 	ld	e, a
      000E19 3E 00            [ 7] 2385 	ld	a, #0x00
      000E1B 8E               [ 7] 2386 	adc	a, (hl)
      000E1C 57               [ 4] 2387 	ld	d, a
      000E1D 1A               [ 7] 2388 	ld	a, (de)
      000E1E 3C               [ 4] 2389 	inc	a
      000E1F 12               [ 7] 2390 	ld	(de), a
                                   2391 ;main.c:105: i2 +=2;
      000E20 04               [ 4] 2392 	inc	b
      000E21 04               [ 4] 2393 	inc	b
      000E22 18 EB            [12] 2394 	jr	00109$
      000E24                       2395 00120$:
                                   2396 ;main.c:79: for (i = 0; i < NUM_PAJAROS; i++)
      000E24 DD 34 FE         [23] 2397 	inc	-2 (ix)
      000E27 DD 7E FE         [19] 2398 	ld	a, -2 (ix)
      000E2A D6 13            [ 7] 2399 	sub	a, #0x13
      000E2C DAr26r0D         [10] 2400 	jp	C, 00119$
                                   2401 ;main.c:110: }
      000E2F DD F9            [10] 2402 	ld	sp, ix
      000E31 DD E1            [14] 2403 	pop	ix
      000E33 C9               [10] 2404 	ret
                                   2405 ;main.c:112: void playMusic() {
                                   2406 ;	---------------------------------
                                   2407 ; Function playMusic
                                   2408 ; ---------------------------------
      000E34                       2409 _playMusic::
                                   2410 ;main.c:113: PSGFrame();
      000E34 CDr00r00         [17] 2411 	call	_PSGFrame
                                   2412 ;main.c:114: PSGSFXFrame();
                                   2413 ;main.c:115: }
      000E37 C3r00r00         [10] 2414 	jp	_PSGSFXFrame
                                   2415 ;main.c:117: void disableSprites() {
                                   2416 ;	---------------------------------
                                   2417 ; Function disableSprites
                                   2418 ; ---------------------------------
      000E3A                       2419 _disableSprites::
                                   2420 ;main.c:120: while (i < 64) {
      000E3A 0E 00            [ 7] 2421 	ld	c, #0x00
      000E3C                       2422 00101$:
      000E3C 79               [ 4] 2423 	ld	a, c
      000E3D D6 40            [ 7] 2424 	sub	a, #0x40
      000E3F 30 10            [12] 2425 	jr	NC, 00103$
                                   2426 ;main.c:121: SMS_updateSpritePosition(i,10,240); 
      000E41 41               [ 4] 2427 	ld	b, c
      000E42 C5               [11] 2428 	push	bc
      000E43 3E F0            [ 7] 2429 	ld	a, #0xf0
      000E45 F5               [11] 2430 	push	af
      000E46 33               [ 6] 2431 	inc	sp
      000E47 2E 0A            [ 7] 2432 	ld	l, #0x0a
                                   2433 ;	spillPairReg hl
                                   2434 ;	spillPairReg hl
      000E49 78               [ 4] 2435 	ld	a, b
      000E4A CDr00r00         [17] 2436 	call	_SMS_updateSpritePosition
      000E4D C1               [10] 2437 	pop	bc
                                   2438 ;main.c:122: i++;
      000E4E 0C               [ 4] 2439 	inc	c
      000E4F 18 EB            [12] 2440 	jr	00101$
      000E51                       2441 00103$:
                                   2442 ;main.c:124: numSprites = 0;
      000E51 21 00 00         [10] 2443 	ld	hl, #0x0000
      000E54 22r9Er03         [16] 2444 	ld	(_numSprites), hl
                                   2445 ;main.c:125: }
      000E57 C9               [10] 2446 	ret
                                   2447 ;main.c:127: void main(void)
                                   2448 ;	---------------------------------
                                   2449 ; Function main
                                   2450 ; ---------------------------------
      000E58                       2451 _main::
      000E58 DD E5            [15] 2452 	push	ix
      000E5A DD 21 00 00      [14] 2453 	ld	ix,#0
      000E5E DD 39            [15] 2454 	add	ix,sp
      000E60 F5               [11] 2455 	push	af
                                   2456 ;main.c:132: SMS_VRAMmemsetW(0, 0x0000, 16384);
      000E61 DD 36 FF 00      [19] 2457 	ld	-1 (ix), #0x00
      000E65 DD 36 FE 00      [19] 2458 	ld	-2 (ix), #0x00
      000E69 21 00 40         [10] 2459 	ld	hl, #0x4000
      000E6C E5               [11] 2460 	push	hl
      000E6D 11 00 00         [10] 2461 	ld	de, #0x0000
      000E70 65               [ 4] 2462 	ld	h, l
      000E71 CDr00r00         [17] 2463 	call	_SMS_VRAMmemsetW
                                   2464 ;main.c:142: printf("Hello, World! [1/3]");
      000E74 21r21r0F         [10] 2465 	ld	hl, #___str_0
      000E77 E5               [11] 2466 	push	hl
      000E78 CDr00r00         [17] 2467 	call	_printf
      000E7B F1               [10] 2468 	pop	af
                                   2469 ;main.c:147: SMS_displayOn();
      000E7C 21 40 01         [10] 2470 	ld	hl, #0x0140
      000E7F CDr00r00         [17] 2471 	call	_SMS_VDPturnOnFeature
                                   2472 ;main.c:148: SMS_setBGScrollX(scroll_x);
      000E82 2E 00            [ 7] 2473 	ld	l, #0x00
                                   2474 ;	spillPairReg hl
                                   2475 ;	spillPairReg hl
      000E84 CDr00r00         [17] 2476 	call	_SMS_setBGScrollX
                                   2477 ;main.c:149: SMS_setBGScrollY(scroll_y);
      000E87 2E 00            [ 7] 2478 	ld	l, #0x00
                                   2479 ;	spillPairReg hl
                                   2480 ;	spillPairReg hl
      000E89 CDr00r00         [17] 2481 	call	_SMS_setBGScrollY
                                   2482 ;main.c:150: SMS_init();
      000E8C CDr00r00         [17] 2483 	call	_SMS_init
                                   2484 ;main.c:151: initSpritesVariables();
      000E8F CDrDDr03         [17] 2485 	call	_initSpritesVariables
                                   2486 ;main.c:152: loadGrapVRAM();
      000E92 CDr30r0C         [17] 2487 	call	_loadGrapVRAM
                                   2488 ;main.c:158: PSGPlay(special_psg);
      000E95 21r00r00         [10] 2489 	ld	hl, #_special_psg
      000E98 CDr00r00         [17] 2490 	call	_PSGPlay
                                   2491 ;main.c:159: SMS_VDPturnOnFeature(VDPFEATURE_LEFTCOLBLANK);
      000E9B 21 20 00         [10] 2492 	ld	hl, #0x0020
      000E9E CDr00r00         [17] 2493 	call	_SMS_VDPturnOnFeature
                                   2494 ;main.c:163: SMS_setFrameInterruptHandler(playMusic);
      000EA1 21r34r0E         [10] 2495 	ld	hl, #_playMusic
      000EA4 CDr00r00         [17] 2496 	call	_SMS_setFrameInterruptHandler
      000EA7                       2497 00115$:
                                   2498 ;main.c:168: if (SMS_queryPauseRequested())
      000EA7 CDr00r00         [17] 2499 	call	_SMS_queryPauseRequested
      000EAA CB 47            [ 8] 2500 	bit	0,a
      000EAC 28 1E            [12] 2501 	jr	Z, 00105$
                                   2502 ;main.c:170: PSGPlay(emeraldhill_psg);
      000EAE 21r00r00         [10] 2503 	ld	hl, #_emeraldhill_psg
      000EB1 CDr00r00         [17] 2504 	call	_PSGPlay
                                   2505 ;main.c:171: SMS_resetPauseRequest();
      000EB4 CDr00r00         [17] 2506 	call	_SMS_resetPauseRequest
                                   2507 ;main.c:172: while (!SMS_queryPauseRequested())
      000EB7                       2508 00101$:
      000EB7 CDr00r00         [17] 2509 	call	_SMS_queryPauseRequested
      000EBA CB 47            [ 8] 2510 	bit	0,a
      000EBC 20 05            [12] 2511 	jr	NZ, 00103$
                                   2512 ;main.c:174: SMS_waitForVBlank();
      000EBE CDr00r00         [17] 2513 	call	_SMS_waitForVBlank
      000EC1 18 F4            [12] 2514 	jr	00101$
      000EC3                       2515 00103$:
                                   2516 ;main.c:178: SMS_resetPauseRequest();
      000EC3 CDr00r00         [17] 2517 	call	_SMS_resetPauseRequest
                                   2518 ;main.c:179: PSGPlay(titulo_psg);
      000EC6 21r00r00         [10] 2519 	ld	hl, #_titulo_psg
      000EC9 CDr00r00         [17] 2520 	call	_PSGPlay
      000ECC                       2521 00105$:
                                   2522 ;main.c:183: int keys = SMS_getKeysHeld();
      000ECC CDr00r00         [17] 2523 	call	_SMS_getKeysHeld
      000ECF EB               [ 4] 2524 	ex	de, hl
                                   2525 ;main.c:184: if(keys & PORT_A_KEY_2)
      000ED0 CB 6D            [ 8] 2526 	bit	5, l
      000ED2 28 04            [12] 2527 	jr	Z, 00107$
                                   2528 ;main.c:185: keys = keys  ^ PORT_A_KEY_2;
      000ED4 7D               [ 4] 2529 	ld	a, l
      000ED5 EE 20            [ 7] 2530 	xor	a, #0x20
      000ED7 6F               [ 4] 2531 	ld	l, a
                                   2532 ;	spillPairReg hl
                                   2533 ;	spillPairReg hl
      000ED8                       2534 00107$:
                                   2535 ;main.c:186: if(keys & PORT_A_KEY_1)
      000ED8 CB 65            [ 8] 2536 	bit	4, l
      000EDA 28 04            [12] 2537 	jr	Z, 00109$
                                   2538 ;main.c:187: keys = keys  ^ PORT_A_KEY_1;
      000EDC 7D               [ 4] 2539 	ld	a, l
      000EDD EE 10            [ 7] 2540 	xor	a, #0x10
      000EDF 6F               [ 4] 2541 	ld	l, a
                                   2542 ;	spillPairReg hl
                                   2543 ;	spillPairReg hl
      000EE0                       2544 00109$:
                                   2545 ;main.c:189: keys = keys | (SMS_getKeysPressed() & (PORT_A_KEY_2 | PORT_A_KEY_1));
      000EE0 E5               [11] 2546 	push	hl
      000EE1 CDr00r00         [17] 2547 	call	_SMS_getKeysPressed
      000EE4 E1               [10] 2548 	pop	hl
      000EE5 7B               [ 4] 2549 	ld	a, e
      000EE6 E6 30            [ 7] 2550 	and	a, #0x30
      000EE8 B5               [ 4] 2551 	or	a, l
      000EE9 6F               [ 4] 2552 	ld	l, a
                                   2553 ;	spillPairReg hl
                                   2554 ;	spillPairReg hl
                                   2555 ;main.c:192: moveAlex(keys);
      000EEA CDr33r0B         [17] 2556 	call	_moveAlex
                                   2557 ;main.c:194: dibujaPajaros();
      000EED CDr0Fr0D         [17] 2558 	call	_dibujaPajaros
                                   2559 ;main.c:199: SMS_waitForVBlank();
      000EF0 CDr00r00         [17] 2560 	call	_SMS_waitForVBlank
                                   2561 ;main.c:202: SMS_displayOff();
      000EF3 21 40 01         [10] 2562 	ld	hl, #0x0140
      000EF6 CDr00r00         [17] 2563 	call	_SMS_VDPturnOffFeature
                                   2564 ;main.c:205: copySpritestoSAT();
      000EF9 CDr0Cr04         [17] 2565 	call	_copySpritestoSAT
                                   2566 ;main.c:212: if (scroll_y % 2 == 0)
      000EFC DD CB FF 46      [20] 2567 	bit	0, -1 (ix)
      000F00 20 03            [12] 2568 	jr	NZ, 00111$
                                   2569 ;main.c:213: scroll_x += 1;
      000F02 DD 34 FE         [23] 2570 	inc	-2 (ix)
      000F05                       2571 00111$:
                                   2572 ;main.c:214: scroll_y++;
      000F05 DD 34 FF         [23] 2573 	inc	-1 (ix)
                                   2574 ;main.c:215: if (scroll_y == 224)
      000F08 DD 7E FF         [19] 2575 	ld	a, -1 (ix)
      000F0B D6 E0            [ 7] 2576 	sub	a, #0xe0
      000F0D 20 04            [12] 2577 	jr	NZ, 00113$
                                   2578 ;main.c:216: scroll_y = 0;
      000F0F DD 36 FF 00      [19] 2579 	ld	-1 (ix), #0x00
      000F13                       2580 00113$:
                                   2581 ;main.c:218: SMS_setBGScrollX(scroll_x);
      000F13 DD 6E FE         [19] 2582 	ld	l, -2 (ix)
                                   2583 ;	spillPairReg hl
                                   2584 ;	spillPairReg hl
      000F16 CDr00r00         [17] 2585 	call	_SMS_setBGScrollX
                                   2586 ;main.c:220: SMS_displayOn();
      000F19 21 40 01         [10] 2587 	ld	hl, #0x0140
      000F1C CDr00r00         [17] 2588 	call	_SMS_VDPturnOnFeature
                                   2589 ;main.c:222: }
      000F1F 18 86            [12] 2590 	jr	00115$
      000F21                       2591 ___str_0:
      000F21 48 65 6C 6C 6F 2C 20  2592 	.ascii "Hello, World! [1/3]"
             57 6F 72 6C 64 21 20
             5B 31 2F 33 5D
      000F34 00                    2593 	.db 0x00
                                   2594 	.area _CODE
      000F35                       2595 __str_1:
      000F35 53 45 47 41           2596 	.ascii "SEGA"
      000F39 00                    2597 	.db 0x00
      000F3A                       2598 __str_2:
      000F3A 62 61 73 69 63 20 65  2599 	.ascii "basic example"
             78 61 6D 70 6C 65
      000F47 00                    2600 	.db 0x00
      000F48                       2601 __str_3:
      000F48 41 20 73 69 6D 70 6C  2602 	.ascii "A simple example"
             65 20 65 78 61 6D 70
             6C 65
      000F58 00                    2603 	.db 0x00
                                   2604 	.area _INITIALIZER
      000000                       2605 __xinit__nextVRAMsprites:
      000000 00 01                 2606 	.dw #0x0100
      000002                       2607 __xinit__maxSalto:
      000002 FF                    2608 	.db #0xff	; 255
      000003                       2609 __xinit__alex:
      000003 1E                    2610 	.db #0x1e	; 30
      000004 96                    2611 	.db #0x96	; 150
      000005 00                    2612 	.db #0x00	; 0
      000006 00                    2613 	.db #0x00	; 0
      000007 00                    2614 	.db #0x00	; 0
      000008 00                    2615 	.db #0x00	; 0
      000009 FF                    2616 	.db #0xff	; 255
      00000A 00                    2617 	.db #0x00	; 0
      00000B                       2618 __xinit__spriteAlex:
      00000B 02                    2619 	.db #0x02	; 2
      00000C 02                    2620 	.db #0x02	; 2
      00000D 08                    2621 	.db #0x08	; 8
      00000E 00                    2622 	.db #0x00	; 0
      00000F 00 00                 2623 	.dw #0x0000
      000011 00                    2624 	.db #0x00	; 0
      000012 00 00                 2625 	.dw #0x0000
      000014 00                    2626 	.db #0x00	; 0
      000015                       2627 __xinit__spritePajaro:
      000015 02                    2628 	.db #0x02	; 2
      000016 02                    2629 	.db #0x02	; 2
      000017 08                    2630 	.db #0x08	; 8
      000018 00                    2631 	.db #0x00	; 0
      000019 00 00                 2632 	.dw #0x0000
      00001B 00                    2633 	.db #0x00	; 0
      00001C 00 00                 2634 	.dw #0x0000
      00001E 00                    2635 	.db #0x00	; 0
      00001F                       2636 __xinit__spritePuno:
      00001F 02                    2637 	.db #0x02	; 2
      000020 02                    2638 	.db #0x02	; 2
      000021 08                    2639 	.db #0x08	; 8
      000022 00                    2640 	.db #0x00	; 0
      000023 00 00                 2641 	.dw #0x0000
      000025 00                    2642 	.db #0x00	; 0
      000026 00 00                 2643 	.dw #0x0000
      000028 00                    2644 	.db #0x00	; 0
                                   2645 	.area _CABS (ABS)
      007FF0                       2646 	.org 0x7FF0
      007FF0                       2647 ___SMS__SEGA_signature:
      007FF0 54                    2648 	.db #0x54	; 84	'T'
      007FF1 4D                    2649 	.db #0x4d	; 77	'M'
      007FF2 52                    2650 	.db #0x52	; 82	'R'
      007FF3 20                    2651 	.db #0x20	; 32
      007FF4 53                    2652 	.db #0x53	; 83	'S'
      007FF5 45                    2653 	.db #0x45	; 69	'E'
      007FF6 47                    2654 	.db #0x47	; 71	'G'
      007FF7 41                    2655 	.db #0x41	; 65	'A'
      007FF8 FF                    2656 	.db #0xff	; 255
      007FF9 FF                    2657 	.db #0xff	; 255
      007FFA FF                    2658 	.db #0xff	; 255
      007FFB FF                    2659 	.db #0xff	; 255
      007FFC 99                    2660 	.db #0x99	; 153
      007FFD 09                    2661 	.db #0x09	; 9
      007FFE 00                    2662 	.db #0x00	; 0
      007FFF 4C                    2663 	.db #0x4c	; 76	'L'
      007FDB                       2664 	.org 0x7FDB
      007FDB                       2665 ___SMS__SDSC_author:
      007FDB 53 45 47 41           2666 	.ascii "SEGA"
      007FDF 00                    2667 	.db 0x00
      007FCD                       2668 	.org 0x7FCD
      007FCD                       2669 ___SMS__SDSC_name:
      007FCD 62 61 73 69 63 20 65  2670 	.ascii "basic example"
             78 61 6D 70 6C 65
      007FDA 00                    2671 	.db 0x00
      007FBC                       2672 	.org 0x7FBC
      007FBC                       2673 ___SMS__SDSC_descr:
      007FBC 41 20 73 69 6D 70 6C  2674 	.ascii "A simple example"
             65 20 65 78 61 6D 70
             6C 65
      007FCC 00                    2675 	.db 0x00
      007FE0                       2676 	.org 0x7FE0
      007FE0                       2677 ___SMS__SDSC_signature:
      007FE0 53                    2678 	.db #0x53	; 83	'S'
      007FE1 44                    2679 	.db #0x44	; 68	'D'
      007FE2 53                    2680 	.db #0x53	; 83	'S'
      007FE3 43                    2681 	.db #0x43	; 67	'C'
      007FE4 01                    2682 	.db #0x01	; 1
      007FE5 00                    2683 	.db #0x00	; 0
      007FE6 00                    2684 	.db #0x00	; 0
      007FE7 00                    2685 	.db #0x00	; 0
      007FE8 00                    2686 	.db #0x00	; 0
      007FE9 00                    2687 	.db #0x00	; 0
      007FEA DB                    2688 	.db #0xdb	; 219
      007FEB 7F                    2689 	.db #0x7f	; 127
      007FEC CD                    2690 	.db #0xcd	; 205
      007FED 7F                    2691 	.db #0x7f	; 127
      007FEE BC                    2692 	.db #0xbc	; 188
      007FEF 7F                    2693 	.db #0x7f	; 127
