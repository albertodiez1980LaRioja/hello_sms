                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14549 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___SMS__SDSC_signature
                                     12 	.globl ___SMS__SDSC_descr
                                     13 	.globl ___SMS__SDSC_name
                                     14 	.globl ___SMS__SDSC_author
                                     15 	.globl ___SMS__SEGA_signature
                                     16 	.globl _main
                                     17 	.globl _dibujaPajaros
                                     18 	.globl _loadGrapVRAM
                                     19 	.globl _inicializaPajaros
                                     20 	.globl _moveAlex
                                     21 	.globl _SMS_VRAMmemsetW
                                     22 	.globl _SMS_VRAMmemcpy
                                     23 	.globl _SMS_resetPauseRequest
                                     24 	.globl _SMS_queryPauseRequested
                                     25 	.globl _SMS_getKeysHeld
                                     26 	.globl _SMS_loadSpritePalette
                                     27 	.globl _SMS_loadBGPalette
                                     28 	.globl _SMS_copySpritestoSAT
                                     29 	.globl _SMS_finalizeSprites
                                     30 	.globl _SMS_initSprites
                                     31 	.globl _SMS_waitForVBlank
                                     32 	.globl _SMS_setSpriteMode
                                     33 	.globl _SMS_setBGScrollY
                                     34 	.globl _SMS_setBGScrollX
                                     35 	.globl _SMS_VDPturnOffFeature
                                     36 	.globl _SMS_VDPturnOnFeature
                                     37 	.globl _SMS_init
                                     38 	.globl _PSGFrame
                                     39 	.globl _PSGPlay
                                     40 	.globl _printf
                                     41 	.globl _spritePajaro
                                     42 	.globl _spriteAlex
                                     43 	.globl _alex
                                     44 	.globl _vY
                                     45 	.globl _nextVRAMsprites
                                     46 	.globl _pajaros
                                     47 	.globl _finSalto
                                     48 	.globl _SMS_SRAM
                                     49 	.globl _SRAM_bank_to_be_mapped_on_slot2
                                     50 	.globl _ROM_bank_to_be_mapped_on_slot0
                                     51 	.globl _ROM_bank_to_be_mapped_on_slot1
                                     52 	.globl _ROM_bank_to_be_mapped_on_slot2
                                     53 	.globl _generateSprite
                                     54 	.globl _generateSpriteNoRAM
                                     55 	.globl _draw_entidad
                                     56 ;--------------------------------------------------------
                                     57 ; special function registers
                                     58 ;--------------------------------------------------------
                                     59 ;--------------------------------------------------------
                                     60 ; ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area _DATA
                           00FFFF    63 _ROM_bank_to_be_mapped_on_slot2	=	0xffff
                           00FFFE    64 _ROM_bank_to_be_mapped_on_slot1	=	0xfffe
                           00FFFD    65 _ROM_bank_to_be_mapped_on_slot0	=	0xfffd
                           00FFFC    66 _SRAM_bank_to_be_mapped_on_slot2	=	0xfffc
                           008000    67 _SMS_SRAM	=	0x8000
      000000                         68 _finSalto::
      000000                         69 	.ds 2
      000002                         70 _pajaros::
      000002                         71 	.ds 60
                                     72 ;--------------------------------------------------------
                                     73 ; ram data
                                     74 ;--------------------------------------------------------
                                     75 	.area _INITIALIZED
      000000                         76 _nextVRAMsprites::
      000000                         77 	.ds 2
      000002                         78 _vY::
      000002                         79 	.ds 2
      000004                         80 _alex::
      000004                         81 	.ds 6
      00000A                         82 _spriteAlex::
      00000A                         83 	.ds 10
      000014                         84 _spritePajaro::
      000014                         85 	.ds 10
                                     86 ;--------------------------------------------------------
                                     87 ; absolute external ram data
                                     88 ;--------------------------------------------------------
                                     89 	.area _DABS (ABS)
                                     90 ;--------------------------------------------------------
                                     91 ; global & static initialisations
                                     92 ;--------------------------------------------------------
                                     93 	.area _HOME
                                     94 	.area _GSINIT
                                     95 	.area _GSFINAL
                                     96 	.area _GSINIT
                                     97 ;--------------------------------------------------------
                                     98 ; Home
                                     99 ;--------------------------------------------------------
                                    100 	.area _HOME
                                    101 	.area _HOME
                                    102 ;--------------------------------------------------------
                                    103 ; code
                                    104 ;--------------------------------------------------------
                                    105 	.area _CODE
                                    106 ;./lib/./sprite.c:18: T_sprite generateSprite(unsigned char ancho, unsigned char alto, int tam,const unsigned char data[]) {
                                    107 ;	---------------------------------
                                    108 ; Function generateSprite
                                    109 ; ---------------------------------
      000000                        110 _generateSprite::
      000000 DD E5            [15]  111 	push	ix
      000002 DD 21 00 00      [14]  112 	ld	ix,#0
      000006 DD 39            [15]  113 	add	ix,sp
      000008 FD 21 F6 FF      [14]  114 	ld	iy, #-10
      00000C FD 39            [15]  115 	add	iy, sp
      00000E FD F9            [10]  116 	ld	sp, iy
      000010 5F               [ 4]  117 	ld	e, a
      000011 55               [ 4]  118 	ld	d, l
                                    119 ;./lib/./sprite.c:19: unsigned char tamano = alto*ancho*2;
      000012 D5               [11]  120 	push	de
      000013 62               [ 4]  121 	ld	h, d
                                    122 ;	spillPairReg hl
                                    123 ;	spillPairReg hl
      000014 2E 00            [ 7]  124 	ld	l, #0x00
      000016 55               [ 4]  125 	ld	d, l
      000017 06 08            [ 7]  126 	ld	b, #0x08
      000019                        127 00103$:
      000019 29               [11]  128 	add	hl, hl
      00001A 30 01            [12]  129 	jr	NC, 00104$
      00001C 19               [11]  130 	add	hl, de
      00001D                        131 00104$:
      00001D 10 FA            [13]  132 	djnz	00103$
      00001F D1               [10]  133 	pop	de
      000020 4D               [ 4]  134 	ld	c, l
      000021 CB 21            [ 8]  135 	sla	c
                                    136 ;./lib/./sprite.c:20: T_sprite sprite = {alto,ancho,tamano,tam/(tamano*32),nextVRAMsprites, 1,0};
      000023 DD 72 F6         [19]  137 	ld	-10 (ix), d
      000026 DD 73 F7         [19]  138 	ld	-9 (ix), e
      000029 DD 71 F8         [19]  139 	ld	-8 (ix), c
      00002C 69               [ 4]  140 	ld	l, c
                                    141 ;	spillPairReg hl
                                    142 ;	spillPairReg hl
      00002D 26 00            [ 7]  143 	ld	h, #0x00
                                    144 ;	spillPairReg hl
                                    145 ;	spillPairReg hl
      00002F 29               [11]  146 	add	hl, hl
      000030 29               [11]  147 	add	hl, hl
      000031 29               [11]  148 	add	hl, hl
      000032 29               [11]  149 	add	hl, hl
      000033 29               [11]  150 	add	hl, hl
      000034 C5               [11]  151 	push	bc
      000035 EB               [ 4]  152 	ex	de, hl
      000036 DD 6E 06         [19]  153 	ld	l, 6 (ix)
                                    154 ;	spillPairReg hl
                                    155 ;	spillPairReg hl
      000039 DD 66 07         [19]  156 	ld	h, 7 (ix)
                                    157 ;	spillPairReg hl
                                    158 ;	spillPairReg hl
      00003C CDr00r00         [17]  159 	call	__divsint
      00003F C1               [10]  160 	pop	bc
      000040 DD 73 F9         [19]  161 	ld	-7 (ix), e
      000043 3Ar00r00         [13]  162 	ld	a, (_nextVRAMsprites+0)
      000046 DD 77 FA         [19]  163 	ld	-6 (ix), a
      000049 3Ar01r00         [13]  164 	ld	a, (_nextVRAMsprites+1)
      00004C DD 77 FB         [19]  165 	ld	-5 (ix), a
      00004F DD 36 FC 01      [19]  166 	ld	-4 (ix), #0x01
      000053 AF               [ 4]  167 	xor	a, a
      000054 DD 77 FD         [19]  168 	ld	-3 (ix), a
      000057 DD 77 FE         [19]  169 	ld	-2 (ix), a
      00005A DD 36 FF 00      [19]  170 	ld	-1 (ix), #0x00
                                    171 ;./lib/./sprite.c:21: SMS_loadTiles(data,nextVRAMsprites,tam);
      00005E DD 5E 08         [19]  172 	ld	e, 8 (ix)
      000061 DD 56 09         [19]  173 	ld	d, 9 (ix)
      000064 2Ar00r00         [16]  174 	ld	hl, (_nextVRAMsprites)
      000067 29               [11]  175 	add	hl, hl
      000068 29               [11]  176 	add	hl, hl
      000069 29               [11]  177 	add	hl, hl
      00006A 29               [11]  178 	add	hl, hl
      00006B 29               [11]  179 	add	hl, hl
      00006C CB F4            [ 8]  180 	set	6, h
      00006E C5               [11]  181 	push	bc
      00006F E5               [11]  182 	push	hl
      000070 DD 6E 06         [19]  183 	ld	l, 6 (ix)
                                    184 ;	spillPairReg hl
                                    185 ;	spillPairReg hl
      000073 DD 66 07         [19]  186 	ld	h, 7 (ix)
                                    187 ;	spillPairReg hl
                                    188 ;	spillPairReg hl
      000076 E3               [19]  189 	ex	(sp), hl
      000077 CDr00r00         [17]  190 	call	_SMS_VRAMmemcpy
      00007A C1               [10]  191 	pop	bc
                                    192 ;./lib/./sprite.c:22: nextVRAMsprites = nextVRAMsprites + (tamano*sprite.numFrames);
      00007B DD 5E F9         [19]  193 	ld	e, -7 (ix)
      00007E 61               [ 4]  194 	ld	h, c
                                    195 ;	spillPairReg hl
                                    196 ;	spillPairReg hl
      00007F 2E 00            [ 7]  197 	ld	l, #0x00
      000081 55               [ 4]  198 	ld	d, l
      000082 06 08            [ 7]  199 	ld	b, #0x08
      000084                        200 00105$:
      000084 29               [11]  201 	add	hl, hl
      000085 30 01            [12]  202 	jr	NC, 00106$
      000087 19               [11]  203 	add	hl, de
      000088                        204 00106$:
      000088 10 FA            [13]  205 	djnz	00105$
      00008A EB               [ 4]  206 	ex	de, hl
      00008B 21r00r00         [10]  207 	ld	hl, #_nextVRAMsprites
      00008E 7E               [ 7]  208 	ld	a, (hl)
      00008F 83               [ 4]  209 	add	a, e
      000090 77               [ 7]  210 	ld	(hl), a
      000091 23               [ 6]  211 	inc	hl
      000092 7E               [ 7]  212 	ld	a, (hl)
      000093 8A               [ 4]  213 	adc	a, d
      000094 77               [ 7]  214 	ld	(hl), a
                                    215 ;./lib/./sprite.c:23: return sprite;
      000095 21 0E 00         [10]  216 	ld	hl, #14
      000098 39               [11]  217 	add	hl, sp
      000099 5E               [ 7]  218 	ld	e, (hl)
      00009A 23               [ 6]  219 	inc	hl
      00009B 56               [ 7]  220 	ld	d, (hl)
      00009C 21 00 00         [10]  221 	ld	hl, #0
      00009F 39               [11]  222 	add	hl, sp
      0000A0 01 0A 00         [10]  223 	ld	bc, #10
      0000A3 ED B0            [21]  224 	ldir
                                    225 ;./lib/./sprite.c:24: }
      0000A5 DD F9            [10]  226 	ld	sp, ix
      0000A7 DD E1            [14]  227 	pop	ix
      0000A9 C9               [10]  228 	ret
                                    229 ;./lib/./sprite.c:26: T_sprite generateSpriteNoRAM(unsigned char ancho, unsigned char alto, int tam,const unsigned char data[]) {
                                    230 ;	---------------------------------
                                    231 ; Function generateSpriteNoRAM
                                    232 ; ---------------------------------
      0000AA                        233 _generateSpriteNoRAM::
      0000AA DD E5            [15]  234 	push	ix
      0000AC DD 21 00 00      [14]  235 	ld	ix,#0
      0000B0 DD 39            [15]  236 	add	ix,sp
      0000B2 FD 21 F4 FF      [14]  237 	ld	iy, #-12
      0000B6 FD 39            [15]  238 	add	iy, sp
      0000B8 FD F9            [10]  239 	ld	sp, iy
      0000BA 5F               [ 4]  240 	ld	e, a
      0000BB 55               [ 4]  241 	ld	d, l
                                    242 ;./lib/./sprite.c:27: unsigned char tamano = alto*ancho*2;
      0000BC D5               [11]  243 	push	de
      0000BD 62               [ 4]  244 	ld	h, d
                                    245 ;	spillPairReg hl
                                    246 ;	spillPairReg hl
      0000BE 2E 00            [ 7]  247 	ld	l, #0x00
      0000C0 55               [ 4]  248 	ld	d, l
      0000C1 06 08            [ 7]  249 	ld	b, #0x08
      0000C3                        250 00103$:
      0000C3 29               [11]  251 	add	hl, hl
      0000C4 30 01            [12]  252 	jr	NC, 00104$
      0000C6 19               [11]  253 	add	hl, de
      0000C7                        254 00104$:
      0000C7 10 FA            [13]  255 	djnz	00103$
      0000C9 D1               [10]  256 	pop	de
      0000CA 4D               [ 4]  257 	ld	c, l
      0000CB CB 21            [ 8]  258 	sla	c
                                    259 ;./lib/./sprite.c:28: T_sprite sprite = {alto,ancho,tamano,tam/(tamano*32),nextVRAMsprites, 0,0};
      0000CD DD 72 F4         [19]  260 	ld	-12 (ix), d
      0000D0 DD 73 F5         [19]  261 	ld	-11 (ix), e
      0000D3 DD 71 F6         [19]  262 	ld	-10 (ix), c
                                    263 ;	spillPairReg hl
                                    264 ;	spillPairReg hl
      0000D6 DD 71 FE         [19]  265 	ld	-2 (ix), c
      0000D9 DD 36 FF 00      [19]  266 	ld	-1 (ix), #0x00
      0000DD 69               [ 4]  267 	ld	l, c
      0000DE 26 00            [ 7]  268 	ld	h, #0x00
                                    269 ;	spillPairReg hl
                                    270 ;	spillPairReg hl
      0000E0 29               [11]  271 	add	hl, hl
      0000E1 29               [11]  272 	add	hl, hl
      0000E2 29               [11]  273 	add	hl, hl
      0000E3 29               [11]  274 	add	hl, hl
      0000E4 29               [11]  275 	add	hl, hl
      0000E5 EB               [ 4]  276 	ex	de,hl
      0000E6 D5               [11]  277 	push	de
      0000E7 DD 6E 06         [19]  278 	ld	l, 6 (ix)
                                    279 ;	spillPairReg hl
                                    280 ;	spillPairReg hl
      0000EA DD 66 07         [19]  281 	ld	h, 7 (ix)
                                    282 ;	spillPairReg hl
                                    283 ;	spillPairReg hl
      0000ED CDr00r00         [17]  284 	call	__divsint
      0000F0 EB               [ 4]  285 	ex	de, hl
      0000F1 D1               [10]  286 	pop	de
      0000F2 DD 75 F7         [19]  287 	ld	-9 (ix), l
      0000F5 3Ar00r00         [13]  288 	ld	a, (_nextVRAMsprites+0)
      0000F8 DD 77 F8         [19]  289 	ld	-8 (ix), a
      0000FB 3Ar01r00         [13]  290 	ld	a, (_nextVRAMsprites+1)
      0000FE DD 77 F9         [19]  291 	ld	-7 (ix), a
      000101 DD 36 FA 00      [19]  292 	ld	-6 (ix), #0x00
      000105 AF               [ 4]  293 	xor	a, a
      000106 DD 77 FB         [19]  294 	ld	-5 (ix), a
      000109 DD 77 FC         [19]  295 	ld	-4 (ix), a
      00010C DD 36 FD 00      [19]  296 	ld	-3 (ix), #0x00
                                    297 ;./lib/./sprite.c:29: sprite.data = data;
      000110 DD 7E 08         [19]  298 	ld	a, 8 (ix)
      000113 DD 77 FB         [19]  299 	ld	-5 (ix), a
      000116 DD 7E 09         [19]  300 	ld	a, 9 (ix)
      000119 DD 77 FC         [19]  301 	ld	-4 (ix), a
                                    302 ;./lib/./sprite.c:30: sprite.frameInVRAM = 0;
      00011C DD 36 FD 00      [19]  303 	ld	-3 (ix), #0x00
                                    304 ;./lib/./sprite.c:31: SMS_loadTiles(data,nextVRAMsprites,tamano*32);
      000120 DD 4E 08         [19]  305 	ld	c, 8 (ix)
      000123 DD 46 09         [19]  306 	ld	b, 9 (ix)
      000126 2Ar00r00         [16]  307 	ld	hl, (_nextVRAMsprites)
      000129 29               [11]  308 	add	hl, hl
      00012A 29               [11]  309 	add	hl, hl
      00012B 29               [11]  310 	add	hl, hl
      00012C 29               [11]  311 	add	hl, hl
      00012D 29               [11]  312 	add	hl, hl
      00012E CB F4            [ 8]  313 	set	6, h
      000130 D5               [11]  314 	push	de
      000131 59               [ 4]  315 	ld	e, c
      000132 50               [ 4]  316 	ld	d, b
      000133 CDr00r00         [17]  317 	call	_SMS_VRAMmemcpy
                                    318 ;./lib/./sprite.c:32: nextVRAMsprites = nextVRAMsprites + (tamano);
      000136 21r00r00         [10]  319 	ld	hl, #_nextVRAMsprites
      000139 7E               [ 7]  320 	ld	a, (hl)
      00013A DD 86 FE         [19]  321 	add	a, -2 (ix)
      00013D 77               [ 7]  322 	ld	(hl), a
      00013E 23               [ 6]  323 	inc	hl
      00013F 7E               [ 7]  324 	ld	a, (hl)
      000140 DD 8E FF         [19]  325 	adc	a, -1 (ix)
      000143 77               [ 7]  326 	ld	(hl), a
                                    327 ;./lib/./sprite.c:33: return sprite;
      000144 21 10 00         [10]  328 	ld	hl, #16
      000147 39               [11]  329 	add	hl, sp
      000148 5E               [ 7]  330 	ld	e, (hl)
      000149 23               [ 6]  331 	inc	hl
      00014A 56               [ 7]  332 	ld	d, (hl)
      00014B 21 00 00         [10]  333 	ld	hl, #0
      00014E 39               [11]  334 	add	hl, sp
      00014F 01 0A 00         [10]  335 	ld	bc, #10
      000152 ED B0            [21]  336 	ldir
                                    337 ;./lib/./sprite.c:34: }
      000154 DD F9            [10]  338 	ld	sp, ix
      000156 DD E1            [14]  339 	pop	ix
      000158 C9               [10]  340 	ret
                                    341 ;./lib/entities.c:10: void draw_entidad(T_entidad *entidad, T_sprite *sprite){
                                    342 ;	---------------------------------
                                    343 ; Function draw_entidad
                                    344 ; ---------------------------------
      000159                        345 _draw_entidad::
      000159 DD E5            [15]  346 	push	ix
      00015B DD 21 00 00      [14]  347 	ld	ix,#0
      00015F DD 39            [15]  348 	add	ix,sp
      000161 FD 21 EF FF      [14]  349 	ld	iy, #-17
      000165 FD 39            [15]  350 	add	iy, sp
      000167 FD F9            [10]  351 	ld	sp, iy
      000169 DD 75 FC         [19]  352 	ld	-4 (ix), l
      00016C DD 74 FD         [19]  353 	ld	-3 (ix), h
                                    354 ;./lib/entities.c:12: if (sprite->allInRAM == 1){
      00016F DD 73 FA         [19]  355 	ld	-6 (ix), e
      000172 DD 72 FB         [19]  356 	ld	-5 (ix), d
      000175 4B               [ 4]  357 	ld	c, e
      000176 42               [ 4]  358 	ld	b, d
      000177 21 06 00         [10]  359 	ld	hl, #6
      00017A 09               [11]  360 	add	hl, bc
      00017B 4E               [ 7]  361 	ld	c, (hl)
                                    362 ;./lib/entities.c:13: int frame = sprite->tamano*entidad->frame + sprite->beginVRAM;
      00017C DD 5E FA         [19]  363 	ld	e, -6 (ix)
      00017F DD 56 FB         [19]  364 	ld	d, -5 (ix)
      000182 DD 7E FC         [19]  365 	ld	a, -4 (ix)
      000185 C6 02            [ 7]  366 	add	a, #0x02
      000187 DD 77 F0         [19]  367 	ld	-16 (ix), a
      00018A DD 7E FD         [19]  368 	ld	a, -3 (ix)
      00018D CE 00            [ 7]  369 	adc	a, #0x00
      00018F DD 77 F1         [19]  370 	ld	-15 (ix), a
      000192 DD 7E FA         [19]  371 	ld	a, -6 (ix)
      000195 C6 04            [ 7]  372 	add	a, #0x04
      000197 DD 77 F2         [19]  373 	ld	-14 (ix), a
      00019A DD 7E FB         [19]  374 	ld	a, -5 (ix)
      00019D CE 00            [ 7]  375 	adc	a, #0x00
      00019F DD 77 F3         [19]  376 	ld	-13 (ix), a
                                    377 ;./lib/entities.c:14: for(j=0;j<sprite->alto;j++) {
      0001A2 DD 7E FC         [19]  378 	ld	a, -4 (ix)
      0001A5 C6 01            [ 7]  379 	add	a, #0x01
      0001A7 DD 77 F8         [19]  380 	ld	-8 (ix), a
      0001AA DD 7E FD         [19]  381 	ld	a, -3 (ix)
      0001AD CE 00            [ 7]  382 	adc	a, #0x00
      0001AF DD 77 F9         [19]  383 	ld	-7 (ix), a
      0001B2 DD 7E FA         [19]  384 	ld	a, -6 (ix)
      0001B5 C6 01            [ 7]  385 	add	a, #0x01
      0001B7 DD 77 FE         [19]  386 	ld	-2 (ix), a
      0001BA DD 7E FB         [19]  387 	ld	a, -5 (ix)
      0001BD CE 00            [ 7]  388 	adc	a, #0x00
      0001BF DD 77 FF         [19]  389 	ld	-1 (ix), a
                                    390 ;./lib/entities.c:23: int frame = sprite->tamano*entidad->frame*32;
      0001C2 DD 6E F0         [19]  391 	ld	l, -16 (ix)
      0001C5 DD 66 F1         [19]  392 	ld	h, -15 (ix)
      0001C8 7E               [ 7]  393 	ld	a, (hl)
      0001C9 DD 77 F4         [19]  394 	ld	-12 (ix), a
                                    395 ;./lib/entities.c:13: int frame = sprite->tamano*entidad->frame + sprite->beginVRAM;
      0001CC 13               [ 6]  396 	inc	de
      0001CD 13               [ 6]  397 	inc	de
      0001CE 1A               [ 7]  398 	ld	a, (de)
      0001CF DD 77 F5         [19]  399 	ld	-11 (ix), a
                                    400 ;./lib/entities.c:12: if (sprite->allInRAM == 1){
      0001D2 0D               [ 4]  401 	dec	c
      0001D3 C2r98r02         [10]  402 	jp	NZ,00108$
                                    403 ;./lib/entities.c:13: int frame = sprite->tamano*entidad->frame + sprite->beginVRAM;
      0001D6 DD 5E F5         [19]  404 	ld	e, -11 (ix)
      0001D9 DD 66 F4         [19]  405 	ld	h, -12 (ix)
                                    406 ;	spillPairReg hl
                                    407 ;	spillPairReg hl
      0001DC 2E 00            [ 7]  408 	ld	l, #0x00
      0001DE 55               [ 4]  409 	ld	d, l
      0001DF 06 08            [ 7]  410 	ld	b, #0x08
      0001E1                        411 00200$:
      0001E1 29               [11]  412 	add	hl, hl
      0001E2 30 01            [12]  413 	jr	NC, 00201$
      0001E4 19               [11]  414 	add	hl, de
      0001E5                        415 00201$:
      0001E5 10 FA            [13]  416 	djnz	00200$
      0001E7 4D               [ 4]  417 	ld	c, l
      0001E8 DD 6E F2         [19]  418 	ld	l, -14 (ix)
      0001EB DD 66 F3         [19]  419 	ld	h, -13 (ix)
      0001EE 7E               [ 7]  420 	ld	a, (hl)
      0001EF 81               [ 4]  421 	add	a, c
      0001F0 DD 77 EF         [19]  422 	ld	-17 (ix), a
                                    423 ;./lib/entities.c:14: for(j=0;j<sprite->alto;j++) {
      0001F3 DD 7E F8         [19]  424 	ld	a, -8 (ix)
      0001F6 DD 77 F0         [19]  425 	ld	-16 (ix), a
      0001F9 DD 7E F9         [19]  426 	ld	a, -7 (ix)
      0001FC DD 77 F1         [19]  427 	ld	-15 (ix), a
      0001FF DD 7E FE         [19]  428 	ld	a, -2 (ix)
      000202 DD 77 F2         [19]  429 	ld	-14 (ix), a
      000205 DD 7E FF         [19]  430 	ld	a, -1 (ix)
      000208 DD 77 F3         [19]  431 	ld	-13 (ix), a
      00020B DD 36 FE 00      [19]  432 	ld	-2 (ix), #0x00
      00020F                        433 00114$:
      00020F DD 6E FA         [19]  434 	ld	l, -6 (ix)
      000212 DD 66 FB         [19]  435 	ld	h, -5 (ix)
      000215 DD 7E FE         [19]  436 	ld	a,-2 (ix)
      000218 96               [ 7]  437 	sub	a,(hl)
      000219 D2r84r03         [10]  438 	jp	NC, 00122$
                                    439 ;./lib/entities.c:15: unsigned char desplazado = (j<<2);
      00021C DD 7E FE         [19]  440 	ld	a, -2 (ix)
      00021F 87               [ 4]  441 	add	a, a
      000220 87               [ 4]  442 	add	a, a
                                    443 ;./lib/entities.c:16: unsigned char jCalculated = desplazado + frame, y = entidad->y+(desplazado<<2);
      000221 47               [ 4]  444 	ld	b, a
      000222 DD 86 EF         [19]  445 	add	a, -17 (ix)
      000225 DD 77 F4         [19]  446 	ld	-12 (ix), a
      000228 DD 6E F0         [19]  447 	ld	l, -16 (ix)
      00022B DD 66 F1         [19]  448 	ld	h, -15 (ix)
      00022E 4E               [ 7]  449 	ld	c, (hl)
      00022F 78               [ 4]  450 	ld	a, b
      000230 87               [ 4]  451 	add	a, a
      000231 87               [ 4]  452 	add	a, a
      000232 81               [ 4]  453 	add	a, c
      000233 DD 77 F5         [19]  454 	ld	-11 (ix), a
                                    455 ;./lib/entities.c:17: for(i=0;i<sprite->ancho;i++) {
      000236 DD 36 FF 00      [19]  456 	ld	-1 (ix), #0x00
      00023A                        457 00111$:
      00023A DD 6E F2         [19]  458 	ld	l, -14 (ix)
      00023D DD 66 F3         [19]  459 	ld	h, -13 (ix)
      000240 DD 7E FF         [19]  460 	ld	a,-1 (ix)
      000243 96               [ 7]  461 	sub	a,(hl)
      000244 30 4C            [12]  462 	jr	NC, 00115$
                                    463 ;./lib/entities.c:18: SMS_addSprite(entidad->x+(i<<3),y, jCalculated + (i<<1) );  
      000246 DD 6E FC         [19]  464 	ld	l, -4 (ix)
      000249 DD 66 FD         [19]  465 	ld	h, -3 (ix)
      00024C 7E               [ 7]  466 	ld	a, (hl)
      00024D DD 77 F9         [19]  467 	ld	-7 (ix), a
      000250 DD 77 F6         [19]  468 	ld	-10 (ix), a
      000253 DD 36 F7 00      [19]  469 	ld	-9 (ix), #0x00
      000257 DD 7E FF         [19]  470 	ld	a, -1 (ix)
      00025A DD 77 F8         [19]  471 	ld	-8 (ix), a
      00025D DD 36 F9 00      [19]  472 	ld	-7 (ix), #0x00
      000261 6F               [ 4]  473 	ld	l, a
      000262 26 00            [ 7]  474 	ld	h, #0x00
      000264 29               [11]  475 	add	hl, hl
      000265 29               [11]  476 	add	hl, hl
      000266 29               [11]  477 	add	hl, hl
      000267 DD 5E F6         [19]  478 	ld	e, -10 (ix)
      00026A 16 00            [ 7]  479 	ld	d, #0x00
      00026C 19               [11]  480 	add	hl, de
      00026D 45               [ 4]  481 	ld	b, l
      00026E 0E 00            [ 7]  482 	ld	c, #0x00
      000270 DD 5E F4         [19]  483 	ld	e, -12 (ix)
      000273 16 00            [ 7]  484 	ld	d, #0x00
      000275 DD 6E F8         [19]  485 	ld	l, -8 (ix)
      000278 DD 66 F9         [19]  486 	ld	h, -7 (ix)
      00027B 29               [11]  487 	add	hl, hl
      00027C 19               [11]  488 	add	hl, de
      00027D 7D               [ 4]  489 	ld	a, l
      00027E 16 00            [ 7]  490 	ld	d, #0x00
      000280 B1               [ 4]  491 	or	a, c
      000281 5F               [ 4]  492 	ld	e, a
      000282 7A               [ 4]  493 	ld	a, d
      000283 B0               [ 4]  494 	or	a, b
      000284 57               [ 4]  495 	ld	d, a
      000285 DD 6E F5         [19]  496 	ld	l, -11 (ix)
                                    497 ;	spillPairReg hl
                                    498 ;	spillPairReg hl
      000288 26 00            [ 7]  499 	ld	h, #0x00
                                    500 ;	spillPairReg hl
                                    501 ;	spillPairReg hl
      00028A CDr00r00         [17]  502 	call	_SMS_addSprite_f
                                    503 ;./lib/entities.c:17: for(i=0;i<sprite->ancho;i++) {
      00028D DD 34 FF         [23]  504 	inc	-1 (ix)
      000290 18 A8            [12]  505 	jr	00111$
      000292                        506 00115$:
                                    507 ;./lib/entities.c:14: for(j=0;j<sprite->alto;j++) {
      000292 DD 34 FE         [23]  508 	inc	-2 (ix)
      000295 C3r0Fr02         [10]  509 	jp	00114$
      000298                        510 00108$:
                                    511 ;./lib/entities.c:23: int frame = sprite->tamano*entidad->frame*32;
      000298 DD 5E F4         [19]  512 	ld	e, -12 (ix)
      00029B DD 66 F5         [19]  513 	ld	h, -11 (ix)
                                    514 ;	spillPairReg hl
                                    515 ;	spillPairReg hl
      00029E 2E 00            [ 7]  516 	ld	l, #0x00
      0002A0 55               [ 4]  517 	ld	d, l
      0002A1 06 08            [ 7]  518 	ld	b, #0x08
      0002A3                        519 00202$:
      0002A3 29               [11]  520 	add	hl, hl
      0002A4 30 01            [12]  521 	jr	NC, 00203$
      0002A6 19               [11]  522 	add	hl, de
      0002A7                        523 00203$:
      0002A7 10 FA            [13]  524 	djnz	00202$
      0002A9 29               [11]  525 	add	hl, hl
      0002AA 29               [11]  526 	add	hl, hl
      0002AB 29               [11]  527 	add	hl, hl
      0002AC 29               [11]  528 	add	hl, hl
      0002AD 29               [11]  529 	add	hl, hl
      0002AE DD 75 F6         [19]  530 	ld	-10 (ix), l
      0002B1 DD 74 F7         [19]  531 	ld	-9 (ix), h
                                    532 ;./lib/entities.c:24: if (entidad->frame != sprite->frameInVRAM){
      0002B4 DD 7E FA         [19]  533 	ld	a, -6 (ix)
      0002B7 C6 09            [ 7]  534 	add	a, #0x09
      0002B9 4F               [ 4]  535 	ld	c, a
      0002BA DD 7E FB         [19]  536 	ld	a, -5 (ix)
      0002BD CE 00            [ 7]  537 	adc	a, #0x00
      0002BF 47               [ 4]  538 	ld	b, a
      0002C0 0A               [ 7]  539 	ld	a, (bc)
      0002C1 5F               [ 4]  540 	ld	e, a
      0002C2 DD 7E F4         [19]  541 	ld	a, -12 (ix)
      0002C5 93               [ 4]  542 	sub	a, e
      0002C6 28 42            [12]  543 	jr	Z, 00133$
                                    544 ;./lib/entities.c:25: SMS_loadTiles(sprite->data + frame,sprite->beginVRAM,sprite->tamano<<5);
      0002C8 DD 6E F5         [19]  545 	ld	l, -11 (ix)
                                    546 ;	spillPairReg hl
                                    547 ;	spillPairReg hl
      0002CB 26 00            [ 7]  548 	ld	h, #0x00
                                    549 ;	spillPairReg hl
                                    550 ;	spillPairReg hl
      0002CD 29               [11]  551 	add	hl, hl
      0002CE 29               [11]  552 	add	hl, hl
      0002CF 29               [11]  553 	add	hl, hl
      0002D0 29               [11]  554 	add	hl, hl
      0002D1 29               [11]  555 	add	hl, hl
      0002D2 E5               [11]  556 	push	hl
      0002D3 FD E1            [14]  557 	pop	iy
      0002D5 DD 5E FA         [19]  558 	ld	e, -6 (ix)
      0002D8 DD 56 FB         [19]  559 	ld	d, -5 (ix)
      0002DB 21 07 00         [10]  560 	ld	hl, #7
      0002DE 19               [11]  561 	add	hl, de
      0002DF 5E               [ 7]  562 	ld	e, (hl)
      0002E0 23               [ 6]  563 	inc	hl
      0002E1 56               [ 7]  564 	ld	d, (hl)
      0002E2 DD 6E F6         [19]  565 	ld	l, -10 (ix)
                                    566 ;	spillPairReg hl
                                    567 ;	spillPairReg hl
      0002E5 DD 66 F7         [19]  568 	ld	h, -9 (ix)
                                    569 ;	spillPairReg hl
                                    570 ;	spillPairReg hl
      0002E8 19               [11]  571 	add	hl, de
      0002E9 EB               [ 4]  572 	ex	de, hl
      0002EA DD 6E F2         [19]  573 	ld	l, -14 (ix)
      0002ED DD 66 F3         [19]  574 	ld	h, -13 (ix)
      0002F0 7E               [ 7]  575 	ld	a, (hl)
      0002F1 23               [ 6]  576 	inc	hl
      0002F2 66               [ 7]  577 	ld	h, (hl)
                                    578 ;	spillPairReg hl
      0002F3 6F               [ 4]  579 	ld	l, a
                                    580 ;	spillPairReg hl
                                    581 ;	spillPairReg hl
      0002F4 29               [11]  582 	add	hl, hl
      0002F5 29               [11]  583 	add	hl, hl
      0002F6 29               [11]  584 	add	hl, hl
      0002F7 29               [11]  585 	add	hl, hl
      0002F8 29               [11]  586 	add	hl, hl
      0002F9 CB F4            [ 8]  587 	set	6, h
      0002FB C5               [11]  588 	push	bc
      0002FC FD E5            [15]  589 	push	iy
      0002FE CDr00r00         [17]  590 	call	_SMS_VRAMmemcpy
      000301 C1               [10]  591 	pop	bc
                                    592 ;./lib/entities.c:26: sprite->frameInVRAM = entidad->frame;
      000302 DD 6E F0         [19]  593 	ld	l, -16 (ix)
      000305 DD 66 F1         [19]  594 	ld	h, -15 (ix)
      000308 7E               [ 7]  595 	ld	a, (hl)
      000309 02               [ 7]  596 	ld	(bc), a
                                    597 ;./lib/entities.c:28: for(j=0;j<sprite->alto;j++) {
      00030A                        598 00133$:
      00030A DD 7E FE         [19]  599 	ld	a, -2 (ix)
      00030D DD 77 F6         [19]  600 	ld	-10 (ix), a
      000310 DD 7E FF         [19]  601 	ld	a, -1 (ix)
      000313 DD 77 F7         [19]  602 	ld	-9 (ix), a
      000316 DD 36 FF 00      [19]  603 	ld	-1 (ix), #0x00
      00031A                        604 00120$:
      00031A DD 6E FA         [19]  605 	ld	l, -6 (ix)
      00031D DD 66 FB         [19]  606 	ld	h, -5 (ix)
      000320 DD 7E FF         [19]  607 	ld	a,-1 (ix)
      000323 96               [ 7]  608 	sub	a,(hl)
      000324 30 5E            [12]  609 	jr	NC, 00122$
                                    610 ;./lib/entities.c:29: for(i=0;i<sprite->ancho;i++) {
      000326 0E 00            [ 7]  611 	ld	c, #0x00
      000328                        612 00117$:
      000328 DD 6E F6         [19]  613 	ld	l, -10 (ix)
      00032B DD 66 F7         [19]  614 	ld	h, -9 (ix)
      00032E 46               [ 7]  615 	ld	b, (hl)
      00032F 79               [ 4]  616 	ld	a, c
      000330 90               [ 4]  617 	sub	a, b
      000331 30 4C            [12]  618 	jr	NC, 00121$
                                    619 ;./lib/entities.c:30: SMS_addSprite(entidad->x+(i<<3),entidad->y+(j<<4), (j<<2) + (i<<1) );  
      000333 DD 6E FC         [19]  620 	ld	l, -4 (ix)
      000336 DD 66 FD         [19]  621 	ld	h, -3 (ix)
      000339 7E               [ 7]  622 	ld	a, (hl)
      00033A 59               [ 4]  623 	ld	e, c
      00033B 16 00            [ 7]  624 	ld	d, #0x00
      00033D 6B               [ 4]  625 	ld	l, e
      00033E 62               [ 4]  626 	ld	h, d
      00033F 29               [11]  627 	add	hl, hl
      000340 29               [11]  628 	add	hl, hl
      000341 29               [11]  629 	add	hl, hl
      000342 85               [ 4]  630 	add	a, l
                                    631 ;	spillPairReg hl
                                    632 ;	spillPairReg hl
                                    633 ;	spillPairReg hl
                                    634 ;	spillPairReg hl
      000343 67               [ 4]  635 	ld	h, a
                                    636 ;	spillPairReg hl
                                    637 ;	spillPairReg hl
      000344 2E 00            [ 7]  638 	ld	l, #0x00
                                    639 ;	spillPairReg hl
                                    640 ;	spillPairReg hl
      000346 DD 7E FF         [19]  641 	ld	a, -1 (ix)
      000349 DD 77 F4         [19]  642 	ld	-12 (ix), a
      00034C DD 36 F5 00      [19]  643 	ld	-11 (ix), #0x00
      000350 87               [ 4]  644 	add	a, a
      000351 87               [ 4]  645 	add	a, a
      000352 EB               [ 4]  646 	ex	de, hl
      000353 29               [11]  647 	add	hl, hl
      000354 EB               [ 4]  648 	ex	de, hl
      000355 83               [ 4]  649 	add	a, e
      000356 5F               [ 4]  650 	ld	e, a
      000357 16 00            [ 7]  651 	ld	d, #0x00
      000359 7B               [ 4]  652 	ld	a, e
      00035A B5               [ 4]  653 	or	a, l
      00035B 5F               [ 4]  654 	ld	e, a
      00035C 7A               [ 4]  655 	ld	a, d
      00035D B4               [ 4]  656 	or	a, h
      00035E 57               [ 4]  657 	ld	d, a
      00035F DD 6E F8         [19]  658 	ld	l, -8 (ix)
      000362 DD 66 F9         [19]  659 	ld	h, -7 (ix)
      000365 7E               [ 7]  660 	ld	a, (hl)
      000366 06 00            [ 7]  661 	ld	b, #0x00
      000368 DD 6E F4         [19]  662 	ld	l, -12 (ix)
      00036B DD 66 F5         [19]  663 	ld	h, -11 (ix)
      00036E 29               [11]  664 	add	hl, hl
      00036F 29               [11]  665 	add	hl, hl
      000370 29               [11]  666 	add	hl, hl
      000371 29               [11]  667 	add	hl, hl
      000372 85               [ 4]  668 	add	a, l
      000373 6F               [ 4]  669 	ld	l, a
                                    670 ;	spillPairReg hl
                                    671 ;	spillPairReg hl
      000374 78               [ 4]  672 	ld	a, b
      000375 8C               [ 4]  673 	adc	a, h
      000376 67               [ 4]  674 	ld	h, a
                                    675 ;	spillPairReg hl
                                    676 ;	spillPairReg hl
      000377 C5               [11]  677 	push	bc
      000378 CDr00r00         [17]  678 	call	_SMS_addSprite_f
      00037B C1               [10]  679 	pop	bc
                                    680 ;./lib/entities.c:29: for(i=0;i<sprite->ancho;i++) {
      00037C 0C               [ 4]  681 	inc	c
      00037D 18 A9            [12]  682 	jr	00117$
      00037F                        683 00121$:
                                    684 ;./lib/entities.c:28: for(j=0;j<sprite->alto;j++) {
      00037F DD 34 FF         [23]  685 	inc	-1 (ix)
      000382 18 96            [12]  686 	jr	00120$
      000384                        687 00122$:
                                    688 ;./lib/entities.c:34: }
      000384 DD F9            [10]  689 	ld	sp, ix
      000386 DD E1            [14]  690 	pop	ix
      000388 C9               [10]  691 	ret
                                    692 ;./alex.c:14: void moveAlex(int keys)
                                    693 ;	---------------------------------
                                    694 ; Function moveAlex
                                    695 ; ---------------------------------
      000389                        696 _moveAlex::
      000389 DD E5            [15]  697 	push	ix
      00038B DD 21 00 00      [14]  698 	ld	ix,#0
      00038F DD 39            [15]  699 	add	ix,sp
      000391 F5               [11]  700 	push	af
      000392 F5               [11]  701 	push	af
      000393 F5               [11]  702 	push	af
      000394 DD 75 FE         [19]  703 	ld	-2 (ix), l
      000397 DD 74 FF         [19]  704 	ld	-1 (ix), h
                                    705 ;./alex.c:17: if (keys & PORT_A_KEY_LEFT)
      00039A DD 7E FE         [19]  706 	ld	a, -2 (ix)
      00039D E6 04            [ 7]  707 	and	a, #0x04
      00039F DD 77 FA         [19]  708 	ld	-6 (ix), a
      0003A2 DD 36 FB 00      [19]  709 	ld	-5 (ix), #0x00
                                    710 ;./alex.c:19: if (keys & PORT_A_KEY_RIGHT)
      0003A6 DD 7E FE         [19]  711 	ld	a, -2 (ix)
      0003A9 E6 08            [ 7]  712 	and	a, #0x08
      0003AB DD 77 FC         [19]  713 	ld	-4 (ix), a
      0003AE DD 36 FD 00      [19]  714 	ld	-3 (ix), #0x00
                                    715 ;./alex.c:16: if ((keys & PORT_A_KEY_DOWN) && alex.state == EN_SUELO){
      0003B2 DD CB FE 4E      [20]  716 	bit	1, -2 (ix)
      0003B6 28 34            [12]  717 	jr	Z, 00109$
      0003B8 3Ar09r00         [13]  718 	ld	a, (#_alex + 5)
      0003BB B7               [ 4]  719 	or	a, a
      0003BC 20 2E            [12]  720 	jr	NZ, 00109$
                                    721 ;./alex.c:18: alex.oriented = 1;
      0003BE 21r08r00         [10]  722 	ld	hl, #_alex + 4
                                    723 ;./alex.c:17: if (keys & PORT_A_KEY_LEFT)
      0003C1 AF               [ 4]  724 	xor	a, a
      0003C2 DD B6 FA         [19]  725 	or	a, -6 (ix)
      0003C5 28 02            [12]  726 	jr	Z, 00102$
                                    727 ;./alex.c:18: alex.oriented = 1;
      0003C7 36 01            [10]  728 	ld	(hl), #0x01
      0003C9                        729 00102$:
                                    730 ;./alex.c:19: if (keys & PORT_A_KEY_RIGHT)
      0003C9 AF               [ 4]  731 	xor	a, a
      0003CA DD B6 FC         [19]  732 	or	a, -4 (ix)
      0003CD 28 02            [12]  733 	jr	Z, 00104$
                                    734 ;./alex.c:20: alex.oriented = 0;
      0003CF 36 00            [10]  735 	ld	(hl), #0x00
      0003D1                        736 00104$:
                                    737 ;./alex.c:21: if (!alex.oriented)
      0003D1 7E               [ 7]  738 	ld	a, (hl)
                                    739 ;./alex.c:22: alex.frame = 7;
                                    740 ;./alex.c:21: if (!alex.oriented)
      0003D2 DD 77 FD         [19]  741 	ld	-3 (ix), a
      0003D5 B7               [ 4]  742 	or	a, a
      0003D6 20 07            [12]  743 	jr	NZ, 00106$
                                    744 ;./alex.c:22: alex.frame = 7;
      0003D8 21r06r00         [10]  745 	ld	hl, #(_alex + 2)
      0003DB 36 07            [10]  746 	ld	(hl), #0x07
      0003DD 18 05            [12]  747 	jr	00107$
      0003DF                        748 00106$:
                                    749 ;./alex.c:24: alex.frame = 15;
      0003DF 21r06r00         [10]  750 	ld	hl, #(_alex + 2)
      0003E2 36 0F            [10]  751 	ld	(hl), #0x0f
      0003E4                        752 00107$:
                                    753 ;./alex.c:25: alex.lastChangeFrame = 15;
      0003E4 21r07r00         [10]  754 	ld	hl, #_alex + 3
      0003E7 36 0F            [10]  755 	ld	(hl), #0x0f
                                    756 ;./alex.c:26: return; // not move
      0003E9 C3r27r06         [10]  757 	jp	00180$
      0003EC                        758 00109$:
                                    759 ;./alex.c:30: if (alex.state == PUÑETAZO) {
      0003EC 21r09r00         [10]  760 	ld	hl, #(_alex + 5)
      0003EF 4E               [ 7]  761 	ld	c, (hl)
                                    762 ;./alex.c:31: alex.lastChangeFrame++;
                                    763 ;./alex.c:35: if (!alex.oriented)
                                    764 ;./alex.c:36: alex.frame = 0;
                                    765 ;./alex.c:30: if (alex.state == PUÑETAZO) {
      0003F0 79               [ 4]  766 	ld	a, c
      0003F1 D6 02            [ 7]  767 	sub	a, #0x02
      0003F3 20 2B            [12]  768 	jr	NZ, 00118$
                                    769 ;./alex.c:31: alex.lastChangeFrame++;
      0003F5 3Ar07r00         [13]  770 	ld	a, (#(_alex + 3) + 0)
      0003F8 3C               [ 4]  771 	inc	a
      0003F9 32r07r00         [13]  772 	ld	(#(_alex + 3)),a
                                    773 ;./alex.c:32: if (alex.lastChangeFrame % 16 == 0)
      0003FC E6 0F            [ 7]  774 	and	a, #0x0f
      0003FE C2r27r06         [10]  775 	jp	NZ,00180$
                                    776 ;./alex.c:34: alex.state = EN_SUELO;
      000401 21r09r00         [10]  777 	ld	hl, #(_alex + 5)
      000404 36 00            [10]  778 	ld	(hl), #0x00
                                    779 ;./alex.c:35: if (!alex.oriented)
      000406 3Ar08r00         [13]  780 	ld	a, (#(_alex + 4) + 0)
      000409 B7               [ 4]  781 	or	a, a
      00040A 20 05            [12]  782 	jr	NZ, 00112$
                                    783 ;./alex.c:36: alex.frame = 0;
      00040C 21r06r00         [10]  784 	ld	hl, #(_alex + 2)
      00040F 36 00            [10]  785 	ld	(hl), #0x00
      000411                        786 00112$:
                                    787 ;./alex.c:37: if (alex.oriented)
      000411 3Ar08r00         [13]  788 	ld	a, (#(_alex + 4) + 0)
      000414 B7               [ 4]  789 	or	a, a
      000415 CAr27r06         [10]  790 	jp	Z,00180$
                                    791 ;./alex.c:38: alex.frame = 8;
      000418 21r06r00         [10]  792 	ld	hl, #(_alex + 2)
      00041B 36 08            [10]  793 	ld	(hl), #0x08
                                    794 ;./alex.c:40: return;
      00041D C3r27r06         [10]  795 	jp	00180$
      000420                        796 00118$:
                                    797 ;./alex.c:43: if (alex.state == PUÑETAZO_SALTANDO) {
      000420 79               [ 4]  798 	ld	a, c
      000421 D6 03            [ 7]  799 	sub	a, #0x03
      000423 20 27            [12]  800 	jr	NZ, 00125$
                                    801 ;./alex.c:44: alex.lastChangeFrame++;
      000425 3Ar07r00         [13]  802 	ld	a, (#(_alex + 3) + 0)
      000428 3C               [ 4]  803 	inc	a
      000429 32r07r00         [13]  804 	ld	(#(_alex + 3)),a
                                    805 ;./alex.c:45: if (alex.lastChangeFrame % 16 == 0)
      00042C E6 0F            [ 7]  806 	and	a, #0x0f
      00042E C2r27r06         [10]  807 	jp	NZ,00180$
                                    808 ;./alex.c:47: alex.state = SALTANDO;
      000431 21r09r00         [10]  809 	ld	hl, #(_alex + 5)
      000434 36 01            [10]  810 	ld	(hl), #0x01
                                    811 ;./alex.c:48: if (!alex.oriented)
      000436 3Ar08r00         [13]  812 	ld	a, (#(_alex + 4) + 0)
      000439 B7               [ 4]  813 	or	a, a
      00043A 20 08            [12]  814 	jr	NZ, 00120$
                                    815 ;./alex.c:49: alex.frame = 5;
      00043C 21r06r00         [10]  816 	ld	hl, #(_alex + 2)
      00043F 36 05            [10]  817 	ld	(hl), #0x05
      000441 C3r27r06         [10]  818 	jp	00180$
      000444                        819 00120$:
                                    820 ;./alex.c:51: alex.frame = 13; 
      000444 21r06r00         [10]  821 	ld	hl, #(_alex + 2)
      000447 36 0D            [10]  822 	ld	(hl), #0x0d
                                    823 ;./alex.c:53: return;
      000449 C3r27r06         [10]  824 	jp	00180$
      00044C                        825 00125$:
                                    826 ;./alex.c:57: if ((keys & PORT_A_KEY_LEFT) && alex.x > 8 )
      00044C AF               [ 4]  827 	xor	a, a
      00044D DD B6 FA         [19]  828 	or	a, -6 (ix)
      000450 28 27            [12]  829 	jr	Z, 00136$
      000452 21r04r00         [10]  830 	ld	hl, #_alex
      000455 4E               [ 7]  831 	ld	c, (hl)
      000456 3E 08            [ 7]  832 	ld	a, #0x08
      000458 91               [ 4]  833 	sub	a, c
      000459 30 1E            [12]  834 	jr	NC, 00136$
                                    835 ;./alex.c:59: player_v_x = -1;
      00045B DD 36 FD FF      [19]  836 	ld	-3 (ix), #0xff
                                    837 ;./alex.c:60: alex.oriented = 1;
      00045F 21r08r00         [10]  838 	ld	hl, #(_alex + 4)
      000462 36 01            [10]  839 	ld	(hl), #0x01
                                    840 ;./alex.c:61: if (alex.frame < 8 || alex.frame > 11)
      000464 21r06r00         [10]  841 	ld	hl, #(_alex + 2)
      000467 4E               [ 7]  842 	ld	c, (hl)
      000468 79               [ 4]  843 	ld	a, c
      000469 D6 08            [ 7]  844 	sub	a, #0x08
      00046B 38 05            [12]  845 	jr	C, 00126$
      00046D 3E 0B            [ 7]  846 	ld	a, #0x0b
      00046F 91               [ 4]  847 	sub	a, c
      000470 30 35            [12]  848 	jr	NC, 00137$
      000472                        849 00126$:
                                    850 ;./alex.c:62: alex.frame = 8;
      000472 21r06r00         [10]  851 	ld	hl, #(_alex + 2)
      000475 36 08            [10]  852 	ld	(hl), #0x08
      000477 18 2E            [12]  853 	jr	00137$
      000479                        854 00136$:
                                    855 ;./alex.c:64: else if ((keys & PORT_A_KEY_RIGHT) && alex.x <240)
      000479 AF               [ 4]  856 	xor	a, a
      00047A DD B6 FC         [19]  857 	or	a, -4 (ix)
      00047D 28 12            [12]  858 	jr	Z, 00132$
      00047F 3Ar04r00         [13]  859 	ld	a, (#_alex + 0)
      000482 D6 F0            [ 7]  860 	sub	a, #0xf0
      000484 30 0B            [12]  861 	jr	NC, 00132$
                                    862 ;./alex.c:66: player_v_x = 1;
      000486 DD 36 FD 01      [19]  863 	ld	-3 (ix), #0x01
                                    864 ;./alex.c:67: alex.oriented = 0;
      00048A 21r08r00         [10]  865 	ld	hl, #(_alex + 4)
      00048D 36 00            [10]  866 	ld	(hl), #0x00
      00048F 18 16            [12]  867 	jr	00137$
      000491                        868 00132$:
                                    869 ;./alex.c:70: player_v_x = 0;
      000491 DD 36 FD 00      [19]  870 	ld	-3 (ix), #0x00
                                    871 ;./alex.c:71: alex.frame = 4;
      000495 21r06r00         [10]  872 	ld	hl, #(_alex + 2)
      000498 36 04            [10]  873 	ld	(hl), #0x04
                                    874 ;./alex.c:72: if (alex.oriented)
      00049A 3Ar08r00         [13]  875 	ld	a, (#(_alex + 4) + 0)
      00049D B7               [ 4]  876 	or	a, a
      00049E 28 02            [12]  877 	jr	Z, 00130$
                                    878 ;./alex.c:73: alex.frame = 12;
      0004A0 36 0C            [10]  879 	ld	(hl), #0x0c
      0004A2                        880 00130$:
                                    881 ;./alex.c:74: alex.lastChangeFrame = 15;
      0004A2 21r07r00         [10]  882 	ld	hl, #(_alex + 3)
      0004A5 36 0F            [10]  883 	ld	(hl), #0x0f
      0004A7                        884 00137$:
                                    885 ;./alex.c:76: alex.x = alex.x + player_v_x;
      0004A7 3Ar04r00         [13]  886 	ld	a, (#_alex + 0)
      0004AA DD 4E FD         [19]  887 	ld	c, -3 (ix)
      0004AD 81               [ 4]  888 	add	a, c
      0004AE 32r04r00         [13]  889 	ld	(#_alex),a
                                    890 ;./alex.c:77: if (player_v_x != 0){
      0004B1 DD 7E FD         [19]  891 	ld	a, -3 (ix)
      0004B4 B7               [ 4]  892 	or	a, a
      0004B5 28 40            [12]  893 	jr	Z, 00148$
                                    894 ;./alex.c:78: alex.lastChangeFrame++;
      0004B7 3Ar07r00         [13]  895 	ld	a, (#(_alex + 3) + 0)
      0004BA DD 77 FD         [19]  896 	ld	-3 (ix), a
      0004BD DD 34 FD         [23]  897 	inc	-3 (ix)
      0004C0 21r07r00         [10]  898 	ld	hl, #(_alex + 3)
      0004C3 DD 7E FD         [19]  899 	ld	a, -3 (ix)
      0004C6 77               [ 7]  900 	ld	(hl), a
                                    901 ;./alex.c:79: if (alex.lastChangeFrame % 16 == 0)
      0004C7 DD 7E FD         [19]  902 	ld	a, -3 (ix)
      0004CA E6 0F            [ 7]  903 	and	a, #0x0f
      0004CC 20 29            [12]  904 	jr	NZ, 00148$
                                    905 ;./alex.c:81: alex.frame++;
      0004CE 21r06r00         [10]  906 	ld	hl, #(_alex + 2)
      0004D1 4E               [ 7]  907 	ld	c, (hl)
      0004D2 0C               [ 4]  908 	inc	c
      0004D3 21r06r00         [10]  909 	ld	hl, #(_alex + 2)
      0004D6 71               [ 7]  910 	ld	(hl), c
                                    911 ;./alex.c:82: if (alex.frame > 3 && !alex.oriented)
      0004D7 3E 03            [ 7]  912 	ld	a, #0x03
      0004D9 91               [ 4]  913 	sub	a, c
      0004DA 30 07            [12]  914 	jr	NC, 00140$
      0004DC 3Ar08r00         [13]  915 	ld	a, (#(_alex + 4) + 0)
                                    916 ;./alex.c:83: alex.frame = 0;
      0004DF B7               [ 4]  917 	or	a,a
      0004E0 20 01            [12]  918 	jr	NZ, 00140$
      0004E2 77               [ 7]  919 	ld	(hl),a
      0004E3                        920 00140$:
                                    921 ;./alex.c:84: if (alex.frame > 11 && alex.oriented)
      0004E3 21r06r00         [10]  922 	ld	hl, #(_alex + 2)
      0004E6 4E               [ 7]  923 	ld	c, (hl)
      0004E7 3E 0B            [ 7]  924 	ld	a, #0x0b
      0004E9 91               [ 4]  925 	sub	a, c
      0004EA 30 0B            [12]  926 	jr	NC, 00148$
      0004EC 3Ar08r00         [13]  927 	ld	a, (#(_alex + 4) + 0)
      0004EF B7               [ 4]  928 	or	a, a
      0004F0 28 05            [12]  929 	jr	Z, 00148$
                                    930 ;./alex.c:85: alex.frame = 8;
      0004F2 21r06r00         [10]  931 	ld	hl, #(_alex + 2)
      0004F5 36 08            [10]  932 	ld	(hl), #0x08
      0004F7                        933 00148$:
                                    934 ;./alex.c:91: finSalto = alex.y - 70;
                                    935 ;./alex.c:89: if ((keys & PORT_A_KEY_1) && alex.state == EN_SUELO) {
      0004F7 DD CB FE 66      [20]  936 	bit	4, -2 (ix)
      0004FB 28 2D            [12]  937 	jr	Z, 00150$
      0004FD 3Ar09r00         [13]  938 	ld	a, (#(_alex + 5) + 0)
      000500 B7               [ 4]  939 	or	a, a
      000501 20 27            [12]  940 	jr	NZ, 00150$
                                    941 ;./alex.c:90: alex.state = SALTANDO;
      000503 21r09r00         [10]  942 	ld	hl, #(_alex + 5)
      000506 36 01            [10]  943 	ld	(hl), #0x01
                                    944 ;./alex.c:91: finSalto = alex.y - 70;
      000508 3Ar05r00         [13]  945 	ld	a, (#(_alex + 1) + 0)
      00050B DD 77 FD         [19]  946 	ld	-3 (ix), a
      00050E DD 77 FC         [19]  947 	ld	-4 (ix), a
      000511 DD 36 FD 00      [19]  948 	ld	-3 (ix), #0x00
      000515 21r00r00         [10]  949 	ld	hl, #_finSalto
      000518 DD 7E FC         [19]  950 	ld	a, -4 (ix)
      00051B C6 BA            [ 7]  951 	add	a, #0xba
      00051D 77               [ 7]  952 	ld	(hl), a
      00051E 23               [ 6]  953 	inc	hl
      00051F 3E 00            [ 7]  954 	ld	a, #0x00
      000521 CE FF            [ 7]  955 	adc	a, #0xff
      000523 77               [ 7]  956 	ld	(hl), a
                                    957 ;./alex.c:92: vY = -2;
      000524 21 FE FF         [10]  958 	ld	hl, #0xfffe
      000527 22r02r00         [16]  959 	ld	(_vY), hl
      00052A                        960 00150$:
                                    961 ;./alex.c:30: if (alex.state == PUÑETAZO) {
      00052A 3Ar09r00         [13]  962 	ld	a, (#(_alex + 5) + 0)
                                    963 ;./alex.c:94: if (alex.state == SALTANDO || alex.state == PUÑETAZO_SALTANDO) {
      00052D DD 77 FC         [19]  964 	ld	-4 (ix), a
      000530 3D               [ 4]  965 	dec	a
      000531 3E 01            [ 7]  966 	ld	a, #0x01
      000533 28 01            [12]  967 	jr	Z, 00468$
      000535 AF               [ 4]  968 	xor	a, a
      000536                        969 00468$:
      000536 DD 77 FD         [19]  970 	ld	-3 (ix), a
      000539 B7               [ 4]  971 	or	a, a
      00053A 20 07            [12]  972 	jr	NZ, 00165$
      00053C DD 7E FC         [19]  973 	ld	a, -4 (ix)
      00053F D6 03            [ 7]  974 	sub	a, #0x03
      000541 20 6D            [12]  975 	jr	NZ, 00166$
      000543                        976 00165$:
                                    977 ;./alex.c:95: if(alex.state == SALTANDO) {
      000543 DD 7E FD         [19]  978 	ld	a, -3 (ix)
      000546 B7               [ 4]  979 	or	a, a
      000547 28 15            [12]  980 	jr	Z, 00156$
                                    981 ;./alex.c:96: if (!alex.oriented)
      000549 3Ar08r00         [13]  982 	ld	a, (#(_alex + 4) + 0)
      00054C DD 77 FD         [19]  983 	ld	-3 (ix), a
      00054F B7               [ 4]  984 	or	a, a
      000550 20 07            [12]  985 	jr	NZ, 00153$
                                    986 ;./alex.c:97: alex.frame = 6;
      000552 21r06r00         [10]  987 	ld	hl, #(_alex + 2)
      000555 36 06            [10]  988 	ld	(hl), #0x06
      000557 18 05            [12]  989 	jr	00156$
      000559                        990 00153$:
                                    991 ;./alex.c:99: alex.frame = 14;
      000559 21r06r00         [10]  992 	ld	hl, #(_alex + 2)
      00055C 36 0E            [10]  993 	ld	(hl), #0x0e
      00055E                        994 00156$:
                                    995 ;./alex.c:101: if(alex.y == EN_SUELO || alex.y == 1 || alex.y < finSalto) {
      00055E 21r05r00         [10]  996 	ld	hl, #(_alex + 1)
      000561 5E               [ 7]  997 	ld	e, (hl)
      000562 7B               [ 4]  998 	ld	a, e
      000563 B7               [ 4]  999 	or	a, a
      000564 28 16            [12] 1000 	jr	Z, 00157$
      000566 7B               [ 4] 1001 	ld	a, e
      000567 3D               [ 4] 1002 	dec	a
      000568 28 12            [12] 1003 	jr	Z, 00157$
      00056A 0E 00            [ 7] 1004 	ld	c, #0x00
      00056C 21r00r00         [10] 1005 	ld	hl, #_finSalto
      00056F 7B               [ 4] 1006 	ld	a, e
      000570 96               [ 7] 1007 	sub	a, (hl)
      000571 23               [ 6] 1008 	inc	hl
      000572 79               [ 4] 1009 	ld	a, c
      000573 9E               [ 7] 1010 	sbc	a, (hl)
      000574 E2r79r05         [10] 1011 	jp	PO, 00472$
      000577 EE 80            [ 7] 1012 	xor	a, #0x80
      000579                       1013 00472$:
      000579 F2r82r05         [10] 1014 	jp	P, 00158$
      00057C                       1015 00157$:
                                   1016 ;./alex.c:102: vY = 2;
      00057C 21 02 00         [10] 1017 	ld	hl, #0x0002
      00057F 22r02r00         [16] 1018 	ld	(_vY), hl
      000582                       1019 00158$:
                                   1020 ;./alex.c:104: if ((alex.y == 150 || alex.y == 151) && vY > 0) {
      000582 3Ar05r00         [13] 1021 	ld	a, (#(_alex + 1) + 0)
      000585 FE 96            [ 7] 1022 	cp	a, #0x96
      000587 28 04            [12] 1023 	jr	Z, 00164$
      000589 D6 97            [ 7] 1024 	sub	a, #0x97
      00058B 20 23            [12] 1025 	jr	NZ, 00166$
      00058D                       1026 00164$:
      00058D AF               [ 4] 1027 	xor	a, a
      00058E FD 21r02r00      [14] 1028 	ld	iy, #_vY
      000592 FD BE 00         [19] 1029 	cp	a, 0 (iy)
      000595 FD 9E 01         [19] 1030 	sbc	a, 1 (iy)
      000598 E2r9Dr05         [10] 1031 	jp	PO, 00476$
      00059B EE 80            [ 7] 1032 	xor	a, #0x80
      00059D                       1033 00476$:
      00059D F2rB0r05         [10] 1034 	jp	P, 00166$
                                   1035 ;./alex.c:105: alex.state = EN_SUELO;
      0005A0 21r09r00         [10] 1036 	ld	hl, #(_alex + 5)
      0005A3 36 00            [10] 1037 	ld	(hl), #0x00
                                   1038 ;./alex.c:106: vY = 0;
      0005A5 21 00 00         [10] 1039 	ld	hl, #0x0000
      0005A8 22r02r00         [16] 1040 	ld	(_vY), hl
                                   1041 ;./alex.c:107: alex.frame = 0;
      0005AB 21r06r00         [10] 1042 	ld	hl, #(_alex + 2)
      0005AE 36 00            [10] 1043 	ld	(hl), #0x00
      0005B0                       1044 00166$:
                                   1045 ;./alex.c:110: alex.y += vY;
      0005B0 21r05r00         [10] 1046 	ld	hl, #(_alex + 1)
      0005B3 4E               [ 7] 1047 	ld	c, (hl)
      0005B4 3Ar02r00         [13] 1048 	ld	a, (_vY+0)
      0005B7 DD 77 FB         [19] 1049 	ld	-5 (ix), a
      0005BA DD 71 FD         [19] 1050 	ld	-3 (ix), c
      0005BD 79               [ 4] 1051 	ld	a, c
      0005BE DD 86 FB         [19] 1052 	add	a, -5 (ix)
      0005C1 DD 77 FD         [19] 1053 	ld	-3 (ix), a
      0005C4 21r05r00         [10] 1054 	ld	hl, #(_alex + 1)
      0005C7 DD 7E FD         [19] 1055 	ld	a, -3 (ix)
      0005CA 77               [ 7] 1056 	ld	(hl), a
                                   1057 ;./alex.c:111: if ((keys & PORT_A_KEY_2) && alex.state == EN_SUELO){
      0005CB DD 7E FE         [19] 1058 	ld	a, -2 (ix)
      0005CE E6 20            [ 7] 1059 	and	a, #0x20
      0005D0 DD 77 FC         [19] 1060 	ld	-4 (ix), a
      0005D3 DD 36 FD 00      [19] 1061 	ld	-3 (ix), #0x00
      0005D7 AF               [ 4] 1062 	xor	a, a
      0005D8 DD B6 FC         [19] 1063 	or	a, -4 (ix)
      0005DB 28 22            [12] 1064 	jr	Z, 00172$
      0005DD 3Ar09r00         [13] 1065 	ld	a, (#(_alex + 5) + 0)
      0005E0 B7               [ 4] 1066 	or	a, a
      0005E1 20 1C            [12] 1067 	jr	NZ, 00172$
                                   1068 ;./alex.c:112: alex.state = PUÑETAZO;
      0005E3 21r09r00         [10] 1069 	ld	hl, #(_alex + 5)
      0005E6 36 02            [10] 1070 	ld	(hl), #0x02
                                   1071 ;./alex.c:113: if (!alex.oriented)
      0005E8 3Ar08r00         [13] 1072 	ld	a, (#(_alex + 4) + 0)
      0005EB B7               [ 4] 1073 	or	a, a
      0005EC 20 07            [12] 1074 	jr	NZ, 00169$
                                   1075 ;./alex.c:114: alex.frame = 5;
      0005EE 21r06r00         [10] 1076 	ld	hl, #(_alex + 2)
      0005F1 36 05            [10] 1077 	ld	(hl), #0x05
      0005F3 18 05            [12] 1078 	jr	00170$
      0005F5                       1079 00169$:
                                   1080 ;./alex.c:116: alex.frame = 13; 
      0005F5 21r06r00         [10] 1081 	ld	hl, #(_alex + 2)
      0005F8 36 0D            [10] 1082 	ld	(hl), #0x0d
      0005FA                       1083 00170$:
                                   1084 ;./alex.c:117: alex.lastChangeFrame = 0;
      0005FA 21r07r00         [10] 1085 	ld	hl, #(_alex + 3)
      0005FD 36 00            [10] 1086 	ld	(hl), #0x00
      0005FF                       1087 00172$:
                                   1088 ;./alex.c:119: if ((keys & PORT_A_KEY_2) && alex.state == SALTANDO){
      0005FF AF               [ 4] 1089 	xor	a, a
      000600 DD B6 FC         [19] 1090 	or	a, -4 (ix)
      000603 28 22            [12] 1091 	jr	Z, 00180$
      000605 3Ar09r00         [13] 1092 	ld	a, (#(_alex + 5) + 0)
      000608 3D               [ 4] 1093 	dec	a
      000609 20 1C            [12] 1094 	jr	NZ, 00180$
                                   1095 ;./alex.c:120: alex.state = PUÑETAZO_SALTANDO;
      00060B 21r09r00         [10] 1096 	ld	hl, #(_alex + 5)
      00060E 36 03            [10] 1097 	ld	(hl), #0x03
                                   1098 ;./alex.c:121: if (!alex.oriented)
      000610 3Ar08r00         [13] 1099 	ld	a, (#(_alex + 4) + 0)
      000613 B7               [ 4] 1100 	or	a, a
      000614 20 07            [12] 1101 	jr	NZ, 00175$
                                   1102 ;./alex.c:122: alex.frame = 5;
      000616 21r06r00         [10] 1103 	ld	hl, #(_alex + 2)
      000619 36 05            [10] 1104 	ld	(hl), #0x05
      00061B 18 05            [12] 1105 	jr	00176$
      00061D                       1106 00175$:
                                   1107 ;./alex.c:124: alex.frame = 13; 
      00061D 21r06r00         [10] 1108 	ld	hl, #(_alex + 2)
      000620 36 0D            [10] 1109 	ld	(hl), #0x0d
      000622                       1110 00176$:
                                   1111 ;./alex.c:125: alex.lastChangeFrame = 0;
      000622 21r07r00         [10] 1112 	ld	hl, #(_alex + 3)
      000625 36 00            [10] 1113 	ld	(hl), #0x00
      000627                       1114 00180$:
                                   1115 ;./alex.c:128: }
      000627 DD F9            [10] 1116 	ld	sp, ix
      000629 DD E1            [14] 1117 	pop	ix
      00062B C9               [10] 1118 	ret
                                   1119 ;main.c:15: void inicializaPajaros()
                                   1120 ;	---------------------------------
                                   1121 ; Function inicializaPajaros
                                   1122 ; ---------------------------------
      00062C                       1123 _inicializaPajaros::
      00062C DD E5            [15] 1124 	push	ix
      00062E DD 21 00 00      [14] 1125 	ld	ix,#0
      000632 DD 39            [15] 1126 	add	ix,sp
      000634 F5               [11] 1127 	push	af
                                   1128 ;main.c:18: for (i = 0; i < NUM_PAJAROS; i++)
      000635 0E 00            [ 7] 1129 	ld	c, #0x00
      000637                       1130 00102$:
                                   1131 ;main.c:20: pajaros[i].x = 15 + 32 * i;
      000637 06 00            [ 7] 1132 	ld	b, #0x00
      000639 69               [ 4] 1133 	ld	l, c
      00063A 60               [ 4] 1134 	ld	h, b
      00063B 29               [11] 1135 	add	hl, hl
      00063C 09               [11] 1136 	add	hl, bc
      00063D 29               [11] 1137 	add	hl, hl
      00063E EB               [ 4] 1138 	ex	de, hl
      00063F 21r02r00         [10] 1139 	ld	hl, #_pajaros
      000642 19               [11] 1140 	add	hl, de
      000643 EB               [ 4] 1141 	ex	de, hl
      000644 79               [ 4] 1142 	ld	a, c
      000645 0F               [ 4] 1143 	rrca
      000646 0F               [ 4] 1144 	rrca
      000647 0F               [ 4] 1145 	rrca
      000648 E6 E0            [ 7] 1146 	and	a, #0xe0
      00064A C6 0F            [ 7] 1147 	add	a, #0x0f
      00064C 12               [ 7] 1148 	ld	(de), a
                                   1149 ;main.c:21: pajaros[i].y = 15 + 16 * (i / 2);
      00064D 6B               [ 4] 1150 	ld	l, e
      00064E 62               [ 4] 1151 	ld	h, d
      00064F 23               [ 6] 1152 	inc	hl
      000650 E3               [19] 1153 	ex	(sp), hl
      000651 69               [ 4] 1154 	ld	l, c
                                   1155 ;	spillPairReg hl
                                   1156 ;	spillPairReg hl
      000652 26 00            [ 7] 1157 	ld	h, #0x00
                                   1158 ;	spillPairReg hl
                                   1159 ;	spillPairReg hl
      000654 CB 2C            [ 8] 1160 	sra	h
      000656 CB 1D            [ 8] 1161 	rr	l
      000658 7D               [ 4] 1162 	ld	a, l
      000659 87               [ 4] 1163 	add	a, a
      00065A 87               [ 4] 1164 	add	a, a
      00065B 87               [ 4] 1165 	add	a, a
      00065C 87               [ 4] 1166 	add	a, a
      00065D C6 0F            [ 7] 1167 	add	a, #0x0f
      00065F E1               [10] 1168 	pop	hl
      000660 E5               [11] 1169 	push	hl
      000661 77               [ 7] 1170 	ld	(hl), a
                                   1171 ;main.c:22: pajaros[i].lastChangeFrame = i * 3;
      000662 13               [ 6] 1172 	inc	de
      000663 13               [ 6] 1173 	inc	de
      000664 13               [ 6] 1174 	inc	de
      000665 79               [ 4] 1175 	ld	a, c
      000666 87               [ 4] 1176 	add	a, a
      000667 81               [ 4] 1177 	add	a, c
      000668 12               [ 7] 1178 	ld	(de), a
                                   1179 ;main.c:18: for (i = 0; i < NUM_PAJAROS; i++)
      000669 0C               [ 4] 1180 	inc	c
      00066A 79               [ 4] 1181 	ld	a, c
      00066B D6 0A            [ 7] 1182 	sub	a, #0x0a
      00066D 38 C8            [12] 1183 	jr	C, 00102$
                                   1184 ;main.c:24: }
      00066F DD F9            [10] 1185 	ld	sp, ix
      000671 DD E1            [14] 1186 	pop	ix
      000673 C9               [10] 1187 	ret
                                   1188 ;main.c:26: void loadGrapVRAM()
                                   1189 ;	---------------------------------
                                   1190 ; Function loadGrapVRAM
                                   1191 ; ---------------------------------
      000674                       1192 _loadGrapVRAM::
      000674 DD E5            [15] 1193 	push	ix
      000676 DD 21 00 00      [14] 1194 	ld	ix,#0
      00067A DD 39            [15] 1195 	add	ix,sp
      00067C 21 EC FF         [10] 1196 	ld	hl, #-20
      00067F 39               [11] 1197 	add	hl, sp
      000680 F9               [ 6] 1198 	ld	sp, hl
                                   1199 ;main.c:28: SMS_init();
      000681 CDr00r00         [17] 1200 	call	_SMS_init
                                   1201 ;main.c:29: inicializaPajaros();
      000684 CDr2Cr06         [17] 1202 	call	_inicializaPajaros
                                   1203 ;main.c:31: SMS_setSpriteMode(SPRITEMODE_TALL);
      000687 2E 01            [ 7] 1204 	ld	l, #0x01
                                   1205 ;	spillPairReg hl
                                   1206 ;	spillPairReg hl
      000689 CDr00r00         [17] 1207 	call	_SMS_setSpriteMode
                                   1208 ;main.c:32: SMS_displayOn();
      00068C 21 40 01         [10] 1209 	ld	hl, #0x0140
      00068F CDr00r00         [17] 1210 	call	_SMS_VDPturnOnFeature
                                   1211 ;main.c:33: SMS_VDPturnOnFeature(VDPFEATURE_LEFTCOLBLANK);
      000692 21 20 00         [10] 1212 	ld	hl, #0x0020
      000695 CDr00r00         [17] 1213 	call	_SMS_VDPturnOnFeature
                                   1214 ;main.c:34: SMS_loadBGPalette(sonicpalette_inc);
      000698 21r00r00         [10] 1215 	ld	hl, #_sonicpalette_inc
      00069B CDr00r00         [17] 1216 	call	_SMS_loadBGPalette
                                   1217 ;main.c:35: SMS_loadSpritePalette(palleteAlex_inc);
      00069E 21r00r00         [10] 1218 	ld	hl, #_palleteAlex_inc
      0006A1 CDr00r00         [17] 1219 	call	_SMS_loadSpritePalette
                                   1220 ;main.c:36: SMS_loadTiles(sonictiles_inc, 0, sonictiles_inc_size);
      0006A4 21 C0 14         [10] 1221 	ld	hl, #0x14c0
      0006A7 E5               [11] 1222 	push	hl
      0006A8 11r00r00         [10] 1223 	ld	de, #_sonictiles_inc
      0006AB 21 00 40         [10] 1224 	ld	hl, #0x4000
      0006AE CDr00r00         [17] 1225 	call	_SMS_VRAMmemcpy
                                   1226 ;main.c:37: spriteAlex = generateSpriteNoRAM(2, 2, spriteAlex_inc_size, spriteAlex_inc);
      0006B1 21r00r00         [10] 1227 	ld	hl, #_spriteAlex_inc
      0006B4 E5               [11] 1228 	push	hl
      0006B5 21 00 10         [10] 1229 	ld	hl, #0x1000
      0006B8 E5               [11] 1230 	push	hl
                                   1231 ;	spillPairReg hl
                                   1232 ;	spillPairReg hl
      0006B9 3E 02            [ 7] 1233 	ld	a,#0x02
      0006BB 6F               [ 4] 1234 	ld	l,a
      0006BC E5               [11] 1235 	push	hl
      0006BD 21 06 00         [10] 1236 	ld	hl, #0x0006
      0006C0 39               [11] 1237 	add	hl, sp
      0006C1 EB               [ 4] 1238 	ex	de,hl
      0006C2 E1               [10] 1239 	pop	hl
      0006C3 D5               [11] 1240 	push	de
      0006C4 CDrAAr00         [17] 1241 	call	_generateSpriteNoRAM
      0006C7 F1               [10] 1242 	pop	af
      0006C8 F1               [10] 1243 	pop	af
      0006C9 F1               [10] 1244 	pop	af
      0006CA 11r0Ar00         [10] 1245 	ld	de, #_spriteAlex
      0006CD 21 00 00         [10] 1246 	ld	hl, #0
      0006D0 39               [11] 1247 	add	hl, sp
      0006D1 01 0A 00         [10] 1248 	ld	bc, #0x000a
      0006D4 ED B0            [21] 1249 	ldir
                                   1250 ;main.c:38: spritePajaro = generateSprite(3, 1, spritePajaro_inc_size, spritePajaro_inc);
      0006D6 21r00r00         [10] 1251 	ld	hl, #_spritePajaro_inc
      0006D9 E5               [11] 1252 	push	hl
      0006DA 21 80 01         [10] 1253 	ld	hl, #0x0180
      0006DD E5               [11] 1254 	push	hl
      0006DE 2E 01            [ 7] 1255 	ld	l, #0x01
                                   1256 ;	spillPairReg hl
                                   1257 ;	spillPairReg hl
      0006E0 3E 03            [ 7] 1258 	ld	a, #0x03
      0006E2 E5               [11] 1259 	push	hl
      0006E3 21 10 00         [10] 1260 	ld	hl, #0x0010
      0006E6 39               [11] 1261 	add	hl, sp
      0006E7 EB               [ 4] 1262 	ex	de,hl
      0006E8 E1               [10] 1263 	pop	hl
      0006E9 D5               [11] 1264 	push	de
      0006EA CDr00r00         [17] 1265 	call	_generateSprite
      0006ED F1               [10] 1266 	pop	af
      0006EE F1               [10] 1267 	pop	af
      0006EF F1               [10] 1268 	pop	af
      0006F0 11r14r00         [10] 1269 	ld	de, #_spritePajaro
      0006F3 21 0A 00         [10] 1270 	ld	hl, #10
      0006F6 39               [11] 1271 	add	hl, sp
      0006F7 01 0A 00         [10] 1272 	ld	bc, #0x000a
      0006FA ED B0            [21] 1273 	ldir
                                   1274 ;main.c:39: SMS_loadTileMap(0, 0, sonictilemap_inc, sonictilemap_inc_size);
      0006FC 21 00 06         [10] 1275 	ld	hl, #0x0600
      0006FF E5               [11] 1276 	push	hl
      000700 11r00r00         [10] 1277 	ld	de, #_sonictilemap_inc
      000703 26 78            [ 7] 1278 	ld	h, #0x78
      000705 CDr00r00         [17] 1279 	call	_SMS_VRAMmemcpy
                                   1280 ;main.c:40: }
      000708 DD F9            [10] 1281 	ld	sp, ix
      00070A DD E1            [14] 1282 	pop	ix
      00070C C9               [10] 1283 	ret
                                   1284 ;main.c:42: void dibujaPajaros()
                                   1285 ;	---------------------------------
                                   1286 ; Function dibujaPajaros
                                   1287 ; ---------------------------------
      00070D                       1288 _dibujaPajaros::
      00070D DD E5            [15] 1289 	push	ix
      00070F DD 21 00 00      [14] 1290 	ld	ix,#0
      000713 DD 39            [15] 1291 	add	ix,sp
      000715 F5               [11] 1292 	push	af
                                   1293 ;main.c:45: for (i = 0; i < NUM_PAJAROS; i++)
      000716 DD 36 FF 00      [19] 1294 	ld	-1 (ix), #0x00
      00071A                       1295 00106$:
                                   1296 ;main.c:47: pajaros[i].x++;
      00071A DD 4E FF         [19] 1297 	ld	c, -1 (ix)
      00071D 06 00            [ 7] 1298 	ld	b, #0x00
      00071F 69               [ 4] 1299 	ld	l, c
      000720 60               [ 4] 1300 	ld	h, b
      000721 29               [11] 1301 	add	hl, hl
      000722 09               [11] 1302 	add	hl, bc
      000723 29               [11] 1303 	add	hl, hl
      000724 EB               [ 4] 1304 	ex	de, hl
      000725 21r02r00         [10] 1305 	ld	hl, #_pajaros
      000728 19               [11] 1306 	add	hl, de
      000729 EB               [ 4] 1307 	ex	de, hl
      00072A 1A               [ 7] 1308 	ld	a, (de)
      00072B 3C               [ 4] 1309 	inc	a
      00072C 12               [ 7] 1310 	ld	(de), a
                                   1311 ;main.c:48: pajaros[i].lastChangeFrame++;
      00072D 4B               [ 4] 1312 	ld	c, e
      00072E 42               [ 4] 1313 	ld	b, d
      00072F 03               [ 6] 1314 	inc	bc
      000730 03               [ 6] 1315 	inc	bc
      000731 03               [ 6] 1316 	inc	bc
      000732 0A               [ 7] 1317 	ld	a, (bc)
      000733 3C               [ 4] 1318 	inc	a
      000734 02               [ 7] 1319 	ld	(bc), a
                                   1320 ;main.c:49: if (pajaros[i].lastChangeFrame == 20)
      000735 D6 14            [ 7] 1321 	sub	a, #0x14
      000737 20 15            [12] 1322 	jr	NZ, 00104$
                                   1323 ;main.c:51: pajaros[i].frame++;
      000739 6B               [ 4] 1324 	ld	l, e
                                   1325 ;	spillPairReg hl
                                   1326 ;	spillPairReg hl
      00073A 62               [ 4] 1327 	ld	h, d
                                   1328 ;	spillPairReg hl
                                   1329 ;	spillPairReg hl
      00073B 23               [ 6] 1330 	inc	hl
      00073C 23               [ 6] 1331 	inc	hl
      00073D 7E               [ 7] 1332 	ld	a, (hl)
      00073E 3C               [ 4] 1333 	inc	a
      00073F DD 77 FE         [19] 1334 	ld	-2 (ix), a
      000742 77               [ 7] 1335 	ld	(hl), a
                                   1336 ;main.c:52: if (pajaros[i].frame > 1)
      000743 3E 01            [ 7] 1337 	ld	a, #0x01
      000745 DD 96 FE         [19] 1338 	sub	a, -2 (ix)
      000748 30 02            [12] 1339 	jr	NC, 00102$
                                   1340 ;main.c:53: pajaros[i].frame = 0;
      00074A 36 00            [10] 1341 	ld	(hl), #0x00
      00074C                       1342 00102$:
                                   1343 ;main.c:54: pajaros[i].lastChangeFrame = 0;
      00074C AF               [ 4] 1344 	xor	a, a
      00074D 02               [ 7] 1345 	ld	(bc), a
      00074E                       1346 00104$:
                                   1347 ;main.c:56: draw_entidad(&(pajaros[i]), &spritePajaro);
      00074E EB               [ 4] 1348 	ex	de, hl
      00074F 11r14r00         [10] 1349 	ld	de, #_spritePajaro
      000752 CDr59r01         [17] 1350 	call	_draw_entidad
                                   1351 ;main.c:45: for (i = 0; i < NUM_PAJAROS; i++)
      000755 DD 34 FF         [23] 1352 	inc	-1 (ix)
      000758 DD 7E FF         [19] 1353 	ld	a, -1 (ix)
      00075B D6 0A            [ 7] 1354 	sub	a, #0x0a
      00075D 38 BB            [12] 1355 	jr	C, 00106$
                                   1356 ;main.c:58: }
      00075F DD F9            [10] 1357 	ld	sp, ix
      000761 DD E1            [14] 1358 	pop	ix
      000763 C9               [10] 1359 	ret
                                   1360 ;main.c:61: void main(void)
                                   1361 ;	---------------------------------
                                   1362 ; Function main
                                   1363 ; ---------------------------------
      000764                       1364 _main::
      000764 DD E5            [15] 1365 	push	ix
      000766 DD 21 00 00      [14] 1366 	ld	ix,#0
      00076A DD 39            [15] 1367 	add	ix,sp
      00076C F5               [11] 1368 	push	af
                                   1369 ;main.c:66: SMS_VRAMmemsetW(0, 0x0000, 16384);
      00076D DD 36 FF 00      [19] 1370 	ld	-1 (ix), #0x00
      000771 DD 36 FE 00      [19] 1371 	ld	-2 (ix), #0x00
      000775 21 00 40         [10] 1372 	ld	hl, #0x4000
      000778 E5               [11] 1373 	push	hl
      000779 11 00 00         [10] 1374 	ld	de, #0x0000
      00077C 65               [ 4] 1375 	ld	h, l
      00077D CDr00r00         [17] 1376 	call	_SMS_VRAMmemsetW
                                   1377 ;main.c:76: printf("Hello, World! [1/3]");
      000780 21r13r08         [10] 1378 	ld	hl, #___str_0
      000783 E5               [11] 1379 	push	hl
      000784 CDr00r00         [17] 1380 	call	_printf
      000787 F1               [10] 1381 	pop	af
                                   1382 ;main.c:80: loadGrapVRAM();
      000788 CDr74r06         [17] 1383 	call	_loadGrapVRAM
                                   1384 ;main.c:82: SMS_displayOn();
      00078B 21 40 01         [10] 1385 	ld	hl, #0x0140
      00078E CDr00r00         [17] 1386 	call	_SMS_VDPturnOnFeature
                                   1387 ;main.c:83: SMS_setBGScrollX(scroll_x);
      000791 2E 00            [ 7] 1388 	ld	l, #0x00
                                   1389 ;	spillPairReg hl
                                   1390 ;	spillPairReg hl
      000793 CDr00r00         [17] 1391 	call	_SMS_setBGScrollX
                                   1392 ;main.c:84: SMS_setBGScrollY(scroll_y);
      000796 2E 00            [ 7] 1393 	ld	l, #0x00
                                   1394 ;	spillPairReg hl
                                   1395 ;	spillPairReg hl
      000798 CDr00r00         [17] 1396 	call	_SMS_setBGScrollY
                                   1397 ;main.c:85: SMS_init();
      00079B CDr00r00         [17] 1398 	call	_SMS_init
                                   1399 ;main.c:91: PSGPlay(titulo_psg);
      00079E 21r00r00         [10] 1400 	ld	hl, #_titulo_psg
      0007A1 CDr00r00         [17] 1401 	call	_PSGPlay
                                   1402 ;main.c:92: SMS_VDPturnOnFeature(VDPFEATURE_LEFTCOLBLANK);
      0007A4 21 20 00         [10] 1403 	ld	hl, #0x0020
      0007A7 CDr00r00         [17] 1404 	call	_SMS_VDPturnOnFeature
      0007AA                       1405 00111$:
                                   1406 ;main.c:97: if (SMS_queryPauseRequested())
      0007AA CDr00r00         [17] 1407 	call	_SMS_queryPauseRequested
      0007AD CB 47            [ 8] 1408 	bit	0,a
      0007AF 28 15            [12] 1409 	jr	Z, 00105$
                                   1410 ;main.c:99: SMS_resetPauseRequest();
      0007B1 CDr00r00         [17] 1411 	call	_SMS_resetPauseRequest
                                   1412 ;main.c:100: while (!SMS_queryPauseRequested())
      0007B4                       1413 00101$:
      0007B4 CDr00r00         [17] 1414 	call	_SMS_queryPauseRequested
      0007B7 CB 47            [ 8] 1415 	bit	0,a
      0007B9 20 08            [12] 1416 	jr	NZ, 00103$
                                   1417 ;main.c:102: SMS_waitForVBlank();
      0007BB CDr00r00         [17] 1418 	call	_SMS_waitForVBlank
                                   1419 ;main.c:103: PSGFrame();
      0007BE CDr00r00         [17] 1420 	call	_PSGFrame
      0007C1 18 F1            [12] 1421 	jr	00101$
      0007C3                       1422 00103$:
                                   1423 ;main.c:105: SMS_resetPauseRequest();
      0007C3 CDr00r00         [17] 1424 	call	_SMS_resetPauseRequest
      0007C6                       1425 00105$:
                                   1426 ;main.c:109: int keys = SMS_getKeysHeld();
      0007C6 CDr00r00         [17] 1427 	call	_SMS_getKeysHeld
                                   1428 ;main.c:110: moveAlex(keys);
      0007C9 EB               [ 4] 1429 	ex	de, hl
      0007CA CDr89r03         [17] 1430 	call	_moveAlex
                                   1431 ;main.c:111: SMS_initSprites();
      0007CD CDr00r00         [17] 1432 	call	_SMS_initSprites
                                   1433 ;main.c:112: draw_entidad(&alex, &spriteAlex);
      0007D0 11r0Ar00         [10] 1434 	ld	de, #_spriteAlex
      0007D3 21r04r00         [10] 1435 	ld	hl, #_alex
      0007D6 CDr59r01         [17] 1436 	call	_draw_entidad
                                   1437 ;main.c:113: dibujaPajaros();
      0007D9 CDr0Dr07         [17] 1438 	call	_dibujaPajaros
                                   1439 ;main.c:115: SMS_finalizeSprites();
      0007DC CDr00r00         [17] 1440 	call	_SMS_finalizeSprites
                                   1441 ;main.c:118: SMS_waitForVBlank();
      0007DF CDr00r00         [17] 1442 	call	_SMS_waitForVBlank
                                   1443 ;main.c:119: SMS_copySpritestoSAT();
      0007E2 CDr00r00         [17] 1444 	call	_SMS_copySpritestoSAT
                                   1445 ;main.c:120: PSGFrame();
      0007E5 CDr00r00         [17] 1446 	call	_PSGFrame
                                   1447 ;main.c:121: SMS_displayOff();
      0007E8 21 40 01         [10] 1448 	ld	hl, #0x0140
      0007EB CDr00r00         [17] 1449 	call	_SMS_VDPturnOffFeature
                                   1450 ;main.c:122: if (scroll_y % 2 == 0)
      0007EE DD CB FF 46      [20] 1451 	bit	0, -1 (ix)
      0007F2 20 03            [12] 1452 	jr	NZ, 00107$
                                   1453 ;main.c:123: scroll_x += 1;
      0007F4 DD 34 FE         [23] 1454 	inc	-2 (ix)
      0007F7                       1455 00107$:
                                   1456 ;main.c:124: scroll_y++;
      0007F7 DD 34 FF         [23] 1457 	inc	-1 (ix)
                                   1458 ;main.c:125: if (scroll_y == 224)
      0007FA DD 7E FF         [19] 1459 	ld	a, -1 (ix)
      0007FD D6 E0            [ 7] 1460 	sub	a, #0xe0
      0007FF 20 04            [12] 1461 	jr	NZ, 00109$
                                   1462 ;main.c:126: scroll_y = 0;
      000801 DD 36 FF 00      [19] 1463 	ld	-1 (ix), #0x00
      000805                       1464 00109$:
                                   1465 ;main.c:128: SMS_setBGScrollX(scroll_x);
      000805 DD 6E FE         [19] 1466 	ld	l, -2 (ix)
                                   1467 ;	spillPairReg hl
                                   1468 ;	spillPairReg hl
      000808 CDr00r00         [17] 1469 	call	_SMS_setBGScrollX
                                   1470 ;main.c:130: SMS_displayOn();
      00080B 21 40 01         [10] 1471 	ld	hl, #0x0140
      00080E CDr00r00         [17] 1472 	call	_SMS_VDPturnOnFeature
                                   1473 ;main.c:132: }
      000811 18 97            [12] 1474 	jr	00111$
      000813                       1475 ___str_0:
      000813 48 65 6C 6C 6F 2C 20  1476 	.ascii "Hello, World! [1/3]"
             57 6F 72 6C 64 21 20
             5B 31 2F 33 5D
      000826 00                    1477 	.db 0x00
                                   1478 	.area _CODE
      000827                       1479 __str_1:
      000827 72 61 70 68 6E 65 74  1480 	.ascii "raphnet"
      00082E 00                    1481 	.db 0x00
      00082F                       1482 __str_2:
      00082F 62 61 73 69 63 20 65  1483 	.ascii "basic example"
             78 61 6D 70 6C 65
      00083C 00                    1484 	.db 0x00
      00083D                       1485 __str_3:
      00083D 41 20 73 69 6D 70 6C  1486 	.ascii "A simple example"
             65 20 65 78 61 6D 70
             6C 65
      00084D 00                    1487 	.db 0x00
                                   1488 	.area _INITIALIZER
      000000                       1489 __xinit__nextVRAMsprites:
      000000 00 01                 1490 	.dw #0x0100
      000002                       1491 __xinit__vY:
      000002 00 00                 1492 	.dw #0x0000
      000004                       1493 __xinit__alex:
      000004 0A                    1494 	.db #0x0a	; 10
      000005 14                    1495 	.db #0x14	; 20
      000006 00                    1496 	.db #0x00	; 0
      000007 00                    1497 	.db #0x00	; 0
      000008 00                    1498 	.db #0x00	; 0
      000009 00                    1499 	.db #0x00	; 0
      00000A                       1500 __xinit__spriteAlex:
      00000A 02                    1501 	.db #0x02	; 2
      00000B 02                    1502 	.db #0x02	; 2
      00000C 08                    1503 	.db #0x08	; 8
      00000D 00                    1504 	.db #0x00	; 0
      00000E 00 00                 1505 	.dw #0x0000
      000010 00                    1506 	.db #0x00	; 0
      000011 00 00                 1507 	.dw #0x0000
      000013 00                    1508 	.db #0x00	; 0
      000014                       1509 __xinit__spritePajaro:
      000014 02                    1510 	.db #0x02	; 2
      000015 02                    1511 	.db #0x02	; 2
      000016 08                    1512 	.db #0x08	; 8
      000017 00                    1513 	.db #0x00	; 0
      000018 00 00                 1514 	.dw #0x0000
      00001A 00                    1515 	.db #0x00	; 0
      00001B 00 00                 1516 	.dw #0x0000
      00001D 00                    1517 	.db #0x00	; 0
                                   1518 	.area _CABS (ABS)
      007FF0                       1519 	.org 0x7FF0
      007FF0                       1520 ___SMS__SEGA_signature:
      007FF0 54                    1521 	.db #0x54	; 84	'T'
      007FF1 4D                    1522 	.db #0x4d	; 77	'M'
      007FF2 52                    1523 	.db #0x52	; 82	'R'
      007FF3 20                    1524 	.db #0x20	; 32
      007FF4 53                    1525 	.db #0x53	; 83	'S'
      007FF5 45                    1526 	.db #0x45	; 69	'E'
      007FF6 47                    1527 	.db #0x47	; 71	'G'
      007FF7 41                    1528 	.db #0x41	; 65	'A'
      007FF8 FF                    1529 	.db #0xff	; 255
      007FF9 FF                    1530 	.db #0xff	; 255
      007FFA FF                    1531 	.db #0xff	; 255
      007FFB FF                    1532 	.db #0xff	; 255
      007FFC 99                    1533 	.db #0x99	; 153
      007FFD 99                    1534 	.db #0x99	; 153
      007FFE 00                    1535 	.db #0x00	; 0
      007FFF 4C                    1536 	.db #0x4c	; 76	'L'
      007FD8                       1537 	.org 0x7FD8
      007FD8                       1538 ___SMS__SDSC_author:
      007FD8 72 61 70 68 6E 65 74  1539 	.ascii "raphnet"
      007FDF 00                    1540 	.db 0x00
      007FCA                       1541 	.org 0x7FCA
      007FCA                       1542 ___SMS__SDSC_name:
      007FCA 62 61 73 69 63 20 65  1543 	.ascii "basic example"
             78 61 6D 70 6C 65
      007FD7 00                    1544 	.db 0x00
      007FB9                       1545 	.org 0x7FB9
      007FB9                       1546 ___SMS__SDSC_descr:
      007FB9 41 20 73 69 6D 70 6C  1547 	.ascii "A simple example"
             65 20 65 78 61 6D 70
             6C 65
      007FC9 00                    1548 	.db 0x00
      007FE0                       1549 	.org 0x7FE0
      007FE0                       1550 ___SMS__SDSC_signature:
      007FE0 53                    1551 	.db #0x53	; 83	'S'
      007FE1 44                    1552 	.db #0x44	; 68	'D'
      007FE2 53                    1553 	.db #0x53	; 83	'S'
      007FE3 43                    1554 	.db #0x43	; 67	'C'
      007FE4 01                    1555 	.db #0x01	; 1
      007FE5 00                    1556 	.db #0x00	; 0
      007FE6 00                    1557 	.db #0x00	; 0
      007FE7 00                    1558 	.db #0x00	; 0
      007FE8 00                    1559 	.db #0x00	; 0
      007FE9 00                    1560 	.db #0x00	; 0
      007FEA D8                    1561 	.db #0xd8	; 216
      007FEB 7F                    1562 	.db #0x7f	; 127
      007FEC CA                    1563 	.db #0xca	; 202
      007FED 7F                    1564 	.db #0x7f	; 127
      007FEE B9                    1565 	.db #0xb9	; 185
      007FEF 7F                    1566 	.db #0x7f	; 127
